# This file has been generated by the Catala compiler, do not edit!

from catala.runtime import *
from typing import Any, List, Callable, Tuple
from enum import Enum

class TypePret_Code(Enum):
    D331_32 = 0
    D331_63_64 = 1
    D331_59_8 = 2
    D331_76_1 = 3
    Autre = 4

class TypePret:
    def __init__(self, code: TypePret_Code, value: Any) -> None:
        self.code = code
        self.value = value


    def __eq__(self, other: object) -> bool:
        if isinstance(other, TypePret):
            return self.code == other.code and self.value == other.value
        else:
            return False


    def __ne__(self, other: object) -> bool:
        return not (self == other)

    def __str__(self) -> str:
        return "{}({})".format(self.code, self.value)

class TitulairePret_Code(Enum):
    Demandeur = 0
    VendeurQuandDemandeurAContratLocationAccession = 1

class TitulairePret:
    def __init__(self, code: TitulairePret_Code, value: Any) -> None:
        self.code = code
        self.value = value


    def __eq__(self, other: object) -> bool:
        if isinstance(other, TitulairePret):
            return self.code == other.code and self.value == other.value
        else:
            return False


    def __ne__(self, other: object) -> bool:
        return not (self == other)

    def __str__(self) -> str:
        return "{}({})".format(self.code, self.value)

class TypeTravauxLogementD83215_Code(Enum):
    TravauxPourAcquisitionD832_15_1 = 0
    TravauxSurLogementDejaAcquisD832_15_2 = 1
    PasDeTravaux = 2

class TypeTravauxLogementD83215:
    def __init__(self, code: TypeTravauxLogementD83215_Code, value: Any) -> None:
        self.code = code
        self.value = value


    def __eq__(self, other: object) -> bool:
        if isinstance(other, TypeTravauxLogementD83215):
            return self.code == other.code and self.value == other.value
        else:
            return False


    def __ne__(self, other: object) -> bool:
        return not (self == other)

    def __str__(self) -> str:
        return "{}({})".format(self.code, self.value)

class TypeTravauxLogementR8425_Code(Enum):
    ObjectifDecenceLogement = 0
    PrevuDansListeR321_15 = 1
    AgrandirOuRendreHabitableD331_63 = 2
    PasDeTravaux = 3

class TypeTravauxLogementR8425:
    def __init__(self, code: TypeTravauxLogementR8425_Code, value: Any) -> None:
        self.code = code
        self.value = value


    def __eq__(self, other: object) -> bool:
        if isinstance(other, TypeTravauxLogementR8425):
            return self.code == other.code and self.value == other.value
        else:
            return False


    def __ne__(self, other: object) -> bool:
        return not (self == other)

    def __str__(self) -> str:
        return "{}({})".format(self.code, self.value)

class AmelioreParOccupant_Code(Enum):
    Oui = 0
    Non = 1

class AmelioreParOccupant:
    def __init__(self, code: AmelioreParOccupant_Code, value: Any) -> None:
        self.code = code
        self.value = value


    def __eq__(self, other: object) -> bool:
        if isinstance(other, AmelioreParOccupant):
            return self.code == other.code and self.value == other.value
        else:
            return False


    def __ne__(self, other: object) -> bool:
        return not (self == other)

    def __str__(self) -> str:
        return "{}({})".format(self.code, self.value)

class LimiteTranche_Code(Enum):
    Revenu = 0
    Infini = 1

class LimiteTranche:
    def __init__(self, code: LimiteTranche_Code, value: Any) -> None:
        self.code = code
        self.value = value


    def __eq__(self, other: object) -> bool:
        if isinstance(other, LimiteTranche):
            return self.code == other.code and self.value == other.value
        else:
            return False


    def __ne__(self, other: object) -> bool:
        return not (self == other)

    def __str__(self) -> str:
        return "{}({})".format(self.code, self.value)

class LimiteTrancheDecimal_Code(Enum):
    Revenu = 0
    Infini = 1

class LimiteTrancheDecimal:
    def __init__(self, code: LimiteTrancheDecimal_Code, value: Any) -> None:
        self.code = code
        self.value = value


    def __eq__(self, other: object) -> bool:
        if isinstance(other, LimiteTrancheDecimal):
            return self.code == other.code and self.value == other.value
        else:
            return False


    def __ne__(self, other: object) -> bool:
        return not (self == other)

    def __str__(self) -> str:
        return "{}({})".format(self.code, self.value)

class PrestationRecue_Code(Enum):
    AllocationsFamiliales = 0
    ComplementFamilial = 1
    AllocationJeuneEnfant = 2
    AllocationSoutienFamilial = 3
    AllocationSoutienEnfantHandicape = 4
    AllocationAdulteHandicape = 5

class PrestationRecue:
    def __init__(self, code: PrestationRecue_Code, value: Any) -> None:
        self.code = code
        self.value = value


    def __eq__(self, other: object) -> bool:
        if isinstance(other, PrestationRecue):
            return self.code == other.code and self.value == other.value
        else:
            return False


    def __ne__(self, other: object) -> bool:
        return not (self == other)

    def __str__(self) -> str:
        return "{}({})".format(self.code, self.value)

class ParentOuAutre_Code(Enum):
    DemandeurOuConjointOuParentOuViaPartsSocietes = 0
    Autre = 1

class ParentOuAutre:
    def __init__(self, code: ParentOuAutre_Code, value: Any) -> None:
        self.code = code
        self.value = value


    def __eq__(self, other: object) -> bool:
        if isinstance(other, ParentOuAutre):
            return self.code == other.code and self.value == other.value
        else:
            return False


    def __ne__(self, other: object) -> bool:
        return not (self == other)

    def __str__(self) -> str:
        return "{}({})".format(self.code, self.value)

class SituationGardeAlternee_Code(Enum):
    PasDeGardeAlternee = 0
    GardeAlterneeCoefficientPriseEnCharge = 1

class SituationGardeAlternee:
    def __init__(self, code: SituationGardeAlternee_Code, value: Any) -> None:
        self.code = code
        self.value = value


    def __eq__(self, other: object) -> bool:
        if isinstance(other, SituationGardeAlternee):
            return self.code == other.code and self.value == other.value
        else:
            return False


    def __ne__(self, other: object) -> bool:
        return not (self == other)

    def __str__(self) -> str:
        return "{}({})".format(self.code, self.value)

class Parente_Code(Enum):
    Ascendant = 0
    Descendant = 1
    CollateralDeuxiemeTroisiemeDegre = 2

class Parente:
    def __init__(self, code: Parente_Code, value: Any) -> None:
        self.code = code
        self.value = value


    def __eq__(self, other: object) -> bool:
        if isinstance(other, Parente):
            return self.code == other.code and self.value == other.value
        else:
            return False


    def __ne__(self, other: object) -> bool:
        return not (self == other)

    def __str__(self) -> str:
        return "{}({})".format(self.code, self.value)

class DateDeNaissanceOuMoisDeGrossesse_Code(Enum):
    DateDeNaissance = 0
    AvantPremierJourMoisCivilTroisiemeMoisDeGrossesse = 1
    ApresPremierJourMoisCivilTroisiemeMoisDeGrossesse = 2

class DateDeNaissanceOuMoisDeGrossesse:
    def __init__(self, code: DateDeNaissanceOuMoisDeGrossesse_Code, value: Any) -> None:
        self.code = code
        self.value = value


    def __eq__(self, other: object) -> bool:
        if isinstance(other, DateDeNaissanceOuMoisDeGrossesse):
            return self.code == other.code and self.value == other.value
        else:
            return False


    def __ne__(self, other: object) -> bool:
        return not (self == other)

    def __str__(self) -> str:
        return "{}({})".format(self.code, self.value)

class ZoneDHabitation_Code(Enum):
    Zone1 = 0
    Zone2 = 1
    Zone3 = 2

class ZoneDHabitation:
    def __init__(self, code: ZoneDHabitation_Code, value: Any) -> None:
        self.code = code
        self.value = value


    def __eq__(self, other: object) -> bool:
        if isinstance(other, ZoneDHabitation):
            return self.code == other.code and self.value == other.value
        else:
            return False


    def __ne__(self, other: object) -> bool:
        return not (self == other)

    def __str__(self) -> str:
        return "{}({})".format(self.code, self.value)

class PaiementLogementDistinctProfessionnel_Code(Enum):
    OuiAvecLoyerOuCharges = 0
    Non = 1

class PaiementLogementDistinctProfessionnel:
    def __init__(self, code: PaiementLogementDistinctProfessionnel_Code, value: Any) -> None:
        self.code = code
        self.value = value


    def __eq__(self, other: object) -> bool:
        if isinstance(other, PaiementLogementDistinctProfessionnel):
            return self.code == other.code and self.value == other.value
        else:
            return False


    def __ne__(self, other: object) -> bool:
        return not (self == other)

    def __str__(self) -> str:
        return "{}({})".format(self.code, self.value)

class VersementA_Code(Enum):
    Bailleur = 0
    Beneficiaire = 1
    EtablissementHabilite = 2

class VersementA:
    def __init__(self, code: VersementA_Code, value: Any) -> None:
        self.code = code
        self.value = value


    def __eq__(self, other: object) -> bool:
        if isinstance(other, VersementA):
            return self.code == other.code and self.value == other.value
        else:
            return False


    def __ne__(self, other: object) -> bool:
        return not (self == other)

    def __str__(self) -> str:
        return "{}({})".format(self.code, self.value)

class DepenseLogement_Code(Enum):
    TotalAnnuelEcheances = 0
    Mensualite = 1
    Loyer = 2

class DepenseLogement:
    def __init__(self, code: DepenseLogement_Code, value: Any) -> None:
        self.code = code
        self.value = value


    def __eq__(self, other: object) -> bool:
        if isinstance(other, DepenseLogement):
            return self.code == other.code and self.value == other.value
        else:
            return False


    def __ne__(self, other: object) -> bool:
        return not (self == other)

    def __str__(self) -> str:
        return "{}({})".format(self.code, self.value)

class ModeOccupationImpaye_Code(Enum):
    ImpayeLoyer = 0
    ImpayePret = 1

class ModeOccupationImpaye:
    def __init__(self, code: ModeOccupationImpaye_Code, value: Any) -> None:
        self.code = code
        self.value = value


    def __eq__(self, other: object) -> bool:
        if isinstance(other, ModeOccupationImpaye):
            return self.code == other.code and self.value == other.value
        else:
            return False


    def __ne__(self, other: object) -> bool:
        return not (self == other)

    def __str__(self) -> str:
        return "{}({})".format(self.code, self.value)

class TypeEligibiliteAllocationLogement_Code(Enum):
    PasEligible = 0
    AllocationLogementFamiliale = 1
    AllocationLogementSociale = 2

class TypeEligibiliteAllocationLogement:
    def __init__(self, code: TypeEligibiliteAllocationLogement_Code, value: Any) -> None:
        self.code = code
        self.value = value


    def __eq__(self, other: object) -> bool:
        if isinstance(other, TypeEligibiliteAllocationLogement):
            return self.code == other.code and self.value == other.value
        else:
            return False


    def __ne__(self, other: object) -> bool:
        return not (self == other)

    def __str__(self) -> str:
        return "{}({})".format(self.code, self.value)

class AccordFinancementRepresentantEtatOutreMer_Code(Enum):
    Accord = 0
    PasdAccord = 1

class AccordFinancementRepresentantEtatOutreMer:
    def __init__(self, code: AccordFinancementRepresentantEtatOutreMer_Code, value: Any) -> None:
        self.code = code
        self.value = value


    def __eq__(self, other: object) -> bool:
        if isinstance(other, AccordFinancementRepresentantEtatOutreMer):
            return self.code == other.code and self.value == other.value
        else:
            return False


    def __ne__(self, other: object) -> bool:
        return not (self == other)

    def __str__(self) -> str:
        return "{}({})".format(self.code, self.value)

class TypeAidesPersonnelleLogement_Code(Enum):
    AidePersonnaliseeLogement = 0
    AllocationLogementFamiliale = 1
    AllocationLogementSociale = 2

class TypeAidesPersonnelleLogement:
    def __init__(self, code: TypeAidesPersonnelleLogement_Code, value: Any) -> None:
        self.code = code
        self.value = value


    def __eq__(self, other: object) -> bool:
        if isinstance(other, TypeAidesPersonnelleLogement):
            return self.code == other.code and self.value == other.value
        else:
            return False


    def __ne__(self, other: object) -> bool:
        return not (self == other)

    def __str__(self) -> str:
        return "{}({})".format(self.code, self.value)

class SituationFamiliale_Code(Enum):
    Celibataire = 0
    Maries = 1
    Pacses = 2
    Concubins = 3
    CelibataireSepareDeFait = 4
    ConcubinageDontSepareDeFait = 5

class SituationFamiliale:
    def __init__(self, code: SituationFamiliale_Code, value: Any) -> None:
        self.code = code
        self.value = value


    def __eq__(self, other: object) -> bool:
        if isinstance(other, SituationFamiliale):
            return self.code == other.code and self.value == other.value
        else:
            return False


    def __ne__(self, other: object) -> bool:
        return not (self == other)

    def __str__(self) -> str:
        return "{}({})".format(self.code, self.value)

class PriseEnCharge_Code(Enum):
    EffectiveEtPermanente = 0
    ResidenceAlterneeAllocataireUnique = 1
    ResidenceAlterneeAllocationsPartagee = 2

class PriseEnCharge:
    def __init__(self, code: PriseEnCharge_Code, value: Any) -> None:
        self.code = code
        self.value = value


    def __eq__(self, other: object) -> bool:
        if isinstance(other, PriseEnCharge):
            return self.code == other.code and self.value == other.value
        else:
            return False


    def __ne__(self, other: object) -> bool:
        return not (self == other)

    def __str__(self) -> str:
        return "{}({})".format(self.code, self.value)

class TypeLogementFoyer_Code(Enum):
    LogementPersonnesAgeesOuHandicapees = 0
    ResidenceSociale = 1
    FoyerJeunesTrvailleursOuMigrantsConventionneL353_2Avant1995 = 2
    Autre = 3

class TypeLogementFoyer:
    def __init__(self, code: TypeLogementFoyer_Code, value: Any) -> None:
        self.code = code
        self.value = value


    def __eq__(self, other: object) -> bool:
        if isinstance(other, TypeLogementFoyer):
            return self.code == other.code and self.value == other.value
        else:
            return False


    def __ne__(self, other: object) -> bool:
        return not (self == other)

    def __str__(self) -> str:
        return "{}({})".format(self.code, self.value)

class CategorieEquivalenceLoyerAllocationLogementFoyer_Code(Enum):
    EtudiantLogeEnChambreCROUS = 0
    EtudiantLogeEnChambreCROUSRehabilitee = 1
    PersonnesAgeesSelon3DeD842_16 = 2
    AutresPersonnes = 3

class CategorieEquivalenceLoyerAllocationLogementFoyer:
    def __init__(self, code: CategorieEquivalenceLoyerAllocationLogementFoyer_Code, value: Any) -> None:
        self.code = code
        self.value = value


    def __eq__(self, other: object) -> bool:
        if isinstance(other, CategorieEquivalenceLoyerAllocationLogementFoyer):
            return self.code == other.code and self.value == other.value
        else:
            return False


    def __ne__(self, other: object) -> bool:
        return not (self == other)

    def __str__(self) -> str:
        return "{}({})".format(self.code, self.value)

class SituationFamilialeCalculAPL_Code(Enum):
    PersonneSeule = 0
    Couple = 1

class SituationFamilialeCalculAPL:
    def __init__(self, code: SituationFamilialeCalculAPL_Code, value: Any) -> None:
        self.code = code
        self.value = value


    def __eq__(self, other: object) -> bool:
        if isinstance(other, SituationFamilialeCalculAPL):
            return self.code == other.code and self.value == other.value
        else:
            return False


    def __ne__(self, other: object) -> bool:
        return not (self == other)

    def __str__(self) -> str:
        return "{}({})".format(self.code, self.value)

class Collectivite_Code(Enum):
    Guadeloupe = 0
    Guyane = 1
    Martinique = 2
    LaReunion = 3
    SaintBarthelemy = 4
    SaintMartin = 5
    Metropole = 6
    SaintPierreEtMiquelon = 7
    Mayotte = 8

class Collectivite:
    def __init__(self, code: Collectivite_Code, value: Any) -> None:
        self.code = code
        self.value = value


    def __eq__(self, other: object) -> bool:
        if isinstance(other, Collectivite):
            return self.code == other.code and self.value == other.value
        else:
            return False


    def __ne__(self, other: object) -> bool:
        return not (self == other)

    def __str__(self) -> str:
        return "{}({})".format(self.code, self.value)

class PriseEnChargeEnfant_Code(Enum):
    GardeAlterneePartageAllocations = 0
    GardeAlterneeAllocataireUnique = 1
    EffectiveEtPermanente = 2
    ServicesSociauxAllocationVerseeALaFamille = 3
    ServicesSociauxAllocationVerseeAuxServicesSociaux = 4

class PriseEnChargeEnfant:
    def __init__(self, code: PriseEnChargeEnfant_Code, value: Any) -> None:
        self.code = code
        self.value = value


    def __eq__(self, other: object) -> bool:
        if isinstance(other, PriseEnChargeEnfant):
            return self.code == other.code and self.value == other.value
        else:
            return False


    def __ne__(self, other: object) -> bool:
        return not (self == other)

    def __str__(self) -> str:
        return "{}({})".format(self.code, self.value)

class SituationObligationScolaire_Code(Enum):
    Avant = 0
    Pendant = 1
    Apres = 2

class SituationObligationScolaire:
    def __init__(self, code: SituationObligationScolaire_Code, value: Any) -> None:
        self.code = code
        self.value = value


    def __eq__(self, other: object) -> bool:
        if isinstance(other, SituationObligationScolaire):
            return self.code == other.code and self.value == other.value
        else:
            return False


    def __ne__(self, other: object) -> bool:
        return not (self == other)

    def __str__(self) -> str:
        return "{}({})".format(self.code, self.value)

class ElementPrestationsFamiliales_Code(Enum):
    PrestationAccueilJeuneEnfant = 0
    AllocationsFamiliales = 1
    ComplementFamilial = 2
    AllocationLogement = 3
    AllocationEducationEnfantHandicape = 4
    AllocationSoutienFamilial = 5
    AllocationRentreeScolaire = 6
    AllocationJournalierePresenceParentale = 7

class ElementPrestationsFamiliales:
    def __init__(self, code: ElementPrestationsFamiliales_Code, value: Any) -> None:
        self.code = code
        self.value = value


    def __eq__(self, other: object) -> bool:
        if isinstance(other, ElementPrestationsFamiliales):
            return self.code == other.code and self.value == other.value
        else:
            return False


    def __ne__(self, other: object) -> bool:
        return not (self == other)

    def __str__(self) -> str:
        return "{}({})".format(self.code, self.value)

class ConventionBailleurSocial:
    def __init__(self, conventionne_livre_III_titre_V_chap_III: bool, reduction_loyer_solidarite_percue: Money) -> None:
        self.conventionne_livre_III_titre_V_chap_III = conventionne_livre_III_titre_V_chap_III
        self.reduction_loyer_solidarite_percue = reduction_loyer_solidarite_percue

    def __eq__(self, other: object) -> bool:
        if isinstance(other, ConventionBailleurSocial):
            return (self.conventionne_livre_III_titre_V_chap_III == other.conventionne_livre_III_titre_V_chap_III and
                   self.reduction_loyer_solidarite_percue == other.reduction_loyer_solidarite_percue)
        else:
            return False

    def __ne__(self, other: object) -> bool:
        return not (self == other)

    def __str__(self) -> str:
        return "ConventionBailleurSocial(conventionne_livre_III_titre_V_chap_III={},reduction_loyer_solidarite_percue={})".format(self.conventionne_livre_III_titre_V_chap_III,
            self.reduction_loyer_solidarite_percue)

class ConventionANHA:
    def __init__(self, conventionne_livre_III_titre_II_chap_I_sec_3: bool) -> None:
        self.conventionne_livre_III_titre_II_chap_I_sec_3 = conventionne_livre_III_titre_II_chap_I_sec_3

    def __eq__(self, other: object) -> bool:
        if isinstance(other, ConventionANHA):
            return (self.conventionne_livre_III_titre_II_chap_I_sec_3 == other.conventionne_livre_III_titre_II_chap_I_sec_3)
        else:
            return False

    def __ne__(self, other: object) -> bool:
        return not (self == other)

    def __str__(self) -> str:
        return "ConventionANHA(conventionne_livre_III_titre_II_chap_I_sec_3={})".format(self.conventionne_livre_III_titre_II_chap_I_sec_3)

class PersonneSousLocation:
    def __init__(self, date_naissance_personne_sous_location: Date, conforme_article_l442_1: bool) -> None:
        self.date_naissance_personne_sous_location = date_naissance_personne_sous_location
        self.conforme_article_l442_1 = conforme_article_l442_1

    def __eq__(self, other: object) -> bool:
        if isinstance(other, PersonneSousLocation):
            return (self.date_naissance_personne_sous_location == other.date_naissance_personne_sous_location and
                   self.conforme_article_l442_1 == other.conforme_article_l442_1)
        else:
            return False

    def __ne__(self, other: object) -> bool:
        return not (self == other)

    def __str__(self) -> str:
        return "PersonneSousLocation(date_naissance_personne_sous_location={},conforme_article_l442_1={})".format(self.date_naissance_personne_sous_location,
            self.conforme_article_l442_1)

class Patrimoine:
    def __init__(self, produisant_revenu_periode_r822_3_3_r822_4: Money, ne_produisant_pas_revenu_periode_r822_3_3_r822_4: Money) -> None:
        self.produisant_revenu_periode_r822_3_3_r822_4 = produisant_revenu_periode_r822_3_3_r822_4
        self.ne_produisant_pas_revenu_periode_r822_3_3_r822_4 = ne_produisant_pas_revenu_periode_r822_3_3_r822_4

    def __eq__(self, other: object) -> bool:
        if isinstance(other, Patrimoine):
            return (self.produisant_revenu_periode_r822_3_3_r822_4 == other.produisant_revenu_periode_r822_3_3_r822_4 and
                   self.ne_produisant_pas_revenu_periode_r822_3_3_r822_4 == other.ne_produisant_pas_revenu_periode_r822_3_3_r822_4)
        else:
            return False

    def __ne__(self, other: object) -> bool:
        return not (self == other)

    def __str__(self) -> str:
        return "Patrimoine(produisant_revenu_periode_r822_3_3_r822_4={},ne_produisant_pas_revenu_periode_r822_3_3_r822_4={})".format(self.produisant_revenu_periode_r822_3_3_r822_4,
            self.ne_produisant_pas_revenu_periode_r822_3_3_r822_4)

class ConditionsEtrangers:
    def __init__(self, satisfait_conditions_l512_2_code_securite_sociale: bool, satisfait_art_4_ordonnance_2002_mayotte: bool) -> None:
        self.satisfait_conditions_l512_2_code_securite_sociale = satisfait_conditions_l512_2_code_securite_sociale
        self.satisfait_art_4_ordonnance_2002_mayotte = satisfait_art_4_ordonnance_2002_mayotte

    def __eq__(self, other: object) -> bool:
        if isinstance(other, ConditionsEtrangers):
            return (self.satisfait_conditions_l512_2_code_securite_sociale == other.satisfait_conditions_l512_2_code_securite_sociale and
                   self.satisfait_art_4_ordonnance_2002_mayotte == other.satisfait_art_4_ordonnance_2002_mayotte)
        else:
            return False

    def __ne__(self, other: object) -> bool:
        return not (self == other)

    def __str__(self) -> str:
        return "ConditionsEtrangers(satisfait_conditions_l512_2_code_securite_sociale={},satisfait_art_4_ordonnance_2002_mayotte={})".format(self.satisfait_conditions_l512_2_code_securite_sociale,
            self.satisfait_art_4_ordonnance_2002_mayotte)

class PersonneVivantHabituellementAuFoyer:
    def __init__(self, duree_residence_durant_periode_r_822_3_1_superieure_a_6_mois: bool, ressources: Money) -> None:
        self.duree_residence_durant_periode_r_822_3_1_superieure_a_6_mois = duree_residence_durant_periode_r_822_3_1_superieure_a_6_mois
        self.ressources = ressources

    def __eq__(self, other: object) -> bool:
        if isinstance(other, PersonneVivantHabituellementAuFoyer):
            return (self.duree_residence_durant_periode_r_822_3_1_superieure_a_6_mois == other.duree_residence_durant_periode_r_822_3_1_superieure_a_6_mois and
                   self.ressources == other.ressources)
        else:
            return False

    def __ne__(self, other: object) -> bool:
        return not (self == other)

    def __str__(self) -> str:
        return "PersonneVivantHabituellementAuFoyer(duree_residence_durant_periode_r_822_3_1_superieure_a_6_mois={},ressources={})".format(self.duree_residence_durant_periode_r_822_3_1_superieure_a_6_mois,
            self.ressources)

class EligibiliteAidePersonnaliseeLogement:
    def __init__(self, date_courante: Date, eligibilite: bool, nombre_personnes_a_charge_prises_en_compte: Integer, coefficents_enfants_garde_alternee_pris_en_compte: List[Decimal]) -> None:
        self.date_courante = date_courante
        self.eligibilite = eligibilite
        self.nombre_personnes_a_charge_prises_en_compte = nombre_personnes_a_charge_prises_en_compte
        self.coefficents_enfants_garde_alternee_pris_en_compte = coefficents_enfants_garde_alternee_pris_en_compte

    def __eq__(self, other: object) -> bool:
        if isinstance(other, EligibiliteAidePersonnaliseeLogement):
            return (self.date_courante == other.date_courante and
                   self.eligibilite == other.eligibilite and
                   self.nombre_personnes_a_charge_prises_en_compte == other.nombre_personnes_a_charge_prises_en_compte and
                   self.coefficents_enfants_garde_alternee_pris_en_compte == other.coefficents_enfants_garde_alternee_pris_en_compte)
        else:
            return False

    def __ne__(self, other: object) -> bool:
        return not (self == other)

    def __str__(self) -> str:
        return "EligibiliteAidePersonnaliseeLogement(date_courante={},eligibilite={},nombre_personnes_a_charge_prises_en_compte={},coefficents_enfants_garde_alternee_pris_en_compte={})".format(self.date_courante,
            self.eligibilite,
            self.nombre_personnes_a_charge_prises_en_compte,
            self.coefficents_enfants_garde_alternee_pris_en_compte)

class EligibilitePrimeDeDemenagement:
    def __init__(self, montant_prime_demenagement: Money) -> None:
        self.montant_prime_demenagement = montant_prime_demenagement

    def __eq__(self, other: object) -> bool:
        if isinstance(other, EligibilitePrimeDeDemenagement):
            return (self.montant_prime_demenagement == other.montant_prime_demenagement)
        else:
            return False

    def __ne__(self, other: object) -> bool:
        return not (self == other)

    def __str__(self) -> str:
        return "EligibilitePrimeDeDemenagement(montant_prime_demenagement={})".format(self.montant_prime_demenagement)

class RessourcesAidesPersonnelleLogement:
    def __init__(self, ressources_prises_en_compte: Money) -> None:
        self.ressources_prises_en_compte = ressources_prises_en_compte

    def __eq__(self, other: object) -> bool:
        if isinstance(other, RessourcesAidesPersonnelleLogement):
            return (self.ressources_prises_en_compte == other.ressources_prises_en_compte)
        else:
            return False

    def __ne__(self, other: object) -> bool:
        return not (self == other)

    def __str__(self) -> str:
        return "RessourcesAidesPersonnelleLogement(ressources_prises_en_compte={})".format(self.ressources_prises_en_compte)

class ContributionsSocialesAidesPersonnelleLogement:
    def __init__(self, montant: Callable[[Money], Money]) -> None:
        self.montant = montant

    def __eq__(self, other: object) -> bool:
        if isinstance(other, ContributionsSocialesAidesPersonnelleLogement):
            return (self.montant == other.montant)
        else:
            return False

    def __ne__(self, other: object) -> bool:
        return not (self == other)

    def __str__(self) -> str:
        return "ContributionsSocialesAidesPersonnelleLogement(montant={})".format(self.montant)

class CalculAidePersonnaliseeLogementLocatif:
    def __init__(self, montant_forfaitaire_charges_d823_16: Money, plafond_loyer_d823_16_2: Money, participation_minimale: Money, taux_composition_familiale: Decimal, participation_personnelle: Money, aide_finale_formule: Money, traitement_aide_finale: Callable[[Money], Money]) -> None:
        self.montant_forfaitaire_charges_d823_16 = montant_forfaitaire_charges_d823_16
        self.plafond_loyer_d823_16_2 = plafond_loyer_d823_16_2
        self.participation_minimale = participation_minimale
        self.taux_composition_familiale = taux_composition_familiale
        self.participation_personnelle = participation_personnelle
        self.aide_finale_formule = aide_finale_formule
        self.traitement_aide_finale = traitement_aide_finale

    def __eq__(self, other: object) -> bool:
        if isinstance(other, CalculAidePersonnaliseeLogementLocatif):
            return (self.montant_forfaitaire_charges_d823_16 == other.montant_forfaitaire_charges_d823_16 and
                   self.plafond_loyer_d823_16_2 == other.plafond_loyer_d823_16_2 and
                   self.participation_minimale == other.participation_minimale and
                   self.taux_composition_familiale == other.taux_composition_familiale and
                   self.participation_personnelle == other.participation_personnelle and
                   self.aide_finale_formule == other.aide_finale_formule and
                   self.traitement_aide_finale == other.traitement_aide_finale)
        else:
            return False

    def __ne__(self, other: object) -> bool:
        return not (self == other)

    def __str__(self) -> str:
        return "CalculAidePersonnaliseeLogementLocatif(montant_forfaitaire_charges_d823_16={},plafond_loyer_d823_16_2={},participation_minimale={},taux_composition_familiale={},participation_personnelle={},aide_finale_formule={},traitement_aide_finale={})".format(self.montant_forfaitaire_charges_d823_16,
            self.plafond_loyer_d823_16_2, self.participation_minimale,
            self.taux_composition_familiale, self.participation_personnelle,
            self.aide_finale_formule, self.traitement_aide_finale)

class CalculEquivalenceLoyerMinimale:
    def __init__(self, montant: Money) -> None:
        self.montant = montant

    def __eq__(self, other: object) -> bool:
        if isinstance(other, CalculEquivalenceLoyerMinimale):
            return (self.montant == other.montant)
        else:
            return False

    def __ne__(self, other: object) -> bool:
        return not (self == other)

    def __str__(self) -> str:
        return "CalculEquivalenceLoyerMinimale(montant={})".format(self.montant)

class CalculNombrePartLogementFoyer:
    def __init__(self, n_nombre_parts_d832_25: Decimal) -> None:
        self.n_nombre_parts_d832_25 = n_nombre_parts_d832_25

    def __eq__(self, other: object) -> bool:
        if isinstance(other, CalculNombrePartLogementFoyer):
            return (self.n_nombre_parts_d832_25 == other.n_nombre_parts_d832_25)
        else:
            return False

    def __ne__(self, other: object) -> bool:
        return not (self == other)

    def __str__(self) -> str:
        return "CalculNombrePartLogementFoyer(n_nombre_parts_d832_25={})".format(self.n_nombre_parts_d832_25)

class CalculAidePersonnaliseeLogementFoyer:
    def __init__(self, coefficient_multiplicateur_d832_25: Money, coefficient_r_d832_25: Money, n_nombre_parts_d832_25: Decimal, equivalence_loyer_eligible: Money, plafond_equivalence_loyer_eligible: Money, equivalence_loyer_minimale: Money, coefficient_prise_en_charge_d832_25: Decimal, aide_finale_formule: Money, traitement_aide_finale: Callable[[Money], Money]) -> None:
        self.coefficient_multiplicateur_d832_25 = coefficient_multiplicateur_d832_25
        self.coefficient_r_d832_25 = coefficient_r_d832_25
        self.n_nombre_parts_d832_25 = n_nombre_parts_d832_25
        self.equivalence_loyer_eligible = equivalence_loyer_eligible
        self.plafond_equivalence_loyer_eligible = plafond_equivalence_loyer_eligible
        self.equivalence_loyer_minimale = equivalence_loyer_minimale
        self.coefficient_prise_en_charge_d832_25 = coefficient_prise_en_charge_d832_25
        self.aide_finale_formule = aide_finale_formule
        self.traitement_aide_finale = traitement_aide_finale

    def __eq__(self, other: object) -> bool:
        if isinstance(other, CalculAidePersonnaliseeLogementFoyer):
            return (self.coefficient_multiplicateur_d832_25 == other.coefficient_multiplicateur_d832_25 and
                   self.coefficient_r_d832_25 == other.coefficient_r_d832_25 and
                   self.n_nombre_parts_d832_25 == other.n_nombre_parts_d832_25 and
                   self.equivalence_loyer_eligible == other.equivalence_loyer_eligible and
                   self.plafond_equivalence_loyer_eligible == other.plafond_equivalence_loyer_eligible and
                   self.equivalence_loyer_minimale == other.equivalence_loyer_minimale and
                   self.coefficient_prise_en_charge_d832_25 == other.coefficient_prise_en_charge_d832_25 and
                   self.aide_finale_formule == other.aide_finale_formule and
                   self.traitement_aide_finale == other.traitement_aide_finale)
        else:
            return False

    def __ne__(self, other: object) -> bool:
        return not (self == other)

    def __str__(self) -> str:
        return "CalculAidePersonnaliseeLogementFoyer(coefficient_multiplicateur_d832_25={},coefficient_r_d832_25={},n_nombre_parts_d832_25={},equivalence_loyer_eligible={},plafond_equivalence_loyer_eligible={},equivalence_loyer_minimale={},coefficient_prise_en_charge_d832_25={},aide_finale_formule={},traitement_aide_finale={})".format(self.coefficient_multiplicateur_d832_25,
            self.coefficient_r_d832_25, self.n_nombre_parts_d832_25,
            self.equivalence_loyer_eligible,
            self.plafond_equivalence_loyer_eligible,
            self.equivalence_loyer_minimale,
            self.coefficient_prise_en_charge_d832_25,
            self.aide_finale_formule, self.traitement_aide_finale)

class CalculNombrePartsAccessionPropriete:
    def __init__(self, n_nombre_parts_d832_11: Decimal) -> None:
        self.n_nombre_parts_d832_11 = n_nombre_parts_d832_11

    def __eq__(self, other: object) -> bool:
        if isinstance(other, CalculNombrePartsAccessionPropriete):
            return (self.n_nombre_parts_d832_11 == other.n_nombre_parts_d832_11)
        else:
            return False

    def __ne__(self, other: object) -> bool:
        return not (self == other)

    def __str__(self) -> str:
        return "CalculNombrePartsAccessionPropriete(n_nombre_parts_d832_11={})".format(self.n_nombre_parts_d832_11)

class CalculAidePersonnaliseeLogementAccessionPropriete:
    def __init__(self, mensualite_eligible: Money, mensualite_minimale: Money, coefficient_prise_en_charge_d832_10: Decimal, aide_finale_formule: Money, traitement_aide_finale: Callable[[Money], Money]) -> None:
        self.mensualite_eligible = mensualite_eligible
        self.mensualite_minimale = mensualite_minimale
        self.coefficient_prise_en_charge_d832_10 = coefficient_prise_en_charge_d832_10
        self.aide_finale_formule = aide_finale_formule
        self.traitement_aide_finale = traitement_aide_finale

    def __eq__(self, other: object) -> bool:
        if isinstance(other, CalculAidePersonnaliseeLogementAccessionPropriete):
            return (self.mensualite_eligible == other.mensualite_eligible and
                   self.mensualite_minimale == other.mensualite_minimale and
                   self.coefficient_prise_en_charge_d832_10 == other.coefficient_prise_en_charge_d832_10 and
                   self.aide_finale_formule == other.aide_finale_formule and
                   self.traitement_aide_finale == other.traitement_aide_finale)
        else:
            return False

    def __ne__(self, other: object) -> bool:
        return not (self == other)

    def __str__(self) -> str:
        return "CalculAidePersonnaliseeLogementAccessionPropriete(mensualite_eligible={},mensualite_minimale={},coefficient_prise_en_charge_d832_10={},aide_finale_formule={},traitement_aide_finale={})".format(self.mensualite_eligible,
            self.mensualite_minimale,
            self.coefficient_prise_en_charge_d832_10,
            self.aide_finale_formule, self.traitement_aide_finale)

class TraitementFormuleAideFinale:
    def __init__(self, aide_finale_formule: Money, traitement_aide_finale: Callable[[Money], Money]) -> None:
        self.aide_finale_formule = aide_finale_formule
        self.traitement_aide_finale = traitement_aide_finale

    def __eq__(self, other: object) -> bool:
        if isinstance(other, TraitementFormuleAideFinale):
            return (self.aide_finale_formule == other.aide_finale_formule and
                   self.traitement_aide_finale == other.traitement_aide_finale)
        else:
            return False

    def __ne__(self, other: object) -> bool:
        return not (self == other)

    def __str__(self) -> str:
        return "TraitementFormuleAideFinale(aide_finale_formule={},traitement_aide_finale={})".format(self.aide_finale_formule,
            self.traitement_aide_finale)

class CalculAidePersonnaliseeLogement:
    def __init__(self, aide_finale_formule: Money, traitement_aide_finale: Callable[[Money], Money]) -> None:
        self.aide_finale_formule = aide_finale_formule
        self.traitement_aide_finale = traitement_aide_finale

    def __eq__(self, other: object) -> bool:
        if isinstance(other, CalculAidePersonnaliseeLogement):
            return (self.aide_finale_formule == other.aide_finale_formule and
                   self.traitement_aide_finale == other.traitement_aide_finale)
        else:
            return False

    def __ne__(self, other: object) -> bool:
        return not (self == other)

    def __str__(self) -> str:
        return "CalculAidePersonnaliseeLogement(aide_finale_formule={},traitement_aide_finale={})".format(self.aide_finale_formule,
            self.traitement_aide_finale)

class InfosChangementLogementD8424:
    def __init__(self, ancien_loyer_principal: Money, ancienne_allocation_logement: Money) -> None:
        self.ancien_loyer_principal = ancien_loyer_principal
        self.ancienne_allocation_logement = ancienne_allocation_logement

    def __eq__(self, other: object) -> bool:
        if isinstance(other, InfosChangementLogementD8424):
            return (self.ancien_loyer_principal == other.ancien_loyer_principal and
                   self.ancienne_allocation_logement == other.ancienne_allocation_logement)
        else:
            return False

    def __ne__(self, other: object) -> bool:
        return not (self == other)

    def __str__(self) -> str:
        return "InfosChangementLogementD8424(ancien_loyer_principal={},ancienne_allocation_logement={})".format(self.ancien_loyer_principal,
            self.ancienne_allocation_logement)

class CalculAllocationLogementLocatif:
    def __init__(self, aide_finale_formule: Money, traitement_aide_finale: Callable[[Money], Money]) -> None:
        self.aide_finale_formule = aide_finale_formule
        self.traitement_aide_finale = traitement_aide_finale

    def __eq__(self, other: object) -> bool:
        if isinstance(other, CalculAllocationLogementLocatif):
            return (self.aide_finale_formule == other.aide_finale_formule and
                   self.traitement_aide_finale == other.traitement_aide_finale)
        else:
            return False

    def __ne__(self, other: object) -> bool:
        return not (self == other)

    def __str__(self) -> str:
        return "CalculAllocationLogementLocatif(aide_finale_formule={},traitement_aide_finale={})".format(self.aide_finale_formule,
            self.traitement_aide_finale)

class CalculAllocationLogementAccessionPropriete:
    def __init__(self, mensualite_eligible: Money, mensualite_minimale: Money, coefficient_prise_en_charge: Decimal, aide_finale_formule: Money, traitement_aide_finale: Callable[[Money], Money]) -> None:
        self.mensualite_eligible = mensualite_eligible
        self.mensualite_minimale = mensualite_minimale
        self.coefficient_prise_en_charge = coefficient_prise_en_charge
        self.aide_finale_formule = aide_finale_formule
        self.traitement_aide_finale = traitement_aide_finale

    def __eq__(self, other: object) -> bool:
        if isinstance(other, CalculAllocationLogementAccessionPropriete):
            return (self.mensualite_eligible == other.mensualite_eligible and
                   self.mensualite_minimale == other.mensualite_minimale and
                   self.coefficient_prise_en_charge == other.coefficient_prise_en_charge and
                   self.aide_finale_formule == other.aide_finale_formule and
                   self.traitement_aide_finale == other.traitement_aide_finale)
        else:
            return False

    def __ne__(self, other: object) -> bool:
        return not (self == other)

    def __str__(self) -> str:
        return "CalculAllocationLogementAccessionPropriete(mensualite_eligible={},mensualite_minimale={},coefficient_prise_en_charge={},aide_finale_formule={},traitement_aide_finale={})".format(self.mensualite_eligible,
            self.mensualite_minimale, self.coefficient_prise_en_charge,
            self.aide_finale_formule, self.traitement_aide_finale)

class CalculAllocationLogementFoyer:
    def __init__(self, coefficient_prise_en_charge: Decimal, equivalence_loyer: Money, montant_forfaitaire_charges: Money, loyer_minimal: Money, aide_finale_formule: Money, traitement_aide_finale: Callable[[Money], Money]) -> None:
        self.coefficient_prise_en_charge = coefficient_prise_en_charge
        self.equivalence_loyer = equivalence_loyer
        self.montant_forfaitaire_charges = montant_forfaitaire_charges
        self.loyer_minimal = loyer_minimal
        self.aide_finale_formule = aide_finale_formule
        self.traitement_aide_finale = traitement_aide_finale

    def __eq__(self, other: object) -> bool:
        if isinstance(other, CalculAllocationLogementFoyer):
            return (self.coefficient_prise_en_charge == other.coefficient_prise_en_charge and
                   self.equivalence_loyer == other.equivalence_loyer and
                   self.montant_forfaitaire_charges == other.montant_forfaitaire_charges and
                   self.loyer_minimal == other.loyer_minimal and
                   self.aide_finale_formule == other.aide_finale_formule and
                   self.traitement_aide_finale == other.traitement_aide_finale)
        else:
            return False

    def __ne__(self, other: object) -> bool:
        return not (self == other)

    def __str__(self) -> str:
        return "CalculAllocationLogementFoyer(coefficient_prise_en_charge={},equivalence_loyer={},montant_forfaitaire_charges={},loyer_minimal={},aide_finale_formule={},traitement_aide_finale={})".format(self.coefficient_prise_en_charge,
            self.equivalence_loyer, self.montant_forfaitaire_charges,
            self.loyer_minimal, self.aide_finale_formule,
            self.traitement_aide_finale)

class CalculAllocationLogement:
    def __init__(self, aide_finale_formule: Money, traitement_aide_finale: Callable[[Money], Money]) -> None:
        self.aide_finale_formule = aide_finale_formule
        self.traitement_aide_finale = traitement_aide_finale

    def __eq__(self, other: object) -> bool:
        if isinstance(other, CalculAllocationLogement):
            return (self.aide_finale_formule == other.aide_finale_formule and
                   self.traitement_aide_finale == other.traitement_aide_finale)
        else:
            return False

    def __ne__(self, other: object) -> bool:
        return not (self == other)

    def __str__(self) -> str:
        return "CalculAllocationLogement(aide_finale_formule={},traitement_aide_finale={})".format(self.aide_finale_formule,
            self.traitement_aide_finale)

class OuvertureDroitsRetraite:
    def __init__(self, age_ouverture_droit: Duration) -> None:
        self.age_ouverture_droit = age_ouverture_droit

    def __eq__(self, other: object) -> bool:
        if isinstance(other, OuvertureDroitsRetraite):
            return (self.age_ouverture_droit == other.age_ouverture_droit)
        else:
            return False

    def __ne__(self, other: object) -> bool:
        return not (self == other)

    def __str__(self) -> str:
        return "OuvertureDroitsRetraite(age_ouverture_droit={})".format(self.age_ouverture_droit)

class ImpayeDepenseLogement:
    def __init__(self, montant_impaye: Money) -> None:
        self.montant_impaye = montant_impaye

    def __eq__(self, other: object) -> bool:
        if isinstance(other, ImpayeDepenseLogement):
            return (self.montant_impaye == other.montant_impaye)
        else:
            return False

    def __ne__(self, other: object) -> bool:
        return not (self == other)

    def __str__(self) -> str:
        return "ImpayeDepenseLogement(montant_impaye={})".format(self.montant_impaye)

class CalculetteAidesAuLogement:
    def __init__(self, eligibilite: bool, aide_finale_formule: Money, traitement_aide_finale: Callable[[Money], Money], coefficents_enfants_garde_alternee_pris_en_compte: List[Decimal]) -> None:
        self.eligibilite = eligibilite
        self.aide_finale_formule = aide_finale_formule
        self.traitement_aide_finale = traitement_aide_finale
        self.coefficents_enfants_garde_alternee_pris_en_compte = coefficents_enfants_garde_alternee_pris_en_compte

    def __eq__(self, other: object) -> bool:
        if isinstance(other, CalculetteAidesAuLogement):
            return (self.eligibilite == other.eligibilite and
                   self.aide_finale_formule == other.aide_finale_formule and
                   self.traitement_aide_finale == other.traitement_aide_finale and
                   self.coefficents_enfants_garde_alternee_pris_en_compte == other.coefficents_enfants_garde_alternee_pris_en_compte)
        else:
            return False

    def __ne__(self, other: object) -> bool:
        return not (self == other)

    def __str__(self) -> str:
        return "CalculetteAidesAuLogement(eligibilite={},aide_finale_formule={},traitement_aide_finale={},coefficents_enfants_garde_alternee_pris_en_compte={})".format(self.eligibilite,
            self.aide_finale_formule, self.traitement_aide_finale,
            self.coefficents_enfants_garde_alternee_pris_en_compte)

class CalculetteAidesAuLogementGardeAlternee:
    def __init__(self, eligibilite: bool, aide_finale: Money) -> None:
        self.eligibilite = eligibilite
        self.aide_finale = aide_finale

    def __eq__(self, other: object) -> bool:
        if isinstance(other, CalculetteAidesAuLogementGardeAlternee):
            return (self.eligibilite == other.eligibilite and
                   self.aide_finale == other.aide_finale)
        else:
            return False

    def __ne__(self, other: object) -> bool:
        return not (self == other)

    def __str__(self) -> str:
        return "CalculetteAidesAuLogementGardeAlternee(eligibilite={},aide_finale={})".format(self.eligibilite,
            self.aide_finale)

class BaseMensuelleAllocationsFamiliales:
    def __init__(self, montant: Money) -> None:
        self.montant = montant

    def __eq__(self, other: object) -> bool:
        if isinstance(other, BaseMensuelleAllocationsFamiliales):
            return (self.montant == other.montant)
        else:
            return False

    def __ne__(self, other: object) -> bool:
        return not (self == other)

    def __str__(self) -> str:
        return "BaseMensuelleAllocationsFamiliales(montant={})".format(self.montant)

class VerificationAgeInferieurOuEgalA:
    def __init__(self, est_inferieur_ou_egal: bool) -> None:
        self.est_inferieur_ou_egal = est_inferieur_ou_egal

    def __eq__(self, other: object) -> bool:
        if isinstance(other, VerificationAgeInferieurOuEgalA):
            return (self.est_inferieur_ou_egal == other.est_inferieur_ou_egal)
        else:
            return False

    def __ne__(self, other: object) -> bool:
        return not (self == other)

    def __str__(self) -> str:
        return "VerificationAgeInferieurOuEgalA(est_inferieur_ou_egal={})".format(self.est_inferieur_ou_egal)

class VerificationAgeSuperieurA:
    def __init__(self, est_superieur: bool) -> None:
        self.est_superieur = est_superieur

    def __eq__(self, other: object) -> bool:
        if isinstance(other, VerificationAgeSuperieurA):
            return (self.est_superieur == other.est_superieur)
        else:
            return False

    def __ne__(self, other: object) -> bool:
        return not (self == other)

    def __str__(self) -> str:
        return "VerificationAgeSuperieurA(est_superieur={})".format(self.est_superieur)

class Smic:
    def __init__(self, brut_horaire: Money) -> None:
        self.brut_horaire = brut_horaire

    def __eq__(self, other: object) -> bool:
        if isinstance(other, Smic):
            return (self.brut_horaire == other.brut_horaire)
        else:
            return False

    def __ne__(self, other: object) -> bool:
        return not (self == other)

    def __str__(self) -> str:
        return "Smic(brut_horaire={})".format(self.brut_horaire)

class NeufOuAncien_Code(Enum):
    Neuf = 0
    Ancien = 1

class NeufOuAncien:
    def __init__(self, code: NeufOuAncien_Code, value: Any) -> None:
        self.code = code
        self.value = value


    def __eq__(self, other: object) -> bool:
        if isinstance(other, NeufOuAncien):
            return self.code == other.code and self.value == other.value
        else:
            return False


    def __ne__(self, other: object) -> bool:
        return not (self == other)

    def __str__(self) -> str:
        return "{}({})".format(self.code, self.value)

class TrancheRevenu:
    def __init__(self, haut: LimiteTranche, bas: Money, taux: Decimal) -> None:
        self.haut = haut
        self.bas = bas
        self.taux = taux

    def __eq__(self, other: object) -> bool:
        if isinstance(other, TrancheRevenu):
            return (self.haut == other.haut and self.bas == other.bas and
                   self.taux == other.taux)
        else:
            return False

    def __ne__(self, other: object) -> bool:
        return not (self == other)

    def __str__(self) -> str:
        return "TrancheRevenu(haut={},bas={},taux={})".format(self.haut,
            self.bas, self.taux)

class TrancheRevenuDecimal:
    def __init__(self, haut: LimiteTrancheDecimal, bas: Decimal, taux: Decimal) -> None:
        self.haut = haut
        self.bas = bas
        self.taux = taux

    def __eq__(self, other: object) -> bool:
        if isinstance(other, TrancheRevenuDecimal):
            return (self.haut == other.haut and self.bas == other.bas and
                   self.taux == other.taux)
        else:
            return False

    def __ne__(self, other: object) -> bool:
        return not (self == other)

    def __str__(self) -> str:
        return "TrancheRevenuDecimal(haut={},bas={},taux={})".format(self.haut,
            self.bas, self.taux)

class AutrePersonneACharge:
    def __init__(self, date_naissance: Date, ressources: Money, ascendant_descendant_collateral_deuxieme_troisieme_degre: bool, parente: Parente, incapacite_80_pourcent_ou_restriction_emploi: bool, beneficiaire_l161_19_l351_8_l643_3_secu: bool, titulaire_allocation_personne_agee: bool) -> None:
        self.date_naissance = date_naissance
        self.ressources = ressources
        self.ascendant_descendant_collateral_deuxieme_troisieme_degre = ascendant_descendant_collateral_deuxieme_troisieme_degre
        self.parente = parente
        self.incapacite_80_pourcent_ou_restriction_emploi = incapacite_80_pourcent_ou_restriction_emploi
        self.beneficiaire_l161_19_l351_8_l643_3_secu = beneficiaire_l161_19_l351_8_l643_3_secu
        self.titulaire_allocation_personne_agee = titulaire_allocation_personne_agee

    def __eq__(self, other: object) -> bool:
        if isinstance(other, AutrePersonneACharge):
            return (self.date_naissance == other.date_naissance and
                   self.ressources == other.ressources and
                   self.ascendant_descendant_collateral_deuxieme_troisieme_degre == other.ascendant_descendant_collateral_deuxieme_troisieme_degre and
                   self.parente == other.parente and
                   self.incapacite_80_pourcent_ou_restriction_emploi == other.incapacite_80_pourcent_ou_restriction_emploi and
                   self.beneficiaire_l161_19_l351_8_l643_3_secu == other.beneficiaire_l161_19_l351_8_l643_3_secu and
                   self.titulaire_allocation_personne_agee == other.titulaire_allocation_personne_agee)
        else:
            return False

    def __ne__(self, other: object) -> bool:
        return not (self == other)

    def __str__(self) -> str:
        return "AutrePersonneACharge(date_naissance={},ressources={},ascendant_descendant_collateral_deuxieme_troisieme_degre={},parente={},incapacite_80_pourcent_ou_restriction_emploi={},beneficiaire_l161_19_l351_8_l643_3_secu={},titulaire_allocation_personne_agee={})".format(self.date_naissance,
            self.ressources,
            self.ascendant_descendant_collateral_deuxieme_troisieme_degre,
            self.parente, self.incapacite_80_pourcent_ou_restriction_emploi,
            self.beneficiaire_l161_19_l351_8_l643_3_secu,
            self.titulaire_allocation_personne_agee)

class DateNaissanceTroisiemeOuDernierPlusEnfant_Code(Enum):
    MoinsDeTroisEnfants = 0
    PlusDeTroisEnfants = 1

class DateNaissanceTroisiemeOuDernierPlusEnfant:
    def __init__(self, code: DateNaissanceTroisiemeOuDernierPlusEnfant_Code, value: Any) -> None:
        self.code = code
        self.value = value


    def __eq__(self, other: object) -> bool:
        if isinstance(other, DateNaissanceTroisiemeOuDernierPlusEnfant):
            return self.code == other.code and self.value == other.value
        else:
            return False


    def __ne__(self, other: object) -> bool:
        return not (self == other)

    def __str__(self) -> str:
        return "{}({})".format(self.code, self.value)

class EligibiliteAllocationLogement:
    def __init__(self, eligibilite: TypeEligibiliteAllocationLogement, nombre_personnes_a_charge_prises_en_compte: Integer, coefficents_enfants_garde_alternee_pris_en_compte: List[Decimal]) -> None:
        self.eligibilite = eligibilite
        self.nombre_personnes_a_charge_prises_en_compte = nombre_personnes_a_charge_prises_en_compte
        self.coefficents_enfants_garde_alternee_pris_en_compte = coefficents_enfants_garde_alternee_pris_en_compte

    def __eq__(self, other: object) -> bool:
        if isinstance(other, EligibiliteAllocationLogement):
            return (self.eligibilite == other.eligibilite and
                   self.nombre_personnes_a_charge_prises_en_compte == other.nombre_personnes_a_charge_prises_en_compte and
                   self.coefficents_enfants_garde_alternee_pris_en_compte == other.coefficents_enfants_garde_alternee_pris_en_compte)
        else:
            return False

    def __ne__(self, other: object) -> bool:
        return not (self == other)

    def __str__(self) -> str:
        return "EligibiliteAllocationLogement(eligibilite={},nombre_personnes_a_charge_prises_en_compte={},coefficents_enfants_garde_alternee_pris_en_compte={})".format(self.eligibilite,
            self.nombre_personnes_a_charge_prises_en_compte,
            self.coefficents_enfants_garde_alternee_pris_en_compte)

class Pret:
    def __init__(self, type_pret: TypePret, date_signature: Date, titulaire_pret: TitulairePret, accord_financement_representant_Etat_outre_mer: AccordFinancementRepresentantEtatOutreMer) -> None:
        self.type_pret = type_pret
        self.date_signature = date_signature
        self.titulaire_pret = titulaire_pret
        self.accord_financement_representant_Etat_outre_mer = accord_financement_representant_Etat_outre_mer

    def __eq__(self, other: object) -> bool:
        if isinstance(other, Pret):
            return (self.type_pret == other.type_pret and
                   self.date_signature == other.date_signature and
                   self.titulaire_pret == other.titulaire_pret and
                   self.accord_financement_representant_Etat_outre_mer == other.accord_financement_representant_Etat_outre_mer)
        else:
            return False

    def __ne__(self, other: object) -> bool:
        return not (self == other)

    def __str__(self) -> str:
        return "Pret(type_pret={},date_signature={},titulaire_pret={},accord_financement_representant_Etat_outre_mer={})".format(self.type_pret,
            self.date_signature, self.titulaire_pret,
            self.accord_financement_representant_Etat_outre_mer)

class LogementFoyer:
    def __init__(self, type: TypeLogementFoyer, remplit_conditions_r832_21: bool, conventionne_livre_III_titre_V_chap_III: bool, conventionne_selon_regles_drom: bool, date_conventionnement: Date, construit_application_loi_1957_12_III: bool, redevance: Money, categorie_equivalence_loyer_d842_16: CategorieEquivalenceLoyerAllocationLogementFoyer, beneficiaire_aide_adulte_ou_enfant_handicapes: bool, logement_meuble_d842_2: bool) -> None:
        self.type = type
        self.remplit_conditions_r832_21 = remplit_conditions_r832_21
        self.conventionne_livre_III_titre_V_chap_III = conventionne_livre_III_titre_V_chap_III
        self.conventionne_selon_regles_drom = conventionne_selon_regles_drom
        self.date_conventionnement = date_conventionnement
        self.construit_application_loi_1957_12_III = construit_application_loi_1957_12_III
        self.redevance = redevance
        self.categorie_equivalence_loyer_d842_16 = categorie_equivalence_loyer_d842_16
        self.beneficiaire_aide_adulte_ou_enfant_handicapes = beneficiaire_aide_adulte_ou_enfant_handicapes
        self.logement_meuble_d842_2 = logement_meuble_d842_2

    def __eq__(self, other: object) -> bool:
        if isinstance(other, LogementFoyer):
            return (self.type == other.type and
                   self.remplit_conditions_r832_21 == other.remplit_conditions_r832_21 and
                   self.conventionne_livre_III_titre_V_chap_III == other.conventionne_livre_III_titre_V_chap_III and
                   self.conventionne_selon_regles_drom == other.conventionne_selon_regles_drom and
                   self.date_conventionnement == other.date_conventionnement and
                   self.construit_application_loi_1957_12_III == other.construit_application_loi_1957_12_III and
                   self.redevance == other.redevance and
                   self.categorie_equivalence_loyer_d842_16 == other.categorie_equivalence_loyer_d842_16 and
                   self.beneficiaire_aide_adulte_ou_enfant_handicapes == other.beneficiaire_aide_adulte_ou_enfant_handicapes and
                   self.logement_meuble_d842_2 == other.logement_meuble_d842_2)
        else:
            return False

    def __ne__(self, other: object) -> bool:
        return not (self == other)

    def __str__(self) -> str:
        return "LogementFoyer(type={},remplit_conditions_r832_21={},conventionne_livre_III_titre_V_chap_III={},conventionne_selon_regles_drom={},date_conventionnement={},construit_application_loi_1957_12_III={},redevance={},categorie_equivalence_loyer_d842_16={},beneficiaire_aide_adulte_ou_enfant_handicapes={},logement_meuble_d842_2={})".format(self.type,
            self.remplit_conditions_r832_21,
            self.conventionne_livre_III_titre_V_chap_III,
            self.conventionne_selon_regles_drom, self.date_conventionnement,
            self.construit_application_loi_1957_12_III, self.redevance,
            self.categorie_equivalence_loyer_d842_16,
            self.beneficiaire_aide_adulte_ou_enfant_handicapes,
            self.logement_meuble_d842_2)

class EnfantPrestationsFamiliales:
    def __init__(self, identifiant: Integer, obligation_scolaire: SituationObligationScolaire, remuneration_mensuelle: Money, date_de_naissance: Date, prise_en_charge: PriseEnChargeEnfant, a_deja_ouvert_droit_aux_allocations_familiales: bool, beneficie_titre_personnel_aide_personnelle_logement: bool) -> None:
        self.identifiant = identifiant
        self.obligation_scolaire = obligation_scolaire
        self.remuneration_mensuelle = remuneration_mensuelle
        self.date_de_naissance = date_de_naissance
        self.prise_en_charge = prise_en_charge
        self.a_deja_ouvert_droit_aux_allocations_familiales = a_deja_ouvert_droit_aux_allocations_familiales
        self.beneficie_titre_personnel_aide_personnelle_logement = beneficie_titre_personnel_aide_personnelle_logement

    def __eq__(self, other: object) -> bool:
        if isinstance(other, EnfantPrestationsFamiliales):
            return (self.identifiant == other.identifiant and
                   self.obligation_scolaire == other.obligation_scolaire and
                   self.remuneration_mensuelle == other.remuneration_mensuelle and
                   self.date_de_naissance == other.date_de_naissance and
                   self.prise_en_charge == other.prise_en_charge and
                   self.a_deja_ouvert_droit_aux_allocations_familiales == other.a_deja_ouvert_droit_aux_allocations_familiales and
                   self.beneficie_titre_personnel_aide_personnelle_logement == other.beneficie_titre_personnel_aide_personnelle_logement)
        else:
            return False

    def __ne__(self, other: object) -> bool:
        return not (self == other)

    def __str__(self) -> str:
        return "EnfantPrestationsFamiliales(identifiant={},obligation_scolaire={},remuneration_mensuelle={},date_de_naissance={},prise_en_charge={},a_deja_ouvert_droit_aux_allocations_familiales={},beneficie_titre_personnel_aide_personnelle_logement={})".format(self.identifiant,
            self.obligation_scolaire, self.remuneration_mensuelle,
            self.date_de_naissance, self.prise_en_charge,
            self.a_deja_ouvert_droit_aux_allocations_familiales,
            self.beneficie_titre_personnel_aide_personnelle_logement)

class TypeBailleur_Code(Enum):
    BailleurSocial = 0
    BailleurPriveAvecConventionnementSocial = 1
    BailleurPrive = 2

class TypeBailleur:
    def __init__(self, code: TypeBailleur_Code, value: Any) -> None:
        self.code = code
        self.value = value


    def __eq__(self, other: object) -> bool:
        if isinstance(other, TypeBailleur):
            return self.code == other.code and self.value == other.value
        else:
            return False


    def __ne__(self, other: object) -> bool:
        return not (self == other)

    def __str__(self) -> str:
        return "{}({})".format(self.code, self.value)

class LoueOuSousLoueADesTiers_Code(Enum):
    Non = 0
    Oui = 1

class LoueOuSousLoueADesTiers:
    def __init__(self, code: LoueOuSousLoueADesTiers_Code, value: Any) -> None:
        self.code = code
        self.value = value


    def __eq__(self, other: object) -> bool:
        if isinstance(other, LoueOuSousLoueADesTiers):
            return self.code == other.code and self.value == other.value
        else:
            return False


    def __ne__(self, other: object) -> bool:
        return not (self == other)

    def __str__(self) -> str:
        return "{}({})".format(self.code, self.value)

class Nationalite_Code(Enum):
    Francaise = 0
    Etrangere = 1

class Nationalite:
    def __init__(self, code: Nationalite_Code, value: Any) -> None:
        self.code = code
        self.value = value


    def __eq__(self, other: object) -> bool:
        if isinstance(other, Nationalite):
            return self.code == other.code and self.value == other.value
        else:
            return False


    def __ne__(self, other: object) -> bool:
        return not (self == other)

    def __str__(self) -> str:
        return "{}({})".format(self.code, self.value)

class ChangementLogementD8424_Code(Enum):
    Changement = 0
    PasDeChangement = 1

class ChangementLogementD8424:
    def __init__(self, code: ChangementLogementD8424_Code, value: Any) -> None:
        self.code = code
        self.value = value


    def __eq__(self, other: object) -> bool:
        if isinstance(other, ChangementLogementD8424):
            return self.code == other.code and self.value == other.value
        else:
            return False


    def __ne__(self, other: object) -> bool:
        return not (self == other)

    def __str__(self) -> str:
        return "{}({})".format(self.code, self.value)

class InformationsPrimeDeDemenagement:
    def __init__(self, nombre_enfants_a_naitre_apres_troisieme_mois_grossesse: Integer, date_naissance_troisieme_enfant_ou_dernier_si_plus: DateNaissanceTroisiemeOuDernierPlusEnfant) -> None:
        self.nombre_enfants_a_naitre_apres_troisieme_mois_grossesse = nombre_enfants_a_naitre_apres_troisieme_mois_grossesse
        self.date_naissance_troisieme_enfant_ou_dernier_si_plus = date_naissance_troisieme_enfant_ou_dernier_si_plus

    def __eq__(self, other: object) -> bool:
        if isinstance(other, InformationsPrimeDeDemenagement):
            return (self.nombre_enfants_a_naitre_apres_troisieme_mois_grossesse == other.nombre_enfants_a_naitre_apres_troisieme_mois_grossesse and
                   self.date_naissance_troisieme_enfant_ou_dernier_si_plus == other.date_naissance_troisieme_enfant_ou_dernier_si_plus)
        else:
            return False

    def __ne__(self, other: object) -> bool:
        return not (self == other)

    def __str__(self) -> str:
        return "InformationsPrimeDeDemenagement(nombre_enfants_a_naitre_apres_troisieme_mois_grossesse={},date_naissance_troisieme_enfant_ou_dernier_si_plus={})".format(self.nombre_enfants_a_naitre_apres_troisieme_mois_grossesse,
            self.date_naissance_troisieme_enfant_ou_dernier_si_plus)

class Proprietaire:
    def __init__(self, mensualite_principale: Money, charges_mensuelles_pret: Money, date_entree_logement: Date, type_travaux_logement_d832_15: TypeTravauxLogementD83215, type_travaux_logement_r842_5: TypeTravauxLogementR8425, local_habite_premiere_fois_beneficiaire: bool, copropriete: bool, situation_r822_11_13_17: bool, anciennete_logement: NeufOuAncien, pret: Pret, operations_logement_evolutifs_sociaux_accession_propriete_aidee_Etat: bool) -> None:
        self.mensualite_principale = mensualite_principale
        self.charges_mensuelles_pret = charges_mensuelles_pret
        self.date_entree_logement = date_entree_logement
        self.type_travaux_logement_d832_15 = type_travaux_logement_d832_15
        self.type_travaux_logement_r842_5 = type_travaux_logement_r842_5
        self.local_habite_premiere_fois_beneficiaire = local_habite_premiere_fois_beneficiaire
        self.copropriete = copropriete
        self.situation_r822_11_13_17 = situation_r822_11_13_17
        self.anciennete_logement = anciennete_logement
        self.pret = pret
        self.operations_logement_evolutifs_sociaux_accession_propriete_aidee_Etat = operations_logement_evolutifs_sociaux_accession_propriete_aidee_Etat

    def __eq__(self, other: object) -> bool:
        if isinstance(other, Proprietaire):
            return (self.mensualite_principale == other.mensualite_principale and
                   self.charges_mensuelles_pret == other.charges_mensuelles_pret and
                   self.date_entree_logement == other.date_entree_logement and
                   self.type_travaux_logement_d832_15 == other.type_travaux_logement_d832_15 and
                   self.type_travaux_logement_r842_5 == other.type_travaux_logement_r842_5 and
                   self.local_habite_premiere_fois_beneficiaire == other.local_habite_premiere_fois_beneficiaire and
                   self.copropriete == other.copropriete and
                   self.situation_r822_11_13_17 == other.situation_r822_11_13_17 and
                   self.anciennete_logement == other.anciennete_logement and
                   self.pret == other.pret and
                   self.operations_logement_evolutifs_sociaux_accession_propriete_aidee_Etat == other.operations_logement_evolutifs_sociaux_accession_propriete_aidee_Etat)
        else:
            return False

    def __ne__(self, other: object) -> bool:
        return not (self == other)

    def __str__(self) -> str:
        return "Proprietaire(mensualite_principale={},charges_mensuelles_pret={},date_entree_logement={},type_travaux_logement_d832_15={},type_travaux_logement_r842_5={},local_habite_premiere_fois_beneficiaire={},copropriete={},situation_r822_11_13_17={},anciennete_logement={},pret={},operations_logement_evolutifs_sociaux_accession_propriete_aidee_Etat={})".format(self.mensualite_principale,
            self.charges_mensuelles_pret, self.date_entree_logement,
            self.type_travaux_logement_d832_15,
            self.type_travaux_logement_r842_5,
            self.local_habite_premiere_fois_beneficiaire, self.copropriete,
            self.situation_r822_11_13_17, self.anciennete_logement,
            self.pret,
            self.operations_logement_evolutifs_sociaux_accession_propriete_aidee_Etat)

class EligibilitePrestationsFamiliales:
    def __init__(self, age_l512_3_2: Duration, droit_ouvert: Callable[[EnfantPrestationsFamiliales], bool], conditions_hors_age: Callable[[EnfantPrestationsFamiliales], bool], regime_outre_mer_l751_1: bool) -> None:
        self.age_l512_3_2 = age_l512_3_2
        self.droit_ouvert = droit_ouvert
        self.conditions_hors_age = conditions_hors_age
        self.regime_outre_mer_l751_1 = regime_outre_mer_l751_1

    def __eq__(self, other: object) -> bool:
        if isinstance(other, EligibilitePrestationsFamiliales):
            return (self.age_l512_3_2 == other.age_l512_3_2 and
                   self.droit_ouvert == other.droit_ouvert and
                   self.conditions_hors_age == other.conditions_hors_age and
                   self.regime_outre_mer_l751_1 == other.regime_outre_mer_l751_1)
        else:
            return False

    def __ne__(self, other: object) -> bool:
        return not (self == other)

    def __str__(self) -> str:
        return "EligibilitePrestationsFamiliales(age_l512_3_2={},droit_ouvert={},conditions_hors_age={},regime_outre_mer_l751_1={})".format(self.age_l512_3_2,
            self.droit_ouvert, self.conditions_hors_age,
            self.regime_outre_mer_l751_1)

class Demandeur:
    def __init__(self, date_naissance: Date, nationalite: Nationalite, patrimoine: Patrimoine, personne_hebergee_centre_soin_l_L162_22_3_securite_sociale: bool, est_non_salarie_agricole_l781_8_l_781_46_code_rural: bool, magistrat_fonctionnaire_centre_interets_materiels_familiaux_hors_mayotte: bool) -> None:
        self.date_naissance = date_naissance
        self.nationalite = nationalite
        self.patrimoine = patrimoine
        self.personne_hebergee_centre_soin_l_L162_22_3_securite_sociale = personne_hebergee_centre_soin_l_L162_22_3_securite_sociale
        self.est_non_salarie_agricole_l781_8_l_781_46_code_rural = est_non_salarie_agricole_l781_8_l_781_46_code_rural
        self.magistrat_fonctionnaire_centre_interets_materiels_familiaux_hors_mayotte = magistrat_fonctionnaire_centre_interets_materiels_familiaux_hors_mayotte

    def __eq__(self, other: object) -> bool:
        if isinstance(other, Demandeur):
            return (self.date_naissance == other.date_naissance and
                   self.nationalite == other.nationalite and
                   self.patrimoine == other.patrimoine and
                   self.personne_hebergee_centre_soin_l_L162_22_3_securite_sociale == other.personne_hebergee_centre_soin_l_L162_22_3_securite_sociale and
                   self.est_non_salarie_agricole_l781_8_l_781_46_code_rural == other.est_non_salarie_agricole_l781_8_l_781_46_code_rural and
                   self.magistrat_fonctionnaire_centre_interets_materiels_familiaux_hors_mayotte == other.magistrat_fonctionnaire_centre_interets_materiels_familiaux_hors_mayotte)
        else:
            return False

    def __ne__(self, other: object) -> bool:
        return not (self == other)

    def __str__(self) -> str:
        return "Demandeur(date_naissance={},nationalite={},patrimoine={},personne_hebergee_centre_soin_l_L162_22_3_securite_sociale={},est_non_salarie_agricole_l781_8_l_781_46_code_rural={},magistrat_fonctionnaire_centre_interets_materiels_familiaux_hors_mayotte={})".format(self.date_naissance,
            self.nationalite, self.patrimoine,
            self.personne_hebergee_centre_soin_l_L162_22_3_securite_sociale,
            self.est_non_salarie_agricole_l781_8_l_781_46_code_rural,
            self.magistrat_fonctionnaire_centre_interets_materiels_familiaux_hors_mayotte)

class EnfantACharge:
    def __init__(self, identifiant: Integer, nationalite: Nationalite, beneficie_titre_personnel_aide_personnelle_logement: bool, a_deja_ouvert_droit_aux_allocations_familiales: bool, date_de_naissance: Date, remuneration_mensuelle: Money, obligation_scolaire: SituationObligationScolaire, situation_garde_alternee: SituationGardeAlternee, etudes_apprentissage_stage_formation_pro_impossibilite_travail: bool) -> None:
        self.identifiant = identifiant
        self.nationalite = nationalite
        self.beneficie_titre_personnel_aide_personnelle_logement = beneficie_titre_personnel_aide_personnelle_logement
        self.a_deja_ouvert_droit_aux_allocations_familiales = a_deja_ouvert_droit_aux_allocations_familiales
        self.date_de_naissance = date_de_naissance
        self.remuneration_mensuelle = remuneration_mensuelle
        self.obligation_scolaire = obligation_scolaire
        self.situation_garde_alternee = situation_garde_alternee
        self.etudes_apprentissage_stage_formation_pro_impossibilite_travail = etudes_apprentissage_stage_formation_pro_impossibilite_travail

    def __eq__(self, other: object) -> bool:
        if isinstance(other, EnfantACharge):
            return (self.identifiant == other.identifiant and
                   self.nationalite == other.nationalite and
                   self.beneficie_titre_personnel_aide_personnelle_logement == other.beneficie_titre_personnel_aide_personnelle_logement and
                   self.a_deja_ouvert_droit_aux_allocations_familiales == other.a_deja_ouvert_droit_aux_allocations_familiales and
                   self.date_de_naissance == other.date_de_naissance and
                   self.remuneration_mensuelle == other.remuneration_mensuelle and
                   self.obligation_scolaire == other.obligation_scolaire and
                   self.situation_garde_alternee == other.situation_garde_alternee and
                   self.etudes_apprentissage_stage_formation_pro_impossibilite_travail == other.etudes_apprentissage_stage_formation_pro_impossibilite_travail)
        else:
            return False

    def __ne__(self, other: object) -> bool:
        return not (self == other)

    def __str__(self) -> str:
        return "EnfantACharge(identifiant={},nationalite={},beneficie_titre_personnel_aide_personnelle_logement={},a_deja_ouvert_droit_aux_allocations_familiales={},date_de_naissance={},remuneration_mensuelle={},obligation_scolaire={},situation_garde_alternee={},etudes_apprentissage_stage_formation_pro_impossibilite_travail={})".format(self.identifiant,
            self.nationalite,
            self.beneficie_titre_personnel_aide_personnelle_logement,
            self.a_deja_ouvert_droit_aux_allocations_familiales,
            self.date_de_naissance, self.remuneration_mensuelle,
            self.obligation_scolaire, self.situation_garde_alternee,
            self.etudes_apprentissage_stage_formation_pro_impossibilite_travail)

class Location:
    def __init__(self, bailleur: TypeBailleur, loyer_principal: Money, beneficiaire_aide_adulte_ou_enfant_handicapes: bool, logement_est_chambre: bool, colocation: bool, agees_ou_handicap_adultes_hebergees_onereux_particuliers: bool, logement_meuble_d842_2: bool, changement_logement_d842_4: ChangementLogementD8424) -> None:
        self.bailleur = bailleur
        self.loyer_principal = loyer_principal
        self.beneficiaire_aide_adulte_ou_enfant_handicapes = beneficiaire_aide_adulte_ou_enfant_handicapes
        self.logement_est_chambre = logement_est_chambre
        self.colocation = colocation
        self.agees_ou_handicap_adultes_hebergees_onereux_particuliers = agees_ou_handicap_adultes_hebergees_onereux_particuliers
        self.logement_meuble_d842_2 = logement_meuble_d842_2
        self.changement_logement_d842_4 = changement_logement_d842_4

    def __eq__(self, other: object) -> bool:
        if isinstance(other, Location):
            return (self.bailleur == other.bailleur and
                   self.loyer_principal == other.loyer_principal and
                   self.beneficiaire_aide_adulte_ou_enfant_handicapes == other.beneficiaire_aide_adulte_ou_enfant_handicapes and
                   self.logement_est_chambre == other.logement_est_chambre and
                   self.colocation == other.colocation and
                   self.agees_ou_handicap_adultes_hebergees_onereux_particuliers == other.agees_ou_handicap_adultes_hebergees_onereux_particuliers and
                   self.logement_meuble_d842_2 == other.logement_meuble_d842_2 and
                   self.changement_logement_d842_4 == other.changement_logement_d842_4)
        else:
            return False

    def __ne__(self, other: object) -> bool:
        return not (self == other)

    def __str__(self) -> str:
        return "Location(bailleur={},loyer_principal={},beneficiaire_aide_adulte_ou_enfant_handicapes={},logement_est_chambre={},colocation={},agees_ou_handicap_adultes_hebergees_onereux_particuliers={},logement_meuble_d842_2={},changement_logement_d842_4={})".format(self.bailleur,
            self.loyer_principal,
            self.beneficiaire_aide_adulte_ou_enfant_handicapes,
            self.logement_est_chambre, self.colocation,
            self.agees_ou_handicap_adultes_hebergees_onereux_particuliers,
            self.logement_meuble_d842_2, self.changement_logement_d842_4)

class PersonneACharge_Code(Enum):
    EnfantACharge = 0
    AutrePersonneACharge = 1

class PersonneACharge:
    def __init__(self, code: PersonneACharge_Code, value: Any) -> None:
        self.code = code
        self.value = value


    def __eq__(self, other: object) -> bool:
        if isinstance(other, PersonneACharge):
            return self.code == other.code and self.value == other.value
        else:
            return False


    def __ne__(self, other: object) -> bool:
        return not (self == other)

    def __str__(self) -> str:
        return "{}({})".format(self.code, self.value)

class CategorieCalculAPL_Code(Enum):
    Location = 0
    AccessionPropriete = 1
    LogementFoyer = 2

class CategorieCalculAPL:
    def __init__(self, code: CategorieCalculAPL_Code, value: Any) -> None:
        self.code = code
        self.value = value


    def __eq__(self, other: object) -> bool:
        if isinstance(other, CategorieCalculAPL):
            return self.code == other.code and self.value == other.value
        else:
            return False


    def __ne__(self, other: object) -> bool:
        return not (self == other)

    def __str__(self) -> str:
        return "{}({})".format(self.code, self.value)

class ModeOccupation_Code(Enum):
    Locataire = 0
    ResidentLogementFoyer = 1
    AccessionProprieteLocalUsageExclusifHabitation = 2
    SousLocataire = 3
    LocationAccession = 4

class ModeOccupation:
    def __init__(self, code: ModeOccupation_Code, value: Any) -> None:
        self.code = code
        self.value = value


    def __eq__(self, other: object) -> bool:
        if isinstance(other, ModeOccupation):
            return self.code == other.code and self.value == other.value
        else:
            return False


    def __ne__(self, other: object) -> bool:
        return not (self == other)

    def __str__(self) -> str:
        return "{}({})".format(self.code, self.value)

class EligibiliteAidesPersonnelleLogement:
    def __init__(self, date_courante: Date, eligibilite: bool, nombre_personnes_a_charge_prises_en_compte: Integer, coefficents_enfants_garde_alternee_pris_en_compte: List[Decimal], condition_2_r823_4: Callable[[PersonneACharge], bool]) -> None:
        self.date_courante = date_courante
        self.eligibilite = eligibilite
        self.nombre_personnes_a_charge_prises_en_compte = nombre_personnes_a_charge_prises_en_compte
        self.coefficents_enfants_garde_alternee_pris_en_compte = coefficents_enfants_garde_alternee_pris_en_compte
        self.condition_2_r823_4 = condition_2_r823_4

    def __eq__(self, other: object) -> bool:
        if isinstance(other, EligibiliteAidesPersonnelleLogement):
            return (self.date_courante == other.date_courante and
                   self.eligibilite == other.eligibilite and
                   self.nombre_personnes_a_charge_prises_en_compte == other.nombre_personnes_a_charge_prises_en_compte and
                   self.coefficents_enfants_garde_alternee_pris_en_compte == other.coefficents_enfants_garde_alternee_pris_en_compte and
                   self.condition_2_r823_4 == other.condition_2_r823_4)
        else:
            return False

    def __ne__(self, other: object) -> bool:
        return not (self == other)

    def __str__(self) -> str:
        return "EligibiliteAidesPersonnelleLogement(date_courante={},eligibilite={},nombre_personnes_a_charge_prises_en_compte={},coefficents_enfants_garde_alternee_pris_en_compte={},condition_2_r823_4={})".format(self.date_courante,
            self.eligibilite,
            self.nombre_personnes_a_charge_prises_en_compte,
            self.coefficents_enfants_garde_alternee_pris_en_compte,
            self.condition_2_r823_4)

class Logement:
    def __init__(self, residence_principale: bool, est_ehpad_ou_maison_autonomie_l313_12_asf: bool, mode_occupation: ModeOccupation, proprietaire: ParentOuAutre, loue_ou_sous_loue_a_des_tiers: LoueOuSousLoueADesTiers, usufruit: ParentOuAutre, logement_decent_l89_462: bool, surface_m_carres: Integer, zone: ZoneDHabitation) -> None:
        self.residence_principale = residence_principale
        self.est_ehpad_ou_maison_autonomie_l313_12_asf = est_ehpad_ou_maison_autonomie_l313_12_asf
        self.mode_occupation = mode_occupation
        self.proprietaire = proprietaire
        self.loue_ou_sous_loue_a_des_tiers = loue_ou_sous_loue_a_des_tiers
        self.usufruit = usufruit
        self.logement_decent_l89_462 = logement_decent_l89_462
        self.surface_m_carres = surface_m_carres
        self.zone = zone

    def __eq__(self, other: object) -> bool:
        if isinstance(other, Logement):
            return (self.residence_principale == other.residence_principale and
                   self.est_ehpad_ou_maison_autonomie_l313_12_asf == other.est_ehpad_ou_maison_autonomie_l313_12_asf and
                   self.mode_occupation == other.mode_occupation and
                   self.proprietaire == other.proprietaire and
                   self.loue_ou_sous_loue_a_des_tiers == other.loue_ou_sous_loue_a_des_tiers and
                   self.usufruit == other.usufruit and
                   self.logement_decent_l89_462 == other.logement_decent_l89_462 and
                   self.surface_m_carres == other.surface_m_carres and
                   self.zone == other.zone)
        else:
            return False

    def __ne__(self, other: object) -> bool:
        return not (self == other)

    def __str__(self) -> str:
        return "Logement(residence_principale={},est_ehpad_ou_maison_autonomie_l313_12_asf={},mode_occupation={},proprietaire={},loue_ou_sous_loue_a_des_tiers={},usufruit={},logement_decent_l89_462={},surface_m_carres={},zone={})".format(self.residence_principale,
            self.est_ehpad_ou_maison_autonomie_l313_12_asf,
            self.mode_occupation, self.proprietaire,
            self.loue_ou_sous_loue_a_des_tiers, self.usufruit,
            self.logement_decent_l89_462, self.surface_m_carres, self.zone)

class Menage:
    def __init__(self, prestations_recues: List[PrestationRecue], logement: Logement, personnes_a_charge: List[PersonneACharge], nombre_autres_occupants_logement: Integer, situation_familiale: SituationFamiliale, condition_rattache_foyer_fiscal_parent_ifi: bool, enfant_a_naitre_apres_quatrieme_mois_grossesse: bool, personnes_agees_handicapees_foyer_r844_4: bool, residence: Collectivite) -> None:
        self.prestations_recues = prestations_recues
        self.logement = logement
        self.personnes_a_charge = personnes_a_charge
        self.nombre_autres_occupants_logement = nombre_autres_occupants_logement
        self.situation_familiale = situation_familiale
        self.condition_rattache_foyer_fiscal_parent_ifi = condition_rattache_foyer_fiscal_parent_ifi
        self.enfant_a_naitre_apres_quatrieme_mois_grossesse = enfant_a_naitre_apres_quatrieme_mois_grossesse
        self.personnes_agees_handicapees_foyer_r844_4 = personnes_agees_handicapees_foyer_r844_4
        self.residence = residence

    def __eq__(self, other: object) -> bool:
        if isinstance(other, Menage):
            return (self.prestations_recues == other.prestations_recues and
                   self.logement == other.logement and
                   self.personnes_a_charge == other.personnes_a_charge and
                   self.nombre_autres_occupants_logement == other.nombre_autres_occupants_logement and
                   self.situation_familiale == other.situation_familiale and
                   self.condition_rattache_foyer_fiscal_parent_ifi == other.condition_rattache_foyer_fiscal_parent_ifi and
                   self.enfant_a_naitre_apres_quatrieme_mois_grossesse == other.enfant_a_naitre_apres_quatrieme_mois_grossesse and
                   self.personnes_agees_handicapees_foyer_r844_4 == other.personnes_agees_handicapees_foyer_r844_4 and
                   self.residence == other.residence)
        else:
            return False

    def __ne__(self, other: object) -> bool:
        return not (self == other)

    def __str__(self) -> str:
        return "Menage(prestations_recues={},logement={},personnes_a_charge={},nombre_autres_occupants_logement={},situation_familiale={},condition_rattache_foyer_fiscal_parent_ifi={},enfant_a_naitre_apres_quatrieme_mois_grossesse={},personnes_agees_handicapees_foyer_r844_4={},residence={})".format(self.prestations_recues,
            self.logement, self.personnes_a_charge,
            self.nombre_autres_occupants_logement, self.situation_familiale,
            self.condition_rattache_foyer_fiscal_parent_ifi,
            self.enfant_a_naitre_apres_quatrieme_mois_grossesse,
            self.personnes_agees_handicapees_foyer_r844_4, self.residence)

class EligibiliteAidesPersonnelleLogementIn:
    def __init__(self, menage_in: Menage, demandeur_in: Demandeur, date_courante_in: Date, condition_logement_residence_principale_in: Callable[[Unit], bool], condition_logement_surface_in: Callable[[Unit], bool], date_entree_vigueur_differee_cch_in: Callable[[Unit], Date]) -> None:
        self.menage_in = menage_in
        self.demandeur_in = demandeur_in
        self.date_courante_in = date_courante_in
        self.condition_logement_residence_principale_in = condition_logement_residence_principale_in
        self.condition_logement_surface_in = condition_logement_surface_in
        self.date_entree_vigueur_differee_cch_in = date_entree_vigueur_differee_cch_in

    def __eq__(self, other: object) -> bool:
        if isinstance(other, EligibiliteAidesPersonnelleLogementIn):
            return (self.menage_in == other.menage_in and
                   self.demandeur_in == other.demandeur_in and
                   self.date_courante_in == other.date_courante_in and
                   self.condition_logement_residence_principale_in == other.condition_logement_residence_principale_in and
                   self.condition_logement_surface_in == other.condition_logement_surface_in and
                   self.date_entree_vigueur_differee_cch_in == other.date_entree_vigueur_differee_cch_in)
        else:
            return False

    def __ne__(self, other: object) -> bool:
        return not (self == other)

    def __str__(self) -> str:
        return "EligibiliteAidesPersonnelleLogementIn(menage_in={},demandeur_in={},date_courante_in={},condition_logement_residence_principale_in={},condition_logement_surface_in={},date_entree_vigueur_differee_cch_in={})".format(self.menage_in,
            self.demandeur_in, self.date_courante_in,
            self.condition_logement_residence_principale_in,
            self.condition_logement_surface_in,
            self.date_entree_vigueur_differee_cch_in)

class EligibiliteAidePersonnaliseeLogementIn:
    def __init__(self, menage_in: Menage, demandeur_in: Demandeur, date_courante_in: Date) -> None:
        self.menage_in = menage_in
        self.demandeur_in = demandeur_in
        self.date_courante_in = date_courante_in

    def __eq__(self, other: object) -> bool:
        if isinstance(other, EligibiliteAidePersonnaliseeLogementIn):
            return (self.menage_in == other.menage_in and
                   self.demandeur_in == other.demandeur_in and
                   self.date_courante_in == other.date_courante_in)
        else:
            return False

    def __ne__(self, other: object) -> bool:
        return not (self == other)

    def __str__(self) -> str:
        return "EligibiliteAidePersonnaliseeLogementIn(menage_in={},demandeur_in={},date_courante_in={})".format(self.menage_in,
            self.demandeur_in, self.date_courante_in)

class EligibiliteAllocationLogementIn:
    def __init__(self, date_courante_in: Date, menage_in: Menage, demandeur_in: Demandeur, beneficie_aide_personnalisee_logement_in: bool) -> None:
        self.date_courante_in = date_courante_in
        self.menage_in = menage_in
        self.demandeur_in = demandeur_in
        self.beneficie_aide_personnalisee_logement_in = beneficie_aide_personnalisee_logement_in

    def __eq__(self, other: object) -> bool:
        if isinstance(other, EligibiliteAllocationLogementIn):
            return (self.date_courante_in == other.date_courante_in and
                   self.menage_in == other.menage_in and
                   self.demandeur_in == other.demandeur_in and
                   self.beneficie_aide_personnalisee_logement_in == other.beneficie_aide_personnalisee_logement_in)
        else:
            return False

    def __ne__(self, other: object) -> bool:
        return not (self == other)

    def __str__(self) -> str:
        return "EligibiliteAllocationLogementIn(date_courante_in={},menage_in={},demandeur_in={},beneficie_aide_personnalisee_logement_in={})".format(self.date_courante_in,
            self.menage_in, self.demandeur_in,
            self.beneficie_aide_personnalisee_logement_in)

class EligibilitePrimeDeDemenagementIn:
    def __init__(self, informations_in: InformationsPrimeDeDemenagement, date_emmenagement_in: Date, menage_in: Menage, demandeur_in: Demandeur, date_courante_in: Date, depenses_justifiees_reellement_engagees_in: Money) -> None:
        self.informations_in = informations_in
        self.date_emmenagement_in = date_emmenagement_in
        self.menage_in = menage_in
        self.demandeur_in = demandeur_in
        self.date_courante_in = date_courante_in
        self.depenses_justifiees_reellement_engagees_in = depenses_justifiees_reellement_engagees_in

    def __eq__(self, other: object) -> bool:
        if isinstance(other, EligibilitePrimeDeDemenagementIn):
            return (self.informations_in == other.informations_in and
                   self.date_emmenagement_in == other.date_emmenagement_in and
                   self.menage_in == other.menage_in and
                   self.demandeur_in == other.demandeur_in and
                   self.date_courante_in == other.date_courante_in and
                   self.depenses_justifiees_reellement_engagees_in == other.depenses_justifiees_reellement_engagees_in)
        else:
            return False

    def __ne__(self, other: object) -> bool:
        return not (self == other)

    def __str__(self) -> str:
        return "EligibilitePrimeDeDemenagementIn(informations_in={},date_emmenagement_in={},menage_in={},demandeur_in={},date_courante_in={},depenses_justifiees_reellement_engagees_in={})".format(self.informations_in,
            self.date_emmenagement_in, self.menage_in, self.demandeur_in,
            self.date_courante_in,
            self.depenses_justifiees_reellement_engagees_in)

class RessourcesAidesPersonnelleLogementIn:
    def __init__(self, ressources_demandeur_in: Money, ressources_conjoint_in: Money, personnes_vivant_habituellement_foyer_in: List[PersonneVivantHabituellementAuFoyer], demandeur_exerce_activite_remuneree_in: bool, conjoint_exerce_activite_remuneree_in: bool, personnes_a_charge_in: List[PersonneACharge], situation_familiale_in: SituationFamiliale, mode_occupation_in: ModeOccupation, date_courante_in: Date, condition_age_bourse_enseignement_superieur_in: bool, demandeur_poursuit_des_etudes_in: bool, date_demande_ou_reexamen_droit_in: Date, paiement_logement_distinct_professionnel_in: PaiementLogementDistinctProfessionnel, ressources_menage_arrondies_base_in: Money) -> None:
        self.ressources_demandeur_in = ressources_demandeur_in
        self.ressources_conjoint_in = ressources_conjoint_in
        self.personnes_vivant_habituellement_foyer_in = personnes_vivant_habituellement_foyer_in
        self.demandeur_exerce_activite_remuneree_in = demandeur_exerce_activite_remuneree_in
        self.conjoint_exerce_activite_remuneree_in = conjoint_exerce_activite_remuneree_in
        self.personnes_a_charge_in = personnes_a_charge_in
        self.situation_familiale_in = situation_familiale_in
        self.mode_occupation_in = mode_occupation_in
        self.date_courante_in = date_courante_in
        self.condition_age_bourse_enseignement_superieur_in = condition_age_bourse_enseignement_superieur_in
        self.demandeur_poursuit_des_etudes_in = demandeur_poursuit_des_etudes_in
        self.date_demande_ou_reexamen_droit_in = date_demande_ou_reexamen_droit_in
        self.paiement_logement_distinct_professionnel_in = paiement_logement_distinct_professionnel_in
        self.ressources_menage_arrondies_base_in = ressources_menage_arrondies_base_in

    def __eq__(self, other: object) -> bool:
        if isinstance(other, RessourcesAidesPersonnelleLogementIn):
            return (self.ressources_demandeur_in == other.ressources_demandeur_in and
                   self.ressources_conjoint_in == other.ressources_conjoint_in and
                   self.personnes_vivant_habituellement_foyer_in == other.personnes_vivant_habituellement_foyer_in and
                   self.demandeur_exerce_activite_remuneree_in == other.demandeur_exerce_activite_remuneree_in and
                   self.conjoint_exerce_activite_remuneree_in == other.conjoint_exerce_activite_remuneree_in and
                   self.personnes_a_charge_in == other.personnes_a_charge_in and
                   self.situation_familiale_in == other.situation_familiale_in and
                   self.mode_occupation_in == other.mode_occupation_in and
                   self.date_courante_in == other.date_courante_in and
                   self.condition_age_bourse_enseignement_superieur_in == other.condition_age_bourse_enseignement_superieur_in and
                   self.demandeur_poursuit_des_etudes_in == other.demandeur_poursuit_des_etudes_in and
                   self.date_demande_ou_reexamen_droit_in == other.date_demande_ou_reexamen_droit_in and
                   self.paiement_logement_distinct_professionnel_in == other.paiement_logement_distinct_professionnel_in and
                   self.ressources_menage_arrondies_base_in == other.ressources_menage_arrondies_base_in)
        else:
            return False

    def __ne__(self, other: object) -> bool:
        return not (self == other)

    def __str__(self) -> str:
        return "RessourcesAidesPersonnelleLogementIn(ressources_demandeur_in={},ressources_conjoint_in={},personnes_vivant_habituellement_foyer_in={},demandeur_exerce_activite_remuneree_in={},conjoint_exerce_activite_remuneree_in={},personnes_a_charge_in={},situation_familiale_in={},mode_occupation_in={},date_courante_in={},condition_age_bourse_enseignement_superieur_in={},demandeur_poursuit_des_etudes_in={},date_demande_ou_reexamen_droit_in={},paiement_logement_distinct_professionnel_in={},ressources_menage_arrondies_base_in={})".format(self.ressources_demandeur_in,
            self.ressources_conjoint_in,
            self.personnes_vivant_habituellement_foyer_in,
            self.demandeur_exerce_activite_remuneree_in,
            self.conjoint_exerce_activite_remuneree_in,
            self.personnes_a_charge_in, self.situation_familiale_in,
            self.mode_occupation_in, self.date_courante_in,
            self.condition_age_bourse_enseignement_superieur_in,
            self.demandeur_poursuit_des_etudes_in,
            self.date_demande_ou_reexamen_droit_in,
            self.paiement_logement_distinct_professionnel_in,
            self.ressources_menage_arrondies_base_in)

class ContributionsSocialesAidesPersonnelleLogementIn:
    def __init__(self, date_courante_in: Date) -> None:
        self.date_courante_in = date_courante_in

    def __eq__(self, other: object) -> bool:
        if isinstance(other, ContributionsSocialesAidesPersonnelleLogementIn):
            return (self.date_courante_in == other.date_courante_in)
        else:
            return False

    def __ne__(self, other: object) -> bool:
        return not (self == other)

    def __str__(self) -> str:
        return "ContributionsSocialesAidesPersonnelleLogementIn(date_courante_in={})".format(self.date_courante_in)

class CalculAidePersonnaliseeLogementLocatifIn:
    def __init__(self, loyer_principal_base_in: Money, ressources_menage_arrondies_in: Money, beneficiaire_aide_adulte_ou_enfant_handicapes_in: bool, date_courante_in: Date, nombre_personnes_a_charge_in: Integer, situation_familiale_calcul_apl_in: SituationFamilialeCalculAPL, zone_in: ZoneDHabitation, logement_est_chambre_in: bool, agees_ou_handicap_adultes_hebergees_onereux_particuliers_in: bool, type_aide_in: TypeAidesPersonnelleLogement, colocation_in: bool, reduction_loyer_solidarite_in: Money, logement_meuble_d842_2_in: bool, residence_in: Collectivite) -> None:
        self.loyer_principal_base_in = loyer_principal_base_in
        self.ressources_menage_arrondies_in = ressources_menage_arrondies_in
        self.beneficiaire_aide_adulte_ou_enfant_handicapes_in = beneficiaire_aide_adulte_ou_enfant_handicapes_in
        self.date_courante_in = date_courante_in
        self.nombre_personnes_a_charge_in = nombre_personnes_a_charge_in
        self.situation_familiale_calcul_apl_in = situation_familiale_calcul_apl_in
        self.zone_in = zone_in
        self.logement_est_chambre_in = logement_est_chambre_in
        self.agees_ou_handicap_adultes_hebergees_onereux_particuliers_in = agees_ou_handicap_adultes_hebergees_onereux_particuliers_in
        self.type_aide_in = type_aide_in
        self.colocation_in = colocation_in
        self.reduction_loyer_solidarite_in = reduction_loyer_solidarite_in
        self.logement_meuble_d842_2_in = logement_meuble_d842_2_in
        self.residence_in = residence_in

    def __eq__(self, other: object) -> bool:
        if isinstance(other, CalculAidePersonnaliseeLogementLocatifIn):
            return (self.loyer_principal_base_in == other.loyer_principal_base_in and
                   self.ressources_menage_arrondies_in == other.ressources_menage_arrondies_in and
                   self.beneficiaire_aide_adulte_ou_enfant_handicapes_in == other.beneficiaire_aide_adulte_ou_enfant_handicapes_in and
                   self.date_courante_in == other.date_courante_in and
                   self.nombre_personnes_a_charge_in == other.nombre_personnes_a_charge_in and
                   self.situation_familiale_calcul_apl_in == other.situation_familiale_calcul_apl_in and
                   self.zone_in == other.zone_in and
                   self.logement_est_chambre_in == other.logement_est_chambre_in and
                   self.agees_ou_handicap_adultes_hebergees_onereux_particuliers_in == other.agees_ou_handicap_adultes_hebergees_onereux_particuliers_in and
                   self.type_aide_in == other.type_aide_in and
                   self.colocation_in == other.colocation_in and
                   self.reduction_loyer_solidarite_in == other.reduction_loyer_solidarite_in and
                   self.logement_meuble_d842_2_in == other.logement_meuble_d842_2_in and
                   self.residence_in == other.residence_in)
        else:
            return False

    def __ne__(self, other: object) -> bool:
        return not (self == other)

    def __str__(self) -> str:
        return "CalculAidePersonnaliseeLogementLocatifIn(loyer_principal_base_in={},ressources_menage_arrondies_in={},beneficiaire_aide_adulte_ou_enfant_handicapes_in={},date_courante_in={},nombre_personnes_a_charge_in={},situation_familiale_calcul_apl_in={},zone_in={},logement_est_chambre_in={},agees_ou_handicap_adultes_hebergees_onereux_particuliers_in={},type_aide_in={},colocation_in={},reduction_loyer_solidarite_in={},logement_meuble_d842_2_in={},residence_in={})".format(self.loyer_principal_base_in,
            self.ressources_menage_arrondies_in,
            self.beneficiaire_aide_adulte_ou_enfant_handicapes_in,
            self.date_courante_in, self.nombre_personnes_a_charge_in,
            self.situation_familiale_calcul_apl_in, self.zone_in,
            self.logement_est_chambre_in,
            self.agees_ou_handicap_adultes_hebergees_onereux_particuliers_in,
            self.type_aide_in, self.colocation_in,
            self.reduction_loyer_solidarite_in,
            self.logement_meuble_d842_2_in, self.residence_in)

class CalculEquivalenceLoyerMinimaleIn:
    def __init__(self, date_courante_in: Date, ressources_menage_arrondies_in: Money, condition_2_du_832_25_in: bool, n_nombre_parts_d832_25_in: Decimal) -> None:
        self.date_courante_in = date_courante_in
        self.ressources_menage_arrondies_in = ressources_menage_arrondies_in
        self.condition_2_du_832_25_in = condition_2_du_832_25_in
        self.n_nombre_parts_d832_25_in = n_nombre_parts_d832_25_in

    def __eq__(self, other: object) -> bool:
        if isinstance(other, CalculEquivalenceLoyerMinimaleIn):
            return (self.date_courante_in == other.date_courante_in and
                   self.ressources_menage_arrondies_in == other.ressources_menage_arrondies_in and
                   self.condition_2_du_832_25_in == other.condition_2_du_832_25_in and
                   self.n_nombre_parts_d832_25_in == other.n_nombre_parts_d832_25_in)
        else:
            return False

    def __ne__(self, other: object) -> bool:
        return not (self == other)

    def __str__(self) -> str:
        return "CalculEquivalenceLoyerMinimaleIn(date_courante_in={},ressources_menage_arrondies_in={},condition_2_du_832_25_in={},n_nombre_parts_d832_25_in={})".format(self.date_courante_in,
            self.ressources_menage_arrondies_in,
            self.condition_2_du_832_25_in, self.n_nombre_parts_d832_25_in)

class CalculNombrePartLogementFoyerIn:
    def __init__(self, condition_2_du_832_25_in: bool, nombre_personnes_a_charge_in: Integer, situation_familiale_calcul_apl_in: SituationFamilialeCalculAPL, residence_in: Collectivite, limitation_majoration_personnes_a_charge_in: Callable[[Unit], bool]) -> None:
        self.condition_2_du_832_25_in = condition_2_du_832_25_in
        self.nombre_personnes_a_charge_in = nombre_personnes_a_charge_in
        self.situation_familiale_calcul_apl_in = situation_familiale_calcul_apl_in
        self.residence_in = residence_in
        self.limitation_majoration_personnes_a_charge_in = limitation_majoration_personnes_a_charge_in

    def __eq__(self, other: object) -> bool:
        if isinstance(other, CalculNombrePartLogementFoyerIn):
            return (self.condition_2_du_832_25_in == other.condition_2_du_832_25_in and
                   self.nombre_personnes_a_charge_in == other.nombre_personnes_a_charge_in and
                   self.situation_familiale_calcul_apl_in == other.situation_familiale_calcul_apl_in and
                   self.residence_in == other.residence_in and
                   self.limitation_majoration_personnes_a_charge_in == other.limitation_majoration_personnes_a_charge_in)
        else:
            return False

    def __ne__(self, other: object) -> bool:
        return not (self == other)

    def __str__(self) -> str:
        return "CalculNombrePartLogementFoyerIn(condition_2_du_832_25_in={},nombre_personnes_a_charge_in={},situation_familiale_calcul_apl_in={},residence_in={},limitation_majoration_personnes_a_charge_in={})".format(self.condition_2_du_832_25_in,
            self.nombre_personnes_a_charge_in,
            self.situation_familiale_calcul_apl_in, self.residence_in,
            self.limitation_majoration_personnes_a_charge_in)

class CalculAidePersonnaliseeLogementFoyerIn:
    def __init__(self, type_logement_foyer_in: TypeLogementFoyer, date_conventionnement_in: Date, ressources_menage_arrondies_in: Money, nombre_personnes_a_charge_in: Integer, situation_familiale_calcul_apl_in: SituationFamilialeCalculAPL, zone_in: ZoneDHabitation, date_courante_in: Date, redevance_in: Money, residence_in: Collectivite, condition_2_du_832_25_in: Callable[[Unit], bool], limitation_majoration_personnes_a_charge_in: Callable[[Unit], bool], n_nombre_parts_d832_25_in: Callable[[Unit], Decimal]) -> None:
        self.type_logement_foyer_in = type_logement_foyer_in
        self.date_conventionnement_in = date_conventionnement_in
        self.ressources_menage_arrondies_in = ressources_menage_arrondies_in
        self.nombre_personnes_a_charge_in = nombre_personnes_a_charge_in
        self.situation_familiale_calcul_apl_in = situation_familiale_calcul_apl_in
        self.zone_in = zone_in
        self.date_courante_in = date_courante_in
        self.redevance_in = redevance_in
        self.residence_in = residence_in
        self.condition_2_du_832_25_in = condition_2_du_832_25_in
        self.limitation_majoration_personnes_a_charge_in = limitation_majoration_personnes_a_charge_in
        self.n_nombre_parts_d832_25_in = n_nombre_parts_d832_25_in

    def __eq__(self, other: object) -> bool:
        if isinstance(other, CalculAidePersonnaliseeLogementFoyerIn):
            return (self.type_logement_foyer_in == other.type_logement_foyer_in and
                   self.date_conventionnement_in == other.date_conventionnement_in and
                   self.ressources_menage_arrondies_in == other.ressources_menage_arrondies_in and
                   self.nombre_personnes_a_charge_in == other.nombre_personnes_a_charge_in and
                   self.situation_familiale_calcul_apl_in == other.situation_familiale_calcul_apl_in and
                   self.zone_in == other.zone_in and
                   self.date_courante_in == other.date_courante_in and
                   self.redevance_in == other.redevance_in and
                   self.residence_in == other.residence_in and
                   self.condition_2_du_832_25_in == other.condition_2_du_832_25_in and
                   self.limitation_majoration_personnes_a_charge_in == other.limitation_majoration_personnes_a_charge_in and
                   self.n_nombre_parts_d832_25_in == other.n_nombre_parts_d832_25_in)
        else:
            return False

    def __ne__(self, other: object) -> bool:
        return not (self == other)

    def __str__(self) -> str:
        return "CalculAidePersonnaliseeLogementFoyerIn(type_logement_foyer_in={},date_conventionnement_in={},ressources_menage_arrondies_in={},nombre_personnes_a_charge_in={},situation_familiale_calcul_apl_in={},zone_in={},date_courante_in={},redevance_in={},residence_in={},condition_2_du_832_25_in={},limitation_majoration_personnes_a_charge_in={},n_nombre_parts_d832_25_in={})".format(self.type_logement_foyer_in,
            self.date_conventionnement_in,
            self.ressources_menage_arrondies_in,
            self.nombre_personnes_a_charge_in,
            self.situation_familiale_calcul_apl_in, self.zone_in,
            self.date_courante_in, self.redevance_in, self.residence_in,
            self.condition_2_du_832_25_in,
            self.limitation_majoration_personnes_a_charge_in,
            self.n_nombre_parts_d832_25_in)

class CalculNombrePartsAccessionProprieteIn:
    def __init__(self, nombre_personnes_a_charge_in: Integer, situation_familiale_calcul_apl_in: SituationFamilialeCalculAPL) -> None:
        self.nombre_personnes_a_charge_in = nombre_personnes_a_charge_in
        self.situation_familiale_calcul_apl_in = situation_familiale_calcul_apl_in

    def __eq__(self, other: object) -> bool:
        if isinstance(other, CalculNombrePartsAccessionProprieteIn):
            return (self.nombre_personnes_a_charge_in == other.nombre_personnes_a_charge_in and
                   self.situation_familiale_calcul_apl_in == other.situation_familiale_calcul_apl_in)
        else:
            return False

    def __ne__(self, other: object) -> bool:
        return not (self == other)

    def __str__(self) -> str:
        return "CalculNombrePartsAccessionProprieteIn(nombre_personnes_a_charge_in={},situation_familiale_calcul_apl_in={})".format(self.nombre_personnes_a_charge_in,
            self.situation_familiale_calcul_apl_in)

class CalculAidePersonnaliseeLogementAccessionProprieteIn:
    def __init__(self, mensualite_principale_in: Money, ressources_menage_arrondies_in: Money, nombre_personnes_a_charge_in: Integer, situation_familiale_calcul_apl_in: SituationFamilialeCalculAPL, type_travaux_logement_in: TypeTravauxLogementD83215, date_signature_pret_in: Date, local_habite_premiere_fois_beneficiaire_in: bool, date_entree_logement_in: Date, copropriete_in: bool, situation_r822_11_13_17_in: bool, zone_in: ZoneDHabitation, type_pret_in: TypePret, anciennete_logement_in: NeufOuAncien, date_courante_in: Date) -> None:
        self.mensualite_principale_in = mensualite_principale_in
        self.ressources_menage_arrondies_in = ressources_menage_arrondies_in
        self.nombre_personnes_a_charge_in = nombre_personnes_a_charge_in
        self.situation_familiale_calcul_apl_in = situation_familiale_calcul_apl_in
        self.type_travaux_logement_in = type_travaux_logement_in
        self.date_signature_pret_in = date_signature_pret_in
        self.local_habite_premiere_fois_beneficiaire_in = local_habite_premiere_fois_beneficiaire_in
        self.date_entree_logement_in = date_entree_logement_in
        self.copropriete_in = copropriete_in
        self.situation_r822_11_13_17_in = situation_r822_11_13_17_in
        self.zone_in = zone_in
        self.type_pret_in = type_pret_in
        self.anciennete_logement_in = anciennete_logement_in
        self.date_courante_in = date_courante_in

    def __eq__(self, other: object) -> bool:
        if isinstance(other, CalculAidePersonnaliseeLogementAccessionProprieteIn):
            return (self.mensualite_principale_in == other.mensualite_principale_in and
                   self.ressources_menage_arrondies_in == other.ressources_menage_arrondies_in and
                   self.nombre_personnes_a_charge_in == other.nombre_personnes_a_charge_in and
                   self.situation_familiale_calcul_apl_in == other.situation_familiale_calcul_apl_in and
                   self.type_travaux_logement_in == other.type_travaux_logement_in and
                   self.date_signature_pret_in == other.date_signature_pret_in and
                   self.local_habite_premiere_fois_beneficiaire_in == other.local_habite_premiere_fois_beneficiaire_in and
                   self.date_entree_logement_in == other.date_entree_logement_in and
                   self.copropriete_in == other.copropriete_in and
                   self.situation_r822_11_13_17_in == other.situation_r822_11_13_17_in and
                   self.zone_in == other.zone_in and
                   self.type_pret_in == other.type_pret_in and
                   self.anciennete_logement_in == other.anciennete_logement_in and
                   self.date_courante_in == other.date_courante_in)
        else:
            return False

    def __ne__(self, other: object) -> bool:
        return not (self == other)

    def __str__(self) -> str:
        return "CalculAidePersonnaliseeLogementAccessionProprieteIn(mensualite_principale_in={},ressources_menage_arrondies_in={},nombre_personnes_a_charge_in={},situation_familiale_calcul_apl_in={},type_travaux_logement_in={},date_signature_pret_in={},local_habite_premiere_fois_beneficiaire_in={},date_entree_logement_in={},copropriete_in={},situation_r822_11_13_17_in={},zone_in={},type_pret_in={},anciennete_logement_in={},date_courante_in={})".format(self.mensualite_principale_in,
            self.ressources_menage_arrondies_in,
            self.nombre_personnes_a_charge_in,
            self.situation_familiale_calcul_apl_in,
            self.type_travaux_logement_in, self.date_signature_pret_in,
            self.local_habite_premiere_fois_beneficiaire_in,
            self.date_entree_logement_in, self.copropriete_in,
            self.situation_r822_11_13_17_in, self.zone_in, self.type_pret_in,
            self.anciennete_logement_in, self.date_courante_in)

class CalculAidePersonnaliseeLogementIn:
    def __init__(self, mode_occupation_in: ModeOccupation, type_aide_in: TypeAidesPersonnelleLogement, ressources_menage_sans_arrondi_in: Money, situation_familiale_in: SituationFamiliale, nombre_personnes_a_charge_in: Integer, zone_in: ZoneDHabitation, date_courante_in: Date, residence_in: Collectivite) -> None:
        self.mode_occupation_in = mode_occupation_in
        self.type_aide_in = type_aide_in
        self.ressources_menage_sans_arrondi_in = ressources_menage_sans_arrondi_in
        self.situation_familiale_in = situation_familiale_in
        self.nombre_personnes_a_charge_in = nombre_personnes_a_charge_in
        self.zone_in = zone_in
        self.date_courante_in = date_courante_in
        self.residence_in = residence_in

    def __eq__(self, other: object) -> bool:
        if isinstance(other, CalculAidePersonnaliseeLogementIn):
            return (self.mode_occupation_in == other.mode_occupation_in and
                   self.type_aide_in == other.type_aide_in and
                   self.ressources_menage_sans_arrondi_in == other.ressources_menage_sans_arrondi_in and
                   self.situation_familiale_in == other.situation_familiale_in and
                   self.nombre_personnes_a_charge_in == other.nombre_personnes_a_charge_in and
                   self.zone_in == other.zone_in and
                   self.date_courante_in == other.date_courante_in and
                   self.residence_in == other.residence_in)
        else:
            return False

    def __ne__(self, other: object) -> bool:
        return not (self == other)

    def __str__(self) -> str:
        return "CalculAidePersonnaliseeLogementIn(mode_occupation_in={},type_aide_in={},ressources_menage_sans_arrondi_in={},situation_familiale_in={},nombre_personnes_a_charge_in={},zone_in={},date_courante_in={},residence_in={})".format(self.mode_occupation_in,
            self.type_aide_in, self.ressources_menage_sans_arrondi_in,
            self.situation_familiale_in, self.nombre_personnes_a_charge_in,
            self.zone_in, self.date_courante_in, self.residence_in)

class CalculAllocationLogementLocatifIn:
    def __init__(self, loyer_principal_in: Money, ressources_menage_arrondies_in: Money, beneficiaire_aide_adulte_ou_enfant_handicapes_in: bool, date_courante_in: Date, nombre_personnes_a_charge_in: Integer, situation_familiale_calcul_apl_in: SituationFamilialeCalculAPL, zone_in: ZoneDHabitation, logement_est_chambre_in: bool, agees_ou_handicap_adultes_hebergees_onereux_particuliers_in: bool, type_aide_in: TypeAidesPersonnelleLogement, colocation_in: bool, reduction_loyer_solidarite_in: Money, logement_meuble_d842_2_in: bool, residence_in: Collectivite, changement_logement_d842_4_in: ChangementLogementD8424) -> None:
        self.loyer_principal_in = loyer_principal_in
        self.ressources_menage_arrondies_in = ressources_menage_arrondies_in
        self.beneficiaire_aide_adulte_ou_enfant_handicapes_in = beneficiaire_aide_adulte_ou_enfant_handicapes_in
        self.date_courante_in = date_courante_in
        self.nombre_personnes_a_charge_in = nombre_personnes_a_charge_in
        self.situation_familiale_calcul_apl_in = situation_familiale_calcul_apl_in
        self.zone_in = zone_in
        self.logement_est_chambre_in = logement_est_chambre_in
        self.agees_ou_handicap_adultes_hebergees_onereux_particuliers_in = agees_ou_handicap_adultes_hebergees_onereux_particuliers_in
        self.type_aide_in = type_aide_in
        self.colocation_in = colocation_in
        self.reduction_loyer_solidarite_in = reduction_loyer_solidarite_in
        self.logement_meuble_d842_2_in = logement_meuble_d842_2_in
        self.residence_in = residence_in
        self.changement_logement_d842_4_in = changement_logement_d842_4_in

    def __eq__(self, other: object) -> bool:
        if isinstance(other, CalculAllocationLogementLocatifIn):
            return (self.loyer_principal_in == other.loyer_principal_in and
                   self.ressources_menage_arrondies_in == other.ressources_menage_arrondies_in and
                   self.beneficiaire_aide_adulte_ou_enfant_handicapes_in == other.beneficiaire_aide_adulte_ou_enfant_handicapes_in and
                   self.date_courante_in == other.date_courante_in and
                   self.nombre_personnes_a_charge_in == other.nombre_personnes_a_charge_in and
                   self.situation_familiale_calcul_apl_in == other.situation_familiale_calcul_apl_in and
                   self.zone_in == other.zone_in and
                   self.logement_est_chambre_in == other.logement_est_chambre_in and
                   self.agees_ou_handicap_adultes_hebergees_onereux_particuliers_in == other.agees_ou_handicap_adultes_hebergees_onereux_particuliers_in and
                   self.type_aide_in == other.type_aide_in and
                   self.colocation_in == other.colocation_in and
                   self.reduction_loyer_solidarite_in == other.reduction_loyer_solidarite_in and
                   self.logement_meuble_d842_2_in == other.logement_meuble_d842_2_in and
                   self.residence_in == other.residence_in and
                   self.changement_logement_d842_4_in == other.changement_logement_d842_4_in)
        else:
            return False

    def __ne__(self, other: object) -> bool:
        return not (self == other)

    def __str__(self) -> str:
        return "CalculAllocationLogementLocatifIn(loyer_principal_in={},ressources_menage_arrondies_in={},beneficiaire_aide_adulte_ou_enfant_handicapes_in={},date_courante_in={},nombre_personnes_a_charge_in={},situation_familiale_calcul_apl_in={},zone_in={},logement_est_chambre_in={},agees_ou_handicap_adultes_hebergees_onereux_particuliers_in={},type_aide_in={},colocation_in={},reduction_loyer_solidarite_in={},logement_meuble_d842_2_in={},residence_in={},changement_logement_d842_4_in={})".format(self.loyer_principal_in,
            self.ressources_menage_arrondies_in,
            self.beneficiaire_aide_adulte_ou_enfant_handicapes_in,
            self.date_courante_in, self.nombre_personnes_a_charge_in,
            self.situation_familiale_calcul_apl_in, self.zone_in,
            self.logement_est_chambre_in,
            self.agees_ou_handicap_adultes_hebergees_onereux_particuliers_in,
            self.type_aide_in, self.colocation_in,
            self.reduction_loyer_solidarite_in,
            self.logement_meuble_d842_2_in, self.residence_in,
            self.changement_logement_d842_4_in)

class CalculAllocationLogementAccessionProprieteIn:
    def __init__(self, ressources_menage_arrondies_base_in: Money, nombre_personnes_a_charge_in: Integer, situation_familiale_calcul_apl_in: SituationFamilialeCalculAPL, zone_in: ZoneDHabitation, residence_in: Collectivite, date_courante_in: Date, mensualite_principale_in: Money, situation_r822_11_13_17_in: bool, date_signature_pret_in: Date, type_travaux_logement_in: TypeTravauxLogementR8425, local_habite_premiere_fois_beneficiaire_in: bool, date_entree_logement_in: Date, charges_mensuelles_pret_in: Money, copropriete_in: bool, operations_logement_evolutifs_sociaux_accession_propriete_aidee_Etat_in: bool) -> None:
        self.ressources_menage_arrondies_base_in = ressources_menage_arrondies_base_in
        self.nombre_personnes_a_charge_in = nombre_personnes_a_charge_in
        self.situation_familiale_calcul_apl_in = situation_familiale_calcul_apl_in
        self.zone_in = zone_in
        self.residence_in = residence_in
        self.date_courante_in = date_courante_in
        self.mensualite_principale_in = mensualite_principale_in
        self.situation_r822_11_13_17_in = situation_r822_11_13_17_in
        self.date_signature_pret_in = date_signature_pret_in
        self.type_travaux_logement_in = type_travaux_logement_in
        self.local_habite_premiere_fois_beneficiaire_in = local_habite_premiere_fois_beneficiaire_in
        self.date_entree_logement_in = date_entree_logement_in
        self.charges_mensuelles_pret_in = charges_mensuelles_pret_in
        self.copropriete_in = copropriete_in
        self.operations_logement_evolutifs_sociaux_accession_propriete_aidee_Etat_in = operations_logement_evolutifs_sociaux_accession_propriete_aidee_Etat_in

    def __eq__(self, other: object) -> bool:
        if isinstance(other, CalculAllocationLogementAccessionProprieteIn):
            return (self.ressources_menage_arrondies_base_in == other.ressources_menage_arrondies_base_in and
                   self.nombre_personnes_a_charge_in == other.nombre_personnes_a_charge_in and
                   self.situation_familiale_calcul_apl_in == other.situation_familiale_calcul_apl_in and
                   self.zone_in == other.zone_in and
                   self.residence_in == other.residence_in and
                   self.date_courante_in == other.date_courante_in and
                   self.mensualite_principale_in == other.mensualite_principale_in and
                   self.situation_r822_11_13_17_in == other.situation_r822_11_13_17_in and
                   self.date_signature_pret_in == other.date_signature_pret_in and
                   self.type_travaux_logement_in == other.type_travaux_logement_in and
                   self.local_habite_premiere_fois_beneficiaire_in == other.local_habite_premiere_fois_beneficiaire_in and
                   self.date_entree_logement_in == other.date_entree_logement_in and
                   self.charges_mensuelles_pret_in == other.charges_mensuelles_pret_in and
                   self.copropriete_in == other.copropriete_in and
                   self.operations_logement_evolutifs_sociaux_accession_propriete_aidee_Etat_in == other.operations_logement_evolutifs_sociaux_accession_propriete_aidee_Etat_in)
        else:
            return False

    def __ne__(self, other: object) -> bool:
        return not (self == other)

    def __str__(self) -> str:
        return "CalculAllocationLogementAccessionProprieteIn(ressources_menage_arrondies_base_in={},nombre_personnes_a_charge_in={},situation_familiale_calcul_apl_in={},zone_in={},residence_in={},date_courante_in={},mensualite_principale_in={},situation_r822_11_13_17_in={},date_signature_pret_in={},type_travaux_logement_in={},local_habite_premiere_fois_beneficiaire_in={},date_entree_logement_in={},charges_mensuelles_pret_in={},copropriete_in={},operations_logement_evolutifs_sociaux_accession_propriete_aidee_Etat_in={})".format(self.ressources_menage_arrondies_base_in,
            self.nombre_personnes_a_charge_in,
            self.situation_familiale_calcul_apl_in, self.zone_in,
            self.residence_in, self.date_courante_in,
            self.mensualite_principale_in, self.situation_r822_11_13_17_in,
            self.date_signature_pret_in, self.type_travaux_logement_in,
            self.local_habite_premiere_fois_beneficiaire_in,
            self.date_entree_logement_in, self.charges_mensuelles_pret_in,
            self.copropriete_in,
            self.operations_logement_evolutifs_sociaux_accession_propriete_aidee_Etat_in)

class CalculAllocationLogementFoyerIn:
    def __init__(self, type_logement_foyer_in: TypeLogementFoyer, date_conventionnement_in: Date, residence_in: Collectivite, redevance_in: Money, ressources_menage_arrondies_in: Money, nombre_personnes_a_charge_in: Integer, situation_familiale_calcul_apl_in: SituationFamilialeCalculAPL, zone_in: ZoneDHabitation, date_courante_in: Date, categorie_equivalence_loyer_d842_16_in: CategorieEquivalenceLoyerAllocationLogementFoyer) -> None:
        self.type_logement_foyer_in = type_logement_foyer_in
        self.date_conventionnement_in = date_conventionnement_in
        self.residence_in = residence_in
        self.redevance_in = redevance_in
        self.ressources_menage_arrondies_in = ressources_menage_arrondies_in
        self.nombre_personnes_a_charge_in = nombre_personnes_a_charge_in
        self.situation_familiale_calcul_apl_in = situation_familiale_calcul_apl_in
        self.zone_in = zone_in
        self.date_courante_in = date_courante_in
        self.categorie_equivalence_loyer_d842_16_in = categorie_equivalence_loyer_d842_16_in

    def __eq__(self, other: object) -> bool:
        if isinstance(other, CalculAllocationLogementFoyerIn):
            return (self.type_logement_foyer_in == other.type_logement_foyer_in and
                   self.date_conventionnement_in == other.date_conventionnement_in and
                   self.residence_in == other.residence_in and
                   self.redevance_in == other.redevance_in and
                   self.ressources_menage_arrondies_in == other.ressources_menage_arrondies_in and
                   self.nombre_personnes_a_charge_in == other.nombre_personnes_a_charge_in and
                   self.situation_familiale_calcul_apl_in == other.situation_familiale_calcul_apl_in and
                   self.zone_in == other.zone_in and
                   self.date_courante_in == other.date_courante_in and
                   self.categorie_equivalence_loyer_d842_16_in == other.categorie_equivalence_loyer_d842_16_in)
        else:
            return False

    def __ne__(self, other: object) -> bool:
        return not (self == other)

    def __str__(self) -> str:
        return "CalculAllocationLogementFoyerIn(type_logement_foyer_in={},date_conventionnement_in={},residence_in={},redevance_in={},ressources_menage_arrondies_in={},nombre_personnes_a_charge_in={},situation_familiale_calcul_apl_in={},zone_in={},date_courante_in={},categorie_equivalence_loyer_d842_16_in={})".format(self.type_logement_foyer_in,
            self.date_conventionnement_in, self.residence_in,
            self.redevance_in, self.ressources_menage_arrondies_in,
            self.nombre_personnes_a_charge_in,
            self.situation_familiale_calcul_apl_in, self.zone_in,
            self.date_courante_in,
            self.categorie_equivalence_loyer_d842_16_in)

class CalculAllocationLogementIn:
    def __init__(self, mode_occupation_in: ModeOccupation, ressources_menage_sans_arrondi_in: Money, situation_familiale_in: SituationFamiliale, nombre_personnes_a_charge_in: Integer, zone_in: ZoneDHabitation, date_courante_in: Date, type_aide_in: TypeAidesPersonnelleLogement, residence_in: Collectivite) -> None:
        self.mode_occupation_in = mode_occupation_in
        self.ressources_menage_sans_arrondi_in = ressources_menage_sans_arrondi_in
        self.situation_familiale_in = situation_familiale_in
        self.nombre_personnes_a_charge_in = nombre_personnes_a_charge_in
        self.zone_in = zone_in
        self.date_courante_in = date_courante_in
        self.type_aide_in = type_aide_in
        self.residence_in = residence_in

    def __eq__(self, other: object) -> bool:
        if isinstance(other, CalculAllocationLogementIn):
            return (self.mode_occupation_in == other.mode_occupation_in and
                   self.ressources_menage_sans_arrondi_in == other.ressources_menage_sans_arrondi_in and
                   self.situation_familiale_in == other.situation_familiale_in and
                   self.nombre_personnes_a_charge_in == other.nombre_personnes_a_charge_in and
                   self.zone_in == other.zone_in and
                   self.date_courante_in == other.date_courante_in and
                   self.type_aide_in == other.type_aide_in and
                   self.residence_in == other.residence_in)
        else:
            return False

    def __ne__(self, other: object) -> bool:
        return not (self == other)

    def __str__(self) -> str:
        return "CalculAllocationLogementIn(mode_occupation_in={},ressources_menage_sans_arrondi_in={},situation_familiale_in={},nombre_personnes_a_charge_in={},zone_in={},date_courante_in={},type_aide_in={},residence_in={})".format(self.mode_occupation_in,
            self.ressources_menage_sans_arrondi_in,
            self.situation_familiale_in, self.nombre_personnes_a_charge_in,
            self.zone_in, self.date_courante_in, self.type_aide_in,
            self.residence_in)

class OuvertureDroitsRetraiteIn:
    def __init__(self, date_naissance_assure_in: Date) -> None:
        self.date_naissance_assure_in = date_naissance_assure_in

    def __eq__(self, other: object) -> bool:
        if isinstance(other, OuvertureDroitsRetraiteIn):
            return (self.date_naissance_assure_in == other.date_naissance_assure_in)
        else:
            return False

    def __ne__(self, other: object) -> bool:
        return not (self == other)

    def __str__(self) -> str:
        return "OuvertureDroitsRetraiteIn(date_naissance_assure_in={})".format(self.date_naissance_assure_in)

class ImpayeDepenseLogementIn:
    def __init__(self, mode_occupation_in: ModeOccupation, aide_versee_in: VersementA, montant_apl_in: Money, montant_charges_in: Money, depense_logement_in: DepenseLogement, montant_dette_in: Money) -> None:
        self.mode_occupation_in = mode_occupation_in
        self.aide_versee_in = aide_versee_in
        self.montant_apl_in = montant_apl_in
        self.montant_charges_in = montant_charges_in
        self.depense_logement_in = depense_logement_in
        self.montant_dette_in = montant_dette_in

    def __eq__(self, other: object) -> bool:
        if isinstance(other, ImpayeDepenseLogementIn):
            return (self.mode_occupation_in == other.mode_occupation_in and
                   self.aide_versee_in == other.aide_versee_in and
                   self.montant_apl_in == other.montant_apl_in and
                   self.montant_charges_in == other.montant_charges_in and
                   self.depense_logement_in == other.depense_logement_in and
                   self.montant_dette_in == other.montant_dette_in)
        else:
            return False

    def __ne__(self, other: object) -> bool:
        return not (self == other)

    def __str__(self) -> str:
        return "ImpayeDepenseLogementIn(mode_occupation_in={},aide_versee_in={},montant_apl_in={},montant_charges_in={},depense_logement_in={},montant_dette_in={})".format(self.mode_occupation_in,
            self.aide_versee_in, self.montant_apl_in,
            self.montant_charges_in, self.depense_logement_in,
            self.montant_dette_in)

class CalculetteAidesAuLogementIn:
    def __init__(self, menage_in: Menage, demandeur_in: Demandeur, date_courante_in: Date, ressources_menage_prises_en_compte_in: Money) -> None:
        self.menage_in = menage_in
        self.demandeur_in = demandeur_in
        self.date_courante_in = date_courante_in
        self.ressources_menage_prises_en_compte_in = ressources_menage_prises_en_compte_in

    def __eq__(self, other: object) -> bool:
        if isinstance(other, CalculetteAidesAuLogementIn):
            return (self.menage_in == other.menage_in and
                   self.demandeur_in == other.demandeur_in and
                   self.date_courante_in == other.date_courante_in and
                   self.ressources_menage_prises_en_compte_in == other.ressources_menage_prises_en_compte_in)
        else:
            return False

    def __ne__(self, other: object) -> bool:
        return not (self == other)

    def __str__(self) -> str:
        return "CalculetteAidesAuLogementIn(menage_in={},demandeur_in={},date_courante_in={},ressources_menage_prises_en_compte_in={})".format(self.menage_in,
            self.demandeur_in, self.date_courante_in,
            self.ressources_menage_prises_en_compte_in)

class CalculetteAidesAuLogementGardeAlterneeIn:
    def __init__(self, menage_in: Menage, demandeur_in: Demandeur, date_courante_in: Date, ressources_menage_prises_en_compte_in: Money) -> None:
        self.menage_in = menage_in
        self.demandeur_in = demandeur_in
        self.date_courante_in = date_courante_in
        self.ressources_menage_prises_en_compte_in = ressources_menage_prises_en_compte_in

    def __eq__(self, other: object) -> bool:
        if isinstance(other, CalculetteAidesAuLogementGardeAlterneeIn):
            return (self.menage_in == other.menage_in and
                   self.demandeur_in == other.demandeur_in and
                   self.date_courante_in == other.date_courante_in and
                   self.ressources_menage_prises_en_compte_in == other.ressources_menage_prises_en_compte_in)
        else:
            return False

    def __ne__(self, other: object) -> bool:
        return not (self == other)

    def __str__(self) -> str:
        return "CalculetteAidesAuLogementGardeAlterneeIn(menage_in={},demandeur_in={},date_courante_in={},ressources_menage_prises_en_compte_in={})".format(self.menage_in,
            self.demandeur_in, self.date_courante_in,
            self.ressources_menage_prises_en_compte_in)

class BaseMensuelleAllocationsFamilialesIn:
    def __init__(self, date_courante_in: Date) -> None:
        self.date_courante_in = date_courante_in

    def __eq__(self, other: object) -> bool:
        if isinstance(other, BaseMensuelleAllocationsFamilialesIn):
            return (self.date_courante_in == other.date_courante_in)
        else:
            return False

    def __ne__(self, other: object) -> bool:
        return not (self == other)

    def __str__(self) -> str:
        return "BaseMensuelleAllocationsFamilialesIn(date_courante_in={})".format(self.date_courante_in)

class VerificationAgeInferieurOuEgalAIn:
    def __init__(self, date_naissance_in: Date, date_courante_in: Date, annees_in: Duration) -> None:
        self.date_naissance_in = date_naissance_in
        self.date_courante_in = date_courante_in
        self.annees_in = annees_in

    def __eq__(self, other: object) -> bool:
        if isinstance(other, VerificationAgeInferieurOuEgalAIn):
            return (self.date_naissance_in == other.date_naissance_in and
                   self.date_courante_in == other.date_courante_in and
                   self.annees_in == other.annees_in)
        else:
            return False

    def __ne__(self, other: object) -> bool:
        return not (self == other)

    def __str__(self) -> str:
        return "VerificationAgeInferieurOuEgalAIn(date_naissance_in={},date_courante_in={},annees_in={})".format(self.date_naissance_in,
            self.date_courante_in, self.annees_in)

class VerificationAgeSuperieurAIn:
    def __init__(self, date_naissance_in: Date, date_courante_in: Date, annees_in: Duration) -> None:
        self.date_naissance_in = date_naissance_in
        self.date_courante_in = date_courante_in
        self.annees_in = annees_in

    def __eq__(self, other: object) -> bool:
        if isinstance(other, VerificationAgeSuperieurAIn):
            return (self.date_naissance_in == other.date_naissance_in and
                   self.date_courante_in == other.date_courante_in and
                   self.annees_in == other.annees_in)
        else:
            return False

    def __ne__(self, other: object) -> bool:
        return not (self == other)

    def __str__(self) -> str:
        return "VerificationAgeSuperieurAIn(date_naissance_in={},date_courante_in={},annees_in={})".format(self.date_naissance_in,
            self.date_courante_in, self.annees_in)

class SmicIn:
    def __init__(self, date_courante_in: Date, residence_in: Collectivite) -> None:
        self.date_courante_in = date_courante_in
        self.residence_in = residence_in

    def __eq__(self, other: object) -> bool:
        if isinstance(other, SmicIn):
            return (self.date_courante_in == other.date_courante_in and
                   self.residence_in == other.residence_in)
        else:
            return False

    def __ne__(self, other: object) -> bool:
        return not (self == other)

    def __str__(self) -> str:
        return "SmicIn(date_courante_in={},residence_in={})".format(self.date_courante_in,
            self.residence_in)

class EligibilitePrestationsFamilialesIn:
    def __init__(self, date_courante_in: Date, prestation_courante_in: ElementPrestationsFamiliales, residence_in: Collectivite, age_l512_3_2_in: Callable[[Unit], Duration]) -> None:
        self.date_courante_in = date_courante_in
        self.prestation_courante_in = prestation_courante_in
        self.residence_in = residence_in
        self.age_l512_3_2_in = age_l512_3_2_in

    def __eq__(self, other: object) -> bool:
        if isinstance(other, EligibilitePrestationsFamilialesIn):
            return (self.date_courante_in == other.date_courante_in and
                   self.prestation_courante_in == other.prestation_courante_in and
                   self.residence_in == other.residence_in and
                   self.age_l512_3_2_in == other.age_l512_3_2_in)
        else:
            return False

    def __ne__(self, other: object) -> bool:
        return not (self == other)

    def __str__(self) -> str:
        return "EligibilitePrestationsFamilialesIn(date_courante_in={},prestation_courante_in={},residence_in={},age_l512_3_2_in={})".format(self.date_courante_in,
            self.prestation_courante_in, self.residence_in,
            self.age_l512_3_2_in)



def contributions_sociales_aides_personnelle_logement(contributions_sociales_aides_personnelle_logement_in:ContributionsSocialesAidesPersonnelleLogementIn):
    date_courante = contributions_sociales_aides_personnelle_logement_in.date_courante_in
    try:
        temp_exonere_csg = True
    except EmptyError:
        temp_exonere_csg = dead_value
        raise NoValueProvided(SourcePosition(filename="examples/aides_logement/prologue.catala_fr",
                                             start_line=556, start_column=11,
                                             end_line=556, end_column=22,
                                             law_headings=["Calcul des contributions sociales s'appliquant aux aides personnelles au logement",
                                             "Déclarations des champs d'application",
                                             "Prologue : aides au logement"]))
    exonere_csg = temp_exonere_csg
    try:
        if (date_courante >=
            date_of_numbers(2020,1,1)):
            temp_taux_crds = decimal_of_string("0.005")
        else:
            temp_taux_crds = dead_value
            raise EmptyError
    except EmptyError:
        temp_taux_crds = dead_value
        raise NoValueProvided(SourcePosition(filename="examples/aides_logement/prologue.catala_fr",
                                             start_line=555, start_column=11,
                                             end_line=555, end_column=20,
                                             law_headings=["Calcul des contributions sociales s'appliquant aux aides personnelles au logement",
                                             "Déclarations des champs d'application",
                                             "Prologue : aides au logement"]))
    taux_crds = temp_taux_crds
    try:
        def temp_montant(aide_finale:Money):
            try:
                if (date_courante >=
                    date_of_numbers(2018,9,1)):
                    return (aide_finale * taux_crds)
                else:
                    raise EmptyError
            except EmptyError:
                raise NoValueProvided(SourcePosition(filename="examples/aides_logement/prologue.catala_fr",
                                                     start_line=558,
                                                     start_column=12,
                                                     end_line=558,
                                                     end_column=19,
                                                     law_headings=["Calcul des contributions sociales s'appliquant aux aides personnelles au logement",
                                                     "Déclarations des champs d'application",
                                                     "Prologue : aides au logement"]))
    except EmptyError:
        temp_montant = dead_value
        raise NoValueProvided(SourcePosition(filename="examples/aides_logement/prologue.catala_fr",
                                             start_line=558, start_column=12,
                                             end_line=558, end_column=19,
                                             law_headings=["Calcul des contributions sociales s'appliquant aux aides personnelles au logement",
                                             "Déclarations des champs d'application",
                                             "Prologue : aides au logement"]))
    montant = temp_montant
    try:
        temp__ = exonere_csg
    except EmptyError:
        temp__ = dead_value
        raise NoValueProvided(SourcePosition(filename="examples/aides_logement/autres_sources.catala_fr",
                                             start_line=156, start_column=13,
                                             end_line=156, end_column=24,
                                             law_headings=["Article 14",
                                             "Chapitre II : Des contributions pour le remboursement de la dette sociale.",
                                             "Ordonnance n° 96-50 du 24 janvier 1996 relative au remboursement de la dette sociale"]))
    if not (temp__):
        raise AssertionFailure(SourcePosition(filename="examples/aides_logement/autres_sources.catala_fr",
                                              start_line=156,
                                              start_column=13, end_line=156,
                                              end_column=24,
                                              law_headings=["Article 14",
                                                           "Chapitre II : Des contributions pour le remboursement de la dette sociale.",
                                                           "Ordonnance n° 96-50 du 24 janvier 1996 relative au remboursement de la dette sociale"]))
    try:
        temp___1 = (date_courante >= date_of_numbers(2020,1,1))
    except EmptyError:
        temp___1 = dead_value
        raise NoValueProvided(SourcePosition(filename="examples/aides_logement/prologue.catala_fr",
                                             start_line=563, start_column=13,
                                             end_line=563, end_column=42,
                                             law_headings=["Calcul des contributions sociales s'appliquant aux aides personnelles au logement",
                                             "Déclarations des champs d'application",
                                             "Prologue : aides au logement"]))
    if not (temp___1):
        raise AssertionFailure(SourcePosition(filename="examples/aides_logement/prologue.catala_fr",
                                              start_line=563,
                                              start_column=13, end_line=563,
                                              end_column=42,
                                              law_headings=["Calcul des contributions sociales s'appliquant aux aides personnelles au logement",
                                                           "Déclarations des champs d'application",
                                                           "Prologue : aides au logement"]))
    return ContributionsSocialesAidesPersonnelleLogement(montant = montant)

def calcul_equivalence_loyer_minimale(calcul_equivalence_loyer_minimale_in:CalculEquivalenceLoyerMinimaleIn):
    date_courante_1 = calcul_equivalence_loyer_minimale_in.date_courante_in
    ressources_menage_arrondies = calcul_equivalence_loyer_minimale_in.ressources_menage_arrondies_in
    condition_2_du_832_25 = calcul_equivalence_loyer_minimale_in.condition_2_du_832_25_in
    n_nombre_parts_d832_25 = calcul_equivalence_loyer_minimale_in.n_nombre_parts_d832_25_in
    try:
        if (date_courante_1 >
            date_of_numbers(2019,10,1)):
            if condition_2_du_832_25:
                temp_montant_forfaitaire_d832_26 = money_of_cents_string("7632")
            else:
                temp_montant_forfaitaire_d832_26 = money_of_cents_string("4557")
        else:
            temp_montant_forfaitaire_d832_26 = dead_value
            raise EmptyError
    except EmptyError:
        temp_montant_forfaitaire_d832_26 = dead_value
        raise NoValueProvided(SourcePosition(filename="examples/aides_logement/prologue.catala_fr",
                                             start_line=655, start_column=11,
                                             end_line=655, end_column=38,
                                             law_headings=["Secteur logement-foyer",
                                             "Calcul du montant de l'aide personnalisée au logement",
                                             "Déclarations des champs d'application",
                                             "Prologue : aides au logement"]))
    montant_forfaitaire_d832_26 = temp_montant_forfaitaire_d832_26
    try:
        try:
            if ((date_courante_1 > date_of_numbers(2019,10,1)) and
                condition_2_du_832_25):
                temp_tranches_revenus_d832_26 = [TrancheRevenu(haut = LimiteTranche(LimiteTranche_Code.Revenu,
                    money_of_cents_string("142303")),
                    bas = money_of_cents_string("0"),
                    taux = decimal_of_string("0.")),
                    TrancheRevenu(haut = LimiteTranche(LimiteTranche_Code.Revenu,
                    money_of_cents_string("204761")),
                    bas = money_of_cents_string("142303"),
                    taux = decimal_of_string("0.024")),
                    TrancheRevenu(haut = LimiteTranche(LimiteTranche_Code.Revenu,
                    money_of_cents_string("262985")),
                    bas = money_of_cents_string("204761"),
                    taux = decimal_of_string("0.208")),
                    TrancheRevenu(haut = LimiteTranche(LimiteTranche_Code.Revenu,
                    money_of_cents_string("409505")),
                    bas = money_of_cents_string("262985"),
                    taux = decimal_of_string("0.232")),
                    TrancheRevenu(haut = LimiteTranche(LimiteTranche_Code.Infini,
                    Unit()), bas = money_of_cents_string("409505"),
                    taux = decimal_of_string("0.328"))]
            else:
                temp_tranches_revenus_d832_26 = dead_value
                raise EmptyError
        except EmptyError:
            if (date_courante_1 >
                date_of_numbers(2019,10,1)):
                temp_tranches_revenus_d832_26 = [TrancheRevenu(haut = LimiteTranche(LimiteTranche_Code.Revenu,
                    money_of_cents_string("194810")),
                    bas = money_of_cents_string("0"),
                    taux = decimal_of_string("0.04")),
                    TrancheRevenu(haut = LimiteTranche(LimiteTranche_Code.Revenu,
                    money_of_cents_string("267871")),
                    bas = money_of_cents_string("194810"),
                    taux = decimal_of_string("0.104")),
                    TrancheRevenu(haut = LimiteTranche(LimiteTranche_Code.Revenu,
                    money_of_cents_string("389618")),
                    bas = money_of_cents_string("267871"),
                    taux = decimal_of_string("0.216")),
                    TrancheRevenu(haut = LimiteTranche(LimiteTranche_Code.Revenu,
                    money_of_cents_string("535744")),
                    bas = money_of_cents_string("389618"),
                    taux = decimal_of_string("0.264")),
                    TrancheRevenu(haut = LimiteTranche(LimiteTranche_Code.Revenu,
                    money_of_cents_string("633129")),
                    bas = money_of_cents_string("535744"),
                    taux = decimal_of_string("0.32")),
                    TrancheRevenu(haut = LimiteTranche(LimiteTranche_Code.Infini,
                    Unit()), bas = money_of_cents_string("633129"),
                    taux = decimal_of_string("0.48"))]
            else:
                temp_tranches_revenus_d832_26 = dead_value
                raise EmptyError
    except EmptyError:
        temp_tranches_revenus_d832_26 = dead_value
        raise NoValueProvided(SourcePosition(filename="examples/aides_logement/prologue.catala_fr",
                                             start_line=652, start_column=11,
                                             end_line=652, end_column=35,
                                             law_headings=["Secteur logement-foyer",
                                             "Calcul du montant de l'aide personnalisée au logement",
                                             "Déclarations des champs d'application",
                                             "Prologue : aides au logement"]))
    tranches_revenus_d832_26 = temp_tranches_revenus_d832_26
    try:
        def temp_tranches_revenus_d832_26_multipliees(tranche:TrancheRevenu):
            match_arg = tranche.haut
            if match_arg.code == LimiteTranche_Code.Revenu:
                tranche_haut = match_arg.value
                temp_tranches_revenus_d832_26_multipliees_1 = LimiteTrancheDecimal(LimiteTrancheDecimal_Code.Revenu,
                    (decimal_of_money(tranche_haut) *
                    n_nombre_parts_d832_25))
            elif match_arg.code == LimiteTranche_Code.Infini:
                _ = match_arg.value
                temp_tranches_revenus_d832_26_multipliees_1 = LimiteTrancheDecimal(LimiteTrancheDecimal_Code.Infini,
                    Unit())
            return TrancheRevenuDecimal(haut = temp_tranches_revenus_d832_26_multipliees_1,
                bas = (decimal_of_money(tranche.bas) *
                n_nombre_parts_d832_25), taux = tranche.taux)
        temp_tranches_revenus_d832_26_multipliees_2 = list_map(temp_tranches_revenus_d832_26_multipliees,
            tranches_revenus_d832_26)
    except EmptyError:
        temp_tranches_revenus_d832_26_multipliees_2 = dead_value
        raise NoValueProvided(SourcePosition(filename="examples/aides_logement/prologue.catala_fr",
                                             start_line=653, start_column=11,
                                             end_line=653, end_column=47,
                                             law_headings=["Secteur logement-foyer",
                                             "Calcul du montant de l'aide personnalisée au logement",
                                             "Déclarations des champs d'application",
                                             "Prologue : aides au logement"]))
    tranches_revenus_d832_26_multipliees = temp_tranches_revenus_d832_26_multipliees_2
    try:
        try:
            if condition_2_du_832_25:
                def temp_montant_1(tranche_1:TrancheRevenuDecimal):
                    if (decimal_of_money(ressources_menage_arrondies) <=
                        tranche_1.bas):
                        return decimal_of_string("0.")
                    else:
                        match_arg_1 = tranche_1.haut
                        if match_arg_1.code == LimiteTrancheDecimal_Code.Revenu:
                            tranche_haut_1 = match_arg_1.value
                            if (decimal_of_money(ressources_menage_arrondies) >=
                                tranche_haut_1):
                                return ((tranche_haut_1 - tranche_1.bas) *
                                    tranche_1.taux)
                            else:
                                return ((decimal_of_money(ressources_menage_arrondies) -
                                    tranche_1.bas) * tranche_1.taux)
                        elif match_arg_1.code == LimiteTrancheDecimal_Code.Infini:
                            _ = match_arg_1.value
                            return ((decimal_of_money(ressources_menage_arrondies) -
                                tranche_1.bas) * tranche_1.taux)
                def temp_montant_2(sum1:Decimal, sum2:Decimal):
                    return (sum1 + sum2)
                temp_montant_3 = money_of_decimal(((list_reduce(temp_montant_2,
                                                                decimal_of_string("0."),
                                                                list_map(temp_montant_1,
                                                                tranches_revenus_d832_26_multipliees)) +
                    decimal_of_money(montant_forfaitaire_d832_26)) /
                    decimal_of_string("12.")))
            else:
                temp_montant_3 = dead_value
                raise EmptyError
        except EmptyError:
            def temp_montant_4(tranche_2:TrancheRevenuDecimal):
                if (decimal_of_money(ressources_menage_arrondies) <=
                    tranche_2.bas):
                    return decimal_of_string("0.")
                else:
                    match_arg_2 = tranche_2.haut
                    if match_arg_2.code == LimiteTrancheDecimal_Code.Revenu:
                        tranche_haut_2 = match_arg_2.value
                        if (decimal_of_money(ressources_menage_arrondies) >=
                            tranche_haut_2):
                            return ((tranche_haut_2 - tranche_2.bas) *
                                tranche_2.taux)
                        else:
                            return ((decimal_of_money(ressources_menage_arrondies) -
                                tranche_2.bas) * tranche_2.taux)
                    elif match_arg_2.code == LimiteTrancheDecimal_Code.Infini:
                        _ = match_arg_2.value
                        return ((decimal_of_money(ressources_menage_arrondies) -
                            tranche_2.bas) * tranche_2.taux)
            def temp_montant_5(sum1_1:Decimal, sum2_1:Decimal):
                return (sum1_1 + sum2_1)
            temp_montant_3 = money_of_decimal(((list_reduce(temp_montant_5,
                                                            decimal_of_string("0."),
                                                            list_map(temp_montant_4,
                                                            tranches_revenus_d832_26_multipliees)) +
                (decimal_of_money(montant_forfaitaire_d832_26) *
                n_nombre_parts_d832_25)) / decimal_of_string("12.")))
    except EmptyError:
        temp_montant_3 = dead_value
        raise NoValueProvided(SourcePosition(filename="examples/aides_logement/prologue.catala_fr",
                                             start_line=657, start_column=12,
                                             end_line=657, end_column=19,
                                             law_headings=["Secteur logement-foyer",
                                             "Calcul du montant de l'aide personnalisée au logement",
                                             "Déclarations des champs d'application",
                                             "Prologue : aides au logement"]))
    montant_1 = temp_montant_3
    return CalculEquivalenceLoyerMinimale(montant = montant_1)

def calcul_nombre_part_logement_foyer(calcul_nombre_part_logement_foyer_in:CalculNombrePartLogementFoyerIn):
    condition_2_du_832_25_1 = calcul_nombre_part_logement_foyer_in.condition_2_du_832_25_in
    nombre_personnes_a_charge = calcul_nombre_part_logement_foyer_in.nombre_personnes_a_charge_in
    situation_familiale_calcul_apl = calcul_nombre_part_logement_foyer_in.situation_familiale_calcul_apl_in
    residence = calcul_nombre_part_logement_foyer_in.residence_in
    limitation_majoration_personnes_a_charge = calcul_nombre_part_logement_foyer_in.limitation_majoration_personnes_a_charge_in
    try:
        try:
            temp_limitation_majoration_personnes_a_charge = limitation_majoration_personnes_a_charge(
                Unit())
        except EmptyError:
            temp_limitation_majoration_personnes_a_charge = False
    except EmptyError:
        temp_limitation_majoration_personnes_a_charge = dead_value
        raise NoValueProvided(SourcePosition(filename="examples/aides_logement/prologue.catala_fr",
                                             start_line=665, start_column=12,
                                             end_line=665, end_column=52,
                                             law_headings=["Secteur logement-foyer",
                                             "Calcul du montant de l'aide personnalisée au logement",
                                             "Déclarations des champs d'application",
                                             "Prologue : aides au logement"]))
    limitation_majoration_personnes_a_charge_1 = temp_limitation_majoration_personnes_a_charge
    try:
        try:
            if condition_2_du_832_25_1:
                if (nombre_personnes_a_charge ==
                    integer_of_string("0")):
                    match_arg_3 = situation_familiale_calcul_apl
                    if match_arg_3.code == SituationFamilialeCalculAPL_Code.PersonneSeule:
                        _ = match_arg_3.value
                        temp_n_nombre_parts_d832_25_base = decimal_of_string("1.2")
                    elif match_arg_3.code == SituationFamilialeCalculAPL_Code.Couple:
                        _ = match_arg_3.value
                        temp_n_nombre_parts_d832_25_base = decimal_of_string("1.5")
                else:
                    if (nombre_personnes_a_charge ==
                        integer_of_string("1")):
                        temp_n_nombre_parts_d832_25_base = decimal_of_string("2.5")
                    else:
                        if (nombre_personnes_a_charge ==
                            integer_of_string("2")):
                            temp_n_nombre_parts_d832_25_base = decimal_of_string("3.")
                        else:
                            if (nombre_personnes_a_charge ==
                                integer_of_string("3")):
                                temp_n_nombre_parts_d832_25_base = decimal_of_string("3.7")
                            else:
                                temp_n_nombre_parts_d832_25_base = decimal_of_string("4.3")
            else:
                temp_n_nombre_parts_d832_25_base = dead_value
                raise EmptyError
        except EmptyError:
            if (nombre_personnes_a_charge ==
                integer_of_string("0")):
                match_arg_4 = situation_familiale_calcul_apl
                if match_arg_4.code == SituationFamilialeCalculAPL_Code.PersonneSeule:
                    _ = match_arg_4.value
                    temp_n_nombre_parts_d832_25_base = decimal_of_string("1.4")
                elif match_arg_4.code == SituationFamilialeCalculAPL_Code.Couple:
                    _ = match_arg_4.value
                    temp_n_nombre_parts_d832_25_base = decimal_of_string("1.8")
            else:
                if (nombre_personnes_a_charge ==
                    integer_of_string("1")):
                    temp_n_nombre_parts_d832_25_base = decimal_of_string("2.5")
                else:
                    if (nombre_personnes_a_charge ==
                        integer_of_string("2")):
                        temp_n_nombre_parts_d832_25_base = decimal_of_string("3.")
                    else:
                        if (nombre_personnes_a_charge ==
                            integer_of_string("3")):
                            temp_n_nombre_parts_d832_25_base = decimal_of_string("3.7")
                        else:
                            temp_n_nombre_parts_d832_25_base = decimal_of_string("4.3")
    except EmptyError:
        temp_n_nombre_parts_d832_25_base = dead_value
        raise NoValueProvided(SourcePosition(filename="examples/aides_logement/prologue.catala_fr",
                                             start_line=667, start_column=11,
                                             end_line=667, end_column=38,
                                             law_headings=["Secteur logement-foyer",
                                             "Calcul du montant de l'aide personnalisée au logement",
                                             "Déclarations des champs d'application",
                                             "Prologue : aides au logement"]))
    n_nombre_parts_d832_25_base = temp_n_nombre_parts_d832_25_base
    try:
        try:
            try:
                match_arg_5 = residence
                if match_arg_5.code == Collectivite_Code.Guadeloupe:
                    _ = match_arg_5.value
                    temp_n_nombre_parts_d832_25_majoration = True
                elif match_arg_5.code == Collectivite_Code.Guyane:
                    _ = match_arg_5.value
                    temp_n_nombre_parts_d832_25_majoration = True
                elif match_arg_5.code == Collectivite_Code.Martinique:
                    _ = match_arg_5.value
                    temp_n_nombre_parts_d832_25_majoration = True
                elif match_arg_5.code == Collectivite_Code.LaReunion:
                    _ = match_arg_5.value
                    temp_n_nombre_parts_d832_25_majoration = True
                elif match_arg_5.code == Collectivite_Code.SaintBarthelemy:
                    _ = match_arg_5.value
                    temp_n_nombre_parts_d832_25_majoration = False
                elif match_arg_5.code == Collectivite_Code.SaintMartin:
                    _ = match_arg_5.value
                    temp_n_nombre_parts_d832_25_majoration = False
                elif match_arg_5.code == Collectivite_Code.Metropole:
                    _ = match_arg_5.value
                    temp_n_nombre_parts_d832_25_majoration = False
                elif match_arg_5.code == Collectivite_Code.SaintPierreEtMiquelon:
                    _ = match_arg_5.value
                    temp_n_nombre_parts_d832_25_majoration = False
                elif match_arg_5.code == Collectivite_Code.Mayotte:
                    _ = match_arg_5.value
                    temp_n_nombre_parts_d832_25_majoration = True
                if ((nombre_personnes_a_charge > integer_of_string("6")) and
                    temp_n_nombre_parts_d832_25_majoration):
                    temp_n_nombre_parts_d832_25_majoration_1 = decimal_of_string("1.")
                else:
                    temp_n_nombre_parts_d832_25_majoration_1 = dead_value
                    raise EmptyError
            except EmptyError:
                if condition_2_du_832_25_1:
                    if (nombre_personnes_a_charge >
                        integer_of_string("4")):
                        temp_n_nombre_parts_d832_25_majoration_1 = (decimal_of_string("0.5") *
                            decimal_of_integer((nombre_personnes_a_charge -
                            integer_of_string("4"))))
                    else:
                        temp_n_nombre_parts_d832_25_majoration_1 = decimal_of_string("0.")
                else:
                    temp_n_nombre_parts_d832_25_majoration_1 = dead_value
                    raise EmptyError
        except EmptyError:
            if (nombre_personnes_a_charge >
                integer_of_string("4")):
                temp_n_nombre_parts_d832_25_majoration_1 = (decimal_of_string("0.5") *
                    decimal_of_integer((nombre_personnes_a_charge -
                    integer_of_string("4"))))
            else:
                temp_n_nombre_parts_d832_25_majoration_1 = decimal_of_string("0.")
    except EmptyError:
        temp_n_nombre_parts_d832_25_majoration_1 = dead_value
        raise NoValueProvided(SourcePosition(filename="examples/aides_logement/prologue.catala_fr",
                                             start_line=668, start_column=11,
                                             end_line=668, end_column=44,
                                             law_headings=["Secteur logement-foyer",
                                             "Calcul du montant de l'aide personnalisée au logement",
                                             "Déclarations des champs d'application",
                                             "Prologue : aides au logement"]))
    n_nombre_parts_d832_25_majoration = temp_n_nombre_parts_d832_25_majoration_1
    try:
        temp_n_nombre_parts_d832_25 = (n_nombre_parts_d832_25_base +
            n_nombre_parts_d832_25_majoration)
    except EmptyError:
        temp_n_nombre_parts_d832_25 = dead_value
        raise NoValueProvided(SourcePosition(filename="examples/aides_logement/prologue.catala_fr",
                                             start_line=670, start_column=12,
                                             end_line=670, end_column=34,
                                             law_headings=["Secteur logement-foyer",
                                             "Calcul du montant de l'aide personnalisée au logement",
                                             "Déclarations des champs d'application",
                                             "Prologue : aides au logement"]))
    n_nombre_parts_d832_25_1 = temp_n_nombre_parts_d832_25
    return CalculNombrePartLogementFoyer(n_nombre_parts_d832_25 = n_nombre_parts_d832_25_1)

def calcul_nombre_parts_accession_propriete(calcul_nombre_parts_accession_propriete_in:CalculNombrePartsAccessionProprieteIn):
    nombre_personnes_a_charge_1 = calcul_nombre_parts_accession_propriete_in.nombre_personnes_a_charge_in
    situation_familiale_calcul_apl_1 = calcul_nombre_parts_accession_propriete_in.situation_familiale_calcul_apl_in
    try:
        if (nombre_personnes_a_charge_1 ==
            integer_of_string("0")):
            match_arg_6 = situation_familiale_calcul_apl_1
            if match_arg_6.code == SituationFamilialeCalculAPL_Code.PersonneSeule:
                _ = match_arg_6.value
                temp_n_nombre_parts_d832_11 = decimal_of_string("1.4")
            elif match_arg_6.code == SituationFamilialeCalculAPL_Code.Couple:
                _ = match_arg_6.value
                temp_n_nombre_parts_d832_11 = decimal_of_string("1.8")
        else:
            if (nombre_personnes_a_charge_1 ==
                integer_of_string("1")):
                temp_n_nombre_parts_d832_11 = decimal_of_string("2.5")
            else:
                if (nombre_personnes_a_charge_1 ==
                    integer_of_string("2")):
                    temp_n_nombre_parts_d832_11 = decimal_of_string("3.")
                else:
                    if (nombre_personnes_a_charge_1 ==
                        integer_of_string("3")):
                        temp_n_nombre_parts_d832_11 = decimal_of_string("3.7")
                    else:
                        if (nombre_personnes_a_charge_1 ==
                            integer_of_string("4")):
                            temp_n_nombre_parts_d832_11 = decimal_of_string("4.3")
                        else:
                            temp_n_nombre_parts_d832_11 = (decimal_of_string("4.3") +
                                (decimal_of_string("0.5") *
                                decimal_of_integer((nombre_personnes_a_charge_1 -
                                integer_of_string("4")))))
    except EmptyError:
        temp_n_nombre_parts_d832_11 = dead_value
        raise NoValueProvided(SourcePosition(filename="examples/aides_logement/prologue.catala_fr",
                                             start_line=735, start_column=12,
                                             end_line=735, end_column=34,
                                             law_headings=["Secteur accession à la propriété",
                                             "Calcul du montant de l'aide personnalisée au logement",
                                             "Déclarations des champs d'application",
                                             "Prologue : aides au logement"]))
    n_nombre_parts_d832_11 = temp_n_nombre_parts_d832_11
    return CalculNombrePartsAccessionPropriete(n_nombre_parts_d832_11 = n_nombre_parts_d832_11)

def ouverture_droits_retraite(ouverture_droits_retraite_in:OuvertureDroitsRetraiteIn):
    date_naissance_assure = ouverture_droits_retraite_in.date_naissance_assure_in
    try:
        def temp_age_ouverture_droit(_:Unit):
            raise EmptyError
        def temp_age_ouverture_droit_1(_:Unit):
            return False
        def temp_age_ouverture_droit_2(_:Unit):
            if (year_of_date(date_naissance_assure) ==
                integer_of_string("1954")):
                return (duration_of_numbers(61,0,0) +
                    duration_of_numbers(0,7,0))
            else:
                raise EmptyError
        def temp_age_ouverture_droit_3(_:Unit):
            if (year_of_date(date_naissance_assure) ==
                integer_of_string("1953")):
                return (duration_of_numbers(61,0,0) +
                    duration_of_numbers(0,2,0))
            else:
                raise EmptyError
        def temp_age_ouverture_droit_4(_:Unit):
            if (year_of_date(date_naissance_assure) ==
                integer_of_string("1952")):
                return (duration_of_numbers(60,0,0) +
                    duration_of_numbers(0,9,0))
            else:
                raise EmptyError
        def temp_age_ouverture_droit_5(_:Unit):
            if ((date_naissance_assure >= date_of_numbers(1951,7,1)) and
                (date_naissance_assure <=
                date_of_numbers(1951,12,31))):
                return (duration_of_numbers(60,0,0) +
                    duration_of_numbers(0,4,0))
            else:
                raise EmptyError
        def temp_age_ouverture_droit_6(_:Unit):
            if (date_naissance_assure <
                date_of_numbers(1951,7,1)):
                return duration_of_numbers(60,0,0)
            else:
                raise EmptyError
        def temp_age_ouverture_droit_7(_:Unit):
            if (date_naissance_assure >=
                date_of_numbers(1955,1,1)):
                return duration_of_numbers(62,0,0)
            else:
                raise EmptyError
        temp_age_ouverture_droit_8 = handle_default(SourcePosition(filename="examples/aides_logement/prologue.catala_fr",
                                                    start_line=1118,
                                                    start_column=12,
                                                    end_line=1118, end_column=31,
                                                    law_headings=["Date d'ouverture des droits à la retraite",
                                                    "Calcul du montant de l'allocation logement",
                                                    "Prologue : aides au logement"]), [temp_age_ouverture_droit_7,
                                                    temp_age_ouverture_droit_6,
                                                    temp_age_ouverture_droit_5,
                                                    temp_age_ouverture_droit_4,
                                                    temp_age_ouverture_droit_3,
                                                    temp_age_ouverture_droit_2],
                                                    temp_age_ouverture_droit_1,
                                                    temp_age_ouverture_droit)
    except EmptyError:
        temp_age_ouverture_droit_8 = dead_value
        raise NoValueProvided(SourcePosition(filename="examples/aides_logement/prologue.catala_fr",
                                             start_line=1118,
                                             start_column=12, end_line=1118,
                                             end_column=31,
                                             law_headings=["Date d'ouverture des droits à la retraite",
                                             "Calcul du montant de l'allocation logement",
                                             "Prologue : aides au logement"]))
    age_ouverture_droit = temp_age_ouverture_droit_8
    return OuvertureDroitsRetraite(age_ouverture_droit = age_ouverture_droit)

def impaye_depense_logement(impaye_depense_logement_in:ImpayeDepenseLogementIn):
    mode_occupation = impaye_depense_logement_in.mode_occupation_in
    aide_versee = impaye_depense_logement_in.aide_versee_in
    montant_apl = impaye_depense_logement_in.montant_apl_in
    montant_charges = impaye_depense_logement_in.montant_charges_in
    depense_logement = impaye_depense_logement_in.depense_logement_in
    montant_dette = impaye_depense_logement_in.montant_dette_in
    try:
        match_arg_7 = mode_occupation
        if match_arg_7.code == ModeOccupation_Code.Locataire:
            _ = match_arg_7.value
            temp_mode_occupation_impaye = ModeOccupationImpaye(ModeOccupationImpaye_Code.ImpayeLoyer,
                Unit())
        elif match_arg_7.code == ModeOccupation_Code.ResidentLogementFoyer:
            _ = match_arg_7.value
            temp_mode_occupation_impaye = ModeOccupationImpaye(ModeOccupationImpaye_Code.ImpayePret,
                Unit())
        elif match_arg_7.code == ModeOccupation_Code.AccessionProprieteLocalUsageExclusifHabitation:
            _ = match_arg_7.value
            temp_mode_occupation_impaye = ModeOccupationImpaye(ModeOccupationImpaye_Code.ImpayePret,
                Unit())
        elif match_arg_7.code == ModeOccupation_Code.SousLocataire:
            _ = match_arg_7.value
            temp_mode_occupation_impaye = ModeOccupationImpaye(ModeOccupationImpaye_Code.ImpayeLoyer,
                Unit())
        elif match_arg_7.code == ModeOccupation_Code.LocationAccession:
            _ = match_arg_7.value
            temp_mode_occupation_impaye = ModeOccupationImpaye(ModeOccupationImpaye_Code.ImpayeLoyer,
                Unit())
    except EmptyError:
        temp_mode_occupation_impaye = dead_value
        raise NoValueProvided(SourcePosition(filename="examples/aides_logement/prologue.catala_fr",
                                             start_line=1134,
                                             start_column=11, end_line=1134,
                                             end_column=33,
                                             law_headings=["Quantification des impayés de dépense de logement",
                                             "Calcul du montant de l'allocation logement",
                                             "Prologue : aides au logement"]))
    mode_occupation_impaye = temp_mode_occupation_impaye
    try:
        try:
            match_arg_8 = mode_occupation_impaye
            if match_arg_8.code == ModeOccupationImpaye_Code.ImpayeLoyer:
                _ = match_arg_8.value
                temp_depense_logement_brute = False
            elif match_arg_8.code == ModeOccupationImpaye_Code.ImpayePret:
                _ = match_arg_8.value
                temp_depense_logement_brute = True
            if temp_depense_logement_brute:
                temp_depense_logement_brute_1 = depense_logement
            else:
                temp_depense_logement_brute_1 = dead_value
                raise EmptyError
        except EmptyError:
            match_arg_9 = mode_occupation_impaye
            if match_arg_9.code == ModeOccupationImpaye_Code.ImpayeLoyer:
                _ = match_arg_9.value
                temp_depense_logement_brute_2 = True
            elif match_arg_9.code == ModeOccupationImpaye_Code.ImpayePret:
                _ = match_arg_9.value
                temp_depense_logement_brute_2 = False
            if temp_depense_logement_brute_2:
                temp_depense_logement_brute_1 = depense_logement
            else:
                temp_depense_logement_brute_1 = dead_value
                raise EmptyError
    except EmptyError:
        temp_depense_logement_brute_1 = dead_value
        raise NoValueProvided(SourcePosition(filename="examples/aides_logement/prologue.catala_fr",
                                             start_line=1135,
                                             start_column=11, end_line=1135,
                                             end_column=33,
                                             law_headings=["Quantification des impayés de dépense de logement",
                                             "Calcul du montant de l'allocation logement",
                                             "Prologue : aides au logement"]))
    depense_logement_brute = temp_depense_logement_brute_1
    try:
        def temp_depense_logement_nette(_:Unit):
            raise EmptyError
        def temp_depense_logement_nette_1(_:Unit):
            return False
        def temp_depense_logement_nette_2(_:Unit):
            match_arg_10 = mode_occupation_impaye
            if match_arg_10.code == ModeOccupationImpaye_Code.ImpayeLoyer:
                _ = match_arg_10.value
                temp_depense_logement_nette_3 = False
            elif match_arg_10.code == ModeOccupationImpaye_Code.ImpayePret:
                _ = match_arg_10.value
                temp_depense_logement_nette_3 = True
            if temp_depense_logement_nette_3:
                match_arg_11 = depense_logement
                if match_arg_11.code == DepenseLogement_Code.TotalAnnuelEcheances:
                    total_echeances = match_arg_11.value
                    return DepenseLogement(DepenseLogement_Code.TotalAnnuelEcheances,
                        (total_echeances - (montant_apl *
                        decimal_of_string("12."))))
                elif match_arg_11.code == DepenseLogement_Code.Mensualite:
                    mensualite = match_arg_11.value
                    return DepenseLogement(DepenseLogement_Code.Mensualite,
                        (mensualite - montant_apl))
                elif match_arg_11.code == DepenseLogement_Code.Loyer:
                    loyer = match_arg_11.value
                    return DepenseLogement(DepenseLogement_Code.Loyer, loyer)
            else:
                raise EmptyError
        def temp_depense_logement_nette_4(_:Unit):
            match_arg_12 = mode_occupation_impaye
            if match_arg_12.code == ModeOccupationImpaye_Code.ImpayeLoyer:
                _ = match_arg_12.value
                temp_depense_logement_nette_5 = True
            elif match_arg_12.code == ModeOccupationImpaye_Code.ImpayePret:
                _ = match_arg_12.value
                temp_depense_logement_nette_5 = False
            if temp_depense_logement_nette_5:
                match_arg_13 = depense_logement_brute
                if match_arg_13.code == DepenseLogement_Code.TotalAnnuelEcheances:
                    total = match_arg_13.value
                    return DepenseLogement(DepenseLogement_Code.TotalAnnuelEcheances,
                        total)
                elif match_arg_13.code == DepenseLogement_Code.Mensualite:
                    mensualite_1 = match_arg_13.value
                    return DepenseLogement(DepenseLogement_Code.Mensualite,
                        mensualite_1)
                elif match_arg_13.code == DepenseLogement_Code.Loyer:
                    montant_loyer = match_arg_13.value
                    return DepenseLogement(DepenseLogement_Code.Loyer,
                        (montant_loyer - montant_apl))
            else:
                raise EmptyError
        temp_depense_logement_nette_6 = handle_default(SourcePosition(filename="examples/aides_logement/prologue.catala_fr",
                                                       start_line=1136,
                                                       start_column=11,
                                                       end_line=1136, end_column=33,
                                                       law_headings=["Quantification des impayés de dépense de logement",
                                                       "Calcul du montant de l'allocation logement",
                                                       "Prologue : aides au logement"]), [temp_depense_logement_nette_4,
                                                       temp_depense_logement_nette_2],
                                                       temp_depense_logement_nette_1,
                                                       temp_depense_logement_nette)
    except EmptyError:
        temp_depense_logement_nette_6 = dead_value
        raise NoValueProvided(SourcePosition(filename="examples/aides_logement/prologue.catala_fr",
                                             start_line=1136,
                                             start_column=11, end_line=1136,
                                             end_column=33,
                                             law_headings=["Quantification des impayés de dépense de logement",
                                             "Calcul du montant de l'allocation logement",
                                             "Prologue : aides au logement"]))
    depense_logement_nette = temp_depense_logement_nette_6
    try:
        def temp_seuil_impaye_depense_de_logement(_:Unit):
            raise EmptyError
        def temp_seuil_impaye_depense_de_logement_1(_:Unit):
            return False
        def temp_seuil_impaye_depense_de_logement_2(_:Unit):
            match_arg_14 = aide_versee
            if match_arg_14.code == VersementA_Code.Bailleur:
                _ = match_arg_14.value
                temp_seuil_impaye_depense_de_logement_3 = False
            elif match_arg_14.code == VersementA_Code.Beneficiaire:
                _ = match_arg_14.value
                temp_seuil_impaye_depense_de_logement_3 = False
            elif match_arg_14.code == VersementA_Code.EtablissementHabilite:
                _ = match_arg_14.value
                temp_seuil_impaye_depense_de_logement_3 = True
            match_arg_15 = mode_occupation_impaye
            if match_arg_15.code == ModeOccupationImpaye_Code.ImpayeLoyer:
                _ = match_arg_15.value
                temp_seuil_impaye_depense_de_logement_4 = False
            elif match_arg_15.code == ModeOccupationImpaye_Code.ImpayePret:
                _ = match_arg_15.value
                temp_seuil_impaye_depense_de_logement_4 = True
            if (temp_seuil_impaye_depense_de_logement_4 and
                temp_seuil_impaye_depense_de_logement_3):
                match_arg_16 = depense_logement_nette
                if match_arg_16.code == DepenseLogement_Code.TotalAnnuelEcheances:
                    echeance_pret_nette = match_arg_16.value
                    return (echeance_pret_nette * (decimal_of_string("1.") /
                        decimal_of_string("6.")))
                elif match_arg_16.code == DepenseLogement_Code.Mensualite:
                    mensualite_nette = match_arg_16.value
                    return (mensualite_nette * decimal_of_string("2."))
                elif match_arg_16.code == DepenseLogement_Code.Loyer:
                    _ = match_arg_16.value
                    return money_of_cents_string("0")
            else:
                raise EmptyError
        def temp_seuil_impaye_depense_de_logement_5(_:Unit):
            match_arg_17 = aide_versee
            if match_arg_17.code == VersementA_Code.Bailleur:
                _ = match_arg_17.value
                temp_seuil_impaye_depense_de_logement_6 = False
            elif match_arg_17.code == VersementA_Code.Beneficiaire:
                _ = match_arg_17.value
                temp_seuil_impaye_depense_de_logement_6 = True
            elif match_arg_17.code == VersementA_Code.EtablissementHabilite:
                _ = match_arg_17.value
                temp_seuil_impaye_depense_de_logement_6 = False
            match_arg_18 = mode_occupation_impaye
            if match_arg_18.code == ModeOccupationImpaye_Code.ImpayeLoyer:
                _ = match_arg_18.value
                temp_seuil_impaye_depense_de_logement_7 = False
            elif match_arg_18.code == ModeOccupationImpaye_Code.ImpayePret:
                _ = match_arg_18.value
                temp_seuil_impaye_depense_de_logement_7 = True
            if (temp_seuil_impaye_depense_de_logement_7 and
                temp_seuil_impaye_depense_de_logement_6):
                match_arg_19 = depense_logement_brute
                if match_arg_19.code == DepenseLogement_Code.TotalAnnuelEcheances:
                    echeance_pret_brute = match_arg_19.value
                    return (echeance_pret_brute * (decimal_of_string("1.") /
                        decimal_of_string("6.")))
                elif match_arg_19.code == DepenseLogement_Code.Mensualite:
                    mensualite_brute = match_arg_19.value
                    return (mensualite_brute * decimal_of_string("2."))
                elif match_arg_19.code == DepenseLogement_Code.Loyer:
                    _ = match_arg_19.value
                    return money_of_cents_string("0")
            else:
                raise EmptyError
        def temp_seuil_impaye_depense_de_logement_8(_:Unit):
            match_arg_20 = aide_versee
            if match_arg_20.code == VersementA_Code.Bailleur:
                _ = match_arg_20.value
                temp_seuil_impaye_depense_de_logement_9 = True
            elif match_arg_20.code == VersementA_Code.Beneficiaire:
                _ = match_arg_20.value
                temp_seuil_impaye_depense_de_logement_9 = False
            elif match_arg_20.code == VersementA_Code.EtablissementHabilite:
                _ = match_arg_20.value
                temp_seuil_impaye_depense_de_logement_9 = False
            match_arg_21 = mode_occupation_impaye
            if match_arg_21.code == ModeOccupationImpaye_Code.ImpayeLoyer:
                _ = match_arg_21.value
                temp_seuil_impaye_depense_de_logement_10 = True
            elif match_arg_21.code == ModeOccupationImpaye_Code.ImpayePret:
                _ = match_arg_21.value
                temp_seuil_impaye_depense_de_logement_10 = False
            if (temp_seuil_impaye_depense_de_logement_10 and
                temp_seuil_impaye_depense_de_logement_9):
                match_arg_22 = depense_logement_nette
                if match_arg_22.code == DepenseLogement_Code.TotalAnnuelEcheances:
                    _ = match_arg_22.value
                    return money_of_cents_string("0")
                elif match_arg_22.code == DepenseLogement_Code.Mensualite:
                    _ = match_arg_22.value
                    return money_of_cents_string("0")
                elif match_arg_22.code == DepenseLogement_Code.Loyer:
                    loyer_net = match_arg_22.value
                    return ((loyer_net + montant_charges) *
                        decimal_of_string("2."))
            else:
                raise EmptyError
        def temp_seuil_impaye_depense_de_logement_11(_:Unit):
            match_arg_23 = aide_versee
            if match_arg_23.code == VersementA_Code.Bailleur:
                _ = match_arg_23.value
                temp_seuil_impaye_depense_de_logement_12 = False
            elif match_arg_23.code == VersementA_Code.Beneficiaire:
                _ = match_arg_23.value
                temp_seuil_impaye_depense_de_logement_12 = True
            elif match_arg_23.code == VersementA_Code.EtablissementHabilite:
                _ = match_arg_23.value
                temp_seuil_impaye_depense_de_logement_12 = False
            match_arg_24 = mode_occupation_impaye
            if match_arg_24.code == ModeOccupationImpaye_Code.ImpayeLoyer:
                _ = match_arg_24.value
                temp_seuil_impaye_depense_de_logement_13 = True
            elif match_arg_24.code == ModeOccupationImpaye_Code.ImpayePret:
                _ = match_arg_24.value
                temp_seuil_impaye_depense_de_logement_13 = False
            if (temp_seuil_impaye_depense_de_logement_13 and
                temp_seuil_impaye_depense_de_logement_12):
                match_arg_25 = depense_logement_brute
                if match_arg_25.code == DepenseLogement_Code.TotalAnnuelEcheances:
                    _ = match_arg_25.value
                    return money_of_cents_string("0")
                elif match_arg_25.code == DepenseLogement_Code.Mensualite:
                    _ = match_arg_25.value
                    return money_of_cents_string("0")
                elif match_arg_25.code == DepenseLogement_Code.Loyer:
                    loyer_brut = match_arg_25.value
                    return ((loyer_brut + montant_charges) *
                        decimal_of_string("2."))
            else:
                raise EmptyError
        temp_seuil_impaye_depense_de_logement_14 = handle_default(SourcePosition(filename="examples/aides_logement/prologue.catala_fr",
                                                                  start_line=1133,
                                                                  start_column=11,
                                                                  end_line=1133, end_column=43,
                                                                  law_headings=["Quantification des impayés de dépense de logement",
                                                                  "Calcul du montant de l'allocation logement",
                                                                  "Prologue : aides au logement"]), [temp_seuil_impaye_depense_de_logement_11,
                                                                  temp_seuil_impaye_depense_de_logement_8,
                                                                  temp_seuil_impaye_depense_de_logement_5,
                                                                  temp_seuil_impaye_depense_de_logement_2],
                                                                  temp_seuil_impaye_depense_de_logement_1,
                                                                  temp_seuil_impaye_depense_de_logement)
    except EmptyError:
        temp_seuil_impaye_depense_de_logement_14 = dead_value
        raise NoValueProvided(SourcePosition(filename="examples/aides_logement/prologue.catala_fr",
                                             start_line=1133,
                                             start_column=11, end_line=1133,
                                             end_column=43,
                                             law_headings=["Quantification des impayés de dépense de logement",
                                             "Calcul du montant de l'allocation logement",
                                             "Prologue : aides au logement"]))
    seuil_impaye_depense_de_logement = temp_seuil_impaye_depense_de_logement_14
    try:
        try:
            match_arg_26 = mode_occupation_impaye
            if match_arg_26.code == ModeOccupationImpaye_Code.ImpayeLoyer:
                _ = match_arg_26.value
                temp_montant_impaye = False
            elif match_arg_26.code == ModeOccupationImpaye_Code.ImpayePret:
                _ = match_arg_26.value
                temp_montant_impaye = True
            if temp_montant_impaye:
                if (montant_dette >=
                    seuil_impaye_depense_de_logement):
                    temp_montant_impaye_1 = montant_dette
                else:
                    temp_montant_impaye_1 = money_of_cents_string("0")
            else:
                temp_montant_impaye_1 = dead_value
                raise EmptyError
        except EmptyError:
            match_arg_27 = mode_occupation_impaye
            if match_arg_27.code == ModeOccupationImpaye_Code.ImpayeLoyer:
                _ = match_arg_27.value
                temp_montant_impaye_2 = True
            elif match_arg_27.code == ModeOccupationImpaye_Code.ImpayePret:
                _ = match_arg_27.value
                temp_montant_impaye_2 = False
            if temp_montant_impaye_2:
                if (montant_dette >=
                    seuil_impaye_depense_de_logement):
                    temp_montant_impaye_1 = montant_dette
                else:
                    temp_montant_impaye_1 = money_of_cents_string("0")
            else:
                temp_montant_impaye_1 = dead_value
                raise EmptyError
    except EmptyError:
        temp_montant_impaye_1 = dead_value
        raise NoValueProvided(SourcePosition(filename="examples/aides_logement/prologue.catala_fr",
                                             start_line=1138,
                                             start_column=12, end_line=1138,
                                             end_column=26,
                                             law_headings=["Quantification des impayés de dépense de logement",
                                             "Calcul du montant de l'allocation logement",
                                             "Prologue : aides au logement"]))
    montant_impaye = temp_montant_impaye_1
    return ImpayeDepenseLogement(montant_impaye = montant_impaye)

def base_mensuelle_allocations_familiales(base_mensuelle_allocations_familiales_in:BaseMensuelleAllocationsFamilialesIn):
    date_courante_2 = base_mensuelle_allocations_familiales_in.date_courante_in
    try:
        def temp_montant_6(_:Unit):
            raise EmptyError
        def temp_montant_7(_:Unit):
            return False
        def temp_montant_8(_:Unit):
            if (date_courante_2 >=
                date_of_numbers(2022,4,1)):
                return money_of_cents_string("42228")
            else:
                raise EmptyError
        def temp_montant_9(_:Unit):
            if ((date_courante_2 >= date_of_numbers(2021,4,1)) and
                (date_courante_2 <
                date_of_numbers(2022,4,1))):
                return money_of_cents_string("41481")
            else:
                raise EmptyError
        def temp_montant_10(_:Unit):
            if ((date_courante_2 >= date_of_numbers(2020,4,1)) and
                (date_courante_2 <
                date_of_numbers(2021,4,1))):
                return money_of_cents_string("41440")
            else:
                raise EmptyError
        def temp_montant_11(_:Unit):
            if ((date_courante_2 >= date_of_numbers(2019,4,1)) and
                (date_courante_2 <
                date_of_numbers(2020,4,1))):
                return money_of_cents_string("41316")
            else:
                raise EmptyError
        temp_montant_12 = handle_default(SourcePosition(filename="examples/aides_logement/../base_mensuelle_allocations_familiales/bmaf.catala_fr",
                                         start_line=6, start_column=12,
                                         end_line=6, end_column=19,
                                         law_headings=["Montant de la base mensuelle des allocations familiales"]), [temp_montant_11,
                                         temp_montant_10, temp_montant_9,
                                         temp_montant_8], temp_montant_7,
                                         temp_montant_6)
    except EmptyError:
        temp_montant_12 = dead_value
        raise NoValueProvided(SourcePosition(filename="examples/aides_logement/../base_mensuelle_allocations_familiales/bmaf.catala_fr",
                                             start_line=6, start_column=12,
                                             end_line=6, end_column=19,
                                             law_headings=["Montant de la base mensuelle des allocations familiales"]))
    montant_2 = temp_montant_12
    try:
        temp___2 = (date_courante_2 >= date_of_numbers(2019,4,1))
    except EmptyError:
        temp___2 = dead_value
        raise NoValueProvided(SourcePosition(filename="examples/aides_logement/../base_mensuelle_allocations_familiales/bmaf.catala_fr",
                                             start_line=10, start_column=13,
                                             end_line=10, end_column=42,
                                             law_headings=["Montant de la base mensuelle des allocations familiales"]))
    if not (temp___2):
        raise AssertionFailure(SourcePosition(filename="examples/aides_logement/../base_mensuelle_allocations_familiales/bmaf.catala_fr",
                                              start_line=10, start_column=13,
                                              end_line=10, end_column=42,
                                              law_headings=["Montant de la base mensuelle des allocations familiales"]))
    return BaseMensuelleAllocationsFamiliales(montant = montant_2)

def verification_age_inferieur_ou_egal_a(verification_age_inferieur_ou_egal_a_in:VerificationAgeInferieurOuEgalAIn):
    date_naissance = verification_age_inferieur_ou_egal_a_in.date_naissance_in
    date_courante_3 = verification_age_inferieur_ou_egal_a_in.date_courante_in
    annees = verification_age_inferieur_ou_egal_a_in.annees_in
    try:
        temp_est_inferieur_ou_egal = ((date_naissance + annees) <=
            date_courante_3)
    except EmptyError:
        temp_est_inferieur_ou_egal = dead_value
        raise NoValueProvided(SourcePosition(filename="examples/aides_logement/../prestations_familiales/../smic/../prologue_france/prologue.catala_fr",
                                             start_line=22, start_column=12,
                                             end_line=22, end_column=33,
                                             law_headings=["Prologue",
                                             "Montant du salaire minimum de croissance"]))
    est_inferieur_ou_egal = temp_est_inferieur_ou_egal
    return VerificationAgeInferieurOuEgalA(est_inferieur_ou_egal = est_inferieur_ou_egal)

def verification_age_superieur_a(verification_age_superieur_a_in:VerificationAgeSuperieurAIn):
    date_naissance_1 = verification_age_superieur_a_in.date_naissance_in
    date_courante_4 = verification_age_superieur_a_in.date_courante_in
    annees_1 = verification_age_superieur_a_in.annees_in
    try:
        temp_est_superieur = ((date_naissance_1 + annees_1) >
            date_courante_4)
    except EmptyError:
        temp_est_superieur = dead_value
        raise NoValueProvided(SourcePosition(filename="examples/aides_logement/../prestations_familiales/../smic/../prologue_france/prologue.catala_fr",
                                             start_line=33, start_column=12,
                                             end_line=33, end_column=25,
                                             law_headings=["Prologue",
                                             "Montant du salaire minimum de croissance"]))
    est_superieur = temp_est_superieur
    return VerificationAgeSuperieurA(est_superieur = est_superieur)

def smic(smic_in:SmicIn):
    date_courante_5 = smic_in.date_courante_in
    residence_1 = smic_in.residence_in
    try:
        def temp_brut_horaire(_:Unit):
            raise EmptyError
        def temp_brut_horaire_1(_:Unit):
            return False
        def temp_brut_horaire_2(_:Unit):
            if ((date_courante_5 >= date_of_numbers(2023,1,1)) and
                (residence_1 == Collectivite(Collectivite_Code.Mayotte,
                Unit()))):
                return money_of_cents_string("851")
            else:
                raise EmptyError
        def temp_brut_horaire_3(_:Unit):
            if ((date_courante_5 >= date_of_numbers(2023,1,1)) and
                ((residence_1 == Collectivite(Collectivite_Code.Metropole,
                Unit())) or ((residence_1 ==
                Collectivite(Collectivite_Code.Guadeloupe, Unit())) or
                ((residence_1 == Collectivite(Collectivite_Code.Guyane,
                Unit())) or ((residence_1 ==
                Collectivite(Collectivite_Code.Martinique, Unit())) or
                ((residence_1 == Collectivite(Collectivite_Code.LaReunion,
                Unit())) or ((residence_1 ==
                Collectivite(Collectivite_Code.SaintBarthelemy, Unit())) or
                ((residence_1 == Collectivite(Collectivite_Code.SaintMartin,
                Unit())) or (residence_1 ==
                Collectivite(Collectivite_Code.SaintPierreEtMiquelon,
                Unit())))))))))):
                return money_of_cents_string("1127")
            else:
                raise EmptyError
        def temp_brut_horaire_4(_:Unit):
            if ((date_courante_5 >= date_of_numbers(2022,8,1)) and
                ((date_courante_5 <= date_of_numbers(2022,12,31)) and
                (residence_1 == Collectivite(Collectivite_Code.Mayotte,
                Unit())))):
                return money_of_cents_string("835")
            else:
                raise EmptyError
        def temp_brut_horaire_5(_:Unit):
            if ((date_courante_5 >= date_of_numbers(2022,8,1)) and
                ((date_courante_5 <= date_of_numbers(2022,12,31)) and
                ((residence_1 == Collectivite(Collectivite_Code.Metropole,
                Unit())) or ((residence_1 ==
                Collectivite(Collectivite_Code.Guadeloupe, Unit())) or
                ((residence_1 == Collectivite(Collectivite_Code.Guyane,
                Unit())) or ((residence_1 ==
                Collectivite(Collectivite_Code.Martinique, Unit())) or
                ((residence_1 == Collectivite(Collectivite_Code.LaReunion,
                Unit())) or ((residence_1 ==
                Collectivite(Collectivite_Code.SaintBarthelemy, Unit())) or
                ((residence_1 == Collectivite(Collectivite_Code.SaintMartin,
                Unit())) or (residence_1 ==
                Collectivite(Collectivite_Code.SaintPierreEtMiquelon,
                Unit()))))))))))):
                return money_of_cents_string("1107")
            else:
                raise EmptyError
        def temp_brut_horaire_6(_:Unit):
            if ((date_courante_5 >= date_of_numbers(2022,5,1)) and
                ((date_courante_5 <= date_of_numbers(2022,7,31)) and
                (residence_1 == Collectivite(Collectivite_Code.Mayotte,
                Unit())))):
                return money_of_cents_string("819")
            else:
                raise EmptyError
        def temp_brut_horaire_7(_:Unit):
            if ((date_courante_5 >= date_of_numbers(2022,5,1)) and
                ((date_courante_5 <= date_of_numbers(2022,7,31)) and
                ((residence_1 == Collectivite(Collectivite_Code.Metropole,
                Unit())) or ((residence_1 ==
                Collectivite(Collectivite_Code.Guadeloupe, Unit())) or
                ((residence_1 == Collectivite(Collectivite_Code.Guyane,
                Unit())) or ((residence_1 ==
                Collectivite(Collectivite_Code.Martinique, Unit())) or
                ((residence_1 == Collectivite(Collectivite_Code.LaReunion,
                Unit())) or ((residence_1 ==
                Collectivite(Collectivite_Code.SaintBarthelemy, Unit())) or
                ((residence_1 == Collectivite(Collectivite_Code.SaintMartin,
                Unit())) or (residence_1 ==
                Collectivite(Collectivite_Code.SaintPierreEtMiquelon,
                Unit()))))))))))):
                return money_of_cents_string("1085")
            else:
                raise EmptyError
        def temp_brut_horaire_8(_:Unit):
            if ((date_courante_5 >= date_of_numbers(2022,1,1)) and
                ((date_courante_5 <= date_of_numbers(2022,4,30)) and
                (residence_1 == Collectivite(Collectivite_Code.Mayotte,
                Unit())))):
                return money_of_cents_string("798")
            else:
                raise EmptyError
        def temp_brut_horaire_9(_:Unit):
            if ((date_courante_5 >= date_of_numbers(2022,1,1)) and
                ((date_courante_5 <= date_of_numbers(2022,4,30)) and
                ((residence_1 == Collectivite(Collectivite_Code.Metropole,
                Unit())) or ((residence_1 ==
                Collectivite(Collectivite_Code.Guadeloupe, Unit())) or
                ((residence_1 == Collectivite(Collectivite_Code.Guyane,
                Unit())) or ((residence_1 ==
                Collectivite(Collectivite_Code.Martinique, Unit())) or
                ((residence_1 == Collectivite(Collectivite_Code.LaReunion,
                Unit())) or ((residence_1 ==
                Collectivite(Collectivite_Code.SaintBarthelemy, Unit())) or
                ((residence_1 == Collectivite(Collectivite_Code.SaintMartin,
                Unit())) or (residence_1 ==
                Collectivite(Collectivite_Code.SaintPierreEtMiquelon,
                Unit()))))))))))):
                return money_of_cents_string("1057")
            else:
                raise EmptyError
        def temp_brut_horaire_10(_:Unit):
            if ((date_courante_5 >= date_of_numbers(2021,1,1)) and
                ((date_courante_5 <= date_of_numbers(2021,12,31)) and
                (residence_1 == Collectivite(Collectivite_Code.Mayotte,
                Unit())))):
                return money_of_cents_string("774")
            else:
                raise EmptyError
        def temp_brut_horaire_11(_:Unit):
            if ((date_courante_5 >= date_of_numbers(2021,1,1)) and
                ((date_courante_5 <= date_of_numbers(2021,12,31)) and
                ((residence_1 == Collectivite(Collectivite_Code.Metropole,
                Unit())) or ((residence_1 ==
                Collectivite(Collectivite_Code.Guadeloupe, Unit())) or
                ((residence_1 == Collectivite(Collectivite_Code.Guyane,
                Unit())) or ((residence_1 ==
                Collectivite(Collectivite_Code.Martinique, Unit())) or
                ((residence_1 == Collectivite(Collectivite_Code.LaReunion,
                Unit())) or ((residence_1 ==
                Collectivite(Collectivite_Code.SaintBarthelemy, Unit())) or
                ((residence_1 == Collectivite(Collectivite_Code.SaintMartin,
                Unit())) or (residence_1 ==
                Collectivite(Collectivite_Code.SaintPierreEtMiquelon,
                Unit()))))))))))):
                return money_of_cents_string("1025")
            else:
                raise EmptyError
        def temp_brut_horaire_12(_:Unit):
            if ((date_courante_5 >= date_of_numbers(2020,1,1)) and
                ((date_courante_5 <= date_of_numbers(2020,12,31)) and
                (residence_1 == Collectivite(Collectivite_Code.Mayotte,
                Unit())))):
                return money_of_cents_string("766")
            else:
                raise EmptyError
        def temp_brut_horaire_13(_:Unit):
            if ((date_courante_5 >= date_of_numbers(2020,1,1)) and
                ((date_courante_5 <= date_of_numbers(2020,12,31)) and
                ((residence_1 == Collectivite(Collectivite_Code.Metropole,
                Unit())) or ((residence_1 ==
                Collectivite(Collectivite_Code.Guadeloupe, Unit())) or
                ((residence_1 == Collectivite(Collectivite_Code.Guyane,
                Unit())) or ((residence_1 ==
                Collectivite(Collectivite_Code.Martinique, Unit())) or
                ((residence_1 == Collectivite(Collectivite_Code.LaReunion,
                Unit())) or ((residence_1 ==
                Collectivite(Collectivite_Code.SaintBarthelemy, Unit())) or
                ((residence_1 == Collectivite(Collectivite_Code.SaintMartin,
                Unit())) or (residence_1 ==
                Collectivite(Collectivite_Code.SaintPierreEtMiquelon,
                Unit()))))))))))):
                return money_of_cents_string("1015")
            else:
                raise EmptyError
        def temp_brut_horaire_14(_:Unit):
            if ((date_courante_5 >= date_of_numbers(2019,1,1)) and
                ((date_courante_5 <= date_of_numbers(2019,12,31)) and
                (residence_1 == Collectivite(Collectivite_Code.Mayotte,
                Unit())))):
                return money_of_cents_string("757")
            else:
                raise EmptyError
        def temp_brut_horaire_15(_:Unit):
            if ((date_courante_5 >= date_of_numbers(2019,1,1)) and
                ((date_courante_5 <= date_of_numbers(2019,12,31)) and
                ((residence_1 == Collectivite(Collectivite_Code.Metropole,
                Unit())) or ((residence_1 ==
                Collectivite(Collectivite_Code.Guadeloupe, Unit())) or
                ((residence_1 == Collectivite(Collectivite_Code.Guyane,
                Unit())) or ((residence_1 ==
                Collectivite(Collectivite_Code.Martinique, Unit())) or
                ((residence_1 == Collectivite(Collectivite_Code.LaReunion,
                Unit())) or ((residence_1 ==
                Collectivite(Collectivite_Code.SaintBarthelemy, Unit())) or
                ((residence_1 == Collectivite(Collectivite_Code.SaintMartin,
                Unit())) or (residence_1 ==
                Collectivite(Collectivite_Code.SaintPierreEtMiquelon,
                Unit()))))))))))):
                return money_of_cents_string("1003")
            else:
                raise EmptyError
        temp_brut_horaire_16 = handle_default(SourcePosition(filename="examples/aides_logement/../prestations_familiales/../smic/smic.catala_fr",
                                              start_line=11, start_column=12,
                                              end_line=11, end_column=24,
                                              law_headings=["Prologue",
                                              "Montant du salaire minimum de croissance"]), [temp_brut_horaire_15,
                                              temp_brut_horaire_14,
                                              temp_brut_horaire_13,
                                              temp_brut_horaire_12,
                                              temp_brut_horaire_11,
                                              temp_brut_horaire_10,
                                              temp_brut_horaire_9,
                                              temp_brut_horaire_8,
                                              temp_brut_horaire_7,
                                              temp_brut_horaire_6,
                                              temp_brut_horaire_5,
                                              temp_brut_horaire_4,
                                              temp_brut_horaire_3,
                                              temp_brut_horaire_2],
                                              temp_brut_horaire_1,
                                              temp_brut_horaire)
    except EmptyError:
        temp_brut_horaire_16 = dead_value
        raise NoValueProvided(SourcePosition(filename="examples/aides_logement/../prestations_familiales/../smic/smic.catala_fr",
                                             start_line=11, start_column=12,
                                             end_line=11, end_column=24,
                                             law_headings=["Prologue",
                                             "Montant du salaire minimum de croissance"]))
    brut_horaire = temp_brut_horaire_16
    try:
        temp___3 = (date_courante_5 >= date_of_numbers(2019,1,1))
    except EmptyError:
        temp___3 = dead_value
        raise NoValueProvided(SourcePosition(filename="examples/aides_logement/../prestations_familiales/../smic/smic.catala_fr",
                                             start_line=16, start_column=13,
                                             end_line=16, end_column=42,
                                             law_headings=["Prologue",
                                             "Montant du salaire minimum de croissance"]))
    if not (temp___3):
        raise AssertionFailure(SourcePosition(filename="examples/aides_logement/../prestations_familiales/../smic/smic.catala_fr",
                                              start_line=16, start_column=13,
                                              end_line=16, end_column=42,
                                              law_headings=["Prologue",
                                                           "Montant du salaire minimum de croissance"]))
    return Smic(brut_horaire = brut_horaire)

def arrondi_centaine_superieure(ressources_menage:Money):
    return (money_round(((ressources_menage * decimal_of_string("0.01")) +
        money_of_cents_string("49"))) * decimal_of_string("100."))

def traitement_nul_tout_le_temps(aide_finale_1:Money):
    return money_of_cents_string("0")

def calcul_aide_personnalisee_logement_locatif(calcul_aide_personnalisee_logement_locatif_in:CalculAidePersonnaliseeLogementLocatifIn):
    loyer_principal_base = calcul_aide_personnalisee_logement_locatif_in.loyer_principal_base_in
    ressources_menage_arrondies_1 = calcul_aide_personnalisee_logement_locatif_in.ressources_menage_arrondies_in
    beneficiaire_aide_adulte_ou_enfant_handicapes = calcul_aide_personnalisee_logement_locatif_in.beneficiaire_aide_adulte_ou_enfant_handicapes_in
    date_courante_6 = calcul_aide_personnalisee_logement_locatif_in.date_courante_in
    nombre_personnes_a_charge_2 = calcul_aide_personnalisee_logement_locatif_in.nombre_personnes_a_charge_in
    situation_familiale_calcul_apl_2 = calcul_aide_personnalisee_logement_locatif_in.situation_familiale_calcul_apl_in
    zone = calcul_aide_personnalisee_logement_locatif_in.zone_in
    logement_est_chambre = calcul_aide_personnalisee_logement_locatif_in.logement_est_chambre_in
    agees_ou_handicap_adultes_hebergees_onereux_particuliers = calcul_aide_personnalisee_logement_locatif_in.agees_ou_handicap_adultes_hebergees_onereux_particuliers_in
    type_aide = calcul_aide_personnalisee_logement_locatif_in.type_aide_in
    colocation = calcul_aide_personnalisee_logement_locatif_in.colocation_in
    reduction_loyer_solidarite = calcul_aide_personnalisee_logement_locatif_in.reduction_loyer_solidarite_in
    logement_meuble_d842_2 = calcul_aide_personnalisee_logement_locatif_in.logement_meuble_d842_2_in
    residence_2 = calcul_aide_personnalisee_logement_locatif_in.residence_in
    try:
        temp_fraction_l832_3 = decimal_of_string("0.98")
    except EmptyError:
        temp_fraction_l832_3 = dead_value
        raise NoValueProvided(SourcePosition(filename="examples/aides_logement/prologue.catala_fr",
                                             start_line=597, start_column=11,
                                             end_line=597, end_column=26,
                                             law_headings=["Secteur locatif",
                                             "Calcul du montant de l'aide personnalisée au logement",
                                             "Déclarations des champs d'application",
                                             "Prologue : aides au logement"]))
    fraction_l832_3 = temp_fraction_l832_3
    try:
        temp_contributions_sociales_dot_date_courante = date_courante_6
    except EmptyError:
        temp_contributions_sociales_dot_date_courante = dead_value
        raise NoValueProvided(SourcePosition(filename="examples/aides_logement/prologue.catala_fr",
                                             start_line=629, start_column=14,
                                             end_line=629, end_column=50,
                                             law_headings=["Secteur locatif",
                                             "Calcul du montant de l'aide personnalisée au logement",
                                             "Déclarations des champs d'application",
                                             "Prologue : aides au logement"]))
    contributions_sociales_dot_date_courante = temp_contributions_sociales_dot_date_courante
    result = contributions_sociales_aides_personnelle_logement(ContributionsSocialesAidesPersonnelleLogementIn(date_courante_in = contributions_sociales_dot_date_courante))
    contributions_sociales_dot_montant = result.montant
    try:
        if (date_courante_6 >=
            date_of_numbers(2019,10,1)):
            temp_montant_forfaitaire_d823_16 = money_of_cents_string("500")
        else:
            temp_montant_forfaitaire_d823_16 = dead_value
            raise EmptyError
    except EmptyError:
        temp_montant_forfaitaire_d823_16 = dead_value
        raise NoValueProvided(SourcePosition(filename="examples/aides_logement/prologue.catala_fr",
                                             start_line=600, start_column=11,
                                             end_line=600, end_column=38,
                                             law_headings=["Secteur locatif",
                                             "Calcul du montant de l'aide personnalisée au logement",
                                             "Déclarations des champs d'application",
                                             "Prologue : aides au logement"]))
    montant_forfaitaire_d823_16 = temp_montant_forfaitaire_d823_16
    try:
        try:
            try:
                if ((date_courante_6 < date_of_numbers(2021,10,1)) and
                    (date_courante_6 >=
                    date_of_numbers(2020,10,1))):
                    temp_multiplicateur_majoration_charges_d823_16 = decimal_of_integer(nombre_personnes_a_charge_2)
                else:
                    temp_multiplicateur_majoration_charges_d823_16 = dead_value
                    raise EmptyError
            except EmptyError:
                if ((date_courante_6 >= date_of_numbers(2021,10,1)) and
                    (date_courante_6 <
                    date_of_numbers(2022,7,1))):
                    temp_multiplicateur_majoration_charges_d823_16 = decimal_of_integer(nombre_personnes_a_charge_2)
                else:
                    temp_multiplicateur_majoration_charges_d823_16 = dead_value
                    raise EmptyError
        except EmptyError:
            if (date_courante_6 >=
                date_of_numbers(2022,7,1)):
                temp_multiplicateur_majoration_charges_d823_16 = decimal_of_integer(nombre_personnes_a_charge_2)
            else:
                temp_multiplicateur_majoration_charges_d823_16 = dead_value
                raise EmptyError
    except EmptyError:
        temp_multiplicateur_majoration_charges_d823_16 = dead_value
        raise NoValueProvided(SourcePosition(filename="examples/aides_logement/prologue.catala_fr",
                                             start_line=605, start_column=11,
                                             end_line=605, end_column=52,
                                             law_headings=["Secteur locatif",
                                             "Calcul du montant de l'aide personnalisée au logement",
                                             "Déclarations des champs d'application",
                                             "Prologue : aides au logement"]))
    multiplicateur_majoration_charges_d823_16 = temp_multiplicateur_majoration_charges_d823_16
    try:
        if (date_courante_6 >=
            date_of_numbers(2019,10,1)):
            match_arg_28 = type_aide
            if match_arg_28.code == TypeAidesPersonnelleLogement_Code.AidePersonnaliseeLogement:
                _ = match_arg_28.value
                temp_montant_minimal_aide_d823_16 = money_of_cents_string("0")
            elif match_arg_28.code == TypeAidesPersonnelleLogement_Code.AllocationLogementFamiliale:
                _ = match_arg_28.value
                temp_montant_minimal_aide_d823_16 = money_of_cents_string("1000")
            elif match_arg_28.code == TypeAidesPersonnelleLogement_Code.AllocationLogementSociale:
                _ = match_arg_28.value
                temp_montant_minimal_aide_d823_16 = money_of_cents_string("1000")
        else:
            temp_montant_minimal_aide_d823_16 = dead_value
            raise EmptyError
    except EmptyError:
        temp_montant_minimal_aide_d823_16 = dead_value
        raise NoValueProvided(SourcePosition(filename="examples/aides_logement/prologue.catala_fr",
                                             start_line=601, start_column=11,
                                             end_line=601, end_column=39,
                                             law_headings=["Secteur locatif",
                                             "Calcul du montant de l'aide personnalisée au logement",
                                             "Déclarations des champs d'application",
                                             "Prologue : aides au logement"]))
    montant_minimal_aide_d823_16 = temp_montant_minimal_aide_d823_16
    try:
        if logement_meuble_d842_2:
            temp_loyer_principal_avec_reduction_meuble = (loyer_principal_base *
                (decimal_of_string("2.") / decimal_of_string("3.")))
        else:
            temp_loyer_principal_avec_reduction_meuble = loyer_principal_base
    except EmptyError:
        temp_loyer_principal_avec_reduction_meuble = dead_value
        raise NoValueProvided(SourcePosition(filename="examples/aides_logement/prologue.catala_fr",
                                             start_line=574, start_column=10,
                                             end_line=574, end_column=31,
                                             law_headings=["Secteur locatif",
                                             "Calcul du montant de l'aide personnalisée au logement",
                                             "Déclarations des champs d'application",
                                             "Prologue : aides au logement"]))
    loyer_principal_avec_reduction_meuble = temp_loyer_principal_avec_reduction_meuble
    try:
        try:
            def temp_taux_composition_familiale(_:Unit):
                raise EmptyError
            def temp_taux_composition_familiale_1(_:Unit):
                return False
            def temp_taux_composition_familiale_2(_:Unit):
                try:
                    try:
                        try:
                            try:
                                match_arg_29 = residence_2
                                if match_arg_29.code == Collectivite_Code.Guadeloupe:
                                    _ = match_arg_29.value
                                    temp_taux_composition_familiale_3 = True
                                elif match_arg_29.code == Collectivite_Code.Guyane:
                                    _ = match_arg_29.value
                                    temp_taux_composition_familiale_3 = False
                                elif match_arg_29.code == Collectivite_Code.Martinique:
                                    _ = match_arg_29.value
                                    temp_taux_composition_familiale_3 = True
                                elif match_arg_29.code == Collectivite_Code.LaReunion:
                                    _ = match_arg_29.value
                                    temp_taux_composition_familiale_3 = True
                                elif match_arg_29.code == Collectivite_Code.SaintBarthelemy:
                                    _ = match_arg_29.value
                                    temp_taux_composition_familiale_3 = True
                                elif match_arg_29.code == Collectivite_Code.SaintMartin:
                                    _ = match_arg_29.value
                                    temp_taux_composition_familiale_3 = True
                                elif match_arg_29.code == Collectivite_Code.Metropole:
                                    _ = match_arg_29.value
                                    temp_taux_composition_familiale_3 = False
                                elif match_arg_29.code == Collectivite_Code.SaintPierreEtMiquelon:
                                    _ = match_arg_29.value
                                    temp_taux_composition_familiale_3 = False
                                elif match_arg_29.code == Collectivite_Code.Mayotte:
                                    _ = match_arg_29.value
                                    temp_taux_composition_familiale_3 = True
                                if (((date_courante_6 >=
                                    date_of_numbers(2020,10,1)) and
                                    (date_courante_6 <
                                    date_of_numbers(2021,10,1))) and
                                    temp_taux_composition_familiale_3):
                                    if (nombre_personnes_a_charge_2 ==
                                        integer_of_string("0")):
                                        match_arg_30 = situation_familiale_calcul_apl_2
                                        if match_arg_30.code == SituationFamilialeCalculAPL_Code.PersonneSeule:
                                            _ = match_arg_30.value
                                            return decimal_of_string("0.0281")
                                        elif match_arg_30.code == SituationFamilialeCalculAPL_Code.Couple:
                                            _ = match_arg_30.value
                                            return decimal_of_string("0.0299")
                                    else:
                                        if (nombre_personnes_a_charge_2 ==
                                            integer_of_string("1")):
                                            return decimal_of_string("0.0238")
                                        else:
                                            if (nombre_personnes_a_charge_2 ==
                                                integer_of_string("2")):
                                                return decimal_of_string("0.0217")
                                            else:
                                                if (nombre_personnes_a_charge_2 ==
                                                    integer_of_string("3")):
                                                    return decimal_of_string("0.0194")
                                                else:
                                                    if (nombre_personnes_a_charge_2 ==
                                                        integer_of_string("4")):
                                                        return decimal_of_string("0.018")
                                                    else:
                                                        if (nombre_personnes_a_charge_2 ==
                                                            integer_of_string("5")):
                                                            return decimal_of_string("0.0169")
                                                        else:
                                                            return decimal_of_string("0.0162")
                                else:
                                    raise EmptyError
                            except EmptyError:
                                match_arg_31 = residence_2
                                if match_arg_31.code == Collectivite_Code.Guadeloupe:
                                    _ = match_arg_31.value
                                    temp_taux_composition_familiale_4 = True
                                elif match_arg_31.code == Collectivite_Code.Guyane:
                                    _ = match_arg_31.value
                                    temp_taux_composition_familiale_4 = False
                                elif match_arg_31.code == Collectivite_Code.Martinique:
                                    _ = match_arg_31.value
                                    temp_taux_composition_familiale_4 = True
                                elif match_arg_31.code == Collectivite_Code.LaReunion:
                                    _ = match_arg_31.value
                                    temp_taux_composition_familiale_4 = True
                                elif match_arg_31.code == Collectivite_Code.SaintBarthelemy:
                                    _ = match_arg_31.value
                                    temp_taux_composition_familiale_4 = True
                                elif match_arg_31.code == Collectivite_Code.SaintMartin:
                                    _ = match_arg_31.value
                                    temp_taux_composition_familiale_4 = True
                                elif match_arg_31.code == Collectivite_Code.Metropole:
                                    _ = match_arg_31.value
                                    temp_taux_composition_familiale_4 = False
                                elif match_arg_31.code == Collectivite_Code.SaintPierreEtMiquelon:
                                    _ = match_arg_31.value
                                    temp_taux_composition_familiale_4 = False
                                elif match_arg_31.code == Collectivite_Code.Mayotte:
                                    _ = match_arg_31.value
                                    temp_taux_composition_familiale_4 = True
                                if (((date_courante_6 >=
                                    date_of_numbers(2020,10,1)) and
                                    (date_courante_6 <
                                    date_of_numbers(2021,10,1))) and
                                    temp_taux_composition_familiale_4):
                                    if (nombre_personnes_a_charge_2 ==
                                        integer_of_string("0")):
                                        match_arg_32 = situation_familiale_calcul_apl_2
                                        if match_arg_32.code == SituationFamilialeCalculAPL_Code.PersonneSeule:
                                            _ = match_arg_32.value
                                            return decimal_of_string("0.0281")
                                        elif match_arg_32.code == SituationFamilialeCalculAPL_Code.Couple:
                                            _ = match_arg_32.value
                                            return decimal_of_string("0.0299")
                                    else:
                                        if (nombre_personnes_a_charge_2 ==
                                            integer_of_string("1")):
                                            return decimal_of_string("0.0238")
                                        else:
                                            if (nombre_personnes_a_charge_2 ==
                                                integer_of_string("2")):
                                                return decimal_of_string("0.0217")
                                            else:
                                                if (nombre_personnes_a_charge_2 ==
                                                    integer_of_string("3")):
                                                    return decimal_of_string("0.0194")
                                                else:
                                                    if (nombre_personnes_a_charge_2 ==
                                                        integer_of_string("4")):
                                                        return decimal_of_string("0.018")
                                                    else:
                                                        if (nombre_personnes_a_charge_2 ==
                                                            integer_of_string("5")):
                                                            return decimal_of_string("0.0169")
                                                        else:
                                                            return decimal_of_string("0.0162")
                                else:
                                    raise EmptyError
                        except EmptyError:
                            match_arg_33 = residence_2
                            if match_arg_33.code == Collectivite_Code.Guadeloupe:
                                _ = match_arg_33.value
                                temp_taux_composition_familiale_5 = True
                            elif match_arg_33.code == Collectivite_Code.Guyane:
                                _ = match_arg_33.value
                                temp_taux_composition_familiale_5 = False
                            elif match_arg_33.code == Collectivite_Code.Martinique:
                                _ = match_arg_33.value
                                temp_taux_composition_familiale_5 = True
                            elif match_arg_33.code == Collectivite_Code.LaReunion:
                                _ = match_arg_33.value
                                temp_taux_composition_familiale_5 = True
                            elif match_arg_33.code == Collectivite_Code.SaintBarthelemy:
                                _ = match_arg_33.value
                                temp_taux_composition_familiale_5 = True
                            elif match_arg_33.code == Collectivite_Code.SaintMartin:
                                _ = match_arg_33.value
                                temp_taux_composition_familiale_5 = True
                            elif match_arg_33.code == Collectivite_Code.Metropole:
                                _ = match_arg_33.value
                                temp_taux_composition_familiale_5 = False
                            elif match_arg_33.code == Collectivite_Code.SaintPierreEtMiquelon:
                                _ = match_arg_33.value
                                temp_taux_composition_familiale_5 = False
                            elif match_arg_33.code == Collectivite_Code.Mayotte:
                                _ = match_arg_33.value
                                temp_taux_composition_familiale_5 = True
                            if (((date_courante_6 >=
                                date_of_numbers(2021,10,1)) and
                                (date_courante_6 <
                                date_of_numbers(2022,1,1))) and
                                temp_taux_composition_familiale_5):
                                if (nombre_personnes_a_charge_2 ==
                                    integer_of_string("0")):
                                    match_arg_34 = situation_familiale_calcul_apl_2
                                    if match_arg_34.code == SituationFamilialeCalculAPL_Code.PersonneSeule:
                                        _ = match_arg_34.value
                                        return decimal_of_string("0.0281")
                                    elif match_arg_34.code == SituationFamilialeCalculAPL_Code.Couple:
                                        _ = match_arg_34.value
                                        return decimal_of_string("0.0299")
                                else:
                                    if (nombre_personnes_a_charge_2 ==
                                        integer_of_string("1")):
                                        return decimal_of_string("0.0238")
                                    else:
                                        if (nombre_personnes_a_charge_2 ==
                                            integer_of_string("2")):
                                            return decimal_of_string("0.0217")
                                        else:
                                            if (nombre_personnes_a_charge_2 ==
                                                integer_of_string("3")):
                                                return decimal_of_string("0.0194")
                                            else:
                                                if (nombre_personnes_a_charge_2 ==
                                                    integer_of_string("4")):
                                                    return decimal_of_string("0.018")
                                                else:
                                                    if (nombre_personnes_a_charge_2 ==
                                                        integer_of_string("5")):
                                                        return decimal_of_string("0.0169")
                                                    else:
                                                        return decimal_of_string("0.0162")
                            else:
                                raise EmptyError
                    except EmptyError:
                        match_arg_35 = residence_2
                        if match_arg_35.code == Collectivite_Code.Guadeloupe:
                            _ = match_arg_35.value
                            temp_taux_composition_familiale_6 = True
                        elif match_arg_35.code == Collectivite_Code.Guyane:
                            _ = match_arg_35.value
                            temp_taux_composition_familiale_6 = False
                        elif match_arg_35.code == Collectivite_Code.Martinique:
                            _ = match_arg_35.value
                            temp_taux_composition_familiale_6 = True
                        elif match_arg_35.code == Collectivite_Code.LaReunion:
                            _ = match_arg_35.value
                            temp_taux_composition_familiale_6 = True
                        elif match_arg_35.code == Collectivite_Code.SaintBarthelemy:
                            _ = match_arg_35.value
                            temp_taux_composition_familiale_6 = True
                        elif match_arg_35.code == Collectivite_Code.SaintMartin:
                            _ = match_arg_35.value
                            temp_taux_composition_familiale_6 = True
                        elif match_arg_35.code == Collectivite_Code.Metropole:
                            _ = match_arg_35.value
                            temp_taux_composition_familiale_6 = False
                        elif match_arg_35.code == Collectivite_Code.SaintPierreEtMiquelon:
                            _ = match_arg_35.value
                            temp_taux_composition_familiale_6 = False
                        elif match_arg_35.code == Collectivite_Code.Mayotte:
                            _ = match_arg_35.value
                            temp_taux_composition_familiale_6 = True
                        if (((date_courante_6 >=
                            date_of_numbers(2022,1,1)) and (date_courante_6 <
                            date_of_numbers(2022,7,1))) and
                            temp_taux_composition_familiale_6):
                            if (nombre_personnes_a_charge_2 ==
                                integer_of_string("0")):
                                match_arg_36 = situation_familiale_calcul_apl_2
                                if match_arg_36.code == SituationFamilialeCalculAPL_Code.PersonneSeule:
                                    _ = match_arg_36.value
                                    return decimal_of_string("0.0281")
                                elif match_arg_36.code == SituationFamilialeCalculAPL_Code.Couple:
                                    _ = match_arg_36.value
                                    return decimal_of_string("0.0299")
                            else:
                                if (nombre_personnes_a_charge_2 ==
                                    integer_of_string("1")):
                                    return decimal_of_string("0.0238")
                                else:
                                    if (nombre_personnes_a_charge_2 ==
                                        integer_of_string("2")):
                                        return decimal_of_string("0.0217")
                                    else:
                                        if (nombre_personnes_a_charge_2 ==
                                            integer_of_string("3")):
                                            return decimal_of_string("0.0194")
                                        else:
                                            if (nombre_personnes_a_charge_2 ==
                                                integer_of_string("4")):
                                                return decimal_of_string("0.018")
                                            else:
                                                if (nombre_personnes_a_charge_2 ==
                                                    integer_of_string("5")):
                                                    return decimal_of_string("0.0169")
                                                else:
                                                    return decimal_of_string("0.0162")
                        else:
                            raise EmptyError
                except EmptyError:
                    match_arg_37 = residence_2
                    if match_arg_37.code == Collectivite_Code.Guadeloupe:
                        _ = match_arg_37.value
                        temp_taux_composition_familiale_7 = True
                    elif match_arg_37.code == Collectivite_Code.Guyane:
                        _ = match_arg_37.value
                        temp_taux_composition_familiale_7 = False
                    elif match_arg_37.code == Collectivite_Code.Martinique:
                        _ = match_arg_37.value
                        temp_taux_composition_familiale_7 = True
                    elif match_arg_37.code == Collectivite_Code.LaReunion:
                        _ = match_arg_37.value
                        temp_taux_composition_familiale_7 = True
                    elif match_arg_37.code == Collectivite_Code.SaintBarthelemy:
                        _ = match_arg_37.value
                        temp_taux_composition_familiale_7 = True
                    elif match_arg_37.code == Collectivite_Code.SaintMartin:
                        _ = match_arg_37.value
                        temp_taux_composition_familiale_7 = True
                    elif match_arg_37.code == Collectivite_Code.Metropole:
                        _ = match_arg_37.value
                        temp_taux_composition_familiale_7 = False
                    elif match_arg_37.code == Collectivite_Code.SaintPierreEtMiquelon:
                        _ = match_arg_37.value
                        temp_taux_composition_familiale_7 = False
                    elif match_arg_37.code == Collectivite_Code.Mayotte:
                        _ = match_arg_37.value
                        temp_taux_composition_familiale_7 = True
                    if (((date_courante_6 >= date_of_numbers(2022,7,1)) and
                        (date_courante_6 < date_of_numbers(2023,1,1))) and
                        temp_taux_composition_familiale_7):
                        if (nombre_personnes_a_charge_2 ==
                            integer_of_string("0")):
                            match_arg_38 = situation_familiale_calcul_apl_2
                            if match_arg_38.code == SituationFamilialeCalculAPL_Code.PersonneSeule:
                                _ = match_arg_38.value
                                return decimal_of_string("0.0281")
                            elif match_arg_38.code == SituationFamilialeCalculAPL_Code.Couple:
                                _ = match_arg_38.value
                                return decimal_of_string("0.0299")
                        else:
                            if (nombre_personnes_a_charge_2 ==
                                integer_of_string("1")):
                                return decimal_of_string("0.0238")
                            else:
                                if (nombre_personnes_a_charge_2 ==
                                    integer_of_string("2")):
                                    return decimal_of_string("0.0217")
                                else:
                                    if (nombre_personnes_a_charge_2 ==
                                        integer_of_string("3")):
                                        return decimal_of_string("0.0194")
                                    else:
                                        if (nombre_personnes_a_charge_2 ==
                                            integer_of_string("4")):
                                            return decimal_of_string("0.018")
                                        else:
                                            if (nombre_personnes_a_charge_2 ==
                                                integer_of_string("5")):
                                                return decimal_of_string("0.0169")
                                            else:
                                                return decimal_of_string("0.0162")
                    else:
                        raise EmptyError
            def temp_taux_composition_familiale_8(_:Unit):
                match_arg_39 = residence_2
                if match_arg_39.code == Collectivite_Code.Guadeloupe:
                    _ = match_arg_39.value
                    temp_taux_composition_familiale_9 = True
                elif match_arg_39.code == Collectivite_Code.Guyane:
                    _ = match_arg_39.value
                    temp_taux_composition_familiale_9 = False
                elif match_arg_39.code == Collectivite_Code.Martinique:
                    _ = match_arg_39.value
                    temp_taux_composition_familiale_9 = True
                elif match_arg_39.code == Collectivite_Code.LaReunion:
                    _ = match_arg_39.value
                    temp_taux_composition_familiale_9 = True
                elif match_arg_39.code == Collectivite_Code.SaintBarthelemy:
                    _ = match_arg_39.value
                    temp_taux_composition_familiale_9 = True
                elif match_arg_39.code == Collectivite_Code.SaintMartin:
                    _ = match_arg_39.value
                    temp_taux_composition_familiale_9 = True
                elif match_arg_39.code == Collectivite_Code.Metropole:
                    _ = match_arg_39.value
                    temp_taux_composition_familiale_9 = False
                elif match_arg_39.code == Collectivite_Code.SaintPierreEtMiquelon:
                    _ = match_arg_39.value
                    temp_taux_composition_familiale_9 = False
                elif match_arg_39.code == Collectivite_Code.Mayotte:
                    _ = match_arg_39.value
                    temp_taux_composition_familiale_9 = True
                if ((date_courante_6 >= date_of_numbers(2023,1,1)) and
                    temp_taux_composition_familiale_9):
                    if (nombre_personnes_a_charge_2 ==
                        integer_of_string("0")):
                        match_arg_40 = situation_familiale_calcul_apl_2
                        if match_arg_40.code == SituationFamilialeCalculAPL_Code.PersonneSeule:
                            _ = match_arg_40.value
                            return decimal_of_string("0.0281")
                        elif match_arg_40.code == SituationFamilialeCalculAPL_Code.Couple:
                            _ = match_arg_40.value
                            return decimal_of_string("0.0299")
                    else:
                        if (nombre_personnes_a_charge_2 ==
                            integer_of_string("1")):
                            return decimal_of_string("0.0238")
                        else:
                            if (nombre_personnes_a_charge_2 ==
                                integer_of_string("2")):
                                return decimal_of_string("0.0217")
                            else:
                                if (nombre_personnes_a_charge_2 ==
                                    integer_of_string("3")):
                                    return decimal_of_string("0.0194")
                                else:
                                    if (nombre_personnes_a_charge_2 ==
                                        integer_of_string("4")):
                                        return decimal_of_string("0.018")
                                    else:
                                        if (nombre_personnes_a_charge_2 ==
                                            integer_of_string("5")):
                                            return decimal_of_string("0.0169")
                                        else:
                                            if (nombre_personnes_a_charge_2 ==
                                                integer_of_string("6")):
                                                return decimal_of_string("0.0162")
                                            else:
                                                if (nombre_personnes_a_charge_2 ==
                                                    integer_of_string("7")):
                                                    return decimal_of_string("0.0167")
                                                else:
                                                    return (decimal_of_string("0.0167") -
                                                        (decimal_of_string("0.0006") *
                                                        decimal_of_integer((nombre_personnes_a_charge_2 -
                                                        integer_of_string("7")))))
                else:
                    raise EmptyError
            temp_taux_composition_familiale_10 = handle_default(SourcePosition(filename="examples/aides_logement/prologue.catala_fr",
                                                                start_line=612,
                                                                start_column=12,
                                                                end_line=612, end_column=38,
                                                                law_headings=["Secteur locatif",
                                                                "Calcul du montant de l'aide personnalisée au logement",
                                                                "Déclarations des champs d'application",
                                                                "Prologue : aides au logement"]), [temp_taux_composition_familiale_8,
                                                                temp_taux_composition_familiale_2],
                                                                temp_taux_composition_familiale_1,
                                                                temp_taux_composition_familiale)
        except EmptyError:
            try:
                try:
                    if ((date_courante_6 >= date_of_numbers(2020,10,1)) and
                        (date_courante_6 <
                        date_of_numbers(2021,10,1))):
                        if (nombre_personnes_a_charge_2 ==
                            integer_of_string("0")):
                            match_arg_41 = situation_familiale_calcul_apl_2
                            if match_arg_41.code == SituationFamilialeCalculAPL_Code.PersonneSeule:
                                _ = match_arg_41.value
                                temp_taux_composition_familiale_10 = decimal_of_string("0.0283")
                            elif match_arg_41.code == SituationFamilialeCalculAPL_Code.Couple:
                                _ = match_arg_41.value
                                temp_taux_composition_familiale_10 = decimal_of_string("0.0315")
                        else:
                            if (nombre_personnes_a_charge_2 ==
                                integer_of_string("1")):
                                temp_taux_composition_familiale_10 = decimal_of_string("0.027")
                            else:
                                if (nombre_personnes_a_charge_2 ==
                                    integer_of_string("2")):
                                    temp_taux_composition_familiale_10 = decimal_of_string("0.0238")
                                else:
                                    if (nombre_personnes_a_charge_2 ==
                                        integer_of_string("3")):
                                        temp_taux_composition_familiale_10 = decimal_of_string("0.0201")
                                    else:
                                        if (nombre_personnes_a_charge_2 ==
                                            integer_of_string("4")):
                                            temp_taux_composition_familiale_10 = decimal_of_string("0.0185")
                                        else:
                                            if (nombre_personnes_a_charge_2 ==
                                                integer_of_string("5")):
                                                temp_taux_composition_familiale_10 = decimal_of_string("0.0179")
                                            else:
                                                if (nombre_personnes_a_charge_2 ==
                                                    integer_of_string("6")):
                                                    temp_taux_composition_familiale_10 = decimal_of_string("0.0173")
                                                else:
                                                    temp_taux_composition_familiale_10 = (decimal_of_string("0.0173") -
                                                        (decimal_of_string("0.0006") *
                                                        decimal_of_integer((nombre_personnes_a_charge_2 -
                                                        integer_of_string("6")))))
                    else:
                        temp_taux_composition_familiale_10 = dead_value
                        raise EmptyError
                except EmptyError:
                    if ((date_courante_6 >= date_of_numbers(2021,10,1)) and
                        (date_courante_6 <
                        date_of_numbers(2022,7,1))):
                        if (nombre_personnes_a_charge_2 ==
                            integer_of_string("0")):
                            match_arg_42 = situation_familiale_calcul_apl_2
                            if match_arg_42.code == SituationFamilialeCalculAPL_Code.PersonneSeule:
                                _ = match_arg_42.value
                                temp_taux_composition_familiale_10 = decimal_of_string("0.0283")
                            elif match_arg_42.code == SituationFamilialeCalculAPL_Code.Couple:
                                _ = match_arg_42.value
                                temp_taux_composition_familiale_10 = decimal_of_string("0.0315")
                        else:
                            if (nombre_personnes_a_charge_2 ==
                                integer_of_string("1")):
                                temp_taux_composition_familiale_10 = decimal_of_string("0.027")
                            else:
                                if (nombre_personnes_a_charge_2 ==
                                    integer_of_string("2")):
                                    temp_taux_composition_familiale_10 = decimal_of_string("0.0238")
                                else:
                                    if (nombre_personnes_a_charge_2 ==
                                        integer_of_string("3")):
                                        temp_taux_composition_familiale_10 = decimal_of_string("0.0201")
                                    else:
                                        if (nombre_personnes_a_charge_2 ==
                                            integer_of_string("4")):
                                            temp_taux_composition_familiale_10 = decimal_of_string("0.0185")
                                        else:
                                            if (nombre_personnes_a_charge_2 ==
                                                integer_of_string("5")):
                                                temp_taux_composition_familiale_10 = decimal_of_string("0.0179")
                                            else:
                                                if (nombre_personnes_a_charge_2 ==
                                                    integer_of_string("6")):
                                                    temp_taux_composition_familiale_10 = decimal_of_string("0.0173")
                                                else:
                                                    temp_taux_composition_familiale_10 = (decimal_of_string("0.0173") -
                                                        (decimal_of_string("0.0006") *
                                                        decimal_of_integer((nombre_personnes_a_charge_2 -
                                                        integer_of_string("6")))))
                    else:
                        temp_taux_composition_familiale_10 = dead_value
                        raise EmptyError
            except EmptyError:
                if (date_courante_6 >=
                    date_of_numbers(2022,7,1)):
                    if (nombre_personnes_a_charge_2 ==
                        integer_of_string("0")):
                        match_arg_43 = situation_familiale_calcul_apl_2
                        if match_arg_43.code == SituationFamilialeCalculAPL_Code.PersonneSeule:
                            _ = match_arg_43.value
                            temp_taux_composition_familiale_10 = decimal_of_string("0.0283")
                        elif match_arg_43.code == SituationFamilialeCalculAPL_Code.Couple:
                            _ = match_arg_43.value
                            temp_taux_composition_familiale_10 = decimal_of_string("0.0315")
                    else:
                        if (nombre_personnes_a_charge_2 ==
                            integer_of_string("1")):
                            temp_taux_composition_familiale_10 = decimal_of_string("0.027")
                        else:
                            if (nombre_personnes_a_charge_2 ==
                                integer_of_string("2")):
                                temp_taux_composition_familiale_10 = decimal_of_string("0.0238")
                            else:
                                if (nombre_personnes_a_charge_2 ==
                                    integer_of_string("3")):
                                    temp_taux_composition_familiale_10 = decimal_of_string("0.0201")
                                else:
                                    if (nombre_personnes_a_charge_2 ==
                                        integer_of_string("4")):
                                        temp_taux_composition_familiale_10 = decimal_of_string("0.0185")
                                    else:
                                        if (nombre_personnes_a_charge_2 ==
                                            integer_of_string("5")):
                                            temp_taux_composition_familiale_10 = decimal_of_string("0.0179")
                                        else:
                                            if (nombre_personnes_a_charge_2 ==
                                                integer_of_string("6")):
                                                temp_taux_composition_familiale_10 = decimal_of_string("0.0173")
                                            else:
                                                temp_taux_composition_familiale_10 = (decimal_of_string("0.0173") -
                                                    (decimal_of_string("0.0006") *
                                                    decimal_of_integer((nombre_personnes_a_charge_2 -
                                                    integer_of_string("6")))))
                else:
                    temp_taux_composition_familiale_10 = dead_value
                    raise EmptyError
    except EmptyError:
        temp_taux_composition_familiale_10 = dead_value
        raise NoValueProvided(SourcePosition(filename="examples/aides_logement/prologue.catala_fr",
                                             start_line=612, start_column=12,
                                             end_line=612, end_column=38,
                                             law_headings=["Secteur locatif",
                                             "Calcul du montant de l'aide personnalisée au logement",
                                             "Déclarations des champs d'application",
                                             "Prologue : aides au logement"]))
    taux_composition_familiale = temp_taux_composition_familiale_10
    try:
        try:
            try:
                try:
                    try:
                        try:
                            match_arg_44 = residence_2
                            if match_arg_44.code == Collectivite_Code.Guadeloupe:
                                _ = match_arg_44.value
                                temp_multiplicateur_majoration_r0 = True
                            elif match_arg_44.code == Collectivite_Code.Guyane:
                                _ = match_arg_44.value
                                temp_multiplicateur_majoration_r0 = False
                            elif match_arg_44.code == Collectivite_Code.Martinique:
                                _ = match_arg_44.value
                                temp_multiplicateur_majoration_r0 = True
                            elif match_arg_44.code == Collectivite_Code.LaReunion:
                                _ = match_arg_44.value
                                temp_multiplicateur_majoration_r0 = True
                            elif match_arg_44.code == Collectivite_Code.SaintBarthelemy:
                                _ = match_arg_44.value
                                temp_multiplicateur_majoration_r0 = True
                            elif match_arg_44.code == Collectivite_Code.SaintMartin:
                                _ = match_arg_44.value
                                temp_multiplicateur_majoration_r0 = True
                            elif match_arg_44.code == Collectivite_Code.Metropole:
                                _ = match_arg_44.value
                                temp_multiplicateur_majoration_r0 = False
                            elif match_arg_44.code == Collectivite_Code.SaintPierreEtMiquelon:
                                _ = match_arg_44.value
                                temp_multiplicateur_majoration_r0 = False
                            elif match_arg_44.code == Collectivite_Code.Mayotte:
                                _ = match_arg_44.value
                                temp_multiplicateur_majoration_r0 = True
                            if (((date_courante_6 >=
                                date_of_numbers(2020,1,1)) and
                                (date_courante_6 <
                                date_of_numbers(2020,10,1))) and
                                (temp_multiplicateur_majoration_r0 and
                                (nombre_personnes_a_charge_2 >=
                                integer_of_string("6")))):
                                temp_multiplicateur_majoration_r0_1 = decimal_of_string("0.")
                            else:
                                temp_multiplicateur_majoration_r0_1 = dead_value
                                raise EmptyError
                        except EmptyError:
                            match_arg_45 = residence_2
                            if match_arg_45.code == Collectivite_Code.Guadeloupe:
                                _ = match_arg_45.value
                                temp_multiplicateur_majoration_r0_2 = True
                            elif match_arg_45.code == Collectivite_Code.Guyane:
                                _ = match_arg_45.value
                                temp_multiplicateur_majoration_r0_2 = False
                            elif match_arg_45.code == Collectivite_Code.Martinique:
                                _ = match_arg_45.value
                                temp_multiplicateur_majoration_r0_2 = True
                            elif match_arg_45.code == Collectivite_Code.LaReunion:
                                _ = match_arg_45.value
                                temp_multiplicateur_majoration_r0_2 = True
                            elif match_arg_45.code == Collectivite_Code.SaintBarthelemy:
                                _ = match_arg_45.value
                                temp_multiplicateur_majoration_r0_2 = True
                            elif match_arg_45.code == Collectivite_Code.SaintMartin:
                                _ = match_arg_45.value
                                temp_multiplicateur_majoration_r0_2 = True
                            elif match_arg_45.code == Collectivite_Code.Metropole:
                                _ = match_arg_45.value
                                temp_multiplicateur_majoration_r0_2 = False
                            elif match_arg_45.code == Collectivite_Code.SaintPierreEtMiquelon:
                                _ = match_arg_45.value
                                temp_multiplicateur_majoration_r0_2 = False
                            elif match_arg_45.code == Collectivite_Code.Mayotte:
                                _ = match_arg_45.value
                                temp_multiplicateur_majoration_r0_2 = True
                            if (((date_courante_6 >=
                                date_of_numbers(2020,10,1)) and
                                (date_courante_6 <
                                date_of_numbers(2021,10,1))) and
                                (temp_multiplicateur_majoration_r0_2 and
                                (nombre_personnes_a_charge_2 >=
                                integer_of_string("6")))):
                                temp_multiplicateur_majoration_r0_1 = decimal_of_string("0.")
                            else:
                                temp_multiplicateur_majoration_r0_1 = dead_value
                                raise EmptyError
                    except EmptyError:
                        match_arg_46 = residence_2
                        if match_arg_46.code == Collectivite_Code.Guadeloupe:
                            _ = match_arg_46.value
                            temp_multiplicateur_majoration_r0_3 = True
                        elif match_arg_46.code == Collectivite_Code.Guyane:
                            _ = match_arg_46.value
                            temp_multiplicateur_majoration_r0_3 = False
                        elif match_arg_46.code == Collectivite_Code.Martinique:
                            _ = match_arg_46.value
                            temp_multiplicateur_majoration_r0_3 = True
                        elif match_arg_46.code == Collectivite_Code.LaReunion:
                            _ = match_arg_46.value
                            temp_multiplicateur_majoration_r0_3 = True
                        elif match_arg_46.code == Collectivite_Code.SaintBarthelemy:
                            _ = match_arg_46.value
                            temp_multiplicateur_majoration_r0_3 = True
                        elif match_arg_46.code == Collectivite_Code.SaintMartin:
                            _ = match_arg_46.value
                            temp_multiplicateur_majoration_r0_3 = True
                        elif match_arg_46.code == Collectivite_Code.Metropole:
                            _ = match_arg_46.value
                            temp_multiplicateur_majoration_r0_3 = False
                        elif match_arg_46.code == Collectivite_Code.SaintPierreEtMiquelon:
                            _ = match_arg_46.value
                            temp_multiplicateur_majoration_r0_3 = False
                        elif match_arg_46.code == Collectivite_Code.Mayotte:
                            _ = match_arg_46.value
                            temp_multiplicateur_majoration_r0_3 = True
                        if (((date_courante_6 >=
                            date_of_numbers(2021,10,1)) and
                            (date_courante_6 <
                            date_of_numbers(2022,1,1))) and
                            (temp_multiplicateur_majoration_r0_3 and
                            (nombre_personnes_a_charge_2 >=
                            integer_of_string("6")))):
                            temp_multiplicateur_majoration_r0_1 = decimal_of_string("0.")
                        else:
                            temp_multiplicateur_majoration_r0_1 = dead_value
                            raise EmptyError
                except EmptyError:
                    match_arg_47 = residence_2
                    if match_arg_47.code == Collectivite_Code.Guadeloupe:
                        _ = match_arg_47.value
                        temp_multiplicateur_majoration_r0_4 = True
                    elif match_arg_47.code == Collectivite_Code.Guyane:
                        _ = match_arg_47.value
                        temp_multiplicateur_majoration_r0_4 = False
                    elif match_arg_47.code == Collectivite_Code.Martinique:
                        _ = match_arg_47.value
                        temp_multiplicateur_majoration_r0_4 = True
                    elif match_arg_47.code == Collectivite_Code.LaReunion:
                        _ = match_arg_47.value
                        temp_multiplicateur_majoration_r0_4 = True
                    elif match_arg_47.code == Collectivite_Code.SaintBarthelemy:
                        _ = match_arg_47.value
                        temp_multiplicateur_majoration_r0_4 = True
                    elif match_arg_47.code == Collectivite_Code.SaintMartin:
                        _ = match_arg_47.value
                        temp_multiplicateur_majoration_r0_4 = True
                    elif match_arg_47.code == Collectivite_Code.Metropole:
                        _ = match_arg_47.value
                        temp_multiplicateur_majoration_r0_4 = False
                    elif match_arg_47.code == Collectivite_Code.SaintPierreEtMiquelon:
                        _ = match_arg_47.value
                        temp_multiplicateur_majoration_r0_4 = False
                    elif match_arg_47.code == Collectivite_Code.Mayotte:
                        _ = match_arg_47.value
                        temp_multiplicateur_majoration_r0_4 = True
                    if (((date_courante_6 >= date_of_numbers(2022,1,1)) and
                        (date_courante_6 < date_of_numbers(2022,7,1))) and
                        (temp_multiplicateur_majoration_r0_4 and
                        (nombre_personnes_a_charge_2 >=
                        integer_of_string("6")))):
                        temp_multiplicateur_majoration_r0_1 = decimal_of_string("0.")
                    else:
                        temp_multiplicateur_majoration_r0_1 = dead_value
                        raise EmptyError
            except EmptyError:
                match_arg_48 = residence_2
                if match_arg_48.code == Collectivite_Code.Guadeloupe:
                    _ = match_arg_48.value
                    temp_multiplicateur_majoration_r0_5 = True
                elif match_arg_48.code == Collectivite_Code.Guyane:
                    _ = match_arg_48.value
                    temp_multiplicateur_majoration_r0_5 = False
                elif match_arg_48.code == Collectivite_Code.Martinique:
                    _ = match_arg_48.value
                    temp_multiplicateur_majoration_r0_5 = True
                elif match_arg_48.code == Collectivite_Code.LaReunion:
                    _ = match_arg_48.value
                    temp_multiplicateur_majoration_r0_5 = True
                elif match_arg_48.code == Collectivite_Code.SaintBarthelemy:
                    _ = match_arg_48.value
                    temp_multiplicateur_majoration_r0_5 = True
                elif match_arg_48.code == Collectivite_Code.SaintMartin:
                    _ = match_arg_48.value
                    temp_multiplicateur_majoration_r0_5 = True
                elif match_arg_48.code == Collectivite_Code.Metropole:
                    _ = match_arg_48.value
                    temp_multiplicateur_majoration_r0_5 = False
                elif match_arg_48.code == Collectivite_Code.SaintPierreEtMiquelon:
                    _ = match_arg_48.value
                    temp_multiplicateur_majoration_r0_5 = False
                elif match_arg_48.code == Collectivite_Code.Mayotte:
                    _ = match_arg_48.value
                    temp_multiplicateur_majoration_r0_5 = True
                if (((date_courante_6 >= date_of_numbers(2022,7,1)) and
                    (date_courante_6 < date_of_numbers(2023,1,1))) and
                    (temp_multiplicateur_majoration_r0_5 and
                    (nombre_personnes_a_charge_2 >=
                    integer_of_string("6")))):
                    temp_multiplicateur_majoration_r0_1 = decimal_of_string("0.")
                else:
                    temp_multiplicateur_majoration_r0_1 = dead_value
                    raise EmptyError
        except EmptyError:
            try:
                try:
                    try:
                        if ((date_courante_6 < date_of_numbers(2022,1,1)) and
                            (date_courante_6 >=
                            date_of_numbers(2020,1,1))):
                            temp_multiplicateur_majoration_r0_1 = decimal_of_integer((nombre_personnes_a_charge_2 -
                                integer_of_string("6")))
                        else:
                            temp_multiplicateur_majoration_r0_1 = dead_value
                            raise EmptyError
                    except EmptyError:
                        if ((date_courante_6 >=
                            date_of_numbers(2022,1,1)) and (date_courante_6 <
                            date_of_numbers(2022,7,1))):
                            temp_multiplicateur_majoration_r0_1 = decimal_of_integer((nombre_personnes_a_charge_2 -
                                integer_of_string("6")))
                        else:
                            temp_multiplicateur_majoration_r0_1 = dead_value
                            raise EmptyError
                except EmptyError:
                    if ((date_courante_6 >= date_of_numbers(2022,7,1)) and
                        (date_courante_6 <=
                        date_of_numbers(2022,12,31))):
                        temp_multiplicateur_majoration_r0_1 = decimal_of_integer((nombre_personnes_a_charge_2 -
                            integer_of_string("6")))
                    else:
                        temp_multiplicateur_majoration_r0_1 = dead_value
                        raise EmptyError
            except EmptyError:
                if (date_courante_6 >=
                    date_of_numbers(2023,1,1)):
                    temp_multiplicateur_majoration_r0_1 = decimal_of_integer((nombre_personnes_a_charge_2 -
                        integer_of_string("6")))
                else:
                    temp_multiplicateur_majoration_r0_1 = dead_value
                    raise EmptyError
    except EmptyError:
        temp_multiplicateur_majoration_r0_1 = dead_value
        raise NoValueProvided(SourcePosition(filename="examples/aides_logement/prologue.catala_fr",
                                             start_line=607, start_column=11,
                                             end_line=607, end_column=39,
                                             law_headings=["Secteur locatif",
                                             "Calcul du montant de l'aide personnalisée au logement",
                                             "Déclarations des champs d'application",
                                             "Prologue : aides au logement"]))
    multiplicateur_majoration_r0 = temp_multiplicateur_majoration_r0_1
    try:
        try:
            try:
                try:
                    try:
                        try:
                            match_arg_49 = residence_2
                            if match_arg_49.code == Collectivite_Code.Guadeloupe:
                                _ = match_arg_49.value
                                temp_multiplicateur_majoration_loyer_reference = True
                            elif match_arg_49.code == Collectivite_Code.Guyane:
                                _ = match_arg_49.value
                                temp_multiplicateur_majoration_loyer_reference = False
                            elif match_arg_49.code == Collectivite_Code.Martinique:
                                _ = match_arg_49.value
                                temp_multiplicateur_majoration_loyer_reference = True
                            elif match_arg_49.code == Collectivite_Code.LaReunion:
                                _ = match_arg_49.value
                                temp_multiplicateur_majoration_loyer_reference = True
                            elif match_arg_49.code == Collectivite_Code.SaintBarthelemy:
                                _ = match_arg_49.value
                                temp_multiplicateur_majoration_loyer_reference = True
                            elif match_arg_49.code == Collectivite_Code.SaintMartin:
                                _ = match_arg_49.value
                                temp_multiplicateur_majoration_loyer_reference = True
                            elif match_arg_49.code == Collectivite_Code.Metropole:
                                _ = match_arg_49.value
                                temp_multiplicateur_majoration_loyer_reference = False
                            elif match_arg_49.code == Collectivite_Code.SaintPierreEtMiquelon:
                                _ = match_arg_49.value
                                temp_multiplicateur_majoration_loyer_reference = False
                            elif match_arg_49.code == Collectivite_Code.Mayotte:
                                _ = match_arg_49.value
                                temp_multiplicateur_majoration_loyer_reference = True
                            if (((date_courante_6 >=
                                date_of_numbers(2020,1,1)) and
                                (date_courante_6 <
                                date_of_numbers(2020,10,1))) and
                                (temp_multiplicateur_majoration_loyer_reference and
                                (nombre_personnes_a_charge_2 >=
                                integer_of_string("6")))):
                                temp_multiplicateur_majoration_loyer_reference_1 = decimal_of_string("5.")
                            else:
                                temp_multiplicateur_majoration_loyer_reference_1 = dead_value
                                raise EmptyError
                        except EmptyError:
                            match_arg_50 = residence_2
                            if match_arg_50.code == Collectivite_Code.Guadeloupe:
                                _ = match_arg_50.value
                                temp_multiplicateur_majoration_loyer_reference_2 = True
                            elif match_arg_50.code == Collectivite_Code.Guyane:
                                _ = match_arg_50.value
                                temp_multiplicateur_majoration_loyer_reference_2 = False
                            elif match_arg_50.code == Collectivite_Code.Martinique:
                                _ = match_arg_50.value
                                temp_multiplicateur_majoration_loyer_reference_2 = True
                            elif match_arg_50.code == Collectivite_Code.LaReunion:
                                _ = match_arg_50.value
                                temp_multiplicateur_majoration_loyer_reference_2 = True
                            elif match_arg_50.code == Collectivite_Code.SaintBarthelemy:
                                _ = match_arg_50.value
                                temp_multiplicateur_majoration_loyer_reference_2 = True
                            elif match_arg_50.code == Collectivite_Code.SaintMartin:
                                _ = match_arg_50.value
                                temp_multiplicateur_majoration_loyer_reference_2 = True
                            elif match_arg_50.code == Collectivite_Code.Metropole:
                                _ = match_arg_50.value
                                temp_multiplicateur_majoration_loyer_reference_2 = False
                            elif match_arg_50.code == Collectivite_Code.SaintPierreEtMiquelon:
                                _ = match_arg_50.value
                                temp_multiplicateur_majoration_loyer_reference_2 = False
                            elif match_arg_50.code == Collectivite_Code.Mayotte:
                                _ = match_arg_50.value
                                temp_multiplicateur_majoration_loyer_reference_2 = True
                            if (((date_courante_6 >=
                                date_of_numbers(2020,10,1)) and
                                (date_courante_6 <
                                date_of_numbers(2021,10,1))) and
                                (temp_multiplicateur_majoration_loyer_reference_2 and
                                (nombre_personnes_a_charge_2 >=
                                integer_of_string("6")))):
                                temp_multiplicateur_majoration_loyer_reference_1 = decimal_of_string("5.")
                            else:
                                temp_multiplicateur_majoration_loyer_reference_1 = dead_value
                                raise EmptyError
                    except EmptyError:
                        match_arg_51 = residence_2
                        if match_arg_51.code == Collectivite_Code.Guadeloupe:
                            _ = match_arg_51.value
                            temp_multiplicateur_majoration_loyer_reference_3 = True
                        elif match_arg_51.code == Collectivite_Code.Guyane:
                            _ = match_arg_51.value
                            temp_multiplicateur_majoration_loyer_reference_3 = False
                        elif match_arg_51.code == Collectivite_Code.Martinique:
                            _ = match_arg_51.value
                            temp_multiplicateur_majoration_loyer_reference_3 = True
                        elif match_arg_51.code == Collectivite_Code.LaReunion:
                            _ = match_arg_51.value
                            temp_multiplicateur_majoration_loyer_reference_3 = True
                        elif match_arg_51.code == Collectivite_Code.SaintBarthelemy:
                            _ = match_arg_51.value
                            temp_multiplicateur_majoration_loyer_reference_3 = True
                        elif match_arg_51.code == Collectivite_Code.SaintMartin:
                            _ = match_arg_51.value
                            temp_multiplicateur_majoration_loyer_reference_3 = True
                        elif match_arg_51.code == Collectivite_Code.Metropole:
                            _ = match_arg_51.value
                            temp_multiplicateur_majoration_loyer_reference_3 = False
                        elif match_arg_51.code == Collectivite_Code.SaintPierreEtMiquelon:
                            _ = match_arg_51.value
                            temp_multiplicateur_majoration_loyer_reference_3 = False
                        elif match_arg_51.code == Collectivite_Code.Mayotte:
                            _ = match_arg_51.value
                            temp_multiplicateur_majoration_loyer_reference_3 = True
                        if (((date_courante_6 >=
                            date_of_numbers(2021,10,1)) and
                            (date_courante_6 <
                            date_of_numbers(2022,1,1))) and
                            (temp_multiplicateur_majoration_loyer_reference_3 and
                            (nombre_personnes_a_charge_2 >=
                            integer_of_string("6")))):
                            temp_multiplicateur_majoration_loyer_reference_1 = decimal_of_string("5.")
                        else:
                            temp_multiplicateur_majoration_loyer_reference_1 = dead_value
                            raise EmptyError
                except EmptyError:
                    match_arg_52 = residence_2
                    if match_arg_52.code == Collectivite_Code.Guadeloupe:
                        _ = match_arg_52.value
                        temp_multiplicateur_majoration_loyer_reference_4 = True
                    elif match_arg_52.code == Collectivite_Code.Guyane:
                        _ = match_arg_52.value
                        temp_multiplicateur_majoration_loyer_reference_4 = False
                    elif match_arg_52.code == Collectivite_Code.Martinique:
                        _ = match_arg_52.value
                        temp_multiplicateur_majoration_loyer_reference_4 = True
                    elif match_arg_52.code == Collectivite_Code.LaReunion:
                        _ = match_arg_52.value
                        temp_multiplicateur_majoration_loyer_reference_4 = True
                    elif match_arg_52.code == Collectivite_Code.SaintBarthelemy:
                        _ = match_arg_52.value
                        temp_multiplicateur_majoration_loyer_reference_4 = True
                    elif match_arg_52.code == Collectivite_Code.SaintMartin:
                        _ = match_arg_52.value
                        temp_multiplicateur_majoration_loyer_reference_4 = True
                    elif match_arg_52.code == Collectivite_Code.Metropole:
                        _ = match_arg_52.value
                        temp_multiplicateur_majoration_loyer_reference_4 = False
                    elif match_arg_52.code == Collectivite_Code.SaintPierreEtMiquelon:
                        _ = match_arg_52.value
                        temp_multiplicateur_majoration_loyer_reference_4 = False
                    elif match_arg_52.code == Collectivite_Code.Mayotte:
                        _ = match_arg_52.value
                        temp_multiplicateur_majoration_loyer_reference_4 = True
                    if (((date_courante_6 >= date_of_numbers(2022,1,1)) and
                        (date_courante_6 < date_of_numbers(2022,7,1))) and
                        (temp_multiplicateur_majoration_loyer_reference_4 and
                        (nombre_personnes_a_charge_2 >=
                        integer_of_string("6")))):
                        temp_multiplicateur_majoration_loyer_reference_1 = decimal_of_string("5.")
                    else:
                        temp_multiplicateur_majoration_loyer_reference_1 = dead_value
                        raise EmptyError
            except EmptyError:
                match_arg_53 = residence_2
                if match_arg_53.code == Collectivite_Code.Guadeloupe:
                    _ = match_arg_53.value
                    temp_multiplicateur_majoration_loyer_reference_5 = True
                elif match_arg_53.code == Collectivite_Code.Guyane:
                    _ = match_arg_53.value
                    temp_multiplicateur_majoration_loyer_reference_5 = False
                elif match_arg_53.code == Collectivite_Code.Martinique:
                    _ = match_arg_53.value
                    temp_multiplicateur_majoration_loyer_reference_5 = True
                elif match_arg_53.code == Collectivite_Code.LaReunion:
                    _ = match_arg_53.value
                    temp_multiplicateur_majoration_loyer_reference_5 = True
                elif match_arg_53.code == Collectivite_Code.SaintBarthelemy:
                    _ = match_arg_53.value
                    temp_multiplicateur_majoration_loyer_reference_5 = True
                elif match_arg_53.code == Collectivite_Code.SaintMartin:
                    _ = match_arg_53.value
                    temp_multiplicateur_majoration_loyer_reference_5 = True
                elif match_arg_53.code == Collectivite_Code.Metropole:
                    _ = match_arg_53.value
                    temp_multiplicateur_majoration_loyer_reference_5 = False
                elif match_arg_53.code == Collectivite_Code.SaintPierreEtMiquelon:
                    _ = match_arg_53.value
                    temp_multiplicateur_majoration_loyer_reference_5 = False
                elif match_arg_53.code == Collectivite_Code.Mayotte:
                    _ = match_arg_53.value
                    temp_multiplicateur_majoration_loyer_reference_5 = True
                if (((date_courante_6 >= date_of_numbers(2022,7,1)) and
                    (date_courante_6 < date_of_numbers(2023,1,1))) and
                    (temp_multiplicateur_majoration_loyer_reference_5 and
                    (nombre_personnes_a_charge_2 >=
                    integer_of_string("6")))):
                    temp_multiplicateur_majoration_loyer_reference_1 = decimal_of_string("5.")
                else:
                    temp_multiplicateur_majoration_loyer_reference_1 = dead_value
                    raise EmptyError
        except EmptyError:
            try:
                try:
                    if ((date_courante_6 >= date_of_numbers(2020,10,1)) and
                        (date_courante_6 <
                        date_of_numbers(2021,10,1))):
                        temp_multiplicateur_majoration_loyer_reference_1 = decimal_of_integer((nombre_personnes_a_charge_2 -
                            integer_of_string("1")))
                    else:
                        temp_multiplicateur_majoration_loyer_reference_1 = dead_value
                        raise EmptyError
                except EmptyError:
                    if ((date_courante_6 >= date_of_numbers(2021,10,1)) and
                        (date_courante_6 <
                        date_of_numbers(2022,7,1))):
                        temp_multiplicateur_majoration_loyer_reference_1 = decimal_of_integer((nombre_personnes_a_charge_2 -
                            integer_of_string("1")))
                    else:
                        temp_multiplicateur_majoration_loyer_reference_1 = dead_value
                        raise EmptyError
            except EmptyError:
                if (date_courante_6 >=
                    date_of_numbers(2022,7,1)):
                    temp_multiplicateur_majoration_loyer_reference_1 = decimal_of_integer((nombre_personnes_a_charge_2 -
                        integer_of_string("1")))
                else:
                    temp_multiplicateur_majoration_loyer_reference_1 = dead_value
                    raise EmptyError
    except EmptyError:
        temp_multiplicateur_majoration_loyer_reference_1 = dead_value
        raise NoValueProvided(SourcePosition(filename="examples/aides_logement/prologue.catala_fr",
                                             start_line=606, start_column=11,
                                             end_line=606, end_column=52,
                                             law_headings=["Secteur locatif",
                                             "Calcul du montant de l'aide personnalisée au logement",
                                             "Déclarations des champs d'application",
                                             "Prologue : aides au logement"]))
    multiplicateur_majoration_loyer_reference = temp_multiplicateur_majoration_loyer_reference_1
    try:
        try:
            try:
                try:
                    try:
                        try:
                            match_arg_54 = residence_2
                            if match_arg_54.code == Collectivite_Code.Guadeloupe:
                                _ = match_arg_54.value
                                temp_multiplicateur_majoration_plafond_loyer_d823_16_2 = True
                            elif match_arg_54.code == Collectivite_Code.Guyane:
                                _ = match_arg_54.value
                                temp_multiplicateur_majoration_plafond_loyer_d823_16_2 = False
                            elif match_arg_54.code == Collectivite_Code.Martinique:
                                _ = match_arg_54.value
                                temp_multiplicateur_majoration_plafond_loyer_d823_16_2 = True
                            elif match_arg_54.code == Collectivite_Code.LaReunion:
                                _ = match_arg_54.value
                                temp_multiplicateur_majoration_plafond_loyer_d823_16_2 = True
                            elif match_arg_54.code == Collectivite_Code.SaintBarthelemy:
                                _ = match_arg_54.value
                                temp_multiplicateur_majoration_plafond_loyer_d823_16_2 = True
                            elif match_arg_54.code == Collectivite_Code.SaintMartin:
                                _ = match_arg_54.value
                                temp_multiplicateur_majoration_plafond_loyer_d823_16_2 = True
                            elif match_arg_54.code == Collectivite_Code.Metropole:
                                _ = match_arg_54.value
                                temp_multiplicateur_majoration_plafond_loyer_d823_16_2 = False
                            elif match_arg_54.code == Collectivite_Code.SaintPierreEtMiquelon:
                                _ = match_arg_54.value
                                temp_multiplicateur_majoration_plafond_loyer_d823_16_2 = False
                            elif match_arg_54.code == Collectivite_Code.Mayotte:
                                _ = match_arg_54.value
                                temp_multiplicateur_majoration_plafond_loyer_d823_16_2 = True
                            if (((date_courante_6 >=
                                date_of_numbers(2020,1,1)) and
                                (date_courante_6 <
                                date_of_numbers(2020,10,1))) and
                                (temp_multiplicateur_majoration_plafond_loyer_d823_16_2 and
                                (nombre_personnes_a_charge_2 >=
                                integer_of_string("6")))):
                                temp_multiplicateur_majoration_plafond_loyer_d823_16_2_1 = decimal_of_string("5.")
                            else:
                                temp_multiplicateur_majoration_plafond_loyer_d823_16_2_1 = dead_value
                                raise EmptyError
                        except EmptyError:
                            match_arg_55 = residence_2
                            if match_arg_55.code == Collectivite_Code.Guadeloupe:
                                _ = match_arg_55.value
                                temp_multiplicateur_majoration_plafond_loyer_d823_16_2_2 = True
                            elif match_arg_55.code == Collectivite_Code.Guyane:
                                _ = match_arg_55.value
                                temp_multiplicateur_majoration_plafond_loyer_d823_16_2_2 = False
                            elif match_arg_55.code == Collectivite_Code.Martinique:
                                _ = match_arg_55.value
                                temp_multiplicateur_majoration_plafond_loyer_d823_16_2_2 = True
                            elif match_arg_55.code == Collectivite_Code.LaReunion:
                                _ = match_arg_55.value
                                temp_multiplicateur_majoration_plafond_loyer_d823_16_2_2 = True
                            elif match_arg_55.code == Collectivite_Code.SaintBarthelemy:
                                _ = match_arg_55.value
                                temp_multiplicateur_majoration_plafond_loyer_d823_16_2_2 = True
                            elif match_arg_55.code == Collectivite_Code.SaintMartin:
                                _ = match_arg_55.value
                                temp_multiplicateur_majoration_plafond_loyer_d823_16_2_2 = True
                            elif match_arg_55.code == Collectivite_Code.Metropole:
                                _ = match_arg_55.value
                                temp_multiplicateur_majoration_plafond_loyer_d823_16_2_2 = False
                            elif match_arg_55.code == Collectivite_Code.SaintPierreEtMiquelon:
                                _ = match_arg_55.value
                                temp_multiplicateur_majoration_plafond_loyer_d823_16_2_2 = False
                            elif match_arg_55.code == Collectivite_Code.Mayotte:
                                _ = match_arg_55.value
                                temp_multiplicateur_majoration_plafond_loyer_d823_16_2_2 = True
                            if (((date_courante_6 >=
                                date_of_numbers(2020,10,1)) and
                                (date_courante_6 <
                                date_of_numbers(2021,10,1))) and
                                (temp_multiplicateur_majoration_plafond_loyer_d823_16_2_2 and
                                (nombre_personnes_a_charge_2 >=
                                integer_of_string("6")))):
                                temp_multiplicateur_majoration_plafond_loyer_d823_16_2_1 = decimal_of_string("5.")
                            else:
                                temp_multiplicateur_majoration_plafond_loyer_d823_16_2_1 = dead_value
                                raise EmptyError
                    except EmptyError:
                        match_arg_56 = residence_2
                        if match_arg_56.code == Collectivite_Code.Guadeloupe:
                            _ = match_arg_56.value
                            temp_multiplicateur_majoration_plafond_loyer_d823_16_2_3 = True
                        elif match_arg_56.code == Collectivite_Code.Guyane:
                            _ = match_arg_56.value
                            temp_multiplicateur_majoration_plafond_loyer_d823_16_2_3 = False
                        elif match_arg_56.code == Collectivite_Code.Martinique:
                            _ = match_arg_56.value
                            temp_multiplicateur_majoration_plafond_loyer_d823_16_2_3 = True
                        elif match_arg_56.code == Collectivite_Code.LaReunion:
                            _ = match_arg_56.value
                            temp_multiplicateur_majoration_plafond_loyer_d823_16_2_3 = True
                        elif match_arg_56.code == Collectivite_Code.SaintBarthelemy:
                            _ = match_arg_56.value
                            temp_multiplicateur_majoration_plafond_loyer_d823_16_2_3 = True
                        elif match_arg_56.code == Collectivite_Code.SaintMartin:
                            _ = match_arg_56.value
                            temp_multiplicateur_majoration_plafond_loyer_d823_16_2_3 = True
                        elif match_arg_56.code == Collectivite_Code.Metropole:
                            _ = match_arg_56.value
                            temp_multiplicateur_majoration_plafond_loyer_d823_16_2_3 = False
                        elif match_arg_56.code == Collectivite_Code.SaintPierreEtMiquelon:
                            _ = match_arg_56.value
                            temp_multiplicateur_majoration_plafond_loyer_d823_16_2_3 = False
                        elif match_arg_56.code == Collectivite_Code.Mayotte:
                            _ = match_arg_56.value
                            temp_multiplicateur_majoration_plafond_loyer_d823_16_2_3 = True
                        if (((date_courante_6 >=
                            date_of_numbers(2021,10,1)) and
                            (date_courante_6 <
                            date_of_numbers(2022,1,1))) and
                            (temp_multiplicateur_majoration_plafond_loyer_d823_16_2_3 and
                            (nombre_personnes_a_charge_2 >=
                            integer_of_string("6")))):
                            temp_multiplicateur_majoration_plafond_loyer_d823_16_2_1 = decimal_of_string("5.")
                        else:
                            temp_multiplicateur_majoration_plafond_loyer_d823_16_2_1 = dead_value
                            raise EmptyError
                except EmptyError:
                    match_arg_57 = residence_2
                    if match_arg_57.code == Collectivite_Code.Guadeloupe:
                        _ = match_arg_57.value
                        temp_multiplicateur_majoration_plafond_loyer_d823_16_2_4 = True
                    elif match_arg_57.code == Collectivite_Code.Guyane:
                        _ = match_arg_57.value
                        temp_multiplicateur_majoration_plafond_loyer_d823_16_2_4 = False
                    elif match_arg_57.code == Collectivite_Code.Martinique:
                        _ = match_arg_57.value
                        temp_multiplicateur_majoration_plafond_loyer_d823_16_2_4 = True
                    elif match_arg_57.code == Collectivite_Code.LaReunion:
                        _ = match_arg_57.value
                        temp_multiplicateur_majoration_plafond_loyer_d823_16_2_4 = True
                    elif match_arg_57.code == Collectivite_Code.SaintBarthelemy:
                        _ = match_arg_57.value
                        temp_multiplicateur_majoration_plafond_loyer_d823_16_2_4 = True
                    elif match_arg_57.code == Collectivite_Code.SaintMartin:
                        _ = match_arg_57.value
                        temp_multiplicateur_majoration_plafond_loyer_d823_16_2_4 = True
                    elif match_arg_57.code == Collectivite_Code.Metropole:
                        _ = match_arg_57.value
                        temp_multiplicateur_majoration_plafond_loyer_d823_16_2_4 = False
                    elif match_arg_57.code == Collectivite_Code.SaintPierreEtMiquelon:
                        _ = match_arg_57.value
                        temp_multiplicateur_majoration_plafond_loyer_d823_16_2_4 = False
                    elif match_arg_57.code == Collectivite_Code.Mayotte:
                        _ = match_arg_57.value
                        temp_multiplicateur_majoration_plafond_loyer_d823_16_2_4 = True
                    if (((date_courante_6 >= date_of_numbers(2022,1,1)) and
                        (date_courante_6 < date_of_numbers(2022,7,1))) and
                        (temp_multiplicateur_majoration_plafond_loyer_d823_16_2_4 and
                        (nombre_personnes_a_charge_2 >=
                        integer_of_string("6")))):
                        temp_multiplicateur_majoration_plafond_loyer_d823_16_2_1 = decimal_of_string("5.")
                    else:
                        temp_multiplicateur_majoration_plafond_loyer_d823_16_2_1 = dead_value
                        raise EmptyError
            except EmptyError:
                match_arg_58 = residence_2
                if match_arg_58.code == Collectivite_Code.Guadeloupe:
                    _ = match_arg_58.value
                    temp_multiplicateur_majoration_plafond_loyer_d823_16_2_5 = True
                elif match_arg_58.code == Collectivite_Code.Guyane:
                    _ = match_arg_58.value
                    temp_multiplicateur_majoration_plafond_loyer_d823_16_2_5 = False
                elif match_arg_58.code == Collectivite_Code.Martinique:
                    _ = match_arg_58.value
                    temp_multiplicateur_majoration_plafond_loyer_d823_16_2_5 = True
                elif match_arg_58.code == Collectivite_Code.LaReunion:
                    _ = match_arg_58.value
                    temp_multiplicateur_majoration_plafond_loyer_d823_16_2_5 = True
                elif match_arg_58.code == Collectivite_Code.SaintBarthelemy:
                    _ = match_arg_58.value
                    temp_multiplicateur_majoration_plafond_loyer_d823_16_2_5 = True
                elif match_arg_58.code == Collectivite_Code.SaintMartin:
                    _ = match_arg_58.value
                    temp_multiplicateur_majoration_plafond_loyer_d823_16_2_5 = True
                elif match_arg_58.code == Collectivite_Code.Metropole:
                    _ = match_arg_58.value
                    temp_multiplicateur_majoration_plafond_loyer_d823_16_2_5 = False
                elif match_arg_58.code == Collectivite_Code.SaintPierreEtMiquelon:
                    _ = match_arg_58.value
                    temp_multiplicateur_majoration_plafond_loyer_d823_16_2_5 = False
                elif match_arg_58.code == Collectivite_Code.Mayotte:
                    _ = match_arg_58.value
                    temp_multiplicateur_majoration_plafond_loyer_d823_16_2_5 = True
                if (((date_courante_6 >= date_of_numbers(2022,7,1)) and
                    (date_courante_6 < date_of_numbers(2023,1,1))) and
                    (temp_multiplicateur_majoration_plafond_loyer_d823_16_2_5 and
                    (nombre_personnes_a_charge_2 >=
                    integer_of_string("6")))):
                    temp_multiplicateur_majoration_plafond_loyer_d823_16_2_1 = decimal_of_string("5.")
                else:
                    temp_multiplicateur_majoration_plafond_loyer_d823_16_2_1 = dead_value
                    raise EmptyError
        except EmptyError:
            try:
                try:
                    try:
                        try:
                            if ((date_courante_6 <
                                date_of_numbers(2021,10,1)) and
                                ((date_courante_6 >=
                                date_of_numbers(2020,10,1)) and
                                colocation)):
                                temp_multiplicateur_majoration_plafond_loyer_d823_16_2_1 = decimal_of_integer((nombre_personnes_a_charge_2 -
                                    integer_of_string("1")))
                            else:
                                temp_multiplicateur_majoration_plafond_loyer_d823_16_2_1 = dead_value
                                raise EmptyError
                        except EmptyError:
                            if ((date_courante_6 <
                                date_of_numbers(2021,10,1)) and
                                (date_courante_6 >=
                                date_of_numbers(2020,10,1))):
                                temp_multiplicateur_majoration_plafond_loyer_d823_16_2_1 = decimal_of_integer((nombre_personnes_a_charge_2 -
                                    integer_of_string("1")))
                            else:
                                temp_multiplicateur_majoration_plafond_loyer_d823_16_2_1 = dead_value
                                raise EmptyError
                    except EmptyError:
                        if ((date_courante_6 >=
                            date_of_numbers(2021,10,1)) and
                            ((date_courante_6 <
                            date_of_numbers(2022,7,1)) and
                            colocation)):
                            temp_multiplicateur_majoration_plafond_loyer_d823_16_2_1 = decimal_of_integer((nombre_personnes_a_charge_2 -
                                integer_of_string("1")))
                        else:
                            temp_multiplicateur_majoration_plafond_loyer_d823_16_2_1 = dead_value
                            raise EmptyError
                except EmptyError:
                    if ((date_courante_6 >= date_of_numbers(2021,10,1)) and
                        (date_courante_6 <
                        date_of_numbers(2022,7,1))):
                        temp_multiplicateur_majoration_plafond_loyer_d823_16_2_1 = decimal_of_integer((nombre_personnes_a_charge_2 -
                            integer_of_string("1")))
                    else:
                        temp_multiplicateur_majoration_plafond_loyer_d823_16_2_1 = dead_value
                        raise EmptyError
            except EmptyError:
                if (date_courante_6 >=
                    date_of_numbers(2022,7,1)):
                    temp_multiplicateur_majoration_plafond_loyer_d823_16_2_1 = decimal_of_integer((nombre_personnes_a_charge_2 -
                        integer_of_string("1")))
                else:
                    temp_multiplicateur_majoration_plafond_loyer_d823_16_2_1 = dead_value
                    raise EmptyError
    except EmptyError:
        temp_multiplicateur_majoration_plafond_loyer_d823_16_2_1 = dead_value
        raise NoValueProvided(SourcePosition(filename="examples/aides_logement/prologue.catala_fr",
                                             start_line=604, start_column=11,
                                             end_line=604, end_column=60,
                                             law_headings=["Secteur locatif",
                                             "Calcul du montant de l'aide personnalisée au logement",
                                             "Déclarations des champs d'application",
                                             "Prologue : aides au logement"]))
    multiplicateur_majoration_plafond_loyer_d823_16_2 = temp_multiplicateur_majoration_plafond_loyer_d823_16_2_1
    try:
        try:
            try:
                try:
                    def temp_montant_forfaitaire_charges_d823_16(_:Unit):
                        raise EmptyError
                    def temp_montant_forfaitaire_charges_d823_16_1(_:Unit):
                        return False
                    def temp_montant_forfaitaire_charges_d823_16_2(_:Unit):
                        match_arg_59 = residence_2
                        if match_arg_59.code == Collectivite_Code.Guadeloupe:
                            _ = match_arg_59.value
                            temp_montant_forfaitaire_charges_d823_16_3 = True
                        elif match_arg_59.code == Collectivite_Code.Guyane:
                            _ = match_arg_59.value
                            temp_montant_forfaitaire_charges_d823_16_3 = False
                        elif match_arg_59.code == Collectivite_Code.Martinique:
                            _ = match_arg_59.value
                            temp_montant_forfaitaire_charges_d823_16_3 = True
                        elif match_arg_59.code == Collectivite_Code.LaReunion:
                            _ = match_arg_59.value
                            temp_montant_forfaitaire_charges_d823_16_3 = True
                        elif match_arg_59.code == Collectivite_Code.SaintBarthelemy:
                            _ = match_arg_59.value
                            temp_montant_forfaitaire_charges_d823_16_3 = True
                        elif match_arg_59.code == Collectivite_Code.SaintMartin:
                            _ = match_arg_59.value
                            temp_montant_forfaitaire_charges_d823_16_3 = True
                        elif match_arg_59.code == Collectivite_Code.Metropole:
                            _ = match_arg_59.value
                            temp_montant_forfaitaire_charges_d823_16_3 = False
                        elif match_arg_59.code == Collectivite_Code.SaintPierreEtMiquelon:
                            _ = match_arg_59.value
                            temp_montant_forfaitaire_charges_d823_16_3 = False
                        elif match_arg_59.code == Collectivite_Code.Mayotte:
                            _ = match_arg_59.value
                            temp_montant_forfaitaire_charges_d823_16_3 = True
                        if (((date_courante_6 >=
                            date_of_numbers(2020,1,1)) and (date_courante_6 <
                            date_of_numbers(2020,10,1))) and
                            temp_montant_forfaitaire_charges_d823_16_3):
                            match_arg_60 = situation_familiale_calcul_apl_2
                            if match_arg_60.code == SituationFamilialeCalculAPL_Code.PersonneSeule:
                                _ = match_arg_60.value
                                temp_montant_forfaitaire_charges_d823_16_4 = money_of_cents_string("1858")
                            elif match_arg_60.code == SituationFamilialeCalculAPL_Code.Couple:
                                _ = match_arg_60.value
                                temp_montant_forfaitaire_charges_d823_16_4 = money_of_cents_string("3614")
                            match_arg_61 = situation_familiale_calcul_apl_2
                            if match_arg_61.code == SituationFamilialeCalculAPL_Code.PersonneSeule:
                                _ = match_arg_61.value
                                temp_montant_forfaitaire_charges_d823_16_5 = money_of_cents_string("1858")
                            elif match_arg_61.code == SituationFamilialeCalculAPL_Code.Couple:
                                _ = match_arg_61.value
                                temp_montant_forfaitaire_charges_d823_16_5 = money_of_cents_string("3614")
                            if ((temp_montant_forfaitaire_charges_d823_16_5 +
                                (money_of_cents_string("929") *
                                decimal_of_integer(nombre_personnes_a_charge_2))) >
                                (temp_montant_forfaitaire_charges_d823_16_4 +
                                (money_of_cents_string("929") *
                                decimal_of_string("6.")))):
                                match_arg_62 = situation_familiale_calcul_apl_2
                                if match_arg_62.code == SituationFamilialeCalculAPL_Code.PersonneSeule:
                                    _ = match_arg_62.value
                                    temp_montant_forfaitaire_charges_d823_16_6 = money_of_cents_string("1858")
                                elif match_arg_62.code == SituationFamilialeCalculAPL_Code.Couple:
                                    _ = match_arg_62.value
                                    temp_montant_forfaitaire_charges_d823_16_6 = money_of_cents_string("3614")
                                return (temp_montant_forfaitaire_charges_d823_16_6 +
                                    (money_of_cents_string("929") *
                                    decimal_of_string("6.")))
                            else:
                                match_arg_63 = situation_familiale_calcul_apl_2
                                if match_arg_63.code == SituationFamilialeCalculAPL_Code.PersonneSeule:
                                    _ = match_arg_63.value
                                    temp_montant_forfaitaire_charges_d823_16_7 = money_of_cents_string("1858")
                                elif match_arg_63.code == SituationFamilialeCalculAPL_Code.Couple:
                                    _ = match_arg_63.value
                                    temp_montant_forfaitaire_charges_d823_16_7 = money_of_cents_string("3614")
                                return (temp_montant_forfaitaire_charges_d823_16_7 +
                                    (money_of_cents_string("929") *
                                    decimal_of_integer(nombre_personnes_a_charge_2)))
                        else:
                            raise EmptyError
                    def temp_montant_forfaitaire_charges_d823_16_8(_:Unit):
                        match_arg_64 = residence_2
                        if match_arg_64.code == Collectivite_Code.Guadeloupe:
                            _ = match_arg_64.value
                            temp_montant_forfaitaire_charges_d823_16_9 = True
                        elif match_arg_64.code == Collectivite_Code.Guyane:
                            _ = match_arg_64.value
                            temp_montant_forfaitaire_charges_d823_16_9 = False
                        elif match_arg_64.code == Collectivite_Code.Martinique:
                            _ = match_arg_64.value
                            temp_montant_forfaitaire_charges_d823_16_9 = True
                        elif match_arg_64.code == Collectivite_Code.LaReunion:
                            _ = match_arg_64.value
                            temp_montant_forfaitaire_charges_d823_16_9 = True
                        elif match_arg_64.code == Collectivite_Code.SaintBarthelemy:
                            _ = match_arg_64.value
                            temp_montant_forfaitaire_charges_d823_16_9 = True
                        elif match_arg_64.code == Collectivite_Code.SaintMartin:
                            _ = match_arg_64.value
                            temp_montant_forfaitaire_charges_d823_16_9 = True
                        elif match_arg_64.code == Collectivite_Code.Metropole:
                            _ = match_arg_64.value
                            temp_montant_forfaitaire_charges_d823_16_9 = False
                        elif match_arg_64.code == Collectivite_Code.SaintPierreEtMiquelon:
                            _ = match_arg_64.value
                            temp_montant_forfaitaire_charges_d823_16_9 = False
                        elif match_arg_64.code == Collectivite_Code.Mayotte:
                            _ = match_arg_64.value
                            temp_montant_forfaitaire_charges_d823_16_9 = True
                        if (((date_courante_6 >=
                            date_of_numbers(2020,10,1)) and
                            (date_courante_6 <
                            date_of_numbers(2021,10,1))) and
                            temp_montant_forfaitaire_charges_d823_16_9):
                            match_arg_65 = situation_familiale_calcul_apl_2
                            if match_arg_65.code == SituationFamilialeCalculAPL_Code.PersonneSeule:
                                _ = match_arg_65.value
                                temp_montant_forfaitaire_charges_d823_16_10 = money_of_cents_string("1864")
                            elif match_arg_65.code == SituationFamilialeCalculAPL_Code.Couple:
                                _ = match_arg_65.value
                                temp_montant_forfaitaire_charges_d823_16_10 = money_of_cents_string("3625")
                            match_arg_66 = situation_familiale_calcul_apl_2
                            if match_arg_66.code == SituationFamilialeCalculAPL_Code.PersonneSeule:
                                _ = match_arg_66.value
                                temp_montant_forfaitaire_charges_d823_16_11 = money_of_cents_string("1864")
                            elif match_arg_66.code == SituationFamilialeCalculAPL_Code.Couple:
                                _ = match_arg_66.value
                                temp_montant_forfaitaire_charges_d823_16_11 = money_of_cents_string("3625")
                            if ((temp_montant_forfaitaire_charges_d823_16_11 +
                                (money_of_cents_string("932") *
                                decimal_of_integer(nombre_personnes_a_charge_2))) >
                                (temp_montant_forfaitaire_charges_d823_16_10 +
                                (money_of_cents_string("932") *
                                decimal_of_string("6.")))):
                                match_arg_67 = situation_familiale_calcul_apl_2
                                if match_arg_67.code == SituationFamilialeCalculAPL_Code.PersonneSeule:
                                    _ = match_arg_67.value
                                    temp_montant_forfaitaire_charges_d823_16_12 = money_of_cents_string("1864")
                                elif match_arg_67.code == SituationFamilialeCalculAPL_Code.Couple:
                                    _ = match_arg_67.value
                                    temp_montant_forfaitaire_charges_d823_16_12 = money_of_cents_string("3625")
                                return (temp_montant_forfaitaire_charges_d823_16_12 +
                                    (money_of_cents_string("932") *
                                    decimal_of_string("6.")))
                            else:
                                match_arg_68 = situation_familiale_calcul_apl_2
                                if match_arg_68.code == SituationFamilialeCalculAPL_Code.PersonneSeule:
                                    _ = match_arg_68.value
                                    temp_montant_forfaitaire_charges_d823_16_13 = money_of_cents_string("1864")
                                elif match_arg_68.code == SituationFamilialeCalculAPL_Code.Couple:
                                    _ = match_arg_68.value
                                    temp_montant_forfaitaire_charges_d823_16_13 = money_of_cents_string("3625")
                                return (temp_montant_forfaitaire_charges_d823_16_13 +
                                    (money_of_cents_string("932") *
                                    decimal_of_integer(nombre_personnes_a_charge_2)))
                        else:
                            raise EmptyError
                    def temp_montant_forfaitaire_charges_d823_16_14(_:Unit):
                        try:
                            match_arg_69 = residence_2
                            if match_arg_69.code == Collectivite_Code.Guadeloupe:
                                _ = match_arg_69.value
                                temp_montant_forfaitaire_charges_d823_16_15 = True
                            elif match_arg_69.code == Collectivite_Code.Guyane:
                                _ = match_arg_69.value
                                temp_montant_forfaitaire_charges_d823_16_15 = False
                            elif match_arg_69.code == Collectivite_Code.Martinique:
                                _ = match_arg_69.value
                                temp_montant_forfaitaire_charges_d823_16_15 = True
                            elif match_arg_69.code == Collectivite_Code.LaReunion:
                                _ = match_arg_69.value
                                temp_montant_forfaitaire_charges_d823_16_15 = True
                            elif match_arg_69.code == Collectivite_Code.SaintBarthelemy:
                                _ = match_arg_69.value
                                temp_montant_forfaitaire_charges_d823_16_15 = True
                            elif match_arg_69.code == Collectivite_Code.SaintMartin:
                                _ = match_arg_69.value
                                temp_montant_forfaitaire_charges_d823_16_15 = True
                            elif match_arg_69.code == Collectivite_Code.Metropole:
                                _ = match_arg_69.value
                                temp_montant_forfaitaire_charges_d823_16_15 = False
                            elif match_arg_69.code == Collectivite_Code.SaintPierreEtMiquelon:
                                _ = match_arg_69.value
                                temp_montant_forfaitaire_charges_d823_16_15 = False
                            elif match_arg_69.code == Collectivite_Code.Mayotte:
                                _ = match_arg_69.value
                                temp_montant_forfaitaire_charges_d823_16_15 = True
                            if (((date_courante_6 >=
                                date_of_numbers(2021,10,1)) and
                                (date_courante_6 <
                                date_of_numbers(2022,1,1))) and
                                temp_montant_forfaitaire_charges_d823_16_15):
                                match_arg_70 = situation_familiale_calcul_apl_2
                                if match_arg_70.code == SituationFamilialeCalculAPL_Code.PersonneSeule:
                                    _ = match_arg_70.value
                                    temp_montant_forfaitaire_charges_d823_16_16 = money_of_cents_string("1872")
                                elif match_arg_70.code == SituationFamilialeCalculAPL_Code.Couple:
                                    _ = match_arg_70.value
                                    temp_montant_forfaitaire_charges_d823_16_16 = money_of_cents_string("3640")
                                match_arg_71 = situation_familiale_calcul_apl_2
                                if match_arg_71.code == SituationFamilialeCalculAPL_Code.PersonneSeule:
                                    _ = match_arg_71.value
                                    temp_montant_forfaitaire_charges_d823_16_17 = money_of_cents_string("1872")
                                elif match_arg_71.code == SituationFamilialeCalculAPL_Code.Couple:
                                    _ = match_arg_71.value
                                    temp_montant_forfaitaire_charges_d823_16_17 = money_of_cents_string("3640")
                                if ((temp_montant_forfaitaire_charges_d823_16_17 +
                                    (money_of_cents_string("936") *
                                    decimal_of_integer(nombre_personnes_a_charge_2))) >
                                    (temp_montant_forfaitaire_charges_d823_16_16 +
                                    (money_of_cents_string("936") *
                                    decimal_of_string("6.")))):
                                    match_arg_72 = situation_familiale_calcul_apl_2
                                    if match_arg_72.code == SituationFamilialeCalculAPL_Code.PersonneSeule:
                                        _ = match_arg_72.value
                                        temp_montant_forfaitaire_charges_d823_16_18 = money_of_cents_string("1872")
                                    elif match_arg_72.code == SituationFamilialeCalculAPL_Code.Couple:
                                        _ = match_arg_72.value
                                        temp_montant_forfaitaire_charges_d823_16_18 = money_of_cents_string("3640")
                                    return (temp_montant_forfaitaire_charges_d823_16_18 +
                                        (money_of_cents_string("936") *
                                        decimal_of_string("6.")))
                                else:
                                    match_arg_73 = situation_familiale_calcul_apl_2
                                    if match_arg_73.code == SituationFamilialeCalculAPL_Code.PersonneSeule:
                                        _ = match_arg_73.value
                                        temp_montant_forfaitaire_charges_d823_16_19 = money_of_cents_string("1872")
                                    elif match_arg_73.code == SituationFamilialeCalculAPL_Code.Couple:
                                        _ = match_arg_73.value
                                        temp_montant_forfaitaire_charges_d823_16_19 = money_of_cents_string("3640")
                                    return (temp_montant_forfaitaire_charges_d823_16_19 +
                                        (money_of_cents_string("936") *
                                        decimal_of_integer(nombre_personnes_a_charge_2)))
                            else:
                                raise EmptyError
                        except EmptyError:
                            match_arg_74 = residence_2
                            if match_arg_74.code == Collectivite_Code.Guadeloupe:
                                _ = match_arg_74.value
                                temp_montant_forfaitaire_charges_d823_16_20 = True
                            elif match_arg_74.code == Collectivite_Code.Guyane:
                                _ = match_arg_74.value
                                temp_montant_forfaitaire_charges_d823_16_20 = False
                            elif match_arg_74.code == Collectivite_Code.Martinique:
                                _ = match_arg_74.value
                                temp_montant_forfaitaire_charges_d823_16_20 = True
                            elif match_arg_74.code == Collectivite_Code.LaReunion:
                                _ = match_arg_74.value
                                temp_montant_forfaitaire_charges_d823_16_20 = True
                            elif match_arg_74.code == Collectivite_Code.SaintBarthelemy:
                                _ = match_arg_74.value
                                temp_montant_forfaitaire_charges_d823_16_20 = True
                            elif match_arg_74.code == Collectivite_Code.SaintMartin:
                                _ = match_arg_74.value
                                temp_montant_forfaitaire_charges_d823_16_20 = True
                            elif match_arg_74.code == Collectivite_Code.Metropole:
                                _ = match_arg_74.value
                                temp_montant_forfaitaire_charges_d823_16_20 = False
                            elif match_arg_74.code == Collectivite_Code.SaintPierreEtMiquelon:
                                _ = match_arg_74.value
                                temp_montant_forfaitaire_charges_d823_16_20 = False
                            elif match_arg_74.code == Collectivite_Code.Mayotte:
                                _ = match_arg_74.value
                                temp_montant_forfaitaire_charges_d823_16_20 = True
                            if (((date_courante_6 >=
                                date_of_numbers(2022,1,1)) and
                                (date_courante_6 <
                                date_of_numbers(2022,7,1))) and
                                temp_montant_forfaitaire_charges_d823_16_20):
                                match_arg_75 = situation_familiale_calcul_apl_2
                                if match_arg_75.code == SituationFamilialeCalculAPL_Code.PersonneSeule:
                                    _ = match_arg_75.value
                                    temp_montant_forfaitaire_charges_d823_16_21 = money_of_cents_string("1872")
                                elif match_arg_75.code == SituationFamilialeCalculAPL_Code.Couple:
                                    _ = match_arg_75.value
                                    temp_montant_forfaitaire_charges_d823_16_21 = money_of_cents_string("3640")
                                match_arg_76 = situation_familiale_calcul_apl_2
                                if match_arg_76.code == SituationFamilialeCalculAPL_Code.PersonneSeule:
                                    _ = match_arg_76.value
                                    temp_montant_forfaitaire_charges_d823_16_22 = money_of_cents_string("1872")
                                elif match_arg_76.code == SituationFamilialeCalculAPL_Code.Couple:
                                    _ = match_arg_76.value
                                    temp_montant_forfaitaire_charges_d823_16_22 = money_of_cents_string("3640")
                                if ((temp_montant_forfaitaire_charges_d823_16_22 +
                                    (money_of_cents_string("936") *
                                    decimal_of_integer(nombre_personnes_a_charge_2))) >
                                    (temp_montant_forfaitaire_charges_d823_16_21 +
                                    (money_of_cents_string("936") *
                                    decimal_of_string("6.")))):
                                    match_arg_77 = situation_familiale_calcul_apl_2
                                    if match_arg_77.code == SituationFamilialeCalculAPL_Code.PersonneSeule:
                                        _ = match_arg_77.value
                                        temp_montant_forfaitaire_charges_d823_16_23 = money_of_cents_string("1872")
                                    elif match_arg_77.code == SituationFamilialeCalculAPL_Code.Couple:
                                        _ = match_arg_77.value
                                        temp_montant_forfaitaire_charges_d823_16_23 = money_of_cents_string("3640")
                                    return (temp_montant_forfaitaire_charges_d823_16_23 +
                                        (money_of_cents_string("936") *
                                        decimal_of_string("6.")))
                                else:
                                    match_arg_78 = situation_familiale_calcul_apl_2
                                    if match_arg_78.code == SituationFamilialeCalculAPL_Code.PersonneSeule:
                                        _ = match_arg_78.value
                                        temp_montant_forfaitaire_charges_d823_16_24 = money_of_cents_string("1872")
                                    elif match_arg_78.code == SituationFamilialeCalculAPL_Code.Couple:
                                        _ = match_arg_78.value
                                        temp_montant_forfaitaire_charges_d823_16_24 = money_of_cents_string("3640")
                                    return (temp_montant_forfaitaire_charges_d823_16_24 +
                                        (money_of_cents_string("936") *
                                        decimal_of_integer(nombre_personnes_a_charge_2)))
                            else:
                                raise EmptyError
                    def temp_montant_forfaitaire_charges_d823_16_25(_:Unit):
                        match_arg_79 = residence_2
                        if match_arg_79.code == Collectivite_Code.Guadeloupe:
                            _ = match_arg_79.value
                            temp_montant_forfaitaire_charges_d823_16_26 = True
                        elif match_arg_79.code == Collectivite_Code.Guyane:
                            _ = match_arg_79.value
                            temp_montant_forfaitaire_charges_d823_16_26 = False
                        elif match_arg_79.code == Collectivite_Code.Martinique:
                            _ = match_arg_79.value
                            temp_montant_forfaitaire_charges_d823_16_26 = True
                        elif match_arg_79.code == Collectivite_Code.LaReunion:
                            _ = match_arg_79.value
                            temp_montant_forfaitaire_charges_d823_16_26 = True
                        elif match_arg_79.code == Collectivite_Code.SaintBarthelemy:
                            _ = match_arg_79.value
                            temp_montant_forfaitaire_charges_d823_16_26 = True
                        elif match_arg_79.code == Collectivite_Code.SaintMartin:
                            _ = match_arg_79.value
                            temp_montant_forfaitaire_charges_d823_16_26 = True
                        elif match_arg_79.code == Collectivite_Code.Metropole:
                            _ = match_arg_79.value
                            temp_montant_forfaitaire_charges_d823_16_26 = False
                        elif match_arg_79.code == Collectivite_Code.SaintPierreEtMiquelon:
                            _ = match_arg_79.value
                            temp_montant_forfaitaire_charges_d823_16_26 = False
                        elif match_arg_79.code == Collectivite_Code.Mayotte:
                            _ = match_arg_79.value
                            temp_montant_forfaitaire_charges_d823_16_26 = True
                        if (((date_courante_6 >=
                            date_of_numbers(2022,7,1)) and (date_courante_6 <
                            date_of_numbers(2023,1,1))) and
                            temp_montant_forfaitaire_charges_d823_16_26):
                            match_arg_80 = situation_familiale_calcul_apl_2
                            if match_arg_80.code == SituationFamilialeCalculAPL_Code.PersonneSeule:
                                _ = match_arg_80.value
                                temp_montant_forfaitaire_charges_d823_16_27 = money_of_cents_string("1938")
                            elif match_arg_80.code == SituationFamilialeCalculAPL_Code.Couple:
                                _ = match_arg_80.value
                                temp_montant_forfaitaire_charges_d823_16_27 = money_of_cents_string("3767")
                            match_arg_81 = situation_familiale_calcul_apl_2
                            if match_arg_81.code == SituationFamilialeCalculAPL_Code.PersonneSeule:
                                _ = match_arg_81.value
                                temp_montant_forfaitaire_charges_d823_16_28 = money_of_cents_string("1938")
                            elif match_arg_81.code == SituationFamilialeCalculAPL_Code.Couple:
                                _ = match_arg_81.value
                                temp_montant_forfaitaire_charges_d823_16_28 = money_of_cents_string("3767")
                            if ((temp_montant_forfaitaire_charges_d823_16_28 +
                                (money_of_cents_string("969") *
                                decimal_of_integer(nombre_personnes_a_charge_2))) >
                                (temp_montant_forfaitaire_charges_d823_16_27 +
                                (money_of_cents_string("969") *
                                decimal_of_string("6.")))):
                                match_arg_82 = situation_familiale_calcul_apl_2
                                if match_arg_82.code == SituationFamilialeCalculAPL_Code.PersonneSeule:
                                    _ = match_arg_82.value
                                    temp_montant_forfaitaire_charges_d823_16_29 = money_of_cents_string("1938")
                                elif match_arg_82.code == SituationFamilialeCalculAPL_Code.Couple:
                                    _ = match_arg_82.value
                                    temp_montant_forfaitaire_charges_d823_16_29 = money_of_cents_string("3767")
                                return (temp_montant_forfaitaire_charges_d823_16_29 +
                                    (money_of_cents_string("969") *
                                    decimal_of_string("6.")))
                            else:
                                match_arg_83 = situation_familiale_calcul_apl_2
                                if match_arg_83.code == SituationFamilialeCalculAPL_Code.PersonneSeule:
                                    _ = match_arg_83.value
                                    temp_montant_forfaitaire_charges_d823_16_30 = money_of_cents_string("1938")
                                elif match_arg_83.code == SituationFamilialeCalculAPL_Code.Couple:
                                    _ = match_arg_83.value
                                    temp_montant_forfaitaire_charges_d823_16_30 = money_of_cents_string("3767")
                                return (temp_montant_forfaitaire_charges_d823_16_30 +
                                    (money_of_cents_string("969") *
                                    decimal_of_integer(nombre_personnes_a_charge_2)))
                        else:
                            raise EmptyError
                    def temp_montant_forfaitaire_charges_d823_16_31(_:Unit):
                        match_arg_84 = residence_2
                        if match_arg_84.code == Collectivite_Code.Guadeloupe:
                            _ = match_arg_84.value
                            temp_montant_forfaitaire_charges_d823_16_32 = True
                        elif match_arg_84.code == Collectivite_Code.Guyane:
                            _ = match_arg_84.value
                            temp_montant_forfaitaire_charges_d823_16_32 = False
                        elif match_arg_84.code == Collectivite_Code.Martinique:
                            _ = match_arg_84.value
                            temp_montant_forfaitaire_charges_d823_16_32 = True
                        elif match_arg_84.code == Collectivite_Code.LaReunion:
                            _ = match_arg_84.value
                            temp_montant_forfaitaire_charges_d823_16_32 = True
                        elif match_arg_84.code == Collectivite_Code.SaintBarthelemy:
                            _ = match_arg_84.value
                            temp_montant_forfaitaire_charges_d823_16_32 = True
                        elif match_arg_84.code == Collectivite_Code.SaintMartin:
                            _ = match_arg_84.value
                            temp_montant_forfaitaire_charges_d823_16_32 = True
                        elif match_arg_84.code == Collectivite_Code.Metropole:
                            _ = match_arg_84.value
                            temp_montant_forfaitaire_charges_d823_16_32 = False
                        elif match_arg_84.code == Collectivite_Code.SaintPierreEtMiquelon:
                            _ = match_arg_84.value
                            temp_montant_forfaitaire_charges_d823_16_32 = False
                        elif match_arg_84.code == Collectivite_Code.Mayotte:
                            _ = match_arg_84.value
                            temp_montant_forfaitaire_charges_d823_16_32 = True
                        if ((date_courante_6 >=
                            date_of_numbers(2023,1,1)) and
                            (temp_montant_forfaitaire_charges_d823_16_32 and
                            colocation)):
                            match_arg_85 = situation_familiale_calcul_apl_2
                            if match_arg_85.code == SituationFamilialeCalculAPL_Code.PersonneSeule:
                                _ = match_arg_85.value
                                temp_montant_forfaitaire_charges_d823_16_33 = money_of_cents_string("1938")
                            elif match_arg_85.code == SituationFamilialeCalculAPL_Code.Couple:
                                _ = match_arg_85.value
                                temp_montant_forfaitaire_charges_d823_16_33 = money_of_cents_string("3767")
                            return (temp_montant_forfaitaire_charges_d823_16_33 +
                                (money_of_cents_string("969") *
                                multiplicateur_majoration_charges_d823_16))
                        else:
                            raise EmptyError
                    temp_montant_forfaitaire_charges_d823_16_34 = handle_default(
                        SourcePosition(filename="examples/aides_logement/prologue.catala_fr",
                        start_line=609, start_column=12,
                        end_line=609, end_column=47,
                        law_headings=["Secteur locatif",
                        "Calcul du montant de l'aide personnalisée au logement",
                        "Déclarations des champs d'application",
                        "Prologue : aides au logement"]), [temp_montant_forfaitaire_charges_d823_16_31,
                        temp_montant_forfaitaire_charges_d823_16_25,
                        temp_montant_forfaitaire_charges_d823_16_14,
                        temp_montant_forfaitaire_charges_d823_16_8,
                        temp_montant_forfaitaire_charges_d823_16_2],
                        temp_montant_forfaitaire_charges_d823_16_1,
                        temp_montant_forfaitaire_charges_d823_16)
                except EmptyError:
                    def temp_montant_forfaitaire_charges_d823_16_35(_:Unit):
                        raise EmptyError
                    def temp_montant_forfaitaire_charges_d823_16_36(_:Unit):
                        return False
                    def temp_montant_forfaitaire_charges_d823_16_37(_:Unit):
                        if ((date_courante_6 <
                            date_of_numbers(2021,10,1)) and
                            ((date_courante_6 >=
                            date_of_numbers(2020,10,1)) and
                            colocation)):
                            match_arg_86 = situation_familiale_calcul_apl_2
                            if match_arg_86.code == SituationFamilialeCalculAPL_Code.PersonneSeule:
                                _ = match_arg_86.value
                                temp_montant_forfaitaire_charges_d823_16_38 = money_of_cents_string("2699")
                            elif match_arg_86.code == SituationFamilialeCalculAPL_Code.Couple:
                                _ = match_arg_86.value
                                temp_montant_forfaitaire_charges_d823_16_38 = money_of_cents_string("5399")
                            return (temp_montant_forfaitaire_charges_d823_16_38 +
                                (money_of_cents_string("1224") *
                                multiplicateur_majoration_charges_d823_16))
                        else:
                            raise EmptyError
                    def temp_montant_forfaitaire_charges_d823_16_39(_:Unit):
                        if ((date_courante_6 >=
                            date_of_numbers(2021,10,1)) and
                            ((date_courante_6 <
                            date_of_numbers(2022,7,1)) and
                            colocation)):
                            match_arg_87 = situation_familiale_calcul_apl_2
                            if match_arg_87.code == SituationFamilialeCalculAPL_Code.PersonneSeule:
                                _ = match_arg_87.value
                                temp_montant_forfaitaire_charges_d823_16_40 = money_of_cents_string("2710")
                            elif match_arg_87.code == SituationFamilialeCalculAPL_Code.Couple:
                                _ = match_arg_87.value
                                temp_montant_forfaitaire_charges_d823_16_40 = money_of_cents_string("5422")
                            return (temp_montant_forfaitaire_charges_d823_16_40 +
                                (money_of_cents_string("1229") *
                                multiplicateur_majoration_charges_d823_16))
                        else:
                            raise EmptyError
                    def temp_montant_forfaitaire_charges_d823_16_41(_:Unit):
                        if ((date_courante_6 >=
                            date_of_numbers(2022,7,1)) and
                            colocation):
                            match_arg_88 = situation_familiale_calcul_apl_2
                            if match_arg_88.code == SituationFamilialeCalculAPL_Code.PersonneSeule:
                                _ = match_arg_88.value
                                temp_montant_forfaitaire_charges_d823_16_42 = money_of_cents_string("2805")
                            elif match_arg_88.code == SituationFamilialeCalculAPL_Code.Couple:
                                _ = match_arg_88.value
                                temp_montant_forfaitaire_charges_d823_16_42 = money_of_cents_string("5612")
                            return (temp_montant_forfaitaire_charges_d823_16_42 +
                                (money_of_cents_string("1272") *
                                multiplicateur_majoration_charges_d823_16))
                        else:
                            raise EmptyError
                    temp_montant_forfaitaire_charges_d823_16_34 = handle_default(
                        SourcePosition(filename="examples/aides_logement/prologue.catala_fr",
                        start_line=609, start_column=12,
                        end_line=609, end_column=47,
                        law_headings=["Secteur locatif",
                        "Calcul du montant de l'aide personnalisée au logement",
                        "Déclarations des champs d'application",
                        "Prologue : aides au logement"]), [temp_montant_forfaitaire_charges_d823_16_41,
                        temp_montant_forfaitaire_charges_d823_16_39,
                        temp_montant_forfaitaire_charges_d823_16_37],
                        temp_montant_forfaitaire_charges_d823_16_36,
                        temp_montant_forfaitaire_charges_d823_16_35)
            except EmptyError:
                def temp_montant_forfaitaire_charges_d823_16_43(_:Unit):
                    raise EmptyError
                def temp_montant_forfaitaire_charges_d823_16_44(_:Unit):
                    return False
                def temp_montant_forfaitaire_charges_d823_16_45(_:Unit):
                    match_arg_89 = residence_2
                    if match_arg_89.code == Collectivite_Code.Guadeloupe:
                        _ = match_arg_89.value
                        temp_montant_forfaitaire_charges_d823_16_46 = True
                    elif match_arg_89.code == Collectivite_Code.Guyane:
                        _ = match_arg_89.value
                        temp_montant_forfaitaire_charges_d823_16_46 = False
                    elif match_arg_89.code == Collectivite_Code.Martinique:
                        _ = match_arg_89.value
                        temp_montant_forfaitaire_charges_d823_16_46 = True
                    elif match_arg_89.code == Collectivite_Code.LaReunion:
                        _ = match_arg_89.value
                        temp_montant_forfaitaire_charges_d823_16_46 = True
                    elif match_arg_89.code == Collectivite_Code.SaintBarthelemy:
                        _ = match_arg_89.value
                        temp_montant_forfaitaire_charges_d823_16_46 = True
                    elif match_arg_89.code == Collectivite_Code.SaintMartin:
                        _ = match_arg_89.value
                        temp_montant_forfaitaire_charges_d823_16_46 = True
                    elif match_arg_89.code == Collectivite_Code.Metropole:
                        _ = match_arg_89.value
                        temp_montant_forfaitaire_charges_d823_16_46 = False
                    elif match_arg_89.code == Collectivite_Code.SaintPierreEtMiquelon:
                        _ = match_arg_89.value
                        temp_montant_forfaitaire_charges_d823_16_46 = False
                    elif match_arg_89.code == Collectivite_Code.Mayotte:
                        _ = match_arg_89.value
                        temp_montant_forfaitaire_charges_d823_16_46 = True
                    if (((date_courante_6 >= date_of_numbers(2020,1,1)) and
                        (date_courante_6 < date_of_numbers(2020,10,1))) and
                        temp_montant_forfaitaire_charges_d823_16_46):
                        if ((money_of_cents_string("3614") +
                            (money_of_cents_string("929") *
                            decimal_of_integer(nombre_personnes_a_charge_2))) >
                            (money_of_cents_string("3614") +
                            (money_of_cents_string("929") *
                            decimal_of_string("6.")))):
                            return (money_of_cents_string("3614") +
                                (money_of_cents_string("929") *
                                decimal_of_string("6.")))
                        else:
                            return (money_of_cents_string("3614") +
                                (money_of_cents_string("929") *
                                decimal_of_integer(nombre_personnes_a_charge_2)))
                    else:
                        raise EmptyError
                def temp_montant_forfaitaire_charges_d823_16_47(_:Unit):
                    match_arg_90 = residence_2
                    if match_arg_90.code == Collectivite_Code.Guadeloupe:
                        _ = match_arg_90.value
                        temp_montant_forfaitaire_charges_d823_16_48 = True
                    elif match_arg_90.code == Collectivite_Code.Guyane:
                        _ = match_arg_90.value
                        temp_montant_forfaitaire_charges_d823_16_48 = False
                    elif match_arg_90.code == Collectivite_Code.Martinique:
                        _ = match_arg_90.value
                        temp_montant_forfaitaire_charges_d823_16_48 = True
                    elif match_arg_90.code == Collectivite_Code.LaReunion:
                        _ = match_arg_90.value
                        temp_montant_forfaitaire_charges_d823_16_48 = True
                    elif match_arg_90.code == Collectivite_Code.SaintBarthelemy:
                        _ = match_arg_90.value
                        temp_montant_forfaitaire_charges_d823_16_48 = True
                    elif match_arg_90.code == Collectivite_Code.SaintMartin:
                        _ = match_arg_90.value
                        temp_montant_forfaitaire_charges_d823_16_48 = True
                    elif match_arg_90.code == Collectivite_Code.Metropole:
                        _ = match_arg_90.value
                        temp_montant_forfaitaire_charges_d823_16_48 = False
                    elif match_arg_90.code == Collectivite_Code.SaintPierreEtMiquelon:
                        _ = match_arg_90.value
                        temp_montant_forfaitaire_charges_d823_16_48 = False
                    elif match_arg_90.code == Collectivite_Code.Mayotte:
                        _ = match_arg_90.value
                        temp_montant_forfaitaire_charges_d823_16_48 = True
                    if (((date_courante_6 >= date_of_numbers(2020,10,1)) and
                        (date_courante_6 < date_of_numbers(2021,10,1))) and
                        temp_montant_forfaitaire_charges_d823_16_48):
                        if ((money_of_cents_string("3625") +
                            (money_of_cents_string("932") *
                            decimal_of_integer(nombre_personnes_a_charge_2))) >
                            (money_of_cents_string("3625") +
                            (money_of_cents_string("932") *
                            decimal_of_string("6.")))):
                            return (money_of_cents_string("3625") +
                                (money_of_cents_string("932") *
                                decimal_of_string("6.")))
                        else:
                            return (money_of_cents_string("3625") +
                                (money_of_cents_string("932") *
                                decimal_of_integer(nombre_personnes_a_charge_2)))
                    else:
                        raise EmptyError
                def temp_montant_forfaitaire_charges_d823_16_49(_:Unit):
                    try:
                        match_arg_91 = residence_2
                        if match_arg_91.code == Collectivite_Code.Guadeloupe:
                            _ = match_arg_91.value
                            temp_montant_forfaitaire_charges_d823_16_50 = True
                        elif match_arg_91.code == Collectivite_Code.Guyane:
                            _ = match_arg_91.value
                            temp_montant_forfaitaire_charges_d823_16_50 = False
                        elif match_arg_91.code == Collectivite_Code.Martinique:
                            _ = match_arg_91.value
                            temp_montant_forfaitaire_charges_d823_16_50 = True
                        elif match_arg_91.code == Collectivite_Code.LaReunion:
                            _ = match_arg_91.value
                            temp_montant_forfaitaire_charges_d823_16_50 = True
                        elif match_arg_91.code == Collectivite_Code.SaintBarthelemy:
                            _ = match_arg_91.value
                            temp_montant_forfaitaire_charges_d823_16_50 = True
                        elif match_arg_91.code == Collectivite_Code.SaintMartin:
                            _ = match_arg_91.value
                            temp_montant_forfaitaire_charges_d823_16_50 = True
                        elif match_arg_91.code == Collectivite_Code.Metropole:
                            _ = match_arg_91.value
                            temp_montant_forfaitaire_charges_d823_16_50 = False
                        elif match_arg_91.code == Collectivite_Code.SaintPierreEtMiquelon:
                            _ = match_arg_91.value
                            temp_montant_forfaitaire_charges_d823_16_50 = False
                        elif match_arg_91.code == Collectivite_Code.Mayotte:
                            _ = match_arg_91.value
                            temp_montant_forfaitaire_charges_d823_16_50 = True
                        if (((date_courante_6 >=
                            date_of_numbers(2021,10,1)) and
                            (date_courante_6 <
                            date_of_numbers(2022,1,1))) and
                            temp_montant_forfaitaire_charges_d823_16_50):
                            if ((money_of_cents_string("3640") +
                                (money_of_cents_string("936") *
                                decimal_of_integer(nombre_personnes_a_charge_2))) >
                                (money_of_cents_string("3640") +
                                (money_of_cents_string("936") *
                                decimal_of_string("6.")))):
                                return (money_of_cents_string("3640") +
                                    (money_of_cents_string("936") *
                                    decimal_of_string("6.")))
                            else:
                                return (money_of_cents_string("3640") +
                                    (money_of_cents_string("936") *
                                    decimal_of_integer(nombre_personnes_a_charge_2)))
                        else:
                            raise EmptyError
                    except EmptyError:
                        match_arg_92 = residence_2
                        if match_arg_92.code == Collectivite_Code.Guadeloupe:
                            _ = match_arg_92.value
                            temp_montant_forfaitaire_charges_d823_16_51 = True
                        elif match_arg_92.code == Collectivite_Code.Guyane:
                            _ = match_arg_92.value
                            temp_montant_forfaitaire_charges_d823_16_51 = False
                        elif match_arg_92.code == Collectivite_Code.Martinique:
                            _ = match_arg_92.value
                            temp_montant_forfaitaire_charges_d823_16_51 = True
                        elif match_arg_92.code == Collectivite_Code.LaReunion:
                            _ = match_arg_92.value
                            temp_montant_forfaitaire_charges_d823_16_51 = True
                        elif match_arg_92.code == Collectivite_Code.SaintBarthelemy:
                            _ = match_arg_92.value
                            temp_montant_forfaitaire_charges_d823_16_51 = True
                        elif match_arg_92.code == Collectivite_Code.SaintMartin:
                            _ = match_arg_92.value
                            temp_montant_forfaitaire_charges_d823_16_51 = True
                        elif match_arg_92.code == Collectivite_Code.Metropole:
                            _ = match_arg_92.value
                            temp_montant_forfaitaire_charges_d823_16_51 = False
                        elif match_arg_92.code == Collectivite_Code.SaintPierreEtMiquelon:
                            _ = match_arg_92.value
                            temp_montant_forfaitaire_charges_d823_16_51 = False
                        elif match_arg_92.code == Collectivite_Code.Mayotte:
                            _ = match_arg_92.value
                            temp_montant_forfaitaire_charges_d823_16_51 = True
                        if (((date_courante_6 >=
                            date_of_numbers(2022,1,1)) and (date_courante_6 <
                            date_of_numbers(2022,7,1))) and
                            temp_montant_forfaitaire_charges_d823_16_51):
                            if ((money_of_cents_string("3640") +
                                (money_of_cents_string("936") *
                                decimal_of_integer(nombre_personnes_a_charge_2))) >
                                (money_of_cents_string("3640") +
                                (money_of_cents_string("936") *
                                decimal_of_string("6.")))):
                                return (money_of_cents_string("3640") +
                                    (money_of_cents_string("936") *
                                    decimal_of_string("6.")))
                            else:
                                return (money_of_cents_string("3640") +
                                    (money_of_cents_string("936") *
                                    decimal_of_integer(nombre_personnes_a_charge_2)))
                        else:
                            raise EmptyError
                def temp_montant_forfaitaire_charges_d823_16_52(_:Unit):
                    match_arg_93 = residence_2
                    if match_arg_93.code == Collectivite_Code.Guadeloupe:
                        _ = match_arg_93.value
                        temp_montant_forfaitaire_charges_d823_16_53 = True
                    elif match_arg_93.code == Collectivite_Code.Guyane:
                        _ = match_arg_93.value
                        temp_montant_forfaitaire_charges_d823_16_53 = False
                    elif match_arg_93.code == Collectivite_Code.Martinique:
                        _ = match_arg_93.value
                        temp_montant_forfaitaire_charges_d823_16_53 = True
                    elif match_arg_93.code == Collectivite_Code.LaReunion:
                        _ = match_arg_93.value
                        temp_montant_forfaitaire_charges_d823_16_53 = True
                    elif match_arg_93.code == Collectivite_Code.SaintBarthelemy:
                        _ = match_arg_93.value
                        temp_montant_forfaitaire_charges_d823_16_53 = True
                    elif match_arg_93.code == Collectivite_Code.SaintMartin:
                        _ = match_arg_93.value
                        temp_montant_forfaitaire_charges_d823_16_53 = True
                    elif match_arg_93.code == Collectivite_Code.Metropole:
                        _ = match_arg_93.value
                        temp_montant_forfaitaire_charges_d823_16_53 = False
                    elif match_arg_93.code == Collectivite_Code.SaintPierreEtMiquelon:
                        _ = match_arg_93.value
                        temp_montant_forfaitaire_charges_d823_16_53 = False
                    elif match_arg_93.code == Collectivite_Code.Mayotte:
                        _ = match_arg_93.value
                        temp_montant_forfaitaire_charges_d823_16_53 = True
                    if (((date_courante_6 >= date_of_numbers(2022,7,1)) and
                        (date_courante_6 < date_of_numbers(2023,1,1))) and
                        temp_montant_forfaitaire_charges_d823_16_53):
                        if ((money_of_cents_string("3767") +
                            (money_of_cents_string("969") *
                            decimal_of_integer(nombre_personnes_a_charge_2))) >
                            (money_of_cents_string("3767") +
                            (money_of_cents_string("969") *
                            decimal_of_string("6.")))):
                            return (money_of_cents_string("3767") +
                                (money_of_cents_string("969") *
                                decimal_of_string("6.")))
                        else:
                            return (money_of_cents_string("3767") +
                                (money_of_cents_string("969") *
                                decimal_of_integer(nombre_personnes_a_charge_2)))
                    else:
                        raise EmptyError
                def temp_montant_forfaitaire_charges_d823_16_54(_:Unit):
                    match_arg_94 = residence_2
                    if match_arg_94.code == Collectivite_Code.Guadeloupe:
                        _ = match_arg_94.value
                        temp_montant_forfaitaire_charges_d823_16_55 = True
                    elif match_arg_94.code == Collectivite_Code.Guyane:
                        _ = match_arg_94.value
                        temp_montant_forfaitaire_charges_d823_16_55 = False
                    elif match_arg_94.code == Collectivite_Code.Martinique:
                        _ = match_arg_94.value
                        temp_montant_forfaitaire_charges_d823_16_55 = True
                    elif match_arg_94.code == Collectivite_Code.LaReunion:
                        _ = match_arg_94.value
                        temp_montant_forfaitaire_charges_d823_16_55 = True
                    elif match_arg_94.code == Collectivite_Code.SaintBarthelemy:
                        _ = match_arg_94.value
                        temp_montant_forfaitaire_charges_d823_16_55 = True
                    elif match_arg_94.code == Collectivite_Code.SaintMartin:
                        _ = match_arg_94.value
                        temp_montant_forfaitaire_charges_d823_16_55 = True
                    elif match_arg_94.code == Collectivite_Code.Metropole:
                        _ = match_arg_94.value
                        temp_montant_forfaitaire_charges_d823_16_55 = False
                    elif match_arg_94.code == Collectivite_Code.SaintPierreEtMiquelon:
                        _ = match_arg_94.value
                        temp_montant_forfaitaire_charges_d823_16_55 = False
                    elif match_arg_94.code == Collectivite_Code.Mayotte:
                        _ = match_arg_94.value
                        temp_montant_forfaitaire_charges_d823_16_55 = True
                    if ((date_courante_6 >= date_of_numbers(2023,1,1)) and
                        temp_montant_forfaitaire_charges_d823_16_55):
                        return (money_of_cents_string("3767") +
                            (money_of_cents_string("969") *
                            multiplicateur_majoration_charges_d823_16))
                    else:
                        raise EmptyError
                temp_montant_forfaitaire_charges_d823_16_34 = handle_default(
                    SourcePosition(filename="examples/aides_logement/prologue.catala_fr",
                    start_line=609, start_column=12,
                    end_line=609, end_column=47,
                    law_headings=["Secteur locatif",
                    "Calcul du montant de l'aide personnalisée au logement",
                    "Déclarations des champs d'application",
                    "Prologue : aides au logement"]), [temp_montant_forfaitaire_charges_d823_16_54,
                    temp_montant_forfaitaire_charges_d823_16_52,
                    temp_montant_forfaitaire_charges_d823_16_49,
                    temp_montant_forfaitaire_charges_d823_16_47,
                    temp_montant_forfaitaire_charges_d823_16_45],
                    temp_montant_forfaitaire_charges_d823_16_44,
                    temp_montant_forfaitaire_charges_d823_16_43)
        except EmptyError:
            def temp_montant_forfaitaire_charges_d823_16_56(_:Unit):
                raise EmptyError
            def temp_montant_forfaitaire_charges_d823_16_57(_:Unit):
                return False
            def temp_montant_forfaitaire_charges_d823_16_58(_:Unit):
                if ((date_courante_6 < date_of_numbers(2021,10,1)) and
                    (date_courante_6 >=
                    date_of_numbers(2020,10,1))):
                    return (money_of_cents_string("5399") +
                        (money_of_cents_string("1224") *
                        multiplicateur_majoration_charges_d823_16))
                else:
                    raise EmptyError
            def temp_montant_forfaitaire_charges_d823_16_59(_:Unit):
                if ((date_courante_6 >= date_of_numbers(2021,10,1)) and
                    (date_courante_6 <
                    date_of_numbers(2022,7,1))):
                    return (money_of_cents_string("5422") +
                        (money_of_cents_string("1229") *
                        multiplicateur_majoration_charges_d823_16))
                else:
                    raise EmptyError
            def temp_montant_forfaitaire_charges_d823_16_60(_:Unit):
                if (date_courante_6 >=
                    date_of_numbers(2022,7,1)):
                    return (money_of_cents_string("5612") +
                        (money_of_cents_string("1272") *
                        multiplicateur_majoration_charges_d823_16))
                else:
                    raise EmptyError
            temp_montant_forfaitaire_charges_d823_16_34 = handle_default(
                SourcePosition(filename="examples/aides_logement/prologue.catala_fr",
                start_line=609, start_column=12, end_line=609, end_column=47,
                law_headings=["Secteur locatif",
                "Calcul du montant de l'aide personnalisée au logement",
                "Déclarations des champs d'application",
                "Prologue : aides au logement"]), [temp_montant_forfaitaire_charges_d823_16_60,
                temp_montant_forfaitaire_charges_d823_16_59,
                temp_montant_forfaitaire_charges_d823_16_58],
                temp_montant_forfaitaire_charges_d823_16_57,
                temp_montant_forfaitaire_charges_d823_16_56)
    except EmptyError:
        temp_montant_forfaitaire_charges_d823_16_34 = dead_value
        raise NoValueProvided(SourcePosition(filename="examples/aides_logement/prologue.catala_fr",
                                             start_line=609, start_column=12,
                                             end_line=609, end_column=47,
                                             law_headings=["Secteur locatif",
                                             "Calcul du montant de l'aide personnalisée au logement",
                                             "Déclarations des champs d'application",
                                             "Prologue : aides au logement"]))
    montant_forfaitaire_charges_d823_16 = temp_montant_forfaitaire_charges_d823_16_34
    try:
        try:
            def temp_abattement_forfaitaire_d823_17(_:Unit):
                raise EmptyError
            def temp_abattement_forfaitaire_d823_17_1(_:Unit):
                return False
            def temp_abattement_forfaitaire_d823_17_2(_:Unit):
                match_arg_95 = residence_2
                if match_arg_95.code == Collectivite_Code.Guadeloupe:
                    _ = match_arg_95.value
                    temp_abattement_forfaitaire_d823_17_3 = True
                elif match_arg_95.code == Collectivite_Code.Guyane:
                    _ = match_arg_95.value
                    temp_abattement_forfaitaire_d823_17_3 = False
                elif match_arg_95.code == Collectivite_Code.Martinique:
                    _ = match_arg_95.value
                    temp_abattement_forfaitaire_d823_17_3 = True
                elif match_arg_95.code == Collectivite_Code.LaReunion:
                    _ = match_arg_95.value
                    temp_abattement_forfaitaire_d823_17_3 = True
                elif match_arg_95.code == Collectivite_Code.SaintBarthelemy:
                    _ = match_arg_95.value
                    temp_abattement_forfaitaire_d823_17_3 = True
                elif match_arg_95.code == Collectivite_Code.SaintMartin:
                    _ = match_arg_95.value
                    temp_abattement_forfaitaire_d823_17_3 = True
                elif match_arg_95.code == Collectivite_Code.Metropole:
                    _ = match_arg_95.value
                    temp_abattement_forfaitaire_d823_17_3 = False
                elif match_arg_95.code == Collectivite_Code.SaintPierreEtMiquelon:
                    _ = match_arg_95.value
                    temp_abattement_forfaitaire_d823_17_3 = False
                elif match_arg_95.code == Collectivite_Code.Mayotte:
                    _ = match_arg_95.value
                    temp_abattement_forfaitaire_d823_17_3 = True
                if (((date_courante_6 >= date_of_numbers(2020,1,1)) and
                    (date_courante_6 < date_of_numbers(2021,1,1))) and
                    temp_abattement_forfaitaire_d823_17_3):
                    if (nombre_personnes_a_charge_2 ==
                        integer_of_string("0")):
                        match_arg_96 = situation_familiale_calcul_apl_2
                        if match_arg_96.code == SituationFamilialeCalculAPL_Code.PersonneSeule:
                            _ = match_arg_96.value
                            return money_of_cents_string("396000")
                        elif match_arg_96.code == SituationFamilialeCalculAPL_Code.Couple:
                            _ = match_arg_96.value
                            return money_of_cents_string("567300")
                    else:
                        if (nombre_personnes_a_charge_2 ==
                            integer_of_string("1")):
                            return money_of_cents_string("639600")
                        else:
                            if (nombre_personnes_a_charge_2 ==
                                integer_of_string("2")):
                                return money_of_cents_string("684900")
                            else:
                                if (nombre_personnes_a_charge_2 ==
                                    integer_of_string("3")):
                                    return money_of_cents_string("738600")
                                else:
                                    if (nombre_personnes_a_charge_2 ==
                                        integer_of_string("4")):
                                        return money_of_cents_string("793500")
                                    else:
                                        if (nombre_personnes_a_charge_2 ==
                                            integer_of_string("5")):
                                            return money_of_cents_string("848400")
                                        else:
                                            return money_of_cents_string("903200")
                else:
                    raise EmptyError
            def temp_abattement_forfaitaire_d823_17_4(_:Unit):
                try:
                    try:
                        match_arg_97 = residence_2
                        if match_arg_97.code == Collectivite_Code.Guadeloupe:
                            _ = match_arg_97.value
                            temp_abattement_forfaitaire_d823_17_5 = True
                        elif match_arg_97.code == Collectivite_Code.Guyane:
                            _ = match_arg_97.value
                            temp_abattement_forfaitaire_d823_17_5 = False
                        elif match_arg_97.code == Collectivite_Code.Martinique:
                            _ = match_arg_97.value
                            temp_abattement_forfaitaire_d823_17_5 = True
                        elif match_arg_97.code == Collectivite_Code.LaReunion:
                            _ = match_arg_97.value
                            temp_abattement_forfaitaire_d823_17_5 = True
                        elif match_arg_97.code == Collectivite_Code.SaintBarthelemy:
                            _ = match_arg_97.value
                            temp_abattement_forfaitaire_d823_17_5 = True
                        elif match_arg_97.code == Collectivite_Code.SaintMartin:
                            _ = match_arg_97.value
                            temp_abattement_forfaitaire_d823_17_5 = True
                        elif match_arg_97.code == Collectivite_Code.Metropole:
                            _ = match_arg_97.value
                            temp_abattement_forfaitaire_d823_17_5 = False
                        elif match_arg_97.code == Collectivite_Code.SaintPierreEtMiquelon:
                            _ = match_arg_97.value
                            temp_abattement_forfaitaire_d823_17_5 = False
                        elif match_arg_97.code == Collectivite_Code.Mayotte:
                            _ = match_arg_97.value
                            temp_abattement_forfaitaire_d823_17_5 = True
                        if (((date_courante_6 >=
                            date_of_numbers(2020,1,1)) and (date_courante_6 <
                            date_of_numbers(2020,10,1))) and
                            (temp_abattement_forfaitaire_d823_17_5 and
                            (nombre_personnes_a_charge_2 ==
                            integer_of_string("1")))):
                            return money_of_cents_string("758400")
                        else:
                            raise EmptyError
                    except EmptyError:
                        match_arg_98 = residence_2
                        if match_arg_98.code == Collectivite_Code.Guadeloupe:
                            _ = match_arg_98.value
                            temp_abattement_forfaitaire_d823_17_6 = True
                        elif match_arg_98.code == Collectivite_Code.Guyane:
                            _ = match_arg_98.value
                            temp_abattement_forfaitaire_d823_17_6 = False
                        elif match_arg_98.code == Collectivite_Code.Martinique:
                            _ = match_arg_98.value
                            temp_abattement_forfaitaire_d823_17_6 = True
                        elif match_arg_98.code == Collectivite_Code.LaReunion:
                            _ = match_arg_98.value
                            temp_abattement_forfaitaire_d823_17_6 = True
                        elif match_arg_98.code == Collectivite_Code.SaintBarthelemy:
                            _ = match_arg_98.value
                            temp_abattement_forfaitaire_d823_17_6 = True
                        elif match_arg_98.code == Collectivite_Code.SaintMartin:
                            _ = match_arg_98.value
                            temp_abattement_forfaitaire_d823_17_6 = True
                        elif match_arg_98.code == Collectivite_Code.Metropole:
                            _ = match_arg_98.value
                            temp_abattement_forfaitaire_d823_17_6 = False
                        elif match_arg_98.code == Collectivite_Code.SaintPierreEtMiquelon:
                            _ = match_arg_98.value
                            temp_abattement_forfaitaire_d823_17_6 = False
                        elif match_arg_98.code == Collectivite_Code.Mayotte:
                            _ = match_arg_98.value
                            temp_abattement_forfaitaire_d823_17_6 = True
                        if (((date_courante_6 >=
                            date_of_numbers(2020,10,1)) and
                            (date_courante_6 <
                            date_of_numbers(2021,10,1))) and
                            (temp_abattement_forfaitaire_d823_17_6 and
                            (nombre_personnes_a_charge_2 ==
                            integer_of_string("1")))):
                            return money_of_cents_string("758400")
                        else:
                            raise EmptyError
                except EmptyError:
                    match_arg_99 = residence_2
                    if match_arg_99.code == Collectivite_Code.Guadeloupe:
                        _ = match_arg_99.value
                        temp_abattement_forfaitaire_d823_17_7 = True
                    elif match_arg_99.code == Collectivite_Code.Guyane:
                        _ = match_arg_99.value
                        temp_abattement_forfaitaire_d823_17_7 = False
                    elif match_arg_99.code == Collectivite_Code.Martinique:
                        _ = match_arg_99.value
                        temp_abattement_forfaitaire_d823_17_7 = True
                    elif match_arg_99.code == Collectivite_Code.LaReunion:
                        _ = match_arg_99.value
                        temp_abattement_forfaitaire_d823_17_7 = True
                    elif match_arg_99.code == Collectivite_Code.SaintBarthelemy:
                        _ = match_arg_99.value
                        temp_abattement_forfaitaire_d823_17_7 = True
                    elif match_arg_99.code == Collectivite_Code.SaintMartin:
                        _ = match_arg_99.value
                        temp_abattement_forfaitaire_d823_17_7 = True
                    elif match_arg_99.code == Collectivite_Code.Metropole:
                        _ = match_arg_99.value
                        temp_abattement_forfaitaire_d823_17_7 = False
                    elif match_arg_99.code == Collectivite_Code.SaintPierreEtMiquelon:
                        _ = match_arg_99.value
                        temp_abattement_forfaitaire_d823_17_7 = False
                    elif match_arg_99.code == Collectivite_Code.Mayotte:
                        _ = match_arg_99.value
                        temp_abattement_forfaitaire_d823_17_7 = True
                    if (((date_courante_6 >= date_of_numbers(2021,10,1)) and
                        (date_courante_6 < date_of_numbers(2022,1,1))) and
                        (temp_abattement_forfaitaire_d823_17_7 and
                        (nombre_personnes_a_charge_2 ==
                        integer_of_string("1")))):
                        return money_of_cents_string("758400")
                    else:
                        raise EmptyError
            def temp_abattement_forfaitaire_d823_17_8(_:Unit):
                match_arg_100 = residence_2
                if match_arg_100.code == Collectivite_Code.Guadeloupe:
                    _ = match_arg_100.value
                    temp_abattement_forfaitaire_d823_17_9 = True
                elif match_arg_100.code == Collectivite_Code.Guyane:
                    _ = match_arg_100.value
                    temp_abattement_forfaitaire_d823_17_9 = False
                elif match_arg_100.code == Collectivite_Code.Martinique:
                    _ = match_arg_100.value
                    temp_abattement_forfaitaire_d823_17_9 = True
                elif match_arg_100.code == Collectivite_Code.LaReunion:
                    _ = match_arg_100.value
                    temp_abattement_forfaitaire_d823_17_9 = True
                elif match_arg_100.code == Collectivite_Code.SaintBarthelemy:
                    _ = match_arg_100.value
                    temp_abattement_forfaitaire_d823_17_9 = True
                elif match_arg_100.code == Collectivite_Code.SaintMartin:
                    _ = match_arg_100.value
                    temp_abattement_forfaitaire_d823_17_9 = True
                elif match_arg_100.code == Collectivite_Code.Metropole:
                    _ = match_arg_100.value
                    temp_abattement_forfaitaire_d823_17_9 = False
                elif match_arg_100.code == Collectivite_Code.SaintPierreEtMiquelon:
                    _ = match_arg_100.value
                    temp_abattement_forfaitaire_d823_17_9 = False
                elif match_arg_100.code == Collectivite_Code.Mayotte:
                    _ = match_arg_100.value
                    temp_abattement_forfaitaire_d823_17_9 = True
                if (((date_courante_6 >= date_of_numbers(2021,1,1)) and
                    (date_courante_6 < date_of_numbers(2022,1,1))) and
                    temp_abattement_forfaitaire_d823_17_9):
                    if (nombre_personnes_a_charge_2 ==
                        integer_of_string("0")):
                        match_arg_101 = situation_familiale_calcul_apl_2
                        if match_arg_101.code == SituationFamilialeCalculAPL_Code.PersonneSeule:
                            _ = match_arg_101.value
                            return money_of_cents_string("427400")
                        elif match_arg_101.code == SituationFamilialeCalculAPL_Code.Couple:
                            _ = match_arg_101.value
                            return money_of_cents_string("612200")
                    else:
                        if (nombre_personnes_a_charge_2 ==
                            integer_of_string("1")):
                            return money_of_cents_string("699000")
                        else:
                            if (nombre_personnes_a_charge_2 ==
                                integer_of_string("2")):
                                return money_of_cents_string("743200")
                            else:
                                if (nombre_personnes_a_charge_2 ==
                                    integer_of_string("3")):
                                    return money_of_cents_string("785400")
                                else:
                                    if (nombre_personnes_a_charge_2 ==
                                        integer_of_string("4")):
                                        return money_of_cents_string("828300")
                                    else:
                                        if (nombre_personnes_a_charge_2 ==
                                            integer_of_string("5")):
                                            return money_of_cents_string("871100")
                                        else:
                                            return money_of_cents_string("913900")
                else:
                    raise EmptyError
            def temp_abattement_forfaitaire_d823_17_10(_:Unit):
                match_arg_102 = residence_2
                if match_arg_102.code == Collectivite_Code.Guadeloupe:
                    _ = match_arg_102.value
                    temp_abattement_forfaitaire_d823_17_11 = True
                elif match_arg_102.code == Collectivite_Code.Guyane:
                    _ = match_arg_102.value
                    temp_abattement_forfaitaire_d823_17_11 = False
                elif match_arg_102.code == Collectivite_Code.Martinique:
                    _ = match_arg_102.value
                    temp_abattement_forfaitaire_d823_17_11 = True
                elif match_arg_102.code == Collectivite_Code.LaReunion:
                    _ = match_arg_102.value
                    temp_abattement_forfaitaire_d823_17_11 = True
                elif match_arg_102.code == Collectivite_Code.SaintBarthelemy:
                    _ = match_arg_102.value
                    temp_abattement_forfaitaire_d823_17_11 = True
                elif match_arg_102.code == Collectivite_Code.SaintMartin:
                    _ = match_arg_102.value
                    temp_abattement_forfaitaire_d823_17_11 = True
                elif match_arg_102.code == Collectivite_Code.Metropole:
                    _ = match_arg_102.value
                    temp_abattement_forfaitaire_d823_17_11 = False
                elif match_arg_102.code == Collectivite_Code.SaintPierreEtMiquelon:
                    _ = match_arg_102.value
                    temp_abattement_forfaitaire_d823_17_11 = False
                elif match_arg_102.code == Collectivite_Code.Mayotte:
                    _ = match_arg_102.value
                    temp_abattement_forfaitaire_d823_17_11 = True
                if (((date_courante_6 >= date_of_numbers(2022,1,1)) and
                    (date_courante_6 < date_of_numbers(2022,7,1))) and
                    (temp_abattement_forfaitaire_d823_17_11 and
                    (nombre_personnes_a_charge_2 ==
                    integer_of_string("1")))):
                    return money_of_cents_string("774200")
                else:
                    raise EmptyError
            def temp_abattement_forfaitaire_d823_17_12(_:Unit):
                match_arg_103 = residence_2
                if match_arg_103.code == Collectivite_Code.Guadeloupe:
                    _ = match_arg_103.value
                    temp_abattement_forfaitaire_d823_17_13 = False
                elif match_arg_103.code == Collectivite_Code.Guyane:
                    _ = match_arg_103.value
                    temp_abattement_forfaitaire_d823_17_13 = False
                elif match_arg_103.code == Collectivite_Code.Martinique:
                    _ = match_arg_103.value
                    temp_abattement_forfaitaire_d823_17_13 = False
                elif match_arg_103.code == Collectivite_Code.LaReunion:
                    _ = match_arg_103.value
                    temp_abattement_forfaitaire_d823_17_13 = False
                elif match_arg_103.code == Collectivite_Code.SaintBarthelemy:
                    _ = match_arg_103.value
                    temp_abattement_forfaitaire_d823_17_13 = False
                elif match_arg_103.code == Collectivite_Code.SaintMartin:
                    _ = match_arg_103.value
                    temp_abattement_forfaitaire_d823_17_13 = False
                elif match_arg_103.code == Collectivite_Code.Metropole:
                    _ = match_arg_103.value
                    temp_abattement_forfaitaire_d823_17_13 = False
                elif match_arg_103.code == Collectivite_Code.SaintPierreEtMiquelon:
                    _ = match_arg_103.value
                    temp_abattement_forfaitaire_d823_17_13 = True
                elif match_arg_103.code == Collectivite_Code.Mayotte:
                    _ = match_arg_103.value
                    temp_abattement_forfaitaire_d823_17_13 = False
                if (((date_courante_6 >= date_of_numbers(2022,7,1)) and
                    (date_courante_6 < date_of_numbers(2023,1,1))) and
                    temp_abattement_forfaitaire_d823_17_13):
                    if (nombre_personnes_a_charge_2 ==
                        integer_of_string("0")):
                        match_arg_104 = situation_familiale_calcul_apl_2
                        if match_arg_104.code == SituationFamilialeCalculAPL_Code.PersonneSeule:
                            _ = match_arg_104.value
                            return money_of_cents_string("487000")
                        elif match_arg_104.code == SituationFamilialeCalculAPL_Code.Couple:
                            _ = match_arg_104.value
                            return money_of_cents_string("697700")
                    else:
                        if (nombre_personnes_a_charge_2 ==
                            integer_of_string("1")):
                            return money_of_cents_string("832200")
                        else:
                            if (nombre_personnes_a_charge_2 ==
                                integer_of_string("2")):
                                return money_of_cents_string("850900")
                            else:
                                if (nombre_personnes_a_charge_2 ==
                                    integer_of_string("3")):
                                    return money_of_cents_string("883400")
                                else:
                                    if (nombre_personnes_a_charge_2 ==
                                        integer_of_string("4")):
                                        return money_of_cents_string("916300")
                                    else:
                                        if (nombre_personnes_a_charge_2 ==
                                            integer_of_string("5")):
                                            return money_of_cents_string("948800")
                                        else:
                                            if (nombre_personnes_a_charge_2 ==
                                                integer_of_string("6")):
                                                return money_of_cents_string("981600")
                                            else:
                                                return (money_of_cents_string("981600") +
                                                    (money_of_cents_string("35000") *
                                                    decimal_of_integer((nombre_personnes_a_charge_2 -
                                                    integer_of_string("6")))))
                else:
                    raise EmptyError
            def temp_abattement_forfaitaire_d823_17_14(_:Unit):
                match_arg_105 = residence_2
                if match_arg_105.code == Collectivite_Code.Guadeloupe:
                    _ = match_arg_105.value
                    temp_abattement_forfaitaire_d823_17_15 = True
                elif match_arg_105.code == Collectivite_Code.Guyane:
                    _ = match_arg_105.value
                    temp_abattement_forfaitaire_d823_17_15 = False
                elif match_arg_105.code == Collectivite_Code.Martinique:
                    _ = match_arg_105.value
                    temp_abattement_forfaitaire_d823_17_15 = True
                elif match_arg_105.code == Collectivite_Code.LaReunion:
                    _ = match_arg_105.value
                    temp_abattement_forfaitaire_d823_17_15 = True
                elif match_arg_105.code == Collectivite_Code.SaintBarthelemy:
                    _ = match_arg_105.value
                    temp_abattement_forfaitaire_d823_17_15 = True
                elif match_arg_105.code == Collectivite_Code.SaintMartin:
                    _ = match_arg_105.value
                    temp_abattement_forfaitaire_d823_17_15 = True
                elif match_arg_105.code == Collectivite_Code.Metropole:
                    _ = match_arg_105.value
                    temp_abattement_forfaitaire_d823_17_15 = False
                elif match_arg_105.code == Collectivite_Code.SaintPierreEtMiquelon:
                    _ = match_arg_105.value
                    temp_abattement_forfaitaire_d823_17_15 = False
                elif match_arg_105.code == Collectivite_Code.Mayotte:
                    _ = match_arg_105.value
                    temp_abattement_forfaitaire_d823_17_15 = True
                if (((date_courante_6 >= date_of_numbers(2022,7,1)) and
                    (date_courante_6 < date_of_numbers(2023,1,1))) and
                    (temp_abattement_forfaitaire_d823_17_15 and
                    (nombre_personnes_a_charge_2 ==
                    integer_of_string("1")))):
                    return money_of_cents_string("805100")
                else:
                    raise EmptyError
            def temp_abattement_forfaitaire_d823_17_16(_:Unit):
                match_arg_106 = residence_2
                if match_arg_106.code == Collectivite_Code.Guadeloupe:
                    _ = match_arg_106.value
                    temp_abattement_forfaitaire_d823_17_17 = False
                elif match_arg_106.code == Collectivite_Code.Guyane:
                    _ = match_arg_106.value
                    temp_abattement_forfaitaire_d823_17_17 = False
                elif match_arg_106.code == Collectivite_Code.Martinique:
                    _ = match_arg_106.value
                    temp_abattement_forfaitaire_d823_17_17 = False
                elif match_arg_106.code == Collectivite_Code.LaReunion:
                    _ = match_arg_106.value
                    temp_abattement_forfaitaire_d823_17_17 = False
                elif match_arg_106.code == Collectivite_Code.SaintBarthelemy:
                    _ = match_arg_106.value
                    temp_abattement_forfaitaire_d823_17_17 = False
                elif match_arg_106.code == Collectivite_Code.SaintMartin:
                    _ = match_arg_106.value
                    temp_abattement_forfaitaire_d823_17_17 = False
                elif match_arg_106.code == Collectivite_Code.Metropole:
                    _ = match_arg_106.value
                    temp_abattement_forfaitaire_d823_17_17 = False
                elif match_arg_106.code == Collectivite_Code.SaintPierreEtMiquelon:
                    _ = match_arg_106.value
                    temp_abattement_forfaitaire_d823_17_17 = True
                elif match_arg_106.code == Collectivite_Code.Mayotte:
                    _ = match_arg_106.value
                    temp_abattement_forfaitaire_d823_17_17 = False
                if ((date_courante_6 >= date_of_numbers(2023,1,1)) and
                    temp_abattement_forfaitaire_d823_17_17):
                    if (nombre_personnes_a_charge_2 ==
                        integer_of_string("0")):
                        match_arg_107 = situation_familiale_calcul_apl_2
                        if match_arg_107.code == SituationFamilialeCalculAPL_Code.PersonneSeule:
                            _ = match_arg_107.value
                            return money_of_cents_string("527200")
                        elif match_arg_107.code == SituationFamilialeCalculAPL_Code.Couple:
                            _ = match_arg_107.value
                            return money_of_cents_string("755200")
                    else:
                        if (nombre_personnes_a_charge_2 ==
                            integer_of_string("1")):
                            return money_of_cents_string("900800")
                        else:
                            if (nombre_personnes_a_charge_2 ==
                                integer_of_string("2")):
                                return money_of_cents_string("921100")
                            else:
                                if (nombre_personnes_a_charge_2 ==
                                    integer_of_string("3")):
                                    return money_of_cents_string("956300")
                                else:
                                    if (nombre_personnes_a_charge_2 ==
                                        integer_of_string("4")):
                                        return money_of_cents_string("991900")
                                    else:
                                        if (nombre_personnes_a_charge_2 ==
                                            integer_of_string("5")):
                                            return money_of_cents_string("1027100")
                                        else:
                                            if (nombre_personnes_a_charge_2 ==
                                                integer_of_string("6")):
                                                return money_of_cents_string("1062600")
                                            else:
                                                return (money_of_cents_string("1062600") +
                                                    (money_of_cents_string("35000") *
                                                    decimal_of_integer((nombre_personnes_a_charge_2 -
                                                    integer_of_string("6")))))
                else:
                    raise EmptyError
            def temp_abattement_forfaitaire_d823_17_18(_:Unit):
                match_arg_108 = residence_2
                if match_arg_108.code == Collectivite_Code.Guadeloupe:
                    _ = match_arg_108.value
                    temp_abattement_forfaitaire_d823_17_19 = True
                elif match_arg_108.code == Collectivite_Code.Guyane:
                    _ = match_arg_108.value
                    temp_abattement_forfaitaire_d823_17_19 = False
                elif match_arg_108.code == Collectivite_Code.Martinique:
                    _ = match_arg_108.value
                    temp_abattement_forfaitaire_d823_17_19 = True
                elif match_arg_108.code == Collectivite_Code.LaReunion:
                    _ = match_arg_108.value
                    temp_abattement_forfaitaire_d823_17_19 = True
                elif match_arg_108.code == Collectivite_Code.SaintBarthelemy:
                    _ = match_arg_108.value
                    temp_abattement_forfaitaire_d823_17_19 = True
                elif match_arg_108.code == Collectivite_Code.SaintMartin:
                    _ = match_arg_108.value
                    temp_abattement_forfaitaire_d823_17_19 = True
                elif match_arg_108.code == Collectivite_Code.Metropole:
                    _ = match_arg_108.value
                    temp_abattement_forfaitaire_d823_17_19 = False
                elif match_arg_108.code == Collectivite_Code.SaintPierreEtMiquelon:
                    _ = match_arg_108.value
                    temp_abattement_forfaitaire_d823_17_19 = False
                elif match_arg_108.code == Collectivite_Code.Mayotte:
                    _ = match_arg_108.value
                    temp_abattement_forfaitaire_d823_17_19 = True
                if ((date_courante_6 >= date_of_numbers(2023,1,1)) and
                    (temp_abattement_forfaitaire_d823_17_19 and
                    (nombre_personnes_a_charge_2 ==
                    integer_of_string("1")))):
                    return money_of_cents_string("818100")
                else:
                    raise EmptyError
            temp_abattement_forfaitaire_d823_17_20 = handle_default(SourcePosition(filename="examples/aides_logement/prologue.catala_fr",
                                                                    start_line=602,
                                                                    start_column=11,
                                                                    end_line=602, end_column=41,
                                                                    law_headings=["Secteur locatif",
                                                                    "Calcul du montant de l'aide personnalisée au logement",
                                                                    "Déclarations des champs d'application",
                                                                    "Prologue : aides au logement"]), [temp_abattement_forfaitaire_d823_17_18,
                                                                    temp_abattement_forfaitaire_d823_17_16,
                                                                    temp_abattement_forfaitaire_d823_17_14,
                                                                    temp_abattement_forfaitaire_d823_17_12,
                                                                    temp_abattement_forfaitaire_d823_17_10,
                                                                    temp_abattement_forfaitaire_d823_17_8,
                                                                    temp_abattement_forfaitaire_d823_17_4,
                                                                    temp_abattement_forfaitaire_d823_17_2],
                                                                    temp_abattement_forfaitaire_d823_17_1,
                                                                    temp_abattement_forfaitaire_d823_17)
        except EmptyError:
            def temp_abattement_forfaitaire_d823_17_21(_:Unit):
                raise EmptyError
            def temp_abattement_forfaitaire_d823_17_22(_:Unit):
                return False
            def temp_abattement_forfaitaire_d823_17_23(_:Unit):
                if ((date_courante_6 < date_of_numbers(2022,1,1)) and
                    (date_courante_6 >=
                    date_of_numbers(2020,1,1))):
                    if (nombre_personnes_a_charge_2 ==
                        integer_of_string("0")):
                        match_arg_109 = situation_familiale_calcul_apl_2
                        if match_arg_109.code == SituationFamilialeCalculAPL_Code.PersonneSeule:
                            _ = match_arg_109.value
                            return money_of_cents_string("458800")
                        elif match_arg_109.code == SituationFamilialeCalculAPL_Code.Couple:
                            _ = match_arg_109.value
                            return money_of_cents_string("657200")
                    else:
                        if (nombre_personnes_a_charge_2 ==
                            integer_of_string("1")):
                            return money_of_cents_string("783900")
                        else:
                            if (nombre_personnes_a_charge_2 ==
                                integer_of_string("2")):
                                return money_of_cents_string("801500")
                            else:
                                if (nombre_personnes_a_charge_2 ==
                                    integer_of_string("3")):
                                    return money_of_cents_string("832200")
                                else:
                                    if (nombre_personnes_a_charge_2 ==
                                        integer_of_string("4")):
                                        return money_of_cents_string("863100")
                                    else:
                                        if (nombre_personnes_a_charge_2 ==
                                            integer_of_string("5")):
                                            return money_of_cents_string("893800")
                                        else:
                                            if (nombre_personnes_a_charge_2 ==
                                                integer_of_string("6")):
                                                return money_of_cents_string("924600")
                                            else:
                                                return (money_of_cents_string("924600") +
                                                    (money_of_cents_string("30500") *
                                                    decimal_of_integer((nombre_personnes_a_charge_2 -
                                                    integer_of_string("6")))))
                else:
                    raise EmptyError
            def temp_abattement_forfaitaire_d823_17_24(_:Unit):
                if ((date_courante_6 >= date_of_numbers(2022,1,1)) and
                    (date_courante_6 <
                    date_of_numbers(2022,7,1))):
                    if (nombre_personnes_a_charge_2 ==
                        integer_of_string("0")):
                        match_arg_110 = situation_familiale_calcul_apl_2
                        if match_arg_110.code == SituationFamilialeCalculAPL_Code.PersonneSeule:
                            _ = match_arg_110.value
                            return money_of_cents_string("468300")
                        elif match_arg_110.code == SituationFamilialeCalculAPL_Code.Couple:
                            _ = match_arg_110.value
                            return money_of_cents_string("670900")
                    else:
                        if (nombre_personnes_a_charge_2 ==
                            integer_of_string("1")):
                            return money_of_cents_string("800200")
                        else:
                            if (nombre_personnes_a_charge_2 ==
                                integer_of_string("2")):
                                return money_of_cents_string("819200")
                            else:
                                if (nombre_personnes_a_charge_2 ==
                                    integer_of_string("3")):
                                    return money_of_cents_string("849500")
                                else:
                                    if (nombre_personnes_a_charge_2 ==
                                        integer_of_string("4")):
                                        return money_of_cents_string("881100")
                                    else:
                                        if (nombre_personnes_a_charge_2 ==
                                            integer_of_string("5")):
                                            return money_of_cents_string("912400")
                                        else:
                                            if (nombre_personnes_a_charge_2 ==
                                                integer_of_string("6")):
                                                return money_of_cents_string("943900")
                                            else:
                                                return (money_of_cents_string("943900") +
                                                    (money_of_cents_string("31100") *
                                                    multiplicateur_majoration_r0))
                else:
                    raise EmptyError
            def temp_abattement_forfaitaire_d823_17_25(_:Unit):
                if ((date_courante_6 >= date_of_numbers(2022,7,1)) and
                    (date_courante_6 <=
                    date_of_numbers(2022,12,31))):
                    if (nombre_personnes_a_charge_2 ==
                        integer_of_string("0")):
                        match_arg_111 = situation_familiale_calcul_apl_2
                        if match_arg_111.code == SituationFamilialeCalculAPL_Code.PersonneSeule:
                            _ = match_arg_111.value
                            return money_of_cents_string("487000")
                        elif match_arg_111.code == SituationFamilialeCalculAPL_Code.Couple:
                            _ = match_arg_111.value
                            return money_of_cents_string("697700")
                    else:
                        if (nombre_personnes_a_charge_2 ==
                            integer_of_string("1")):
                            return money_of_cents_string("832200")
                        else:
                            if (nombre_personnes_a_charge_2 ==
                                integer_of_string("2")):
                                return money_of_cents_string("850900")
                            else:
                                if (nombre_personnes_a_charge_2 ==
                                    integer_of_string("3")):
                                    return money_of_cents_string("883400")
                                else:
                                    if (nombre_personnes_a_charge_2 ==
                                        integer_of_string("4")):
                                        return money_of_cents_string("916300")
                                    else:
                                        if (nombre_personnes_a_charge_2 ==
                                            integer_of_string("5")):
                                            return money_of_cents_string("948800")
                                        else:
                                            if (nombre_personnes_a_charge_2 ==
                                                integer_of_string("6")):
                                                return money_of_cents_string("981600")
                                            else:
                                                return (money_of_cents_string("981600") +
                                                    (money_of_cents_string("32300") *
                                                    multiplicateur_majoration_r0))
                else:
                    raise EmptyError
            def temp_abattement_forfaitaire_d823_17_26(_:Unit):
                if (date_courante_6 >=
                    date_of_numbers(2023,1,1)):
                    if (nombre_personnes_a_charge_2 ==
                        integer_of_string("0")):
                        match_arg_112 = situation_familiale_calcul_apl_2
                        if match_arg_112.code == SituationFamilialeCalculAPL_Code.PersonneSeule:
                            _ = match_arg_112.value
                            return money_of_cents_string("494900")
                        elif match_arg_112.code == SituationFamilialeCalculAPL_Code.Couple:
                            _ = match_arg_112.value
                            return money_of_cents_string("709000")
                    else:
                        if (nombre_personnes_a_charge_2 ==
                            integer_of_string("1")):
                            return money_of_cents_string("845600")
                        else:
                            if (nombre_personnes_a_charge_2 ==
                                integer_of_string("2")):
                                return money_of_cents_string("864600")
                            else:
                                if (nombre_personnes_a_charge_2 ==
                                    integer_of_string("3")):
                                    return money_of_cents_string("897700")
                                else:
                                    if (nombre_personnes_a_charge_2 ==
                                        integer_of_string("4")):
                                        return money_of_cents_string("931100")
                                    else:
                                        if (nombre_personnes_a_charge_2 ==
                                            integer_of_string("5")):
                                            return money_of_cents_string("964200")
                                        else:
                                            if (nombre_personnes_a_charge_2 ==
                                                integer_of_string("6")):
                                                return money_of_cents_string("997500")
                                            else:
                                                return (money_of_cents_string("997500") +
                                                    (money_of_cents_string("32800") *
                                                    multiplicateur_majoration_r0))
                else:
                    raise EmptyError
            temp_abattement_forfaitaire_d823_17_20 = handle_default(SourcePosition(filename="examples/aides_logement/prologue.catala_fr",
                                                                    start_line=602,
                                                                    start_column=11,
                                                                    end_line=602, end_column=41,
                                                                    law_headings=["Secteur locatif",
                                                                    "Calcul du montant de l'aide personnalisée au logement",
                                                                    "Déclarations des champs d'application",
                                                                    "Prologue : aides au logement"]), [temp_abattement_forfaitaire_d823_17_26,
                                                                    temp_abattement_forfaitaire_d823_17_25,
                                                                    temp_abattement_forfaitaire_d823_17_24,
                                                                    temp_abattement_forfaitaire_d823_17_23],
                                                                    temp_abattement_forfaitaire_d823_17_22,
                                                                    temp_abattement_forfaitaire_d823_17_21)
    except EmptyError:
        temp_abattement_forfaitaire_d823_17_20 = dead_value
        raise NoValueProvided(SourcePosition(filename="examples/aides_logement/prologue.catala_fr",
                                             start_line=602, start_column=11,
                                             end_line=602, end_column=41,
                                             law_headings=["Secteur locatif",
                                             "Calcul du montant de l'aide personnalisée au logement",
                                             "Déclarations des champs d'application",
                                             "Prologue : aides au logement"]))
    abattement_forfaitaire_d823_17 = temp_abattement_forfaitaire_d823_17_20
    try:
        def temp_loyer_reference(_:Unit):
            raise EmptyError
        def temp_loyer_reference_1(_:Unit):
            return False
        def temp_loyer_reference_2(_:Unit):
            if ((date_courante_6 >= date_of_numbers(2020,10,1)) and
                (date_courante_6 <
                date_of_numbers(2021,10,1))):
                if (nombre_personnes_a_charge_2 ==
                    integer_of_string("0")):
                    match_arg_113 = situation_familiale_calcul_apl_2
                    if match_arg_113.code == SituationFamilialeCalculAPL_Code.PersonneSeule:
                        _ = match_arg_113.value
                        return money_of_cents_string("25869")
                    elif match_arg_113.code == SituationFamilialeCalculAPL_Code.Couple:
                        _ = match_arg_113.value
                        return money_of_cents_string("31664")
                else:
                    return (money_of_cents_string("35630") +
                        (money_of_cents_string("5186") *
                        multiplicateur_majoration_loyer_reference))
            else:
                raise EmptyError
        def temp_loyer_reference_3(_:Unit):
            if ((date_courante_6 >= date_of_numbers(2021,10,1)) and
                (date_courante_6 <
                date_of_numbers(2022,7,1))):
                if (nombre_personnes_a_charge_2 ==
                    integer_of_string("0")):
                    match_arg_114 = situation_familiale_calcul_apl_2
                    if match_arg_114.code == SituationFamilialeCalculAPL_Code.PersonneSeule:
                        _ = match_arg_114.value
                        return money_of_cents_string("25978")
                    elif match_arg_114.code == SituationFamilialeCalculAPL_Code.Couple:
                        _ = match_arg_114.value
                        return money_of_cents_string("31797")
                else:
                    return (money_of_cents_string("35780") +
                        (money_of_cents_string("5208") *
                        multiplicateur_majoration_loyer_reference))
            else:
                raise EmptyError
        def temp_loyer_reference_4(_:Unit):
            if (date_courante_6 >=
                date_of_numbers(2022,7,1)):
                if (nombre_personnes_a_charge_2 ==
                    integer_of_string("0")):
                    match_arg_115 = situation_familiale_calcul_apl_2
                    if match_arg_115.code == SituationFamilialeCalculAPL_Code.PersonneSeule:
                        _ = match_arg_115.value
                        return money_of_cents_string("26887")
                    elif match_arg_115.code == SituationFamilialeCalculAPL_Code.Couple:
                        _ = match_arg_115.value
                        return money_of_cents_string("32910")
                else:
                    return (money_of_cents_string("37032") +
                        (money_of_cents_string("5390") *
                        multiplicateur_majoration_loyer_reference))
            else:
                raise EmptyError
        temp_loyer_reference_5 = handle_default(SourcePosition(filename="examples/aides_logement/prologue.catala_fr",
                                                start_line=596,
                                                start_column=11,
                                                end_line=596, end_column=26,
                                                law_headings=["Secteur locatif",
                                                "Calcul du montant de l'aide personnalisée au logement",
                                                "Déclarations des champs d'application",
                                                "Prologue : aides au logement"]), [temp_loyer_reference_4,
                                                temp_loyer_reference_3,
                                                temp_loyer_reference_2],
                                                temp_loyer_reference_1,
                                                temp_loyer_reference)
    except EmptyError:
        temp_loyer_reference_5 = dead_value
        raise NoValueProvided(SourcePosition(filename="examples/aides_logement/prologue.catala_fr",
                                             start_line=596, start_column=11,
                                             end_line=596, end_column=26,
                                             law_headings=["Secteur locatif",
                                             "Calcul du montant de l'aide personnalisée au logement",
                                             "Déclarations des champs d'application",
                                             "Prologue : aides au logement"]))
    loyer_reference = temp_loyer_reference_5
    try:
        def temp_plafond_loyer_d823_16_2(_:Unit):
            def temp_plafond_loyer_d823_16_2_1(_:Unit):
                raise EmptyError
            def temp_plafond_loyer_d823_16_2_2(_:Unit):
                return False
            def temp_plafond_loyer_d823_16_2_3(_:Unit):
                if (((date_courante_6 < date_of_numbers(2021,10,1)) and
                    (date_courante_6 >= date_of_numbers(2020,10,1))) and
                    (nombre_personnes_a_charge_2 >=
                    integer_of_string("1"))):
                    match_arg_116 = zone
                    if match_arg_116.code == ZoneDHabitation_Code.Zone1:
                        _ = match_arg_116.value
                        return (money_of_cents_string("40460") +
                            (money_of_cents_string("5870") *
                            multiplicateur_majoration_plafond_loyer_d823_16_2))
                    elif match_arg_116.code == ZoneDHabitation_Code.Zone2:
                        _ = match_arg_116.value
                        return (money_of_cents_string("35630") +
                            (money_of_cents_string("5186") *
                            multiplicateur_majoration_plafond_loyer_d823_16_2))
                    elif match_arg_116.code == ZoneDHabitation_Code.Zone3:
                        _ = match_arg_116.value
                        return (money_of_cents_string("32956") +
                            (money_of_cents_string("4723") *
                            multiplicateur_majoration_plafond_loyer_d823_16_2))
                else:
                    raise EmptyError
            def temp_plafond_loyer_d823_16_2_4(_:Unit):
                match_arg_117 = situation_familiale_calcul_apl_2
                if match_arg_117.code == SituationFamilialeCalculAPL_Code.PersonneSeule:
                    _ = match_arg_117.value
                    temp_plafond_loyer_d823_16_2_5 = False
                elif match_arg_117.code == SituationFamilialeCalculAPL_Code.Couple:
                    _ = match_arg_117.value
                    temp_plafond_loyer_d823_16_2_5 = True
                if (((date_courante_6 < date_of_numbers(2021,10,1)) and
                    (date_courante_6 >= date_of_numbers(2020,10,1))) and
                    (temp_plafond_loyer_d823_16_2_5 and
                    (nombre_personnes_a_charge_2 ==
                    integer_of_string("0")))):
                    match_arg_118 = zone
                    if match_arg_118.code == ZoneDHabitation_Code.Zone1:
                        _ = match_arg_118.value
                        return money_of_cents_string("35799")
                    elif match_arg_118.code == ZoneDHabitation_Code.Zone2:
                        _ = match_arg_118.value
                        return money_of_cents_string("31664")
                    elif match_arg_118.code == ZoneDHabitation_Code.Zone3:
                        _ = match_arg_118.value
                        return money_of_cents_string("29392")
                else:
                    raise EmptyError
            def temp_plafond_loyer_d823_16_2_6(_:Unit):
                match_arg_119 = situation_familiale_calcul_apl_2
                if match_arg_119.code == SituationFamilialeCalculAPL_Code.PersonneSeule:
                    _ = match_arg_119.value
                    temp_plafond_loyer_d823_16_2_7 = True
                elif match_arg_119.code == SituationFamilialeCalculAPL_Code.Couple:
                    _ = match_arg_119.value
                    temp_plafond_loyer_d823_16_2_7 = False
                if (((date_courante_6 < date_of_numbers(2021,10,1)) and
                    (date_courante_6 >= date_of_numbers(2020,10,1))) and
                    (temp_plafond_loyer_d823_16_2_7 and
                    (nombre_personnes_a_charge_2 ==
                    integer_of_string("0")))):
                    match_arg_120 = zone
                    if match_arg_120.code == ZoneDHabitation_Code.Zone1:
                        _ = match_arg_120.value
                        return money_of_cents_string("29682")
                    elif match_arg_120.code == ZoneDHabitation_Code.Zone2:
                        _ = match_arg_120.value
                        return money_of_cents_string("25859")
                    elif match_arg_120.code == ZoneDHabitation_Code.Zone3:
                        _ = match_arg_120.value
                        return money_of_cents_string("24246")
                else:
                    raise EmptyError
            def temp_plafond_loyer_d823_16_2_8(_:Unit):
                if (((date_courante_6 >= date_of_numbers(2021,10,1)) and
                    (date_courante_6 < date_of_numbers(2022,7,1))) and
                    (nombre_personnes_a_charge_2 >=
                    integer_of_string("1"))):
                    match_arg_121 = zone
                    if match_arg_121.code == ZoneDHabitation_Code.Zone1:
                        _ = match_arg_121.value
                        return (money_of_cents_string("40630") +
                            (money_of_cents_string("5895") *
                            multiplicateur_majoration_plafond_loyer_d823_16_2))
                    elif match_arg_121.code == ZoneDHabitation_Code.Zone2:
                        _ = match_arg_121.value
                        return (money_of_cents_string("35780") +
                            (money_of_cents_string("5208") *
                            multiplicateur_majoration_plafond_loyer_d823_16_2))
                    elif match_arg_121.code == ZoneDHabitation_Code.Zone3:
                        _ = match_arg_121.value
                        return (money_of_cents_string("33094") +
                            (money_of_cents_string("4743") *
                            multiplicateur_majoration_plafond_loyer_d823_16_2))
                else:
                    raise EmptyError
            def temp_plafond_loyer_d823_16_2_9(_:Unit):
                match_arg_122 = situation_familiale_calcul_apl_2
                if match_arg_122.code == SituationFamilialeCalculAPL_Code.PersonneSeule:
                    _ = match_arg_122.value
                    temp_plafond_loyer_d823_16_2_10 = False
                elif match_arg_122.code == SituationFamilialeCalculAPL_Code.Couple:
                    _ = match_arg_122.value
                    temp_plafond_loyer_d823_16_2_10 = True
                if (((date_courante_6 >= date_of_numbers(2021,10,1)) and
                    (date_courante_6 < date_of_numbers(2022,7,1))) and
                    (temp_plafond_loyer_d823_16_2_10 and
                    (nombre_personnes_a_charge_2 ==
                    integer_of_string("0")))):
                    match_arg_123 = zone
                    if match_arg_123.code == ZoneDHabitation_Code.Zone1:
                        _ = match_arg_123.value
                        return money_of_cents_string("35949")
                    elif match_arg_123.code == ZoneDHabitation_Code.Zone2:
                        _ = match_arg_123.value
                        return money_of_cents_string("31797")
                    elif match_arg_123.code == ZoneDHabitation_Code.Zone3:
                        _ = match_arg_123.value
                        return money_of_cents_string("29515")
                else:
                    raise EmptyError
            def temp_plafond_loyer_d823_16_2_11(_:Unit):
                match_arg_124 = situation_familiale_calcul_apl_2
                if match_arg_124.code == SituationFamilialeCalculAPL_Code.PersonneSeule:
                    _ = match_arg_124.value
                    temp_plafond_loyer_d823_16_2_12 = True
                elif match_arg_124.code == SituationFamilialeCalculAPL_Code.Couple:
                    _ = match_arg_124.value
                    temp_plafond_loyer_d823_16_2_12 = False
                if (((date_courante_6 >= date_of_numbers(2021,10,1)) and
                    (date_courante_6 < date_of_numbers(2022,7,1))) and
                    (temp_plafond_loyer_d823_16_2_12 and
                    (nombre_personnes_a_charge_2 ==
                    integer_of_string("0")))):
                    match_arg_125 = zone
                    if match_arg_125.code == ZoneDHabitation_Code.Zone1:
                        _ = match_arg_125.value
                        return money_of_cents_string("29807")
                    elif match_arg_125.code == ZoneDHabitation_Code.Zone2:
                        _ = match_arg_125.value
                        return money_of_cents_string("25978")
                    elif match_arg_125.code == ZoneDHabitation_Code.Zone3:
                        _ = match_arg_125.value
                        return money_of_cents_string("24348")
                else:
                    raise EmptyError
            def temp_plafond_loyer_d823_16_2_13(_:Unit):
                if ((date_courante_6 >= date_of_numbers(2022,7,1)) and
                    (nombre_personnes_a_charge_2 >=
                    integer_of_string("1"))):
                    match_arg_126 = zone
                    if match_arg_126.code == ZoneDHabitation_Code.Zone1:
                        _ = match_arg_126.value
                        return (money_of_cents_string("42052") +
                            (money_of_cents_string("6101") *
                            multiplicateur_majoration_plafond_loyer_d823_16_2))
                    elif match_arg_126.code == ZoneDHabitation_Code.Zone2:
                        _ = match_arg_126.value
                        return (money_of_cents_string("37032") +
                            (money_of_cents_string("5390") *
                            multiplicateur_majoration_plafond_loyer_d823_16_2))
                    elif match_arg_126.code == ZoneDHabitation_Code.Zone3:
                        _ = match_arg_126.value
                        return (money_of_cents_string("34252") +
                            (money_of_cents_string("4909") *
                            multiplicateur_majoration_plafond_loyer_d823_16_2))
                else:
                    raise EmptyError
            def temp_plafond_loyer_d823_16_2_14(_:Unit):
                match_arg_127 = situation_familiale_calcul_apl_2
                if match_arg_127.code == SituationFamilialeCalculAPL_Code.PersonneSeule:
                    _ = match_arg_127.value
                    temp_plafond_loyer_d823_16_2_15 = False
                elif match_arg_127.code == SituationFamilialeCalculAPL_Code.Couple:
                    _ = match_arg_127.value
                    temp_plafond_loyer_d823_16_2_15 = True
                if ((date_courante_6 >= date_of_numbers(2022,7,1)) and
                    (temp_plafond_loyer_d823_16_2_15 and
                    (nombre_personnes_a_charge_2 ==
                    integer_of_string("0")))):
                    match_arg_128 = zone
                    if match_arg_128.code == ZoneDHabitation_Code.Zone1:
                        _ = match_arg_128.value
                        return money_of_cents_string("37207")
                    elif match_arg_128.code == ZoneDHabitation_Code.Zone2:
                        _ = match_arg_128.value
                        return money_of_cents_string("32910")
                    elif match_arg_128.code == ZoneDHabitation_Code.Zone3:
                        _ = match_arg_128.value
                        return money_of_cents_string("30548")
                else:
                    raise EmptyError
            def temp_plafond_loyer_d823_16_2_16(_:Unit):
                match_arg_129 = situation_familiale_calcul_apl_2
                if match_arg_129.code == SituationFamilialeCalculAPL_Code.PersonneSeule:
                    _ = match_arg_129.value
                    temp_plafond_loyer_d823_16_2_17 = True
                elif match_arg_129.code == SituationFamilialeCalculAPL_Code.Couple:
                    _ = match_arg_129.value
                    temp_plafond_loyer_d823_16_2_17 = False
                if ((date_courante_6 >= date_of_numbers(2022,7,1)) and
                    (temp_plafond_loyer_d823_16_2_17 and
                    (nombre_personnes_a_charge_2 ==
                    integer_of_string("0")))):
                    match_arg_130 = zone
                    if match_arg_130.code == ZoneDHabitation_Code.Zone1:
                        _ = match_arg_130.value
                        return money_of_cents_string("30850")
                    elif match_arg_130.code == ZoneDHabitation_Code.Zone2:
                        _ = match_arg_130.value
                        return money_of_cents_string("26887")
                    elif match_arg_130.code == ZoneDHabitation_Code.Zone3:
                        _ = match_arg_130.value
                        return money_of_cents_string("25200")
                else:
                    raise EmptyError
            return handle_default(SourcePosition(filename="examples/aides_logement/prologue.catala_fr",
                                  start_line=610, start_column=12,
                                  end_line=610, end_column=35,
                                  law_headings=["Secteur locatif",
                                  "Calcul du montant de l'aide personnalisée au logement",
                                  "Déclarations des champs d'application",
                                  "Prologue : aides au logement"]), [temp_plafond_loyer_d823_16_2_16,
                                  temp_plafond_loyer_d823_16_2_14,
                                  temp_plafond_loyer_d823_16_2_13,
                                  temp_plafond_loyer_d823_16_2_11,
                                  temp_plafond_loyer_d823_16_2_9,
                                  temp_plafond_loyer_d823_16_2_8,
                                  temp_plafond_loyer_d823_16_2_6,
                                  temp_plafond_loyer_d823_16_2_4,
                                  temp_plafond_loyer_d823_16_2_3],
                                  temp_plafond_loyer_d823_16_2_2,
                                  temp_plafond_loyer_d823_16_2_1)
        def temp_plafond_loyer_d823_16_2_18(_:Unit):
            return True
        def temp_plafond_loyer_d823_16_2_19(_:Unit):
            try:
                def temp_plafond_loyer_d823_16_2_20(_:Unit):
                    raise EmptyError
                def temp_plafond_loyer_d823_16_2_21(_:Unit):
                    return False
                def temp_plafond_loyer_d823_16_2_22(_:Unit):
                    if (((date_courante_6 < date_of_numbers(2021,10,1)) and
                        ((date_courante_6 >= date_of_numbers(2020,10,1)) and
                        logement_est_chambre)) and
                        agees_ou_handicap_adultes_hebergees_onereux_particuliers):
                        match_arg_131 = zone
                        if match_arg_131.code == ZoneDHabitation_Code.Zone1:
                            _ = match_arg_131.value
                            return money_of_cents_string("22262")
                        elif match_arg_131.code == ZoneDHabitation_Code.Zone2:
                            _ = match_arg_131.value
                            return money_of_cents_string("19402")
                        elif match_arg_131.code == ZoneDHabitation_Code.Zone3:
                            _ = match_arg_131.value
                            return money_of_cents_string("18185")
                    else:
                        raise EmptyError
                def temp_plafond_loyer_d823_16_2_23(_:Unit):
                    if (((date_courante_6 >= date_of_numbers(2021,10,1)) and
                        ((date_courante_6 < date_of_numbers(2022,7,1)) and
                        logement_est_chambre)) and
                        agees_ou_handicap_adultes_hebergees_onereux_particuliers):
                        match_arg_132 = zone
                        if match_arg_132.code == ZoneDHabitation_Code.Zone1:
                            _ = match_arg_132.value
                            return money_of_cents_string("22355")
                        elif match_arg_132.code == ZoneDHabitation_Code.Zone2:
                            _ = match_arg_132.value
                            return money_of_cents_string("19484")
                        elif match_arg_132.code == ZoneDHabitation_Code.Zone3:
                            _ = match_arg_132.value
                            return money_of_cents_string("18261")
                    else:
                        raise EmptyError
                def temp_plafond_loyer_d823_16_2_24(_:Unit):
                    if (((date_courante_6 >= date_of_numbers(2022,7,1)) and
                        logement_est_chambre) and
                        agees_ou_handicap_adultes_hebergees_onereux_particuliers):
                        match_arg_133 = zone
                        if match_arg_133.code == ZoneDHabitation_Code.Zone1:
                            _ = match_arg_133.value
                            return money_of_cents_string("23138")
                        elif match_arg_133.code == ZoneDHabitation_Code.Zone2:
                            _ = match_arg_133.value
                            return money_of_cents_string("20165")
                        elif match_arg_133.code == ZoneDHabitation_Code.Zone3:
                            _ = match_arg_133.value
                            return money_of_cents_string("18900")
                    else:
                        raise EmptyError
                return handle_default(SourcePosition(filename="examples/aides_logement/prologue.catala_fr",
                                      start_line=610, start_column=12,
                                      end_line=610, end_column=35,
                                      law_headings=["Secteur locatif",
                                      "Calcul du montant de l'aide personnalisée au logement",
                                      "Déclarations des champs d'application",
                                      "Prologue : aides au logement"]), [temp_plafond_loyer_d823_16_2_24,
                                      temp_plafond_loyer_d823_16_2_23,
                                      temp_plafond_loyer_d823_16_2_22],
                                      temp_plafond_loyer_d823_16_2_21,
                                      temp_plafond_loyer_d823_16_2_20)
            except EmptyError:
                def temp_plafond_loyer_d823_16_2_25(_:Unit):
                    raise EmptyError
                def temp_plafond_loyer_d823_16_2_26(_:Unit):
                    return False
                def temp_plafond_loyer_d823_16_2_27(_:Unit):
                    if ((date_courante_6 < date_of_numbers(2021,10,1)) and
                        ((date_courante_6 >= date_of_numbers(2020,10,1)) and
                        logement_est_chambre)):
                        match_arg_134 = zone
                        if match_arg_134.code == ZoneDHabitation_Code.Zone1:
                            _ = match_arg_134.value
                            return money_of_cents_string("26714")
                        elif match_arg_134.code == ZoneDHabitation_Code.Zone2:
                            _ = match_arg_134.value
                            return money_of_cents_string("23282")
                        elif match_arg_134.code == ZoneDHabitation_Code.Zone3:
                            _ = match_arg_134.value
                            return money_of_cents_string("21821")
                    else:
                        raise EmptyError
                def temp_plafond_loyer_d823_16_2_28(_:Unit):
                    if ((date_courante_6 >= date_of_numbers(2021,10,1)) and
                        ((date_courante_6 < date_of_numbers(2022,7,1)) and
                        logement_est_chambre)):
                        match_arg_135 = zone
                        if match_arg_135.code == ZoneDHabitation_Code.Zone1:
                            _ = match_arg_135.value
                            return money_of_cents_string("26826")
                        elif match_arg_135.code == ZoneDHabitation_Code.Zone2:
                            _ = match_arg_135.value
                            return money_of_cents_string("23380")
                        elif match_arg_135.code == ZoneDHabitation_Code.Zone3:
                            _ = match_arg_135.value
                            return money_of_cents_string("21913")
                    else:
                        raise EmptyError
                def temp_plafond_loyer_d823_16_2_29(_:Unit):
                    if ((date_courante_6 >= date_of_numbers(2022,7,1)) and
                        logement_est_chambre):
                        match_arg_136 = zone
                        if match_arg_136.code == ZoneDHabitation_Code.Zone1:
                            _ = match_arg_136.value
                            return money_of_cents_string("27765")
                        elif match_arg_136.code == ZoneDHabitation_Code.Zone2:
                            _ = match_arg_136.value
                            return money_of_cents_string("24198")
                        elif match_arg_136.code == ZoneDHabitation_Code.Zone3:
                            _ = match_arg_136.value
                            return money_of_cents_string("22680")
                    else:
                        raise EmptyError
                return handle_default(SourcePosition(filename="examples/aides_logement/prologue.catala_fr",
                                      start_line=610, start_column=12,
                                      end_line=610, end_column=35,
                                      law_headings=["Secteur locatif",
                                      "Calcul du montant de l'aide personnalisée au logement",
                                      "Déclarations des champs d'application",
                                      "Prologue : aides au logement"]), [temp_plafond_loyer_d823_16_2_29,
                                      temp_plafond_loyer_d823_16_2_28,
                                      temp_plafond_loyer_d823_16_2_27],
                                      temp_plafond_loyer_d823_16_2_26,
                                      temp_plafond_loyer_d823_16_2_25)
        def temp_plafond_loyer_d823_16_2_30(_:Unit):
            def temp_plafond_loyer_d823_16_2_31(_:Unit):
                raise EmptyError
            def temp_plafond_loyer_d823_16_2_32(_:Unit):
                return False
            def temp_plafond_loyer_d823_16_2_33(_:Unit):
                if (((date_courante_6 < date_of_numbers(2021,10,1)) and
                    ((date_courante_6 >= date_of_numbers(2020,10,1)) and
                    colocation)) and (nombre_personnes_a_charge_2 >=
                    integer_of_string("1"))):
                    match_arg_137 = zone
                    if match_arg_137.code == ZoneDHabitation_Code.Zone1:
                        _ = match_arg_137.value
                        return (money_of_cents_string("30345") +
                            (money_of_cents_string("4403") *
                            multiplicateur_majoration_plafond_loyer_d823_16_2))
                    elif match_arg_137.code == ZoneDHabitation_Code.Zone2:
                        _ = match_arg_137.value
                        return (money_of_cents_string("26723") +
                            (money_of_cents_string("3890") *
                            multiplicateur_majoration_plafond_loyer_d823_16_2))
                    elif match_arg_137.code == ZoneDHabitation_Code.Zone3:
                        _ = match_arg_137.value
                        return (money_of_cents_string("24717") +
                            (money_of_cents_string("3542") *
                            multiplicateur_majoration_plafond_loyer_d823_16_2))
                else:
                    raise EmptyError
            def temp_plafond_loyer_d823_16_2_34(_:Unit):
                match_arg_138 = situation_familiale_calcul_apl_2
                if match_arg_138.code == SituationFamilialeCalculAPL_Code.PersonneSeule:
                    _ = match_arg_138.value
                    temp_plafond_loyer_d823_16_2_35 = False
                elif match_arg_138.code == SituationFamilialeCalculAPL_Code.Couple:
                    _ = match_arg_138.value
                    temp_plafond_loyer_d823_16_2_35 = True
                if (((date_courante_6 < date_of_numbers(2021,10,1)) and
                    ((date_courante_6 >= date_of_numbers(2020,10,1)) and
                    colocation)) and (temp_plafond_loyer_d823_16_2_35 and
                    (nombre_personnes_a_charge_2 ==
                    integer_of_string("0")))):
                    match_arg_139 = zone
                    if match_arg_139.code == ZoneDHabitation_Code.Zone1:
                        _ = match_arg_139.value
                        return money_of_cents_string("26849")
                    elif match_arg_139.code == ZoneDHabitation_Code.Zone2:
                        _ = match_arg_139.value
                        return money_of_cents_string("23748")
                    elif match_arg_139.code == ZoneDHabitation_Code.Zone3:
                        _ = match_arg_139.value
                        return money_of_cents_string("22044")
                else:
                    raise EmptyError
            def temp_plafond_loyer_d823_16_2_36(_:Unit):
                match_arg_140 = situation_familiale_calcul_apl_2
                if match_arg_140.code == SituationFamilialeCalculAPL_Code.PersonneSeule:
                    _ = match_arg_140.value
                    temp_plafond_loyer_d823_16_2_37 = True
                elif match_arg_140.code == SituationFamilialeCalculAPL_Code.Couple:
                    _ = match_arg_140.value
                    temp_plafond_loyer_d823_16_2_37 = False
                if (((date_courante_6 < date_of_numbers(2021,10,1)) and
                    ((date_courante_6 >= date_of_numbers(2020,10,1)) and
                    colocation)) and (temp_plafond_loyer_d823_16_2_37 and
                    (nombre_personnes_a_charge_2 ==
                    integer_of_string("0")))):
                    match_arg_141 = zone
                    if match_arg_141.code == ZoneDHabitation_Code.Zone1:
                        _ = match_arg_141.value
                        return money_of_cents_string("22262")
                    elif match_arg_141.code == ZoneDHabitation_Code.Zone2:
                        _ = match_arg_141.value
                        return money_of_cents_string("19402")
                    elif match_arg_141.code == ZoneDHabitation_Code.Zone3:
                        _ = match_arg_141.value
                        return money_of_cents_string("18185")
                else:
                    raise EmptyError
            def temp_plafond_loyer_d823_16_2_38(_:Unit):
                if (((date_courante_6 >= date_of_numbers(2021,10,1)) and
                    ((date_courante_6 < date_of_numbers(2022,7,1)) and
                    colocation)) and (nombre_personnes_a_charge_2 >=
                    integer_of_string("1"))):
                    match_arg_142 = zone
                    if match_arg_142.code == ZoneDHabitation_Code.Zone1:
                        _ = match_arg_142.value
                        return (money_of_cents_string("30473") +
                            (money_of_cents_string("4421") *
                            multiplicateur_majoration_plafond_loyer_d823_16_2))
                    elif match_arg_142.code == ZoneDHabitation_Code.Zone2:
                        _ = match_arg_142.value
                        return (money_of_cents_string("26835") +
                            (money_of_cents_string("3906") *
                            multiplicateur_majoration_plafond_loyer_d823_16_2))
                    elif match_arg_142.code == ZoneDHabitation_Code.Zone3:
                        _ = match_arg_142.value
                        return (money_of_cents_string("24821") +
                            (money_of_cents_string("3557") *
                            multiplicateur_majoration_plafond_loyer_d823_16_2))
                else:
                    raise EmptyError
            def temp_plafond_loyer_d823_16_2_39(_:Unit):
                match_arg_143 = situation_familiale_calcul_apl_2
                if match_arg_143.code == SituationFamilialeCalculAPL_Code.PersonneSeule:
                    _ = match_arg_143.value
                    temp_plafond_loyer_d823_16_2_40 = False
                elif match_arg_143.code == SituationFamilialeCalculAPL_Code.Couple:
                    _ = match_arg_143.value
                    temp_plafond_loyer_d823_16_2_40 = True
                if (((date_courante_6 >= date_of_numbers(2021,10,1)) and
                    ((date_courante_6 < date_of_numbers(2022,7,1)) and
                    colocation)) and (temp_plafond_loyer_d823_16_2_40 and
                    (nombre_personnes_a_charge_2 ==
                    integer_of_string("0")))):
                    match_arg_144 = zone
                    if match_arg_144.code == ZoneDHabitation_Code.Zone1:
                        _ = match_arg_144.value
                        return money_of_cents_string("26962")
                    elif match_arg_144.code == ZoneDHabitation_Code.Zone2:
                        _ = match_arg_144.value
                        return money_of_cents_string("23848")
                    elif match_arg_144.code == ZoneDHabitation_Code.Zone3:
                        _ = match_arg_144.value
                        return money_of_cents_string("22136")
                else:
                    raise EmptyError
            def temp_plafond_loyer_d823_16_2_41(_:Unit):
                match_arg_145 = situation_familiale_calcul_apl_2
                if match_arg_145.code == SituationFamilialeCalculAPL_Code.PersonneSeule:
                    _ = match_arg_145.value
                    temp_plafond_loyer_d823_16_2_42 = True
                elif match_arg_145.code == SituationFamilialeCalculAPL_Code.Couple:
                    _ = match_arg_145.value
                    temp_plafond_loyer_d823_16_2_42 = False
                if (((date_courante_6 >= date_of_numbers(2021,10,1)) and
                    ((date_courante_6 < date_of_numbers(2022,7,1)) and
                    colocation)) and (temp_plafond_loyer_d823_16_2_42 and
                    (nombre_personnes_a_charge_2 ==
                    integer_of_string("0")))):
                    match_arg_146 = zone
                    if match_arg_146.code == ZoneDHabitation_Code.Zone1:
                        _ = match_arg_146.value
                        return money_of_cents_string("22355")
                    elif match_arg_146.code == ZoneDHabitation_Code.Zone2:
                        _ = match_arg_146.value
                        return money_of_cents_string("19484")
                    elif match_arg_146.code == ZoneDHabitation_Code.Zone3:
                        _ = match_arg_146.value
                        return money_of_cents_string("18261")
                else:
                    raise EmptyError
            def temp_plafond_loyer_d823_16_2_43(_:Unit):
                if (((date_courante_6 >= date_of_numbers(2022,7,1)) and
                    colocation) and (nombre_personnes_a_charge_2 >=
                    integer_of_string("1"))):
                    match_arg_147 = zone
                    if match_arg_147.code == ZoneDHabitation_Code.Zone1:
                        _ = match_arg_147.value
                        return (money_of_cents_string("31539") +
                            (money_of_cents_string("4576") *
                            multiplicateur_majoration_plafond_loyer_d823_16_2))
                    elif match_arg_147.code == ZoneDHabitation_Code.Zone2:
                        _ = match_arg_147.value
                        return (money_of_cents_string("27774") +
                            (money_of_cents_string("4043") *
                            multiplicateur_majoration_plafond_loyer_d823_16_2))
                    elif match_arg_147.code == ZoneDHabitation_Code.Zone3:
                        _ = match_arg_147.value
                        return (money_of_cents_string("25689") +
                            (money_of_cents_string("3682") *
                            multiplicateur_majoration_plafond_loyer_d823_16_2))
                else:
                    raise EmptyError
            def temp_plafond_loyer_d823_16_2_44(_:Unit):
                match_arg_148 = situation_familiale_calcul_apl_2
                if match_arg_148.code == SituationFamilialeCalculAPL_Code.PersonneSeule:
                    _ = match_arg_148.value
                    temp_plafond_loyer_d823_16_2_45 = False
                elif match_arg_148.code == SituationFamilialeCalculAPL_Code.Couple:
                    _ = match_arg_148.value
                    temp_plafond_loyer_d823_16_2_45 = True
                if (((date_courante_6 >= date_of_numbers(2022,7,1)) and
                    colocation) and (temp_plafond_loyer_d823_16_2_45 and
                    (nombre_personnes_a_charge_2 ==
                    integer_of_string("0")))):
                    match_arg_149 = zone
                    if match_arg_149.code == ZoneDHabitation_Code.Zone1:
                        _ = match_arg_149.value
                        return money_of_cents_string("27905")
                    elif match_arg_149.code == ZoneDHabitation_Code.Zone2:
                        _ = match_arg_149.value
                        return money_of_cents_string("24683")
                    elif match_arg_149.code == ZoneDHabitation_Code.Zone3:
                        _ = match_arg_149.value
                        return money_of_cents_string("22911")
                else:
                    raise EmptyError
            def temp_plafond_loyer_d823_16_2_46(_:Unit):
                match_arg_150 = situation_familiale_calcul_apl_2
                if match_arg_150.code == SituationFamilialeCalculAPL_Code.PersonneSeule:
                    _ = match_arg_150.value
                    temp_plafond_loyer_d823_16_2_47 = True
                elif match_arg_150.code == SituationFamilialeCalculAPL_Code.Couple:
                    _ = match_arg_150.value
                    temp_plafond_loyer_d823_16_2_47 = False
                if (((date_courante_6 >= date_of_numbers(2022,7,1)) and
                    colocation) and (temp_plafond_loyer_d823_16_2_47 and
                    (nombre_personnes_a_charge_2 ==
                    integer_of_string("0")))):
                    match_arg_151 = zone
                    if match_arg_151.code == ZoneDHabitation_Code.Zone1:
                        _ = match_arg_151.value
                        return money_of_cents_string("23138")
                    elif match_arg_151.code == ZoneDHabitation_Code.Zone2:
                        _ = match_arg_151.value
                        return money_of_cents_string("20165")
                    elif match_arg_151.code == ZoneDHabitation_Code.Zone3:
                        _ = match_arg_151.value
                        return money_of_cents_string("18900")
                else:
                    raise EmptyError
            return handle_default(SourcePosition(filename="examples/aides_logement/prologue.catala_fr",
                                  start_line=610, start_column=12,
                                  end_line=610, end_column=35,
                                  law_headings=["Secteur locatif",
                                  "Calcul du montant de l'aide personnalisée au logement",
                                  "Déclarations des champs d'application",
                                  "Prologue : aides au logement"]), [temp_plafond_loyer_d823_16_2_46,
                                  temp_plafond_loyer_d823_16_2_44,
                                  temp_plafond_loyer_d823_16_2_43,
                                  temp_plafond_loyer_d823_16_2_41,
                                  temp_plafond_loyer_d823_16_2_39,
                                  temp_plafond_loyer_d823_16_2_38,
                                  temp_plafond_loyer_d823_16_2_36,
                                  temp_plafond_loyer_d823_16_2_34,
                                  temp_plafond_loyer_d823_16_2_33],
                                  temp_plafond_loyer_d823_16_2_32,
                                  temp_plafond_loyer_d823_16_2_31)
        temp_plafond_loyer_d823_16_2_48 = handle_default(SourcePosition(filename="examples/aides_logement/prologue.catala_fr",
                                                         start_line=610,
                                                         start_column=12,
                                                         end_line=610, end_column=35,
                                                         law_headings=["Secteur locatif",
                                                         "Calcul du montant de l'aide personnalisée au logement",
                                                         "Déclarations des champs d'application",
                                                         "Prologue : aides au logement"]), [temp_plafond_loyer_d823_16_2_30,
                                                         temp_plafond_loyer_d823_16_2_19],
                                                         temp_plafond_loyer_d823_16_2_18,
                                                         temp_plafond_loyer_d823_16_2)
    except EmptyError:
        temp_plafond_loyer_d823_16_2_48 = dead_value
        raise NoValueProvided(SourcePosition(filename="examples/aides_logement/prologue.catala_fr",
                                             start_line=610, start_column=12,
                                             end_line=610, end_column=35,
                                             law_headings=["Secteur locatif",
                                             "Calcul du montant de l'aide personnalisée au logement",
                                             "Déclarations des champs d'application",
                                             "Prologue : aides au logement"]))
    plafond_loyer_d823_16_2 = temp_plafond_loyer_d823_16_2_48
    try:
        if (date_courante_6 >=
            date_of_numbers(2019,10,1)):
            match_arg_152 = zone
            if match_arg_152.code == ZoneDHabitation_Code.Zone1:
                _ = match_arg_152.value
                temp_plafond_suppression_d823_16 = (plafond_loyer_d823_16_2 *
                    decimal_of_string("4."))
            elif match_arg_152.code == ZoneDHabitation_Code.Zone2:
                _ = match_arg_152.value
                temp_plafond_suppression_d823_16 = (plafond_loyer_d823_16_2 *
                    decimal_of_string("3.1"))
            elif match_arg_152.code == ZoneDHabitation_Code.Zone3:
                _ = match_arg_152.value
                temp_plafond_suppression_d823_16 = (plafond_loyer_d823_16_2 *
                    decimal_of_string("3.1"))
        else:
            temp_plafond_suppression_d823_16 = dead_value
            raise EmptyError
    except EmptyError:
        temp_plafond_suppression_d823_16 = dead_value
        raise NoValueProvided(SourcePosition(filename="examples/aides_logement/prologue.catala_fr",
                                             start_line=599, start_column=11,
                                             end_line=599, end_column=38,
                                             law_headings=["Secteur locatif",
                                             "Calcul du montant de l'aide personnalisée au logement",
                                             "Déclarations des champs d'application",
                                             "Prologue : aides au logement"]))
    plafond_suppression_d823_16 = temp_plafond_suppression_d823_16
    try:
        if (date_courante_6 >=
            date_of_numbers(2019,10,1)):
            match_arg_153 = zone
            if match_arg_153.code == ZoneDHabitation_Code.Zone1:
                _ = match_arg_153.value
                temp_plafond_degressivite_d823_16 = (plafond_loyer_d823_16_2 *
                    decimal_of_string("3.4"))
            elif match_arg_153.code == ZoneDHabitation_Code.Zone2:
                _ = match_arg_153.value
                temp_plafond_degressivite_d823_16 = (plafond_loyer_d823_16_2 *
                    decimal_of_string("2.5"))
            elif match_arg_153.code == ZoneDHabitation_Code.Zone3:
                _ = match_arg_153.value
                temp_plafond_degressivite_d823_16 = (plafond_loyer_d823_16_2 *
                    decimal_of_string("2.5"))
        else:
            temp_plafond_degressivite_d823_16 = dead_value
            raise EmptyError
    except EmptyError:
        temp_plafond_degressivite_d823_16 = dead_value
        raise NoValueProvided(SourcePosition(filename="examples/aides_logement/prologue.catala_fr",
                                             start_line=598, start_column=11,
                                             end_line=598, end_column=39,
                                             law_headings=["Secteur locatif",
                                             "Calcul du montant de l'aide personnalisée au logement",
                                             "Déclarations des champs d'application",
                                             "Prologue : aides au logement"]))
    plafond_degressivite_d823_16 = temp_plafond_degressivite_d823_16
    try:
        if (loyer_principal_avec_reduction_meuble >
            plafond_loyer_d823_16_2):
            temp_loyer_eligible = plafond_loyer_d823_16_2
        else:
            temp_loyer_eligible = loyer_principal_avec_reduction_meuble
    except EmptyError:
        temp_loyer_eligible = dead_value
        raise NoValueProvided(SourcePosition(filename="examples/aides_logement/prologue.catala_fr",
                                             start_line=591, start_column=11,
                                             end_line=591, end_column=25,
                                             law_headings=["Secteur locatif",
                                             "Calcul du montant de l'aide personnalisée au logement",
                                             "Déclarations des champs d'application",
                                             "Prologue : aides au logement"]))
    loyer_eligible = temp_loyer_eligible
    try:
        def temp_traitement_aide_finale_diminue(aide_finale_2:Money):
            try:
                try:
                    if beneficiaire_aide_adulte_ou_enfant_handicapes:
                        return aide_finale_2
                    else:
                        raise EmptyError
                except EmptyError:
                    if (loyer_principal_avec_reduction_meuble >
                        plafond_suppression_d823_16):
                        return money_of_cents_string("0")
                    else:
                        if (loyer_principal_avec_reduction_meuble >
                            plafond_degressivite_d823_16):
                            return (aide_finale_2 - (aide_finale_2 *
                                ((loyer_principal_avec_reduction_meuble -
                                plafond_degressivite_d823_16) /
                                (plafond_suppression_d823_16 -
                                plafond_degressivite_d823_16))))
                        else:
                            return aide_finale_2
            except EmptyError:
                raise NoValueProvided(SourcePosition(filename="examples/aides_logement/prologue.catala_fr",
                                                     start_line=622,
                                                     start_column=10,
                                                     end_line=622,
                                                     end_column=17,
                                                     law_headings=["Secteur locatif",
                                                     "Calcul du montant de l'aide personnalisée au logement",
                                                     "Déclarations des champs d'application",
                                                     "Prologue : aides au logement"]))
    except EmptyError:
        temp_traitement_aide_finale_diminue = dead_value
        raise NoValueProvided(SourcePosition(filename="examples/aides_logement/prologue.catala_fr",
                                             start_line=622, start_column=10,
                                             end_line=622, end_column=17,
                                             law_headings=["Secteur locatif",
                                             "Calcul du montant de l'aide personnalisée au logement",
                                             "Déclarations des champs d'application",
                                             "Prologue : aides au logement"]))
    traitement_aide_finale_diminue = temp_traitement_aide_finale_diminue
    try:
        def temp_participation_minimale(_:Unit):
            raise EmptyError
        def temp_participation_minimale_1(_:Unit):
            return False
        def temp_participation_minimale_2(_:Unit):
            if ((date_courante_6 < date_of_numbers(2021,10,1)) and
                (date_courante_6 >=
                date_of_numbers(2020,10,1))):
                if (((loyer_eligible + montant_forfaitaire_charges_d823_16) *
                    decimal_of_string("0.085")) >=
                    money_of_cents_string("3524")):
                    return ((loyer_eligible +
                        montant_forfaitaire_charges_d823_16) *
                        decimal_of_string("0.085"))
                else:
                    return money_of_cents_string("3524")
            else:
                raise EmptyError
        def temp_participation_minimale_3(_:Unit):
            if ((date_courante_6 >= date_of_numbers(2021,10,1)) and
                (date_courante_6 <
                date_of_numbers(2022,7,1))):
                if (((loyer_eligible + montant_forfaitaire_charges_d823_16) *
                    decimal_of_string("0.085")) >=
                    money_of_cents_string("3539")):
                    return ((loyer_eligible +
                        montant_forfaitaire_charges_d823_16) *
                        decimal_of_string("0.085"))
                else:
                    return money_of_cents_string("3539")
            else:
                raise EmptyError
        def temp_participation_minimale_4(_:Unit):
            if (date_courante_6 >=
                date_of_numbers(2022,7,1)):
                if (((loyer_eligible + montant_forfaitaire_charges_d823_16) *
                    decimal_of_string("0.085")) >=
                    money_of_cents_string("3663")):
                    return ((loyer_eligible +
                        montant_forfaitaire_charges_d823_16) *
                        decimal_of_string("0.085"))
                else:
                    return money_of_cents_string("3663")
            else:
                raise EmptyError
        temp_participation_minimale_5 = handle_default(SourcePosition(filename="examples/aides_logement/prologue.catala_fr",
                                                       start_line=611,
                                                       start_column=12,
                                                       end_line=611, end_column=34,
                                                       law_headings=["Secteur locatif",
                                                       "Calcul du montant de l'aide personnalisée au logement",
                                                       "Déclarations des champs d'application",
                                                       "Prologue : aides au logement"]), [temp_participation_minimale_4,
                                                       temp_participation_minimale_3,
                                                       temp_participation_minimale_2],
                                                       temp_participation_minimale_1,
                                                       temp_participation_minimale)
    except EmptyError:
        temp_participation_minimale_5 = dead_value
        raise NoValueProvided(SourcePosition(filename="examples/aides_logement/prologue.catala_fr",
                                             start_line=611, start_column=12,
                                             end_line=611, end_column=34,
                                             law_headings=["Secteur locatif",
                                             "Calcul du montant de l'aide personnalisée au logement",
                                             "Déclarations des champs d'application",
                                             "Prologue : aides au logement"]))
    participation_minimale = temp_participation_minimale_5
    try:
        try:
            try:
                if ((date_courante_6 >= date_of_numbers(2020,10,1)) and
                    (date_courante_6 <
                    date_of_numbers(2021,10,1))):
                    temp_rapport_loyers = (decimal_round(((loyer_eligible /
                        loyer_reference) * decimal_of_string("100."))) /
                        decimal_of_string("100."))
                else:
                    temp_rapport_loyers = dead_value
                    raise EmptyError
            except EmptyError:
                if ((date_courante_6 >= date_of_numbers(2021,10,1)) and
                    (date_courante_6 <
                    date_of_numbers(2022,7,1))):
                    temp_rapport_loyers = (decimal_round(((loyer_eligible /
                        loyer_reference) * decimal_of_string("100."))) /
                        decimal_of_string("100."))
                else:
                    temp_rapport_loyers = dead_value
                    raise EmptyError
        except EmptyError:
            if (date_courante_6 >=
                date_of_numbers(2022,7,1)):
                temp_rapport_loyers = (decimal_round(((loyer_eligible /
                    loyer_reference) * decimal_of_string("100."))) /
                    decimal_of_string("100."))
            else:
                temp_rapport_loyers = dead_value
                raise EmptyError
    except EmptyError:
        temp_rapport_loyers = dead_value
        raise NoValueProvided(SourcePosition(filename="examples/aides_logement/prologue.catala_fr",
                                             start_line=595, start_column=11,
                                             end_line=595, end_column=25,
                                             law_headings=["Secteur locatif",
                                             "Calcul du montant de l'aide personnalisée au logement",
                                             "Déclarations des champs d'application",
                                             "Prologue : aides au logement"]))
    rapport_loyers = temp_rapport_loyers
    try:
        def temp_traitement_aide_finale_minoration_forfaitaire(aide_finale_3:Money):
            try:
                if ((traitement_aide_finale_diminue(aide_finale_3) -
                    montant_forfaitaire_d823_16) >=
                    money_of_cents_string("0")):
                    return (traitement_aide_finale_diminue(aide_finale_3) -
                        montant_forfaitaire_d823_16)
                else:
                    return money_of_cents_string("0")
            except EmptyError:
                raise NoValueProvided(SourcePosition(filename="examples/aides_logement/prologue.catala_fr",
                                                     start_line=623,
                                                     start_column=10,
                                                     end_line=623,
                                                     end_column=32,
                                                     law_headings=["Secteur locatif",
                                                     "Calcul du montant de l'aide personnalisée au logement",
                                                     "Déclarations des champs d'application",
                                                     "Prologue : aides au logement"]))
    except EmptyError:
        temp_traitement_aide_finale_minoration_forfaitaire = dead_value
        raise NoValueProvided(SourcePosition(filename="examples/aides_logement/prologue.catala_fr",
                                             start_line=623, start_column=10,
                                             end_line=623, end_column=32,
                                             law_headings=["Secteur locatif",
                                             "Calcul du montant de l'aide personnalisée au logement",
                                             "Déclarations des champs d'application",
                                             "Prologue : aides au logement"]))
    traitement_aide_finale_minoration_forfaitaire = temp_traitement_aide_finale_minoration_forfaitaire
    try:
        try:
            try:
                if ((date_courante_6 >= date_of_numbers(2020,10,1)) and
                    (date_courante_6 <
                    date_of_numbers(2021,10,1))):
                    if (rapport_loyers <
                        decimal_of_string("0.45")):
                        temp_taux_loyer_eligible_formule = decimal_of_string("0.")
                    else:
                        if ((rapport_loyers >= decimal_of_string("0.45")) and
                            (rapport_loyers <
                            decimal_of_string("0.75"))):
                            temp_taux_loyer_eligible_formule = (decimal_of_string("0.0045") *
                                (rapport_loyers -
                                decimal_of_string("0.0045")))
                        else:
                            if (rapport_loyers >=
                                decimal_of_string("0.75")):
                                temp_taux_loyer_eligible_formule = ((decimal_of_string("0.0045") *
                                    decimal_of_string("0.3")) +
                                    (decimal_of_string("0.0068") *
                                    (rapport_loyers -
                                    decimal_of_string("0.75"))))
                            else:
                                temp_taux_loyer_eligible_formule = decimal_of_string("0.")
                else:
                    temp_taux_loyer_eligible_formule = dead_value
                    raise EmptyError
            except EmptyError:
                if ((date_courante_6 >= date_of_numbers(2021,10,1)) and
                    (date_courante_6 <
                    date_of_numbers(2022,7,1))):
                    if (rapport_loyers <
                        decimal_of_string("0.45")):
                        temp_taux_loyer_eligible_formule = decimal_of_string("0.")
                    else:
                        if ((rapport_loyers >= decimal_of_string("0.45")) and
                            (rapport_loyers <
                            decimal_of_string("0.75"))):
                            temp_taux_loyer_eligible_formule = (decimal_of_string("0.0045") *
                                (rapport_loyers -
                                decimal_of_string("0.0045")))
                        else:
                            if (rapport_loyers >=
                                decimal_of_string("0.75")):
                                temp_taux_loyer_eligible_formule = ((decimal_of_string("0.0045") *
                                    decimal_of_string("0.3")) +
                                    (decimal_of_string("0.0068") *
                                    (rapport_loyers -
                                    decimal_of_string("0.75"))))
                            else:
                                temp_taux_loyer_eligible_formule = decimal_of_string("0.")
                else:
                    temp_taux_loyer_eligible_formule = dead_value
                    raise EmptyError
        except EmptyError:
            if (date_courante_6 >=
                date_of_numbers(2022,7,1)):
                if (rapport_loyers <
                    decimal_of_string("0.45")):
                    temp_taux_loyer_eligible_formule = decimal_of_string("0.")
                else:
                    if ((rapport_loyers >= decimal_of_string("0.45")) and
                        (rapport_loyers <
                        decimal_of_string("0.75"))):
                        temp_taux_loyer_eligible_formule = (decimal_of_string("0.0045") *
                            (rapport_loyers - decimal_of_string("0.0045")))
                    else:
                        if (rapport_loyers >=
                            decimal_of_string("0.75")):
                            temp_taux_loyer_eligible_formule = ((decimal_of_string("0.0045") *
                                decimal_of_string("0.3")) +
                                (decimal_of_string("0.0068") *
                                (rapport_loyers -
                                decimal_of_string("0.75"))))
                        else:
                            temp_taux_loyer_eligible_formule = decimal_of_string("0.")
            else:
                temp_taux_loyer_eligible_formule = dead_value
                raise EmptyError
    except EmptyError:
        temp_taux_loyer_eligible_formule = dead_value
        raise NoValueProvided(SourcePosition(filename="examples/aides_logement/prologue.catala_fr",
                                             start_line=593, start_column=10,
                                             end_line=593, end_column=17,
                                             law_headings=["Secteur locatif",
                                             "Calcul du montant de l'aide personnalisée au logement",
                                             "Déclarations des champs d'application",
                                             "Prologue : aides au logement"]))
    taux_loyer_eligible_formule = temp_taux_loyer_eligible_formule
    try:
        def temp_traitement_aide_finale_contributions_sociales_arrondi(aide_finale_4:Money):
            try:
                if ((money_round(((traitement_aide_finale_minoration_forfaitaire(
                    aide_finale_4) -
                    contributions_sociales_dot_montant(traitement_aide_finale_minoration_forfaitaire(
                                                       aide_finale_4))) -
                    money_of_cents_string("50"))) +
                    contributions_sociales_dot_montant(traitement_aide_finale_minoration_forfaitaire(
                                                       aide_finale_4))) >=
                    money_of_cents_string("0")):
                    return (money_round(((traitement_aide_finale_minoration_forfaitaire(
                        aide_finale_4) -
                        contributions_sociales_dot_montant(traitement_aide_finale_minoration_forfaitaire(
                                                           aide_finale_4))) -
                        money_of_cents_string("50"))) +
                        contributions_sociales_dot_montant(traitement_aide_finale_minoration_forfaitaire(
                                                           aide_finale_4)))
                else:
                    return money_of_cents_string("0")
            except EmptyError:
                raise NoValueProvided(SourcePosition(filename="examples/aides_logement/prologue.catala_fr",
                                                     start_line=624,
                                                     start_column=10,
                                                     end_line=624,
                                                     end_column=40,
                                                     law_headings=["Secteur locatif",
                                                     "Calcul du montant de l'aide personnalisée au logement",
                                                     "Déclarations des champs d'application",
                                                     "Prologue : aides au logement"]))
    except EmptyError:
        temp_traitement_aide_finale_contributions_sociales_arrondi = dead_value
        raise NoValueProvided(SourcePosition(filename="examples/aides_logement/prologue.catala_fr",
                                             start_line=624, start_column=10,
                                             end_line=624, end_column=40,
                                             law_headings=["Secteur locatif",
                                             "Calcul du montant de l'aide personnalisée au logement",
                                             "Déclarations des champs d'application",
                                             "Prologue : aides au logement"]))
    traitement_aide_finale_contributions_sociales_arrondi = temp_traitement_aide_finale_contributions_sociales_arrondi
    try:
        try:
            try:
                if ((date_courante_6 >= date_of_numbers(2020,10,1)) and
                    (date_courante_6 <
                    date_of_numbers(2021,10,1))):
                    temp_taux_loyer_eligible_taux_arrondi = (decimal_round((taux_loyer_eligible_formule *
                        decimal_of_string("100000."))) /
                        decimal_of_string("100000."))
                else:
                    temp_taux_loyer_eligible_taux_arrondi = dead_value
                    raise EmptyError
            except EmptyError:
                if ((date_courante_6 >= date_of_numbers(2021,10,1)) and
                    (date_courante_6 <
                    date_of_numbers(2022,7,1))):
                    temp_taux_loyer_eligible_taux_arrondi = (decimal_round((taux_loyer_eligible_formule *
                        decimal_of_string("100000."))) /
                        decimal_of_string("100000."))
                else:
                    temp_taux_loyer_eligible_taux_arrondi = dead_value
                    raise EmptyError
        except EmptyError:
            if (date_courante_6 >=
                date_of_numbers(2022,7,1)):
                temp_taux_loyer_eligible_taux_arrondi = (decimal_round((taux_loyer_eligible_formule *
                    decimal_of_string("100000."))) /
                    decimal_of_string("100000."))
            else:
                temp_taux_loyer_eligible_taux_arrondi = dead_value
                raise EmptyError
    except EmptyError:
        temp_taux_loyer_eligible_taux_arrondi = dead_value
        raise NoValueProvided(SourcePosition(filename="examples/aides_logement/prologue.catala_fr",
                                             start_line=594, start_column=10,
                                             end_line=594, end_column=22,
                                             law_headings=["Secteur locatif",
                                             "Calcul du montant de l'aide personnalisée au logement",
                                             "Déclarations des champs d'application",
                                             "Prologue : aides au logement"]))
    taux_loyer_eligible_taux_arrondi = temp_taux_loyer_eligible_taux_arrondi
    try:
        def temp_traitement_aide_finale_reduction_loyer_solidarite(aide_finale_5:Money):
            try:
                if ((traitement_aide_finale_contributions_sociales_arrondi(
                    aide_finale_5) - (reduction_loyer_solidarite *
                    fraction_l832_3)) >=
                    money_of_cents_string("0")):
                    return (traitement_aide_finale_contributions_sociales_arrondi(
                        aide_finale_5) - (reduction_loyer_solidarite *
                        fraction_l832_3))
                else:
                    return money_of_cents_string("0")
            except EmptyError:
                raise NoValueProvided(SourcePosition(filename="examples/aides_logement/prologue.catala_fr",
                                                     start_line=625,
                                                     start_column=10,
                                                     end_line=625,
                                                     end_column=36,
                                                     law_headings=["Secteur locatif",
                                                     "Calcul du montant de l'aide personnalisée au logement",
                                                     "Déclarations des champs d'application",
                                                     "Prologue : aides au logement"]))
    except EmptyError:
        temp_traitement_aide_finale_reduction_loyer_solidarite = dead_value
        raise NoValueProvided(SourcePosition(filename="examples/aides_logement/prologue.catala_fr",
                                             start_line=625, start_column=10,
                                             end_line=625, end_column=36,
                                             law_headings=["Secteur locatif",
                                             "Calcul du montant de l'aide personnalisée au logement",
                                             "Déclarations des champs d'application",
                                             "Prologue : aides au logement"]))
    traitement_aide_finale_reduction_loyer_solidarite = temp_traitement_aide_finale_reduction_loyer_solidarite
    try:
        temp_taux_prise_compte_ressources = (taux_composition_familiale +
            taux_loyer_eligible_taux_arrondi)
    except EmptyError:
        temp_taux_prise_compte_ressources = dead_value
        raise NoValueProvided(SourcePosition(filename="examples/aides_logement/prologue.catala_fr",
                                             start_line=603, start_column=11,
                                             end_line=603, end_column=39,
                                             law_headings=["Secteur locatif",
                                             "Calcul du montant de l'aide personnalisée au logement",
                                             "Déclarations des champs d'application",
                                             "Prologue : aides au logement"]))
    taux_prise_compte_ressources = temp_taux_prise_compte_ressources
    try:
        def temp_traitement_aide_finale_montant_minimal(aide_finale_6:Money):
            try:
                if (traitement_aide_finale_reduction_loyer_solidarite(
                    aide_finale_6) <
                    montant_minimal_aide_d823_16):
                    return money_of_cents_string("0")
                else:
                    return traitement_aide_finale_reduction_loyer_solidarite(
                        aide_finale_6)
            except EmptyError:
                raise NoValueProvided(SourcePosition(filename="examples/aides_logement/prologue.catala_fr",
                                                     start_line=626,
                                                     start_column=10,
                                                     end_line=626,
                                                     end_column=25,
                                                     law_headings=["Secteur locatif",
                                                     "Calcul du montant de l'aide personnalisée au logement",
                                                     "Déclarations des champs d'application",
                                                     "Prologue : aides au logement"]))
    except EmptyError:
        temp_traitement_aide_finale_montant_minimal = dead_value
        raise NoValueProvided(SourcePosition(filename="examples/aides_logement/prologue.catala_fr",
                                             start_line=626, start_column=10,
                                             end_line=626, end_column=25,
                                             law_headings=["Secteur locatif",
                                             "Calcul du montant de l'aide personnalisée au logement",
                                             "Déclarations des champs d'application",
                                             "Prologue : aides au logement"]))
    traitement_aide_finale_montant_minimal = temp_traitement_aide_finale_montant_minimal
    try:
        if (((ressources_menage_arrondies_1 -
            abattement_forfaitaire_d823_17) * taux_prise_compte_ressources) <
            money_of_cents_string("0")):
            temp_participation_personnelle = money_of_cents_string("0")
        else:
            temp_participation_personnelle = ((ressources_menage_arrondies_1 -
                abattement_forfaitaire_d823_17) *
                taux_prise_compte_ressources)
        temp_participation_personnelle_1 = (participation_minimale +
            temp_participation_personnelle)
    except EmptyError:
        temp_participation_personnelle_1 = dead_value
        raise NoValueProvided(SourcePosition(filename="examples/aides_logement/prologue.catala_fr",
                                             start_line=613, start_column=12,
                                             end_line=613, end_column=37,
                                             law_headings=["Secteur locatif",
                                             "Calcul du montant de l'aide personnalisée au logement",
                                             "Déclarations des champs d'application",
                                             "Prologue : aides au logement"]))
    participation_personnelle = temp_participation_personnelle_1
    try:
        if (((loyer_eligible + montant_forfaitaire_charges_d823_16) -
            participation_personnelle) <
            money_of_cents_string("0")):
            temp_aide_finale_formule = money_of_cents_string("0")
        else:
            temp_aide_finale_formule = ((loyer_eligible +
                montant_forfaitaire_charges_d823_16) -
                participation_personnelle)
    except EmptyError:
        temp_aide_finale_formule = dead_value
        raise NoValueProvided(SourcePosition(filename="examples/aides_logement/prologue.catala_fr",
                                             start_line=618, start_column=12,
                                             end_line=618, end_column=31,
                                             law_headings=["Secteur locatif",
                                             "Calcul du montant de l'aide personnalisée au logement",
                                             "Déclarations des champs d'application",
                                             "Prologue : aides au logement"]))
    aide_finale_formule = temp_aide_finale_formule
    try:
        temp___4 = (plafond_degressivite_d823_16 >=
            (plafond_loyer_d823_16_2 * decimal_of_string("2.5")))
    except EmptyError:
        temp___4 = dead_value
        raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                             start_line=1840,
                                             start_column=13, end_line=1840,
                                             end_column=74,
                                             law_headings=["Article D823-16",
                                             "Sous-section 2 : Calcul de l'aide en secteur locatif",
                                             "Section 1 : Calcul, liquidation et versement des aides",
                                             "Chapitre III : Modalités de liquidation et de versement",
                                             "Titre II : Dispositions communes aux aides personnelles au logement",
                                             "Livre VIII : Aides personnelles au logement",
                                             "Partie réglementaire",
                                             "Code de la construction et de l'habitation"]))
    if not (temp___4):
        raise AssertionFailure(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                              start_line=1840,
                                              start_column=13, end_line=1840,
                                              end_column=74,
                                              law_headings=["Article D823-16",
                                                           "Sous-section 2 : Calcul de l'aide en secteur locatif",
                                                           "Section 1 : Calcul, liquidation et versement des aides",
                                                           "Chapitre III : Modalités de liquidation et de versement",
                                                           "Titre II : Dispositions communes aux aides personnelles au logement",
                                                           "Livre VIII : Aides personnelles au logement",
                                                           "Partie réglementaire",
                                                           "Code de la construction et de l'habitation"]))
    try:
        temp___5 = ((fraction_l832_3 >= decimal_of_string("0.9")) and
            (fraction_l832_3 <= decimal_of_string("0.98")))
    except EmptyError:
        temp___5 = dead_value
        raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_legislatif.catala_fr",
                                             start_line=854, start_column=13,
                                             end_line=854, end_column=61,
                                             law_headings=["Article L832-3",
                                             "Chapitre Ier : Champ d'application",
                                             "Titre III : Aide personnalisée au logement",
                                             "Livre VIII : Aides personnelles au logement",
                                             "Partie législative",
                                             "Code de la construction et de l'habitation"]))
    if not (temp___5):
        raise AssertionFailure(SourcePosition(filename="examples/aides_logement/code_construction_legislatif.catala_fr",
                                              start_line=854,
                                              start_column=13, end_line=854,
                                              end_column=61,
                                              law_headings=["Article L832-3",
                                                           "Chapitre Ier : Champ d'application",
                                                           "Titre III : Aide personnalisée au logement",
                                                           "Livre VIII : Aides personnelles au logement",
                                                           "Partie législative",
                                                           "Code de la construction et de l'habitation"]))
    try:
        temp___6 = not (logement_est_chambre and colocation)
    except EmptyError:
        temp___6 = dead_value
        raise NoValueProvided(SourcePosition(filename="examples/aides_logement/prologue.catala_fr",
                                             start_line=640, start_column=13,
                                             end_line=640, end_column=53,
                                             law_headings=["Secteur locatif",
                                             "Calcul du montant de l'aide personnalisée au logement",
                                             "Déclarations des champs d'application",
                                             "Prologue : aides au logement"]))
    if not (temp___6):
        raise AssertionFailure(SourcePosition(filename="examples/aides_logement/prologue.catala_fr",
                                              start_line=640,
                                              start_column=13, end_line=640,
                                              end_column=53,
                                              law_headings=["Secteur locatif",
                                                           "Calcul du montant de l'aide personnalisée au logement",
                                                           "Déclarations des champs d'application",
                                                           "Prologue : aides au logement"]))
    try:
        temp___7 = (nombre_personnes_a_charge_2 >= integer_of_string("0"))
    except EmptyError:
        temp___7 = dead_value
        raise NoValueProvided(SourcePosition(filename="examples/aides_logement/prologue.catala_fr",
                                             start_line=633, start_column=13,
                                             end_line=633, end_column=43,
                                             law_headings=["Secteur locatif",
                                             "Calcul du montant de l'aide personnalisée au logement",
                                             "Déclarations des champs d'application",
                                             "Prologue : aides au logement"]))
    if not (temp___7):
        raise AssertionFailure(SourcePosition(filename="examples/aides_logement/prologue.catala_fr",
                                              start_line=633,
                                              start_column=13, end_line=633,
                                              end_column=43,
                                              law_headings=["Secteur locatif",
                                                           "Calcul du montant de l'aide personnalisée au logement",
                                                           "Déclarations des champs d'application",
                                                           "Prologue : aides au logement"]))
    try:
        temp___8 = (date_courante_6 >= date_of_numbers(2020,10,1))
    except EmptyError:
        temp___8 = dead_value
        raise NoValueProvided(SourcePosition(filename="examples/aides_logement/prologue.catala_fr",
                                             start_line=632, start_column=13,
                                             end_line=632, end_column=42,
                                             law_headings=["Secteur locatif",
                                             "Calcul du montant de l'aide personnalisée au logement",
                                             "Déclarations des champs d'application",
                                             "Prologue : aides au logement"]))
    if not (temp___8):
        raise AssertionFailure(SourcePosition(filename="examples/aides_logement/prologue.catala_fr",
                                              start_line=632,
                                              start_column=13, end_line=632,
                                              end_column=42,
                                              law_headings=["Secteur locatif",
                                                           "Calcul du montant de l'aide personnalisée au logement",
                                                           "Déclarations des champs d'application",
                                                           "Prologue : aides au logement"]))
    return CalculAidePersonnaliseeLogementLocatif(montant_forfaitaire_charges_d823_16 = montant_forfaitaire_charges_d823_16,
        plafond_loyer_d823_16_2 = plafond_loyer_d823_16_2,
        participation_minimale = participation_minimale,
        taux_composition_familiale = taux_composition_familiale,
        participation_personnelle = participation_personnelle,
        aide_finale_formule = aide_finale_formule,
        traitement_aide_finale = traitement_aide_finale_montant_minimal)

def calcul_aide_personnalisee_logement_foyer(calcul_aide_personnalisee_logement_foyer_in:CalculAidePersonnaliseeLogementFoyerIn):
    type_logement_foyer = calcul_aide_personnalisee_logement_foyer_in.type_logement_foyer_in
    date_conventionnement = calcul_aide_personnalisee_logement_foyer_in.date_conventionnement_in
    ressources_menage_arrondies_2 = calcul_aide_personnalisee_logement_foyer_in.ressources_menage_arrondies_in
    nombre_personnes_a_charge_3 = calcul_aide_personnalisee_logement_foyer_in.nombre_personnes_a_charge_in
    situation_familiale_calcul_apl_3 = calcul_aide_personnalisee_logement_foyer_in.situation_familiale_calcul_apl_in
    zone_1 = calcul_aide_personnalisee_logement_foyer_in.zone_in
    date_courante_7 = calcul_aide_personnalisee_logement_foyer_in.date_courante_in
    redevance = calcul_aide_personnalisee_logement_foyer_in.redevance_in
    residence_3 = calcul_aide_personnalisee_logement_foyer_in.residence_in
    condition_2_du_832_25_2 = calcul_aide_personnalisee_logement_foyer_in.condition_2_du_832_25_in
    limitation_majoration_personnes_a_charge_2 = calcul_aide_personnalisee_logement_foyer_in.limitation_majoration_personnes_a_charge_in
    n_nombre_parts_d832_25_2 = calcul_aide_personnalisee_logement_foyer_in.n_nombre_parts_d832_25_in
    try:
        try:
            temp_limitation_majoration_personnes_a_charge_1 = limitation_majoration_personnes_a_charge_2(
                Unit())
        except EmptyError:
            temp_limitation_majoration_personnes_a_charge_1 = False
    except EmptyError:
        temp_limitation_majoration_personnes_a_charge_1 = dead_value
        raise NoValueProvided(SourcePosition(filename="examples/aides_logement/prologue.catala_fr",
                                             start_line=684, start_column=12,
                                             end_line=684, end_column=52,
                                             law_headings=["Secteur logement-foyer",
                                             "Calcul du montant de l'aide personnalisée au logement",
                                             "Déclarations des champs d'application",
                                             "Prologue : aides au logement"]))
    limitation_majoration_personnes_a_charge_3 = temp_limitation_majoration_personnes_a_charge_1
    try:
        try:
            temp_condition_2_du_832_25 = condition_2_du_832_25_2(Unit())
        except EmptyError:
            match_arg_154 = type_logement_foyer
            if match_arg_154.code == TypeLogementFoyer_Code.LogementPersonnesAgeesOuHandicapees:
                _ = match_arg_154.value
                temp_condition_2_du_832_25 = False
            elif match_arg_154.code == TypeLogementFoyer_Code.ResidenceSociale:
                _ = match_arg_154.value
                temp_condition_2_du_832_25 = (date_conventionnement >=
                    date_of_numbers(1994,12,31))
            elif match_arg_154.code == TypeLogementFoyer_Code.FoyerJeunesTrvailleursOuMigrantsConventionneL353_2Avant1995:
                _ = match_arg_154.value
                temp_condition_2_du_832_25 = (date_conventionnement >=
                    date_of_numbers(1990,9,30))
            elif match_arg_154.code == TypeLogementFoyer_Code.Autre:
                _ = match_arg_154.value
                temp_condition_2_du_832_25 = False
    except EmptyError:
        temp_condition_2_du_832_25 = dead_value
        raise NoValueProvided(SourcePosition(filename="examples/aides_logement/prologue.catala_fr",
                                             start_line=683, start_column=12,
                                             end_line=683, end_column=33,
                                             law_headings=["Secteur logement-foyer",
                                             "Calcul du montant de l'aide personnalisée au logement",
                                             "Déclarations des champs d'application",
                                             "Prologue : aides au logement"]))
    condition_2_du_832_25_3 = temp_condition_2_du_832_25
    try:
        temp_contributions_sociales_dot_date_courante_1 = date_courante_7
    except EmptyError:
        temp_contributions_sociales_dot_date_courante_1 = dead_value
        raise NoValueProvided(SourcePosition(filename="examples/aides_logement/prologue.catala_fr",
                                             start_line=720, start_column=14,
                                             end_line=720, end_column=50,
                                             law_headings=["Secteur logement-foyer",
                                             "Calcul du montant de l'aide personnalisée au logement",
                                             "Déclarations des champs d'application",
                                             "Prologue : aides au logement"]))
    contributions_sociales_dot_date_courante_1 = temp_contributions_sociales_dot_date_courante_1
    result_1 = contributions_sociales_aides_personnelle_logement(ContributionsSocialesAidesPersonnelleLogementIn(date_courante_in = contributions_sociales_dot_date_courante_1))
    contributions_sociales_dot_montant_1 = result_1.montant
    try:
        if (date_courante_7 >=
            date_of_numbers(2019,10,1)):
            temp_montant_minimal_aide_d823_24 = money_of_cents_string("1000")
        else:
            temp_montant_minimal_aide_d823_24 = dead_value
            raise EmptyError
    except EmptyError:
        temp_montant_minimal_aide_d823_24 = dead_value
        raise NoValueProvided(SourcePosition(filename="examples/aides_logement/prologue.catala_fr",
                                             start_line=697, start_column=11,
                                             end_line=697, end_column=39,
                                             law_headings=["Secteur logement-foyer",
                                             "Calcul du montant de l'aide personnalisée au logement",
                                             "Déclarations des champs d'application",
                                             "Prologue : aides au logement"]))
    montant_minimal_aide_d823_24 = temp_montant_minimal_aide_d823_24
    try:
        if (date_courante_7 >=
            date_of_numbers(2019,10,1)):
            temp_montant_forfaitaire_d832_24 = money_of_cents_string("500")
        else:
            temp_montant_forfaitaire_d832_24 = dead_value
            raise EmptyError
    except EmptyError:
        temp_montant_forfaitaire_d832_24 = dead_value
        raise NoValueProvided(SourcePosition(filename="examples/aides_logement/prologue.catala_fr",
                                             start_line=695, start_column=11,
                                             end_line=695, end_column=38,
                                             law_headings=["Secteur logement-foyer",
                                             "Calcul du montant de l'aide personnalisée au logement",
                                             "Déclarations des champs d'application",
                                             "Prologue : aides au logement"]))
    montant_forfaitaire_d832_24 = temp_montant_forfaitaire_d832_24
    try:
        def temp_plafond_equivalence_loyer_eligible(_:Unit):
            raise EmptyError
        def temp_plafond_equivalence_loyer_eligible_1(_:Unit):
            return False
        def temp_plafond_equivalence_loyer_eligible_2(_:Unit):
            if ((date_courante_7 < date_of_numbers(2021,10,1)) and
                (date_courante_7 >=
                date_of_numbers(2020,10,1))):
                match_arg_155 = zone_1
                if match_arg_155.code == ZoneDHabitation_Code.Zone1:
                    _ = match_arg_155.value
                    if (nombre_personnes_a_charge_3 ==
                        integer_of_string("0")):
                        match_arg_156 = situation_familiale_calcul_apl_3
                        if match_arg_156.code == SituationFamilialeCalculAPL_Code.PersonneSeule:
                            _ = match_arg_156.value
                            return money_of_cents_string("44443")
                        elif match_arg_156.code == SituationFamilialeCalculAPL_Code.Couple:
                            _ = match_arg_156.value
                            return money_of_cents_string("52101")
                    else:
                        if (nombre_personnes_a_charge_3 ==
                            integer_of_string("1")):
                            return money_of_cents_string("55555")
                        else:
                            if (nombre_personnes_a_charge_3 ==
                                integer_of_string("2")):
                                return money_of_cents_string("59454")
                            else:
                                if (nombre_personnes_a_charge_3 ==
                                    integer_of_string("3")):
                                    return money_of_cents_string("63369")
                                else:
                                    return (money_of_cents_string("68350") +
                                        (money_of_cents_string("7089") *
                                        decimal_of_integer((nombre_personnes_a_charge_3 -
                                        integer_of_string("4")))))
                elif match_arg_155.code == ZoneDHabitation_Code.Zone2:
                    _ = match_arg_155.value
                    if (nombre_personnes_a_charge_3 ==
                        integer_of_string("0")):
                        match_arg_157 = situation_familiale_calcul_apl_3
                        if match_arg_157.code == SituationFamilialeCalculAPL_Code.PersonneSeule:
                            _ = match_arg_157.value
                            return money_of_cents_string("40643")
                        elif match_arg_157.code == SituationFamilialeCalculAPL_Code.Couple:
                            _ = match_arg_157.value
                            return money_of_cents_string("47433")
                    else:
                        if (nombre_personnes_a_charge_3 ==
                            integer_of_string("1")):
                            return money_of_cents_string("50575")
                        else:
                            if (nombre_personnes_a_charge_3 ==
                                integer_of_string("2")):
                                return money_of_cents_string("54138")
                            else:
                                if (nombre_personnes_a_charge_3 ==
                                    integer_of_string("3")):
                                    return money_of_cents_string("57687")
                                else:
                                    return (money_of_cents_string("61469") +
                                        (money_of_cents_string("6407") *
                                        decimal_of_integer((nombre_personnes_a_charge_3 -
                                        integer_of_string("4")))))
                elif match_arg_155.code == ZoneDHabitation_Code.Zone3:
                    _ = match_arg_155.value
                    if (nombre_personnes_a_charge_3 ==
                        integer_of_string("0")):
                        match_arg_158 = situation_familiale_calcul_apl_3
                        if match_arg_158.code == SituationFamilialeCalculAPL_Code.PersonneSeule:
                            _ = match_arg_158.value
                            return money_of_cents_string("38578")
                        elif match_arg_158.code == SituationFamilialeCalculAPL_Code.Couple:
                            _ = match_arg_158.value
                            return money_of_cents_string("44869")
                    else:
                        if (nombre_personnes_a_charge_3 ==
                            integer_of_string("1")):
                            return money_of_cents_string("47602")
                        else:
                            if (nombre_personnes_a_charge_3 ==
                                integer_of_string("2")):
                                return money_of_cents_string("50744")
                            else:
                                if (nombre_personnes_a_charge_3 ==
                                    integer_of_string("3")):
                                    return money_of_cents_string("53884")
                                else:
                                    return (money_of_cents_string("57416") +
                                        (money_of_cents_string("5946") *
                                        decimal_of_integer((nombre_personnes_a_charge_3 -
                                        integer_of_string("4")))))
            else:
                raise EmptyError
        def temp_plafond_equivalence_loyer_eligible_3(_:Unit):
            if ((date_courante_7 >= date_of_numbers(2021,10,1)) and
                (date_courante_7 <
                date_of_numbers(2022,7,1))):
                match_arg_159 = zone_1
                if match_arg_159.code == ZoneDHabitation_Code.Zone1:
                    _ = match_arg_159.value
                    if (nombre_personnes_a_charge_3 ==
                        integer_of_string("0")):
                        match_arg_160 = situation_familiale_calcul_apl_3
                        if match_arg_160.code == SituationFamilialeCalculAPL_Code.PersonneSeule:
                            _ = match_arg_160.value
                            return money_of_cents_string("44630")
                        elif match_arg_160.code == SituationFamilialeCalculAPL_Code.Couple:
                            _ = match_arg_160.value
                            return money_of_cents_string("52321")
                    else:
                        if (nombre_personnes_a_charge_3 ==
                            integer_of_string("1")):
                            return money_of_cents_string("55788")
                        else:
                            if (nombre_personnes_a_charge_3 ==
                                integer_of_string("2")):
                                return money_of_cents_string("59704")
                            else:
                                if (nombre_personnes_a_charge_3 ==
                                    integer_of_string("3")):
                                    return money_of_cents_string("63635")
                                else:
                                    return (money_of_cents_string("68637") +
                                        (money_of_cents_string("7119") *
                                        decimal_of_integer((nombre_personnes_a_charge_3 -
                                        integer_of_string("4")))))
                elif match_arg_159.code == ZoneDHabitation_Code.Zone2:
                    _ = match_arg_159.value
                    if (nombre_personnes_a_charge_3 ==
                        integer_of_string("0")):
                        match_arg_161 = situation_familiale_calcul_apl_3
                        if match_arg_161.code == SituationFamilialeCalculAPL_Code.PersonneSeule:
                            _ = match_arg_161.value
                            return money_of_cents_string("40814")
                        elif match_arg_161.code == SituationFamilialeCalculAPL_Code.Couple:
                            _ = match_arg_161.value
                            return money_of_cents_string("47632")
                    else:
                        if (nombre_personnes_a_charge_3 ==
                            integer_of_string("1")):
                            return money_of_cents_string("50787")
                        else:
                            if (nombre_personnes_a_charge_3 ==
                                integer_of_string("2")):
                                return money_of_cents_string("54365")
                            else:
                                if (nombre_personnes_a_charge_3 ==
                                    integer_of_string("3")):
                                    return money_of_cents_string("57929")
                                else:
                                    return (money_of_cents_string("61727") +
                                        (money_of_cents_string("6434") *
                                        decimal_of_integer((nombre_personnes_a_charge_3 -
                                        integer_of_string("4")))))
                elif match_arg_159.code == ZoneDHabitation_Code.Zone3:
                    _ = match_arg_159.value
                    if (nombre_personnes_a_charge_3 ==
                        integer_of_string("0")):
                        match_arg_162 = situation_familiale_calcul_apl_3
                        if match_arg_162.code == SituationFamilialeCalculAPL_Code.PersonneSeule:
                            _ = match_arg_162.value
                            return money_of_cents_string("38740")
                        elif match_arg_162.code == SituationFamilialeCalculAPL_Code.Couple:
                            _ = match_arg_162.value
                            return money_of_cents_string("45057")
                    else:
                        if (nombre_personnes_a_charge_3 ==
                            integer_of_string("1")):
                            return money_of_cents_string("47802")
                        else:
                            if (nombre_personnes_a_charge_3 ==
                                integer_of_string("2")):
                                return money_of_cents_string("50957")
                            else:
                                if (nombre_personnes_a_charge_3 ==
                                    integer_of_string("3")):
                                    return money_of_cents_string("54110")
                                else:
                                    return (money_of_cents_string("57657") +
                                        (money_of_cents_string("5971") *
                                        decimal_of_integer((nombre_personnes_a_charge_3 -
                                        integer_of_string("4")))))
            else:
                raise EmptyError
        def temp_plafond_equivalence_loyer_eligible_4(_:Unit):
            if (date_courante_7 >=
                date_of_numbers(2022,7,1)):
                match_arg_163 = zone_1
                if match_arg_163.code == ZoneDHabitation_Code.Zone1:
                    _ = match_arg_163.value
                    if (nombre_personnes_a_charge_3 ==
                        integer_of_string("0")):
                        match_arg_164 = situation_familiale_calcul_apl_3
                        if match_arg_164.code == SituationFamilialeCalculAPL_Code.PersonneSeule:
                            _ = match_arg_164.value
                            return money_of_cents_string("46192")
                        elif match_arg_164.code == SituationFamilialeCalculAPL_Code.Couple:
                            _ = match_arg_164.value
                            return money_of_cents_string("54152")
                    else:
                        if (nombre_personnes_a_charge_3 ==
                            integer_of_string("1")):
                            return money_of_cents_string("57741")
                        else:
                            if (nombre_personnes_a_charge_3 ==
                                integer_of_string("2")):
                                return money_of_cents_string("61794")
                            else:
                                if (nombre_personnes_a_charge_3 ==
                                    integer_of_string("3")):
                                    return money_of_cents_string("65862")
                                else:
                                    return (money_of_cents_string("71039") +
                                        (money_of_cents_string("7368") *
                                        decimal_of_integer((nombre_personnes_a_charge_3 -
                                        integer_of_string("4")))))
                elif match_arg_163.code == ZoneDHabitation_Code.Zone2:
                    _ = match_arg_163.value
                    if (nombre_personnes_a_charge_3 ==
                        integer_of_string("0")):
                        match_arg_165 = situation_familiale_calcul_apl_3
                        if match_arg_165.code == SituationFamilialeCalculAPL_Code.PersonneSeule:
                            _ = match_arg_165.value
                            return money_of_cents_string("42242")
                        elif match_arg_165.code == SituationFamilialeCalculAPL_Code.Couple:
                            _ = match_arg_165.value
                            return money_of_cents_string("49299")
                    else:
                        if (nombre_personnes_a_charge_3 ==
                            integer_of_string("1")):
                            return money_of_cents_string("52565")
                        else:
                            if (nombre_personnes_a_charge_3 ==
                                integer_of_string("2")):
                                return money_of_cents_string("56268")
                            else:
                                if (nombre_personnes_a_charge_3 ==
                                    integer_of_string("3")):
                                    return money_of_cents_string("59957")
                                else:
                                    return (money_of_cents_string("63887") +
                                        (money_of_cents_string("6659") *
                                        decimal_of_integer((nombre_personnes_a_charge_3 -
                                        integer_of_string("4")))))
                elif match_arg_163.code == ZoneDHabitation_Code.Zone3:
                    _ = match_arg_163.value
                    if (nombre_personnes_a_charge_3 ==
                        integer_of_string("0")):
                        match_arg_166 = situation_familiale_calcul_apl_3
                        if match_arg_166.code == SituationFamilialeCalculAPL_Code.PersonneSeule:
                            _ = match_arg_166.value
                            return money_of_cents_string("40096")
                        elif match_arg_166.code == SituationFamilialeCalculAPL_Code.Couple:
                            _ = match_arg_166.value
                            return money_of_cents_string("46634")
                    else:
                        if (nombre_personnes_a_charge_3 ==
                            integer_of_string("1")):
                            return money_of_cents_string("49475")
                        else:
                            if (nombre_personnes_a_charge_3 ==
                                integer_of_string("2")):
                                return money_of_cents_string("52740")
                            else:
                                if (nombre_personnes_a_charge_3 ==
                                    integer_of_string("3")):
                                    return money_of_cents_string("56004")
                                else:
                                    return (money_of_cents_string("59675") +
                                        (money_of_cents_string("6180") *
                                        decimal_of_integer((nombre_personnes_a_charge_3 -
                                        integer_of_string("4")))))
            else:
                raise EmptyError
        temp_plafond_equivalence_loyer_eligible_5 = handle_default(SourcePosition(filename="examples/aides_logement/prologue.catala_fr",
                                                                   start_line=690,
                                                                   start_column=12,
                                                                   end_line=690, end_column=46,
                                                                   law_headings=["Secteur logement-foyer",
                                                                   "Calcul du montant de l'aide personnalisée au logement",
                                                                   "Déclarations des champs d'application",
                                                                   "Prologue : aides au logement"]), [temp_plafond_equivalence_loyer_eligible_4,
                                                                   temp_plafond_equivalence_loyer_eligible_3,
                                                                   temp_plafond_equivalence_loyer_eligible_2],
                                                                   temp_plafond_equivalence_loyer_eligible_1,
                                                                   temp_plafond_equivalence_loyer_eligible)
    except EmptyError:
        temp_plafond_equivalence_loyer_eligible_5 = dead_value
        raise NoValueProvided(SourcePosition(filename="examples/aides_logement/prologue.catala_fr",
                                             start_line=690, start_column=12,
                                             end_line=690, end_column=46,
                                             law_headings=["Secteur logement-foyer",
                                             "Calcul du montant de l'aide personnalisée au logement",
                                             "Déclarations des champs d'application",
                                             "Prologue : aides au logement"]))
    plafond_equivalence_loyer_eligible = temp_plafond_equivalence_loyer_eligible_5
    try:
        if (date_courante_7 >=
            date_of_numbers(2019,10,1)):
            temp_coefficient_r_d832_25 = money_of_cents_string("121726")
        else:
            temp_coefficient_r_d832_25 = dead_value
            raise EmptyError
    except EmptyError:
        temp_coefficient_r_d832_25 = dead_value
        raise NoValueProvided(SourcePosition(filename="examples/aides_logement/prologue.catala_fr",
                                             start_line=687, start_column=12,
                                             end_line=687, end_column=33,
                                             law_headings=["Secteur logement-foyer",
                                             "Calcul du montant de l'aide personnalisée au logement",
                                             "Déclarations des champs d'application",
                                             "Prologue : aides au logement"]))
    coefficient_r_d832_25 = temp_coefficient_r_d832_25
    try:
        temp_calcul_nombre_parts_dot_condition_2_du_832_25 = condition_2_du_832_25_3
    except EmptyError:
        temp_calcul_nombre_parts_dot_condition_2_du_832_25 = dead_value
        raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                             start_line=3941,
                                             start_column=14, end_line=3941,
                                             end_column=55,
                                             law_headings=["Article D832-25",
                                             "Sous-Section 2 : Conditions d'octroi de l'aide personnalisée au logement aux personnes résidant dans un logement-foyer",
                                             "Section 3 : Logements-foyers",
                                             "Chapitre II : Modalités de liquidation et de versement de l'aide personnalisée au logement",
                                             "Titre III : Aide personnalisée au logement",
                                             "Livre VIII : Aides personnelles au logement",
                                             "Partie réglementaire",
                                             "Code de la construction et de l'habitation"]))
    calcul_nombre_parts_dot_condition_2_du_832_25 = temp_calcul_nombre_parts_dot_condition_2_du_832_25
    try:
        temp_calcul_nombre_parts_dot_nombre_personnes_a_charge = nombre_personnes_a_charge_3
    except EmptyError:
        temp_calcul_nombre_parts_dot_nombre_personnes_a_charge = dead_value
        raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                             start_line=3937,
                                             start_column=14, end_line=3937,
                                             end_column=59,
                                             law_headings=["Article D832-25",
                                             "Sous-Section 2 : Conditions d'octroi de l'aide personnalisée au logement aux personnes résidant dans un logement-foyer",
                                             "Section 3 : Logements-foyers",
                                             "Chapitre II : Modalités de liquidation et de versement de l'aide personnalisée au logement",
                                             "Titre III : Aide personnalisée au logement",
                                             "Livre VIII : Aides personnelles au logement",
                                             "Partie réglementaire",
                                             "Code de la construction et de l'habitation"]))
    calcul_nombre_parts_dot_nombre_personnes_a_charge = temp_calcul_nombre_parts_dot_nombre_personnes_a_charge
    try:
        temp_calcul_nombre_parts_dot_situation_familiale_calcul_apl = situation_familiale_calcul_apl_3
    except EmptyError:
        temp_calcul_nombre_parts_dot_situation_familiale_calcul_apl = dead_value
        raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                             start_line=3939,
                                             start_column=14, end_line=3939,
                                             end_column=64,
                                             law_headings=["Article D832-25",
                                             "Sous-Section 2 : Conditions d'octroi de l'aide personnalisée au logement aux personnes résidant dans un logement-foyer",
                                             "Section 3 : Logements-foyers",
                                             "Chapitre II : Modalités de liquidation et de versement de l'aide personnalisée au logement",
                                             "Titre III : Aide personnalisée au logement",
                                             "Livre VIII : Aides personnelles au logement",
                                             "Partie réglementaire",
                                             "Code de la construction et de l'habitation"]))
    calcul_nombre_parts_dot_situation_familiale_calcul_apl = temp_calcul_nombre_parts_dot_situation_familiale_calcul_apl
    try:
        temp_calcul_nombre_parts_dot_residence = residence_3
    except EmptyError:
        temp_calcul_nombre_parts_dot_residence = dead_value
        raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                             start_line=3943,
                                             start_column=14, end_line=3943,
                                             end_column=43,
                                             law_headings=["Article D832-25",
                                             "Sous-Section 2 : Conditions d'octroi de l'aide personnalisée au logement aux personnes résidant dans un logement-foyer",
                                             "Section 3 : Logements-foyers",
                                             "Chapitre II : Modalités de liquidation et de versement de l'aide personnalisée au logement",
                                             "Titre III : Aide personnalisée au logement",
                                             "Livre VIII : Aides personnelles au logement",
                                             "Partie réglementaire",
                                             "Code de la construction et de l'habitation"]))
    calcul_nombre_parts_dot_residence = temp_calcul_nombre_parts_dot_residence
    def temp_calcul_nombre_parts_dot_limitation_majoration_personnes_a_charge(_:Unit):
        if limitation_majoration_personnes_a_charge_3:
            temp_calcul_nombre_parts_dot_limitation_majoration_personnes_a_charge_1 = True
        else:
            temp_calcul_nombre_parts_dot_limitation_majoration_personnes_a_charge_1 = dead_value
            raise EmptyError
        return temp_calcul_nombre_parts_dot_limitation_majoration_personnes_a_charge_1
    calcul_nombre_parts_dot_limitation_majoration_personnes_a_charge = temp_calcul_nombre_parts_dot_limitation_majoration_personnes_a_charge
    result_2 = calcul_nombre_part_logement_foyer(CalculNombrePartLogementFoyerIn(condition_2_du_832_25_in = calcul_nombre_parts_dot_condition_2_du_832_25,
                                                 nombre_personnes_a_charge_in = calcul_nombre_parts_dot_nombre_personnes_a_charge,
                                                 situation_familiale_calcul_apl_in = calcul_nombre_parts_dot_situation_familiale_calcul_apl,
                                                 residence_in = calcul_nombre_parts_dot_residence,
                                                 limitation_majoration_personnes_a_charge_in = calcul_nombre_parts_dot_limitation_majoration_personnes_a_charge))
    calcul_nombre_parts_dot_n_nombre_parts_d832_25 = result_2.n_nombre_parts_d832_25
    try:
        if (date_courante_7 >=
            date_of_numbers(2019,10,1)):
            if condition_2_du_832_25_3:
                temp_montant_forfaitaire_d832_27 = money_of_cents_string("1500")
            else:
                temp_montant_forfaitaire_d832_27 = money_of_cents_string("2668")
        else:
            temp_montant_forfaitaire_d832_27 = dead_value
            raise EmptyError
    except EmptyError:
        temp_montant_forfaitaire_d832_27 = dead_value
        raise NoValueProvided(SourcePosition(filename="examples/aides_logement/prologue.catala_fr",
                                             start_line=696, start_column=11,
                                             end_line=696, end_column=38,
                                             law_headings=["Secteur logement-foyer",
                                             "Calcul du montant de l'aide personnalisée au logement",
                                             "Déclarations des champs d'application",
                                             "Prologue : aides au logement"]))
    montant_forfaitaire_d832_27 = temp_montant_forfaitaire_d832_27
    try:
        if (date_courante_7 >=
            date_of_numbers(2019,10,1)):
            if condition_2_du_832_25_3:
                temp_coefficient_multiplicateur_d832_25 = money_of_cents_string("2142091")
            else:
                temp_coefficient_multiplicateur_d832_25 = money_of_cents_string("1339340")
        else:
            temp_coefficient_multiplicateur_d832_25 = dead_value
            raise EmptyError
    except EmptyError:
        temp_coefficient_multiplicateur_d832_25 = dead_value
        raise NoValueProvided(SourcePosition(filename="examples/aides_logement/prologue.catala_fr",
                                             start_line=686, start_column=12,
                                             end_line=686, end_column=46,
                                             law_headings=["Secteur logement-foyer",
                                             "Calcul du montant de l'aide personnalisée au logement",
                                             "Déclarations des champs d'application",
                                             "Prologue : aides au logement"]))
    coefficient_multiplicateur_d832_25 = temp_coefficient_multiplicateur_d832_25
    try:
        def temp_traitement_aide_finale_minoration_forfaitaire_1(aide_finale_7:Money):
            try:
                if ((aide_finale_7 - montant_forfaitaire_d832_24) >=
                    money_of_cents_string("0")):
                    return (aide_finale_7 - montant_forfaitaire_d832_24)
                else:
                    return money_of_cents_string("0")
            except EmptyError:
                raise NoValueProvided(SourcePosition(filename="examples/aides_logement/prologue.catala_fr",
                                                     start_line=714,
                                                     start_column=10,
                                                     end_line=714,
                                                     end_column=32,
                                                     law_headings=["Secteur logement-foyer",
                                                     "Calcul du montant de l'aide personnalisée au logement",
                                                     "Déclarations des champs d'application",
                                                     "Prologue : aides au logement"]))
    except EmptyError:
        temp_traitement_aide_finale_minoration_forfaitaire_1 = dead_value
        raise NoValueProvided(SourcePosition(filename="examples/aides_logement/prologue.catala_fr",
                                             start_line=714, start_column=10,
                                             end_line=714, end_column=32,
                                             law_headings=["Secteur logement-foyer",
                                             "Calcul du montant de l'aide personnalisée au logement",
                                             "Déclarations des champs d'application",
                                             "Prologue : aides au logement"]))
    traitement_aide_finale_minoration_forfaitaire_1 = temp_traitement_aide_finale_minoration_forfaitaire_1
    try:
        if (redevance >=
            plafond_equivalence_loyer_eligible):
            temp_equivalence_loyer_eligible = plafond_equivalence_loyer_eligible
        else:
            temp_equivalence_loyer_eligible = redevance
    except EmptyError:
        temp_equivalence_loyer_eligible = dead_value
        raise NoValueProvided(SourcePosition(filename="examples/aides_logement/prologue.catala_fr",
                                             start_line=689, start_column=12,
                                             end_line=689, end_column=38,
                                             law_headings=["Secteur logement-foyer",
                                             "Calcul du montant de l'aide personnalisée au logement",
                                             "Déclarations des champs d'application",
                                             "Prologue : aides au logement"]))
    equivalence_loyer_eligible = temp_equivalence_loyer_eligible
    try:
        try:
            temp_n_nombre_parts_d832_25_1 = n_nombre_parts_d832_25_2(Unit())
        except EmptyError:
            temp_n_nombre_parts_d832_25_1 = calcul_nombre_parts_dot_n_nombre_parts_d832_25
    except EmptyError:
        temp_n_nombre_parts_d832_25_1 = dead_value
        raise NoValueProvided(SourcePosition(filename="examples/aides_logement/prologue.catala_fr",
                                             start_line=688, start_column=21,
                                             end_line=688, end_column=43,
                                             law_headings=["Secteur logement-foyer",
                                             "Calcul du montant de l'aide personnalisée au logement",
                                             "Déclarations des champs d'application",
                                             "Prologue : aides au logement"]))
    n_nombre_parts_d832_25_3 = temp_n_nombre_parts_d832_25_1
    try:
        def temp_depense_nette_minimale_d832_27(allocation_mensuelle:Money):
            try:
                return (equivalence_loyer_eligible - allocation_mensuelle)
            except EmptyError:
                raise NoValueProvided(SourcePosition(filename="examples/aides_logement/prologue.catala_fr",
                                                     start_line=693,
                                                     start_column=11,
                                                     end_line=693,
                                                     end_column=41,
                                                     law_headings=["Secteur logement-foyer",
                                                     "Calcul du montant de l'aide personnalisée au logement",
                                                     "Déclarations des champs d'application",
                                                     "Prologue : aides au logement"]))
    except EmptyError:
        temp_depense_nette_minimale_d832_27 = dead_value
        raise NoValueProvided(SourcePosition(filename="examples/aides_logement/prologue.catala_fr",
                                             start_line=693, start_column=11,
                                             end_line=693, end_column=41,
                                             law_headings=["Secteur logement-foyer",
                                             "Calcul du montant de l'aide personnalisée au logement",
                                             "Déclarations des champs d'application",
                                             "Prologue : aides au logement"]))
    depense_nette_minimale_d832_27 = temp_depense_nette_minimale_d832_27
    try:
        temp_calcul_equivalence_loyer_minimale_dot_date_courante = date_courante_7
    except EmptyError:
        temp_calcul_equivalence_loyer_minimale_dot_date_courante = dead_value
        raise NoValueProvided(SourcePosition(filename="examples/aides_logement/prologue.catala_fr",
                                             start_line=721, start_column=14,
                                             end_line=721, end_column=61,
                                             law_headings=["Secteur logement-foyer",
                                             "Calcul du montant de l'aide personnalisée au logement",
                                             "Déclarations des champs d'application",
                                             "Prologue : aides au logement"]))
    calcul_equivalence_loyer_minimale_dot_date_courante = temp_calcul_equivalence_loyer_minimale_dot_date_courante
    try:
        temp_calcul_equivalence_loyer_minimale_dot_ressources_menage_arrondies = ressources_menage_arrondies_2
    except EmptyError:
        temp_calcul_equivalence_loyer_minimale_dot_ressources_menage_arrondies = dead_value
        raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                             start_line=3770,
                                             start_column=14, end_line=3770,
                                             end_column=75,
                                             law_headings=["Article D832-24",
                                             "Sous-Section 2 : Conditions d'octroi de l'aide personnalisée au logement aux personnes résidant dans un logement-foyer",
                                             "Section 3 : Logements-foyers",
                                             "Chapitre II : Modalités de liquidation et de versement de l'aide personnalisée au logement",
                                             "Titre III : Aide personnalisée au logement",
                                             "Livre VIII : Aides personnelles au logement",
                                             "Partie réglementaire",
                                             "Code de la construction et de l'habitation"]))
    calcul_equivalence_loyer_minimale_dot_ressources_menage_arrondies = temp_calcul_equivalence_loyer_minimale_dot_ressources_menage_arrondies
    try:
        temp_calcul_equivalence_loyer_minimale_dot_condition_2_du_832_25 = condition_2_du_832_25_3
    except EmptyError:
        temp_calcul_equivalence_loyer_minimale_dot_condition_2_du_832_25 = dead_value
        raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                             start_line=3768,
                                             start_column=14, end_line=3768,
                                             end_column=69,
                                             law_headings=["Article D832-24",
                                             "Sous-Section 2 : Conditions d'octroi de l'aide personnalisée au logement aux personnes résidant dans un logement-foyer",
                                             "Section 3 : Logements-foyers",
                                             "Chapitre II : Modalités de liquidation et de versement de l'aide personnalisée au logement",
                                             "Titre III : Aide personnalisée au logement",
                                             "Livre VIII : Aides personnelles au logement",
                                             "Partie réglementaire",
                                             "Code de la construction et de l'habitation"]))
    calcul_equivalence_loyer_minimale_dot_condition_2_du_832_25 = temp_calcul_equivalence_loyer_minimale_dot_condition_2_du_832_25
    try:
        temp_calcul_equivalence_loyer_minimale_dot_n_nombre_parts_d832_25 = n_nombre_parts_d832_25_3
    except EmptyError:
        temp_calcul_equivalence_loyer_minimale_dot_n_nombre_parts_d832_25 = dead_value
        raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                             start_line=3772,
                                             start_column=14, end_line=3772,
                                             end_column=70,
                                             law_headings=["Article D832-24",
                                             "Sous-Section 2 : Conditions d'octroi de l'aide personnalisée au logement aux personnes résidant dans un logement-foyer",
                                             "Section 3 : Logements-foyers",
                                             "Chapitre II : Modalités de liquidation et de versement de l'aide personnalisée au logement",
                                             "Titre III : Aide personnalisée au logement",
                                             "Livre VIII : Aides personnelles au logement",
                                             "Partie réglementaire",
                                             "Code de la construction et de l'habitation"]))
    calcul_equivalence_loyer_minimale_dot_n_nombre_parts_d832_25 = temp_calcul_equivalence_loyer_minimale_dot_n_nombre_parts_d832_25
    result_3 = calcul_equivalence_loyer_minimale(CalculEquivalenceLoyerMinimaleIn(date_courante_in = calcul_equivalence_loyer_minimale_dot_date_courante,
                                                 ressources_menage_arrondies_in = calcul_equivalence_loyer_minimale_dot_ressources_menage_arrondies,
                                                 condition_2_du_832_25_in = calcul_equivalence_loyer_minimale_dot_condition_2_du_832_25,
                                                 n_nombre_parts_d832_25_in = calcul_equivalence_loyer_minimale_dot_n_nombre_parts_d832_25))
    calcul_equivalence_loyer_minimale_dot_montant = result_3.montant
    try:
        try:
            if condition_2_du_832_25_3:
                temp_coefficient_prise_en_charge_d832_25_formule = (decimal_of_string("0.9") -
                    (ressources_menage_arrondies_2 /
                    (coefficient_multiplicateur_d832_25 *
                    n_nombre_parts_d832_25_3)))
            else:
                temp_coefficient_prise_en_charge_d832_25_formule = dead_value
                raise EmptyError
        except EmptyError:
            if ((ressources_menage_arrondies_2 - (coefficient_r_d832_25 *
                n_nombre_parts_d832_25_3)) <
                money_of_cents_string("0")):
                temp_coefficient_prise_en_charge_d832_25_formule_1 = money_of_cents_string("0")
            else:
                temp_coefficient_prise_en_charge_d832_25_formule_1 = (ressources_menage_arrondies_2 -
                    (coefficient_r_d832_25 * n_nombre_parts_d832_25_3))
            temp_coefficient_prise_en_charge_d832_25_formule = (decimal_of_string("0.95") -
                (temp_coefficient_prise_en_charge_d832_25_formule_1 /
                (coefficient_multiplicateur_d832_25 *
                n_nombre_parts_d832_25_3)))
    except EmptyError:
        temp_coefficient_prise_en_charge_d832_25_formule = dead_value
        raise NoValueProvided(SourcePosition(filename="examples/aides_logement/prologue.catala_fr",
                                             start_line=707, start_column=10,
                                             end_line=707, end_column=17,
                                             law_headings=["Secteur logement-foyer",
                                             "Calcul du montant de l'aide personnalisée au logement",
                                             "Déclarations des champs d'application",
                                             "Prologue : aides au logement"]))
    coefficient_prise_en_charge_d832_25_formule = temp_coefficient_prise_en_charge_d832_25_formule
    try:
        def temp_abattement_depense_nette_minimale_d832_27(allocation_mensuelle_1:Money):
            try:
                if (depense_nette_minimale_d832_27(allocation_mensuelle_1) <=
                    montant_forfaitaire_d832_27):
                    return (montant_forfaitaire_d832_27 -
                        depense_nette_minimale_d832_27(allocation_mensuelle_1))
                else:
                    return money_of_cents_string("0")
            except EmptyError:
                raise NoValueProvided(SourcePosition(filename="examples/aides_logement/prologue.catala_fr",
                                                     start_line=691,
                                                     start_column=11,
                                                     end_line=691,
                                                     end_column=52,
                                                     law_headings=["Secteur logement-foyer",
                                                     "Calcul du montant de l'aide personnalisée au logement",
                                                     "Déclarations des champs d'application",
                                                     "Prologue : aides au logement"]))
    except EmptyError:
        temp_abattement_depense_nette_minimale_d832_27 = dead_value
        raise NoValueProvided(SourcePosition(filename="examples/aides_logement/prologue.catala_fr",
                                             start_line=691, start_column=11,
                                             end_line=691, end_column=52,
                                             law_headings=["Secteur logement-foyer",
                                             "Calcul du montant de l'aide personnalisée au logement",
                                             "Déclarations des champs d'application",
                                             "Prologue : aides au logement"]))
    abattement_depense_nette_minimale_d832_27 = temp_abattement_depense_nette_minimale_d832_27
    try:
        temp_equivalence_loyer_minimale = calcul_equivalence_loyer_minimale_dot_montant
    except EmptyError:
        temp_equivalence_loyer_minimale = dead_value
        raise NoValueProvided(SourcePosition(filename="examples/aides_logement/prologue.catala_fr",
                                             start_line=698, start_column=12,
                                             end_line=698, end_column=38,
                                             law_headings=["Secteur logement-foyer",
                                             "Calcul du montant de l'aide personnalisée au logement",
                                             "Déclarations des champs d'application",
                                             "Prologue : aides au logement"]))
    equivalence_loyer_minimale = temp_equivalence_loyer_minimale
    try:
        try:
            if condition_2_du_832_25_3:
                temp_coefficient_prise_en_charge_d832_25_coeff_arrondi = (decimal_round(((coefficient_prise_en_charge_d832_25_formule -
                    decimal_of_string("0.005")) *
                    decimal_of_string("100."))) / decimal_of_string("100."))
            else:
                temp_coefficient_prise_en_charge_d832_25_coeff_arrondi = dead_value
                raise EmptyError
        except EmptyError:
            temp_coefficient_prise_en_charge_d832_25_coeff_arrondi = (decimal_round(((coefficient_prise_en_charge_d832_25_formule -
                decimal_of_string("0.005")) * decimal_of_string("100."))) /
                decimal_of_string("100."))
    except EmptyError:
        temp_coefficient_prise_en_charge_d832_25_coeff_arrondi = dead_value
        raise NoValueProvided(SourcePosition(filename="examples/aides_logement/prologue.catala_fr",
                                             start_line=708, start_column=10,
                                             end_line=708, end_column=23,
                                             law_headings=["Secteur logement-foyer",
                                             "Calcul du montant de l'aide personnalisée au logement",
                                             "Déclarations des champs d'application",
                                             "Prologue : aides au logement"]))
    coefficient_prise_en_charge_d832_25_coeff_arrondi = temp_coefficient_prise_en_charge_d832_25_coeff_arrondi
    try:
        def temp_traitement_aide_finale_abattement(aide_finale_8:Money):
            try:
                if ((traitement_aide_finale_minoration_forfaitaire_1(
                    aide_finale_8) -
                    abattement_depense_nette_minimale_d832_27(traitement_aide_finale_minoration_forfaitaire_1(
                                                              aide_finale_8))) >=
                    money_of_cents_string("0")):
                    return (traitement_aide_finale_minoration_forfaitaire_1(
                        aide_finale_8) -
                        abattement_depense_nette_minimale_d832_27(traitement_aide_finale_minoration_forfaitaire_1(
                                                                  aide_finale_8)))
                else:
                    return money_of_cents_string("0")
            except EmptyError:
                raise NoValueProvided(SourcePosition(filename="examples/aides_logement/prologue.catala_fr",
                                                     start_line=715,
                                                     start_column=10,
                                                     end_line=715,
                                                     end_column=20,
                                                     law_headings=["Secteur logement-foyer",
                                                     "Calcul du montant de l'aide personnalisée au logement",
                                                     "Déclarations des champs d'application",
                                                     "Prologue : aides au logement"]))
    except EmptyError:
        temp_traitement_aide_finale_abattement = dead_value
        raise NoValueProvided(SourcePosition(filename="examples/aides_logement/prologue.catala_fr",
                                             start_line=715, start_column=10,
                                             end_line=715, end_column=20,
                                             law_headings=["Secteur logement-foyer",
                                             "Calcul du montant de l'aide personnalisée au logement",
                                             "Déclarations des champs d'application",
                                             "Prologue : aides au logement"]))
    traitement_aide_finale_abattement = temp_traitement_aide_finale_abattement
    try:
        try:
            if condition_2_du_832_25_3:
                if (coefficient_prise_en_charge_d832_25_coeff_arrondi >=
                    decimal_of_string("0.9")):
                    temp_coefficient_prise_en_charge_d832_25_seuil = decimal_of_string("0.9")
                else:
                    temp_coefficient_prise_en_charge_d832_25_seuil = coefficient_prise_en_charge_d832_25_coeff_arrondi
            else:
                temp_coefficient_prise_en_charge_d832_25_seuil = dead_value
                raise EmptyError
        except EmptyError:
            if (coefficient_prise_en_charge_d832_25_coeff_arrondi >=
                decimal_of_string("0.95")):
                temp_coefficient_prise_en_charge_d832_25_seuil = decimal_of_string("0.95")
            else:
                temp_coefficient_prise_en_charge_d832_25_seuil = coefficient_prise_en_charge_d832_25_coeff_arrondi
    except EmptyError:
        temp_coefficient_prise_en_charge_d832_25_seuil = dead_value
        raise NoValueProvided(SourcePosition(filename="examples/aides_logement/prologue.catala_fr",
                                             start_line=709, start_column=10,
                                             end_line=709, end_column=15,
                                             law_headings=["Secteur logement-foyer",
                                             "Calcul du montant de l'aide personnalisée au logement",
                                             "Déclarations des champs d'application",
                                             "Prologue : aides au logement"]))
    coefficient_prise_en_charge_d832_25_seuil = temp_coefficient_prise_en_charge_d832_25_seuil
    try:
        def temp_traitement_aide_finale_contributions_sociales_arrondi_1(aide_finale_9:Money):
            try:
                if ((money_round(((traitement_aide_finale_abattement(
                    aide_finale_9) -
                    contributions_sociales_dot_montant_1(traitement_aide_finale_abattement(
                                                         aide_finale_9))) -
                    money_of_cents_string("50"))) +
                    contributions_sociales_dot_montant_1(traitement_aide_finale_abattement(
                                                         aide_finale_9))) >=
                    money_of_cents_string("0")):
                    return (money_round(((traitement_aide_finale_abattement(
                        aide_finale_9) -
                        contributions_sociales_dot_montant_1(traitement_aide_finale_abattement(
                                                             aide_finale_9))) -
                        money_of_cents_string("50"))) +
                        contributions_sociales_dot_montant_1(traitement_aide_finale_abattement(
                                                             aide_finale_9)))
                else:
                    return money_of_cents_string("0")
            except EmptyError:
                raise NoValueProvided(SourcePosition(filename="examples/aides_logement/prologue.catala_fr",
                                                     start_line=716,
                                                     start_column=10,
                                                     end_line=716,
                                                     end_column=40,
                                                     law_headings=["Secteur logement-foyer",
                                                     "Calcul du montant de l'aide personnalisée au logement",
                                                     "Déclarations des champs d'application",
                                                     "Prologue : aides au logement"]))
    except EmptyError:
        temp_traitement_aide_finale_contributions_sociales_arrondi_1 = dead_value
        raise NoValueProvided(SourcePosition(filename="examples/aides_logement/prologue.catala_fr",
                                             start_line=716, start_column=10,
                                             end_line=716, end_column=40,
                                             law_headings=["Secteur logement-foyer",
                                             "Calcul du montant de l'aide personnalisée au logement",
                                             "Déclarations des champs d'application",
                                             "Prologue : aides au logement"]))
    traitement_aide_finale_contributions_sociales_arrondi_1 = temp_traitement_aide_finale_contributions_sociales_arrondi_1
    try:
        if (((equivalence_loyer_eligible - equivalence_loyer_minimale) *
            coefficient_prise_en_charge_d832_25_seuil) <
            money_of_cents_string("0")):
            temp_aide_finale_formule_1 = money_of_cents_string("0")
        else:
            temp_aide_finale_formule_1 = ((equivalence_loyer_eligible -
                equivalence_loyer_minimale) *
                coefficient_prise_en_charge_d832_25_seuil)
    except EmptyError:
        temp_aide_finale_formule_1 = dead_value
        raise NoValueProvided(SourcePosition(filename="examples/aides_logement/prologue.catala_fr",
                                             start_line=711, start_column=12,
                                             end_line=711, end_column=31,
                                             law_headings=["Secteur logement-foyer",
                                             "Calcul du montant de l'aide personnalisée au logement",
                                             "Déclarations des champs d'application",
                                             "Prologue : aides au logement"]))
    aide_finale_formule_1 = temp_aide_finale_formule_1
    try:
        def temp_traitement_aide_finale_montant_minimal_1(aide_finale_10:Money):
            try:
                if (traitement_aide_finale_contributions_sociales_arrondi_1(
                    aide_finale_10) <
                    montant_minimal_aide_d823_24):
                    return money_of_cents_string("0")
                else:
                    return traitement_aide_finale_contributions_sociales_arrondi_1(
                        aide_finale_10)
            except EmptyError:
                raise NoValueProvided(SourcePosition(filename="examples/aides_logement/prologue.catala_fr",
                                                     start_line=717,
                                                     start_column=10,
                                                     end_line=717,
                                                     end_column=25,
                                                     law_headings=["Secteur logement-foyer",
                                                     "Calcul du montant de l'aide personnalisée au logement",
                                                     "Déclarations des champs d'application",
                                                     "Prologue : aides au logement"]))
    except EmptyError:
        temp_traitement_aide_finale_montant_minimal_1 = dead_value
        raise NoValueProvided(SourcePosition(filename="examples/aides_logement/prologue.catala_fr",
                                             start_line=717, start_column=10,
                                             end_line=717, end_column=25,
                                             law_headings=["Secteur logement-foyer",
                                             "Calcul du montant de l'aide personnalisée au logement",
                                             "Déclarations des champs d'application",
                                             "Prologue : aides au logement"]))
    traitement_aide_finale_montant_minimal_1 = temp_traitement_aide_finale_montant_minimal_1
    try:
        temp___9 = (date_courante_7 >= date_of_numbers(2020,10,1))
    except EmptyError:
        temp___9 = dead_value
        raise NoValueProvided(SourcePosition(filename="examples/aides_logement/prologue.catala_fr",
                                             start_line=725, start_column=13,
                                             end_line=725, end_column=42,
                                             law_headings=["Secteur logement-foyer",
                                             "Calcul du montant de l'aide personnalisée au logement",
                                             "Déclarations des champs d'application",
                                             "Prologue : aides au logement"]))
    if not (temp___9):
        raise AssertionFailure(SourcePosition(filename="examples/aides_logement/prologue.catala_fr",
                                              start_line=725,
                                              start_column=13, end_line=725,
                                              end_column=42,
                                              law_headings=["Secteur logement-foyer",
                                                           "Calcul du montant de l'aide personnalisée au logement",
                                                           "Déclarations des champs d'application",
                                                           "Prologue : aides au logement"]))
    return CalculAidePersonnaliseeLogementFoyer(coefficient_multiplicateur_d832_25 = coefficient_multiplicateur_d832_25,
        coefficient_r_d832_25 = coefficient_r_d832_25,
        n_nombre_parts_d832_25 = n_nombre_parts_d832_25_3,
        equivalence_loyer_eligible = equivalence_loyer_eligible,
        plafond_equivalence_loyer_eligible = plafond_equivalence_loyer_eligible,
        equivalence_loyer_minimale = equivalence_loyer_minimale,
        coefficient_prise_en_charge_d832_25 = coefficient_prise_en_charge_d832_25_seuil,
        aide_finale_formule = aide_finale_formule_1,
        traitement_aide_finale = traitement_aide_finale_montant_minimal_1)

def calcul_aide_personnalisee_logement_accession_propriete(calcul_aide_personnalisee_logement_accession_propriete_in:CalculAidePersonnaliseeLogementAccessionProprieteIn):
    mensualite_principale = calcul_aide_personnalisee_logement_accession_propriete_in.mensualite_principale_in
    ressources_menage_arrondies_3 = calcul_aide_personnalisee_logement_accession_propriete_in.ressources_menage_arrondies_in
    nombre_personnes_a_charge_4 = calcul_aide_personnalisee_logement_accession_propriete_in.nombre_personnes_a_charge_in
    situation_familiale_calcul_apl_4 = calcul_aide_personnalisee_logement_accession_propriete_in.situation_familiale_calcul_apl_in
    type_travaux_logement = calcul_aide_personnalisee_logement_accession_propriete_in.type_travaux_logement_in
    date_signature_pret = calcul_aide_personnalisee_logement_accession_propriete_in.date_signature_pret_in
    local_habite_premiere_fois_beneficiaire = calcul_aide_personnalisee_logement_accession_propriete_in.local_habite_premiere_fois_beneficiaire_in
    date_entree_logement = calcul_aide_personnalisee_logement_accession_propriete_in.date_entree_logement_in
    copropriete = calcul_aide_personnalisee_logement_accession_propriete_in.copropriete_in
    situation_r822_11_13_17 = calcul_aide_personnalisee_logement_accession_propriete_in.situation_r822_11_13_17_in
    zone_2 = calcul_aide_personnalisee_logement_accession_propriete_in.zone_in
    type_pret = calcul_aide_personnalisee_logement_accession_propriete_in.type_pret_in
    anciennete_logement = calcul_aide_personnalisee_logement_accession_propriete_in.anciennete_logement_in
    date_courante_8 = calcul_aide_personnalisee_logement_accession_propriete_in.date_courante_in
    try:
        temp_taux_francs_vers_euros = (decimal_of_string("1.") /
            decimal_of_string("6.55957"))
    except EmptyError:
        temp_taux_francs_vers_euros = dead_value
        raise NoValueProvided(SourcePosition(filename="examples/aides_logement/prologue.catala_fr",
                                             start_line=781, start_column=11,
                                             end_line=781, end_column=33,
                                             law_headings=["Secteur accession à la propriété",
                                             "Calcul du montant de l'aide personnalisée au logement",
                                             "Déclarations des champs d'application",
                                             "Prologue : aides au logement"]))
    taux_francs_vers_euros = temp_taux_francs_vers_euros
    try:
        temp_calcul_nombre_parts_dot_nombre_personnes_a_charge_1 = nombre_personnes_a_charge_4
    except EmptyError:
        temp_calcul_nombre_parts_dot_nombre_personnes_a_charge_1 = dead_value
        raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                             start_line=3278,
                                             start_column=14, end_line=3278,
                                             end_column=59,
                                             law_headings=["Article D832-11",
                                             "Section 2 : Accession à la propriété",
                                             "Chapitre II : Modalités de liquidation et de versement de l'aide personnalisée au logement",
                                             "Titre III : Aide personnalisée au logement",
                                             "Livre VIII : Aides personnelles au logement",
                                             "Partie réglementaire",
                                             "Code de la construction et de l'habitation"]))
    calcul_nombre_parts_dot_nombre_personnes_a_charge_1 = temp_calcul_nombre_parts_dot_nombre_personnes_a_charge_1
    try:
        temp_calcul_nombre_parts_dot_situation_familiale_calcul_apl_1 = situation_familiale_calcul_apl_4
    except EmptyError:
        temp_calcul_nombre_parts_dot_situation_familiale_calcul_apl_1 = dead_value
        raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                             start_line=3280,
                                             start_column=14, end_line=3280,
                                             end_column=64,
                                             law_headings=["Article D832-11",
                                             "Section 2 : Accession à la propriété",
                                             "Chapitre II : Modalités de liquidation et de versement de l'aide personnalisée au logement",
                                             "Titre III : Aide personnalisée au logement",
                                             "Livre VIII : Aides personnelles au logement",
                                             "Partie réglementaire",
                                             "Code de la construction et de l'habitation"]))
    calcul_nombre_parts_dot_situation_familiale_calcul_apl_1 = temp_calcul_nombre_parts_dot_situation_familiale_calcul_apl_1
    result_4 = calcul_nombre_parts_accession_propriete(CalculNombrePartsAccessionProprieteIn(nombre_personnes_a_charge_in = calcul_nombre_parts_dot_nombre_personnes_a_charge_1,
                                                       situation_familiale_calcul_apl_in = calcul_nombre_parts_dot_situation_familiale_calcul_apl_1))
    calcul_nombre_parts_dot_n_nombre_parts_d832_11 = result_4.n_nombre_parts_d832_11
    try:
        temp_contributions_sociales_dot_date_courante_2 = date_courante_8
    except EmptyError:
        temp_contributions_sociales_dot_date_courante_2 = dead_value
        raise NoValueProvided(SourcePosition(filename="examples/aides_logement/prologue.catala_fr",
                                             start_line=798, start_column=14,
                                             end_line=798, end_column=50,
                                             law_headings=["Secteur accession à la propriété",
                                             "Calcul du montant de l'aide personnalisée au logement",
                                             "Déclarations des champs d'application",
                                             "Prologue : aides au logement"]))
    contributions_sociales_dot_date_courante_2 = temp_contributions_sociales_dot_date_courante_2
    result_5 = contributions_sociales_aides_personnelle_logement(ContributionsSocialesAidesPersonnelleLogementIn(date_courante_in = contributions_sociales_dot_date_courante_2))
    contributions_sociales_dot_montant_2 = result_5.montant
    try:
        if (date_courante_8 >=
            date_of_numbers(2019,10,1)):
            temp_taux_tranche_superieure_d832_15_1 = decimal_of_string("0.416")
        else:
            temp_taux_tranche_superieure_d832_15_1 = dead_value
            raise EmptyError
    except EmptyError:
        temp_taux_tranche_superieure_d832_15_1 = dead_value
        raise NoValueProvided(SourcePosition(filename="examples/aides_logement/prologue.catala_fr",
                                             start_line=780, start_column=11,
                                             end_line=780, end_column=44,
                                             law_headings=["Secteur accession à la propriété",
                                             "Calcul du montant de l'aide personnalisée au logement",
                                             "Déclarations des champs d'application",
                                             "Prologue : aides au logement"]))
    taux_tranche_superieure_d832_15_1 = temp_taux_tranche_superieure_d832_15_1
    try:
        if (date_courante_8 >=
            date_of_numbers(2019,10,1)):
            temp_taux_tranche_inferieure_d832_15_1 = decimal_of_string("0.208")
        else:
            temp_taux_tranche_inferieure_d832_15_1 = dead_value
            raise EmptyError
    except EmptyError:
        temp_taux_tranche_inferieure_d832_15_1 = dead_value
        raise NoValueProvided(SourcePosition(filename="examples/aides_logement/prologue.catala_fr",
                                             start_line=779, start_column=11,
                                             end_line=779, end_column=44,
                                             law_headings=["Secteur accession à la propriété",
                                             "Calcul du montant de l'aide personnalisée au logement",
                                             "Déclarations des champs d'application",
                                             "Prologue : aides au logement"]))
    taux_tranche_inferieure_d832_15_1 = temp_taux_tranche_inferieure_d832_15_1
    try:
        if (date_courante_8 >=
            date_of_numbers(2019,10,1)):
            temp_montant_limite_tranches_d832_15_1 = money_of_cents_string("560085")
        else:
            temp_montant_limite_tranches_d832_15_1 = dead_value
            raise EmptyError
    except EmptyError:
        temp_montant_limite_tranches_d832_15_1 = dead_value
        raise NoValueProvided(SourcePosition(filename="examples/aides_logement/prologue.catala_fr",
                                             start_line=778, start_column=11,
                                             end_line=778, end_column=44,
                                             law_headings=["Secteur accession à la propriété",
                                             "Calcul du montant de l'aide personnalisée au logement",
                                             "Déclarations des champs d'application",
                                             "Prologue : aides au logement"]))
    montant_limite_tranches_d832_15_1 = temp_montant_limite_tranches_d832_15_1
    try:
        if (date_courante_8 >=
            date_of_numbers(2019,10,1)):
            temp_coefficient_multiplicateur_d832_18 = decimal_of_string("16.25")
        else:
            temp_coefficient_multiplicateur_d832_18 = dead_value
            raise EmptyError
    except EmptyError:
        temp_coefficient_multiplicateur_d832_18 = dead_value
        raise NoValueProvided(SourcePosition(filename="examples/aides_logement/prologue.catala_fr",
                                             start_line=777, start_column=11,
                                             end_line=777, end_column=45,
                                             law_headings=["Secteur accession à la propriété",
                                             "Calcul du montant de l'aide personnalisée au logement",
                                             "Déclarations des champs d'application",
                                             "Prologue : aides au logement"]))
    coefficient_multiplicateur_d832_18 = temp_coefficient_multiplicateur_d832_18
    try:
        if (date_courante_8 >=
            date_of_numbers(2019,10,1)):
            temp_coefficient_multiplicateur_d832_11 = money_of_cents_string("2211133")
        else:
            temp_coefficient_multiplicateur_d832_11 = dead_value
            raise EmptyError
    except EmptyError:
        temp_coefficient_multiplicateur_d832_11 = dead_value
        raise NoValueProvided(SourcePosition(filename="examples/aides_logement/prologue.catala_fr",
                                             start_line=776, start_column=11,
                                             end_line=776, end_column=45,
                                             law_headings=["Secteur accession à la propriété",
                                             "Calcul du montant de l'aide personnalisée au logement",
                                             "Déclarations des champs d'application",
                                             "Prologue : aides au logement"]))
    coefficient_multiplicateur_d832_11 = temp_coefficient_multiplicateur_d832_11
    try:
        if (date_courante_8 >=
            date_of_numbers(2019,10,1)):
            match_arg_167 = anciennete_logement
            if match_arg_167.code == NeufOuAncien_Code.Neuf:
                _ = match_arg_167.value
                if (date_signature_pret <=
                    date_of_numbers(1998,10,1)):
                    temp_coefficient_multiplicateur_d832_17_3 = decimal_of_string("0.0226")
                else:
                    temp_coefficient_multiplicateur_d832_17_3 = decimal_of_string("0.0234")
            elif match_arg_167.code == NeufOuAncien_Code.Ancien:
                ameliore_par_occupant = match_arg_167.value
                match_arg_168 = ameliore_par_occupant
                if match_arg_168.code == AmelioreParOccupant_Code.Oui:
                    _ = match_arg_168.value
                    temp_coefficient_multiplicateur_d832_17_3 = decimal_of_string("0.0172")
                elif match_arg_168.code == AmelioreParOccupant_Code.Non:
                    _ = match_arg_168.value
                    if (date_signature_pret <=
                        date_of_numbers(1998,10,1)):
                        temp_coefficient_multiplicateur_d832_17_3 = decimal_of_string("0.0226")
                    else:
                        temp_coefficient_multiplicateur_d832_17_3 = decimal_of_string("0.0234")
        else:
            temp_coefficient_multiplicateur_d832_17_3 = dead_value
            raise EmptyError
    except EmptyError:
        temp_coefficient_multiplicateur_d832_17_3 = dead_value
        raise NoValueProvided(SourcePosition(filename="examples/aides_logement/prologue.catala_fr",
                                             start_line=775, start_column=11,
                                             end_line=775, end_column=47,
                                             law_headings=["Secteur accession à la propriété",
                                             "Calcul du montant de l'aide personnalisée au logement",
                                             "Déclarations des champs d'application",
                                             "Prologue : aides au logement"]))
    coefficient_multiplicateur_d832_17_3 = temp_coefficient_multiplicateur_d832_17_3
    try:
        if (date_courante_8 >=
            date_of_numbers(2019,10,1)):
            temp_montant_minimal_aide_d832_10 = money_of_cents_string("1000")
        else:
            temp_montant_minimal_aide_d832_10 = dead_value
            raise EmptyError
    except EmptyError:
        temp_montant_minimal_aide_d832_10 = dead_value
        raise NoValueProvided(SourcePosition(filename="examples/aides_logement/prologue.catala_fr",
                                             start_line=774, start_column=11,
                                             end_line=774, end_column=39,
                                             law_headings=["Secteur accession à la propriété",
                                             "Calcul du montant de l'aide personnalisée au logement",
                                             "Déclarations des champs d'application",
                                             "Prologue : aides au logement"]))
    montant_minimal_aide_d832_10 = temp_montant_minimal_aide_d832_10
    try:
        if (date_courante_8 >=
            date_of_numbers(2019,10,1)):
            temp_montant_forfaitaire_d832_10 = money_of_cents_string("500")
        else:
            temp_montant_forfaitaire_d832_10 = dead_value
            raise EmptyError
    except EmptyError:
        temp_montant_forfaitaire_d832_10 = dead_value
        raise NoValueProvided(SourcePosition(filename="examples/aides_logement/prologue.catala_fr",
                                             start_line=773, start_column=11,
                                             end_line=773, end_column=38,
                                             law_headings=["Secteur accession à la propriété",
                                             "Calcul du montant de l'aide personnalisée au logement",
                                             "Déclarations des champs d'application",
                                             "Prologue : aides au logement"]))
    montant_forfaitaire_d832_10 = temp_montant_forfaitaire_d832_10
    try:
        try:
            def temp_montant_forfaitaire_charges_d832_10(_:Unit):
                raise EmptyError
            def temp_montant_forfaitaire_charges_d832_10_1(_:Unit):
                return False
            def temp_montant_forfaitaire_charges_d832_10_2(_:Unit):
                if (((date_courante_8 < date_of_numbers(2021,10,1)) and
                    (date_courante_8 >= date_of_numbers(2020,10,1))) and
                    copropriete):
                    match_arg_169 = situation_familiale_calcul_apl_4
                    if match_arg_169.code == SituationFamilialeCalculAPL_Code.PersonneSeule:
                        _ = match_arg_169.value
                        temp_montant_forfaitaire_charges_d832_10_3 = money_of_cents_string("2699")
                    elif match_arg_169.code == SituationFamilialeCalculAPL_Code.Couple:
                        _ = match_arg_169.value
                        temp_montant_forfaitaire_charges_d832_10_3 = money_of_cents_string("5399")
                    return (temp_montant_forfaitaire_charges_d832_10_3 +
                        (money_of_cents_string("1224") *
                        decimal_of_integer(nombre_personnes_a_charge_4)))
                else:
                    raise EmptyError
            def temp_montant_forfaitaire_charges_d832_10_4(_:Unit):
                if (((date_courante_8 >= date_of_numbers(2021,10,1)) and
                    (date_courante_8 < date_of_numbers(2022,7,1))) and
                    copropriete):
                    match_arg_170 = situation_familiale_calcul_apl_4
                    if match_arg_170.code == SituationFamilialeCalculAPL_Code.PersonneSeule:
                        _ = match_arg_170.value
                        temp_montant_forfaitaire_charges_d832_10_5 = money_of_cents_string("2710")
                    elif match_arg_170.code == SituationFamilialeCalculAPL_Code.Couple:
                        _ = match_arg_170.value
                        temp_montant_forfaitaire_charges_d832_10_5 = money_of_cents_string("5422")
                    return (temp_montant_forfaitaire_charges_d832_10_5 +
                        (money_of_cents_string("1229") *
                        decimal_of_integer(nombre_personnes_a_charge_4)))
                else:
                    raise EmptyError
            def temp_montant_forfaitaire_charges_d832_10_6(_:Unit):
                if ((date_courante_8 >= date_of_numbers(2022,7,1)) and
                    copropriete):
                    match_arg_171 = situation_familiale_calcul_apl_4
                    if match_arg_171.code == SituationFamilialeCalculAPL_Code.PersonneSeule:
                        _ = match_arg_171.value
                        temp_montant_forfaitaire_charges_d832_10_7 = money_of_cents_string("2805")
                    elif match_arg_171.code == SituationFamilialeCalculAPL_Code.Couple:
                        _ = match_arg_171.value
                        temp_montant_forfaitaire_charges_d832_10_7 = money_of_cents_string("5612")
                    return (temp_montant_forfaitaire_charges_d832_10_7 +
                        (money_of_cents_string("1272") *
                        decimal_of_integer(nombre_personnes_a_charge_4)))
                else:
                    raise EmptyError
            temp_montant_forfaitaire_charges_d832_10_8 = handle_default(
                SourcePosition(filename="examples/aides_logement/prologue.catala_fr",
                start_line=772, start_column=11, end_line=772, end_column=46,
                law_headings=["Secteur accession à la propriété",
                "Calcul du montant de l'aide personnalisée au logement",
                "Déclarations des champs d'application",
                "Prologue : aides au logement"]), [temp_montant_forfaitaire_charges_d832_10_6,
                temp_montant_forfaitaire_charges_d832_10_4,
                temp_montant_forfaitaire_charges_d832_10_2],
                temp_montant_forfaitaire_charges_d832_10_1,
                temp_montant_forfaitaire_charges_d832_10)
        except EmptyError:
            def temp_montant_forfaitaire_charges_d832_10_9(_:Unit):
                raise EmptyError
            def temp_montant_forfaitaire_charges_d832_10_10(_:Unit):
                return False
            def temp_montant_forfaitaire_charges_d832_10_11(_:Unit):
                if ((date_courante_8 < date_of_numbers(2021,10,1)) and
                    (date_courante_8 >=
                    date_of_numbers(2020,10,1))):
                    return (money_of_cents_string("5399") +
                        (money_of_cents_string("1224") *
                        decimal_of_integer(nombre_personnes_a_charge_4)))
                else:
                    raise EmptyError
            def temp_montant_forfaitaire_charges_d832_10_12(_:Unit):
                if ((date_courante_8 >= date_of_numbers(2021,10,1)) and
                    (date_courante_8 <
                    date_of_numbers(2022,7,1))):
                    return (money_of_cents_string("5422") +
                        (money_of_cents_string("1229") *
                        decimal_of_integer(nombre_personnes_a_charge_4)))
                else:
                    raise EmptyError
            def temp_montant_forfaitaire_charges_d832_10_13(_:Unit):
                if (date_courante_8 >=
                    date_of_numbers(2022,7,1)):
                    return (money_of_cents_string("5612") +
                        (money_of_cents_string("1272") *
                        decimal_of_integer(nombre_personnes_a_charge_4)))
                else:
                    raise EmptyError
            temp_montant_forfaitaire_charges_d832_10_8 = handle_default(
                SourcePosition(filename="examples/aides_logement/prologue.catala_fr",
                start_line=772, start_column=11, end_line=772, end_column=46,
                law_headings=["Secteur accession à la propriété",
                "Calcul du montant de l'aide personnalisée au logement",
                "Déclarations des champs d'application",
                "Prologue : aides au logement"]), [temp_montant_forfaitaire_charges_d832_10_13,
                temp_montant_forfaitaire_charges_d832_10_12,
                temp_montant_forfaitaire_charges_d832_10_11],
                temp_montant_forfaitaire_charges_d832_10_10,
                temp_montant_forfaitaire_charges_d832_10_9)
    except EmptyError:
        temp_montant_forfaitaire_charges_d832_10_8 = dead_value
        raise NoValueProvided(SourcePosition(filename="examples/aides_logement/prologue.catala_fr",
                                             start_line=772, start_column=11,
                                             end_line=772, end_column=46,
                                             law_headings=["Secteur accession à la propriété",
                                             "Calcul du montant de l'aide personnalisée au logement",
                                             "Déclarations des champs d'application",
                                             "Prologue : aides au logement"]))
    montant_forfaitaire_charges_d832_10 = temp_montant_forfaitaire_charges_d832_10_8
    try:
        def temp_calcul_plafond_mensualite_d832_10_3(date_signature_pret_1:Date):
            try:
                def temp_calcul_plafond_mensualite_d832_10_3_1(_:Unit):
                    raise EmptyError
                def temp_calcul_plafond_mensualite_d832_10_3_2(_:Unit):
                    return False
                def temp_calcul_plafond_mensualite_d832_10_3_3(_:Unit):
                    def temp_calcul_plafond_mensualite_d832_10_3_4(_:Unit):
                        raise EmptyError
                    def temp_calcul_plafond_mensualite_d832_10_3_5(_:Unit):
                        return False
                    def temp_calcul_plafond_mensualite_d832_10_3_6(_:Unit):
                        match_arg_172 = type_pret
                        if match_arg_172.code == TypePret_Code.D331_32:
                            _ = match_arg_172.value
                            temp_calcul_plafond_mensualite_d832_10_3_7 = True
                        elif match_arg_172.code == TypePret_Code.D331_63_64:
                            _ = match_arg_172.value
                            temp_calcul_plafond_mensualite_d832_10_3_7 = False
                        elif match_arg_172.code == TypePret_Code.D331_59_8:
                            _ = match_arg_172.value
                            temp_calcul_plafond_mensualite_d832_10_3_7 = False
                        elif match_arg_172.code == TypePret_Code.D331_76_1:
                            _ = match_arg_172.value
                            temp_calcul_plafond_mensualite_d832_10_3_7 = False
                        elif match_arg_172.code == TypePret_Code.Autre:
                            _ = match_arg_172.value
                            temp_calcul_plafond_mensualite_d832_10_3_7 = False
                        match_arg_173 = anciennete_logement
                        if match_arg_173.code == NeufOuAncien_Code.Neuf:
                            _ = match_arg_173.value
                            temp_calcul_plafond_mensualite_d832_10_3_8 = False
                        elif match_arg_173.code == NeufOuAncien_Code.Ancien:
                            _ = match_arg_173.value
                            temp_calcul_plafond_mensualite_d832_10_3_8 = True
                        if ((date_courante_8 >=
                            date_of_numbers(2019,10,1)) and
                            ((date_signature_pret_1 >=
                            date_of_numbers(1994,11,27)) and
                            (temp_calcul_plafond_mensualite_d832_10_3_8 and
                            temp_calcul_plafond_mensualite_d832_10_3_7))):
                            match_arg_174 = zone_2
                            if match_arg_174.code == ZoneDHabitation_Code.Zone1:
                                _ = match_arg_174.value
                                if (nombre_personnes_a_charge_4 ==
                                    integer_of_string("0")):
                                    match_arg_175 = situation_familiale_calcul_apl_4
                                    if match_arg_175.code == SituationFamilialeCalculAPL_Code.PersonneSeule:
                                        _ = match_arg_175.value
                                        temp_calcul_plafond_mensualite_d832_10_3_9 = money_of_cents_string("148100")
                                    elif match_arg_175.code == SituationFamilialeCalculAPL_Code.Couple:
                                        _ = match_arg_175.value
                                        temp_calcul_plafond_mensualite_d832_10_3_9 = money_of_cents_string("178700")
                                else:
                                    temp_calcul_plafond_mensualite_d832_10_3_9 = (money_of_cents_string("209300") +
                                        (money_of_cents_string("30600") *
                                        decimal_of_integer((nombre_personnes_a_charge_4 -
                                        integer_of_string("1")))))
                            elif match_arg_174.code == ZoneDHabitation_Code.Zone2:
                                _ = match_arg_174.value
                                if (nombre_personnes_a_charge_4 ==
                                    integer_of_string("0")):
                                    match_arg_176 = situation_familiale_calcul_apl_4
                                    if match_arg_176.code == SituationFamilialeCalculAPL_Code.PersonneSeule:
                                        _ = match_arg_176.value
                                        temp_calcul_plafond_mensualite_d832_10_3_9 = money_of_cents_string("132000")
                                    elif match_arg_176.code == SituationFamilialeCalculAPL_Code.Couple:
                                        _ = match_arg_176.value
                                        temp_calcul_plafond_mensualite_d832_10_3_9 = money_of_cents_string("158900")
                                else:
                                    temp_calcul_plafond_mensualite_d832_10_3_9 = (money_of_cents_string("185800") +
                                        (money_of_cents_string("26900") *
                                        decimal_of_integer((nombre_personnes_a_charge_4 -
                                        integer_of_string("1")))))
                            elif match_arg_174.code == ZoneDHabitation_Code.Zone3:
                                _ = match_arg_174.value
                                if (nombre_personnes_a_charge_4 ==
                                    integer_of_string("0")):
                                    match_arg_177 = situation_familiale_calcul_apl_4
                                    if match_arg_177.code == SituationFamilialeCalculAPL_Code.PersonneSeule:
                                        _ = match_arg_177.value
                                        temp_calcul_plafond_mensualite_d832_10_3_9 = money_of_cents_string("123300")
                                    elif match_arg_177.code == SituationFamilialeCalculAPL_Code.Couple:
                                        _ = match_arg_177.value
                                        temp_calcul_plafond_mensualite_d832_10_3_9 = money_of_cents_string("147900")
                                else:
                                    temp_calcul_plafond_mensualite_d832_10_3_9 = (money_of_cents_string("172500") +
                                        (money_of_cents_string("24600") *
                                        decimal_of_integer((nombre_personnes_a_charge_4 -
                                        integer_of_string("1")))))
                            return (temp_calcul_plafond_mensualite_d832_10_3_9 *
                                taux_francs_vers_euros)
                        else:
                            raise EmptyError
                    def temp_calcul_plafond_mensualite_d832_10_3_10(_:Unit):
                        match_arg_178 = type_pret
                        if match_arg_178.code == TypePret_Code.D331_32:
                            _ = match_arg_178.value
                            temp_calcul_plafond_mensualite_d832_10_3_11 = True
                        elif match_arg_178.code == TypePret_Code.D331_63_64:
                            _ = match_arg_178.value
                            temp_calcul_plafond_mensualite_d832_10_3_11 = False
                        elif match_arg_178.code == TypePret_Code.D331_59_8:
                            _ = match_arg_178.value
                            temp_calcul_plafond_mensualite_d832_10_3_11 = False
                        elif match_arg_178.code == TypePret_Code.D331_76_1:
                            _ = match_arg_178.value
                            temp_calcul_plafond_mensualite_d832_10_3_11 = False
                        elif match_arg_178.code == TypePret_Code.Autre:
                            _ = match_arg_178.value
                            temp_calcul_plafond_mensualite_d832_10_3_11 = False
                        match_arg_179 = anciennete_logement
                        if match_arg_179.code == NeufOuAncien_Code.Neuf:
                            _ = match_arg_179.value
                            temp_calcul_plafond_mensualite_d832_10_3_12 = True
                        elif match_arg_179.code == NeufOuAncien_Code.Ancien:
                            _ = match_arg_179.value
                            temp_calcul_plafond_mensualite_d832_10_3_12 = False
                        if ((date_courante_8 >=
                            date_of_numbers(2019,10,1)) and
                            ((date_signature_pret_1 >=
                            date_of_numbers(1994,11,27)) and
                            (temp_calcul_plafond_mensualite_d832_10_3_12 and
                            temp_calcul_plafond_mensualite_d832_10_3_11))):
                            match_arg_180 = zone_2
                            if match_arg_180.code == ZoneDHabitation_Code.Zone1:
                                _ = match_arg_180.value
                                if (nombre_personnes_a_charge_4 ==
                                    integer_of_string("0")):
                                    match_arg_181 = situation_familiale_calcul_apl_4
                                    if match_arg_181.code == SituationFamilialeCalculAPL_Code.PersonneSeule:
                                        _ = match_arg_181.value
                                        temp_calcul_plafond_mensualite_d832_10_3_13 = money_of_cents_string("184000")
                                    elif match_arg_181.code == SituationFamilialeCalculAPL_Code.Couple:
                                        _ = match_arg_181.value
                                        temp_calcul_plafond_mensualite_d832_10_3_13 = money_of_cents_string("220000")
                                else:
                                    temp_calcul_plafond_mensualite_d832_10_3_13 = (money_of_cents_string("260000") +
                                        (money_of_cents_string("38000") *
                                        decimal_of_integer((nombre_personnes_a_charge_4 -
                                        integer_of_string("1")))))
                            elif match_arg_180.code == ZoneDHabitation_Code.Zone2:
                                _ = match_arg_180.value
                                if (nombre_personnes_a_charge_4 ==
                                    integer_of_string("0")):
                                    match_arg_182 = situation_familiale_calcul_apl_4
                                    if match_arg_182.code == SituationFamilialeCalculAPL_Code.PersonneSeule:
                                        _ = match_arg_182.value
                                        temp_calcul_plafond_mensualite_d832_10_3_13 = money_of_cents_string("164200")
                                    elif match_arg_182.code == SituationFamilialeCalculAPL_Code.Couple:
                                        _ = match_arg_182.value
                                        temp_calcul_plafond_mensualite_d832_10_3_13 = money_of_cents_string("197700")
                                else:
                                    temp_calcul_plafond_mensualite_d832_10_3_13 = (money_of_cents_string("231200") +
                                        (money_of_cents_string("33500") *
                                        decimal_of_integer((nombre_personnes_a_charge_4 -
                                        integer_of_string("1")))))
                            elif match_arg_180.code == ZoneDHabitation_Code.Zone3:
                                _ = match_arg_180.value
                                if (nombre_personnes_a_charge_4 ==
                                    integer_of_string("0")):
                                    match_arg_183 = situation_familiale_calcul_apl_4
                                    if match_arg_183.code == SituationFamilialeCalculAPL_Code.PersonneSeule:
                                        _ = match_arg_183.value
                                        temp_calcul_plafond_mensualite_d832_10_3_13 = money_of_cents_string("153200")
                                    elif match_arg_183.code == SituationFamilialeCalculAPL_Code.Couple:
                                        _ = match_arg_183.value
                                        temp_calcul_plafond_mensualite_d832_10_3_13 = money_of_cents_string("183700")
                                else:
                                    temp_calcul_plafond_mensualite_d832_10_3_13 = (money_of_cents_string("214200") +
                                        (money_of_cents_string("30500") *
                                        decimal_of_integer((nombre_personnes_a_charge_4 -
                                        integer_of_string("1")))))
                            return (temp_calcul_plafond_mensualite_d832_10_3_13 *
                                taux_francs_vers_euros)
                        else:
                            raise EmptyError
                    def temp_calcul_plafond_mensualite_d832_10_3_14(_:Unit):
                        match_arg_184 = type_pret
                        if match_arg_184.code == TypePret_Code.D331_32:
                            _ = match_arg_184.value
                            temp_calcul_plafond_mensualite_d832_10_3_15 = True
                        elif match_arg_184.code == TypePret_Code.D331_63_64:
                            _ = match_arg_184.value
                            temp_calcul_plafond_mensualite_d832_10_3_15 = False
                        elif match_arg_184.code == TypePret_Code.D331_59_8:
                            _ = match_arg_184.value
                            temp_calcul_plafond_mensualite_d832_10_3_15 = False
                        elif match_arg_184.code == TypePret_Code.D331_76_1:
                            _ = match_arg_184.value
                            temp_calcul_plafond_mensualite_d832_10_3_15 = False
                        elif match_arg_184.code == TypePret_Code.Autre:
                            _ = match_arg_184.value
                            temp_calcul_plafond_mensualite_d832_10_3_15 = False
                        match_arg_185 = anciennete_logement
                        if match_arg_185.code == NeufOuAncien_Code.Neuf:
                            _ = match_arg_185.value
                            temp_calcul_plafond_mensualite_d832_10_3_16 = False
                        elif match_arg_185.code == NeufOuAncien_Code.Ancien:
                            _ = match_arg_185.value
                            temp_calcul_plafond_mensualite_d832_10_3_16 = True
                        if ((date_courante_8 >=
                            date_of_numbers(2019,10,1)) and
                            ((date_signature_pret_1 >=
                            date_of_numbers(1992,6,30)) and
                            ((date_signature_pret_1 <
                            date_of_numbers(1994,11,27)) and
                            (temp_calcul_plafond_mensualite_d832_10_3_16 and
                            temp_calcul_plafond_mensualite_d832_10_3_15)))):
                            match_arg_186 = zone_2
                            if match_arg_186.code == ZoneDHabitation_Code.Zone1:
                                _ = match_arg_186.value
                                if (nombre_personnes_a_charge_4 ==
                                    integer_of_string("0")):
                                    match_arg_187 = situation_familiale_calcul_apl_4
                                    if match_arg_187.code == SituationFamilialeCalculAPL_Code.PersonneSeule:
                                        _ = match_arg_187.value
                                        temp_calcul_plafond_mensualite_d832_10_3_17 = money_of_cents_string("167800")
                                    elif match_arg_187.code == SituationFamilialeCalculAPL_Code.Couple:
                                        _ = match_arg_187.value
                                        temp_calcul_plafond_mensualite_d832_10_3_17 = money_of_cents_string("202500")
                                else:
                                    temp_calcul_plafond_mensualite_d832_10_3_17 = (money_of_cents_string("237200") +
                                        (money_of_cents_string("34700") *
                                        decimal_of_integer((nombre_personnes_a_charge_4 -
                                        integer_of_string("1")))))
                            elif match_arg_186.code == ZoneDHabitation_Code.Zone2:
                                _ = match_arg_186.value
                                if (nombre_personnes_a_charge_4 ==
                                    integer_of_string("0")):
                                    match_arg_188 = situation_familiale_calcul_apl_4
                                    if match_arg_188.code == SituationFamilialeCalculAPL_Code.PersonneSeule:
                                        _ = match_arg_188.value
                                        temp_calcul_plafond_mensualite_d832_10_3_17 = money_of_cents_string("149600")
                                    elif match_arg_188.code == SituationFamilialeCalculAPL_Code.Couple:
                                        _ = match_arg_188.value
                                        temp_calcul_plafond_mensualite_d832_10_3_17 = money_of_cents_string("180100")
                                else:
                                    temp_calcul_plafond_mensualite_d832_10_3_17 = (money_of_cents_string("210600") +
                                        (money_of_cents_string("30500") *
                                        decimal_of_integer((nombre_personnes_a_charge_4 -
                                        integer_of_string("1")))))
                            elif match_arg_186.code == ZoneDHabitation_Code.Zone3:
                                _ = match_arg_186.value
                                if (nombre_personnes_a_charge_4 ==
                                    integer_of_string("0")):
                                    match_arg_189 = situation_familiale_calcul_apl_4
                                    if match_arg_189.code == SituationFamilialeCalculAPL_Code.PersonneSeule:
                                        _ = match_arg_189.value
                                        temp_calcul_plafond_mensualite_d832_10_3_17 = money_of_cents_string("139700")
                                    elif match_arg_189.code == SituationFamilialeCalculAPL_Code.Couple:
                                        _ = match_arg_189.value
                                        temp_calcul_plafond_mensualite_d832_10_3_17 = money_of_cents_string("167600")
                                else:
                                    temp_calcul_plafond_mensualite_d832_10_3_17 = (money_of_cents_string("195500") +
                                        (money_of_cents_string("27900") *
                                        decimal_of_integer((nombre_personnes_a_charge_4 -
                                        integer_of_string("1")))))
                            return (temp_calcul_plafond_mensualite_d832_10_3_17 *
                                taux_francs_vers_euros)
                        else:
                            raise EmptyError
                    def temp_calcul_plafond_mensualite_d832_10_3_18(_:Unit):
                        match_arg_190 = type_pret
                        if match_arg_190.code == TypePret_Code.D331_32:
                            _ = match_arg_190.value
                            temp_calcul_plafond_mensualite_d832_10_3_19 = True
                        elif match_arg_190.code == TypePret_Code.D331_63_64:
                            _ = match_arg_190.value
                            temp_calcul_plafond_mensualite_d832_10_3_19 = False
                        elif match_arg_190.code == TypePret_Code.D331_59_8:
                            _ = match_arg_190.value
                            temp_calcul_plafond_mensualite_d832_10_3_19 = False
                        elif match_arg_190.code == TypePret_Code.D331_76_1:
                            _ = match_arg_190.value
                            temp_calcul_plafond_mensualite_d832_10_3_19 = False
                        elif match_arg_190.code == TypePret_Code.Autre:
                            _ = match_arg_190.value
                            temp_calcul_plafond_mensualite_d832_10_3_19 = False
                        match_arg_191 = anciennete_logement
                        if match_arg_191.code == NeufOuAncien_Code.Neuf:
                            _ = match_arg_191.value
                            temp_calcul_plafond_mensualite_d832_10_3_20 = True
                        elif match_arg_191.code == NeufOuAncien_Code.Ancien:
                            _ = match_arg_191.value
                            temp_calcul_plafond_mensualite_d832_10_3_20 = False
                        if ((date_courante_8 >=
                            date_of_numbers(2019,10,1)) and
                            ((date_signature_pret_1 >=
                            date_of_numbers(1992,6,30)) and
                            ((date_signature_pret_1 <
                            date_of_numbers(1994,11,27)) and
                            (temp_calcul_plafond_mensualite_d832_10_3_20 and
                            temp_calcul_plafond_mensualite_d832_10_3_19)))):
                            match_arg_192 = zone_2
                            if match_arg_192.code == ZoneDHabitation_Code.Zone1:
                                _ = match_arg_192.value
                                if (nombre_personnes_a_charge_4 ==
                                    integer_of_string("0")):
                                    match_arg_193 = situation_familiale_calcul_apl_4
                                    if match_arg_193.code == SituationFamilialeCalculAPL_Code.PersonneSeule:
                                        _ = match_arg_193.value
                                        temp_calcul_plafond_mensualite_d832_10_3_21 = money_of_cents_string("208500")
                                    elif match_arg_193.code == SituationFamilialeCalculAPL_Code.Couple:
                                        _ = match_arg_193.value
                                        temp_calcul_plafond_mensualite_d832_10_3_21 = money_of_cents_string("251500")
                                else:
                                    temp_calcul_plafond_mensualite_d832_10_3_21 = (money_of_cents_string("294500") +
                                        (money_of_cents_string("43000") *
                                        decimal_of_integer((nombre_personnes_a_charge_4 -
                                        integer_of_string("1")))))
                            elif match_arg_192.code == ZoneDHabitation_Code.Zone2:
                                _ = match_arg_192.value
                                if (nombre_personnes_a_charge_4 ==
                                    integer_of_string("0")):
                                    match_arg_194 = situation_familiale_calcul_apl_4
                                    if match_arg_194.code == SituationFamilialeCalculAPL_Code.PersonneSeule:
                                        _ = match_arg_194.value
                                        temp_calcul_plafond_mensualite_d832_10_3_21 = money_of_cents_string("186000")
                                    elif match_arg_194.code == SituationFamilialeCalculAPL_Code.Couple:
                                        _ = match_arg_194.value
                                        temp_calcul_plafond_mensualite_d832_10_3_21 = money_of_cents_string("223900")
                                else:
                                    temp_calcul_plafond_mensualite_d832_10_3_21 = (money_of_cents_string("261800") +
                                        (money_of_cents_string("37900") *
                                        decimal_of_integer((nombre_personnes_a_charge_4 -
                                        integer_of_string("1")))))
                            elif match_arg_192.code == ZoneDHabitation_Code.Zone3:
                                _ = match_arg_192.value
                                if (nombre_personnes_a_charge_4 ==
                                    integer_of_string("0")):
                                    match_arg_195 = situation_familiale_calcul_apl_4
                                    if match_arg_195.code == SituationFamilialeCalculAPL_Code.PersonneSeule:
                                        _ = match_arg_195.value
                                        temp_calcul_plafond_mensualite_d832_10_3_21 = money_of_cents_string("173600")
                                    elif match_arg_195.code == SituationFamilialeCalculAPL_Code.Couple:
                                        _ = match_arg_195.value
                                        temp_calcul_plafond_mensualite_d832_10_3_21 = money_of_cents_string("208200")
                                else:
                                    temp_calcul_plafond_mensualite_d832_10_3_21 = (money_of_cents_string("242800") +
                                        (money_of_cents_string("35600") *
                                        decimal_of_integer((nombre_personnes_a_charge_4 -
                                        integer_of_string("1")))))
                            return (temp_calcul_plafond_mensualite_d832_10_3_21 *
                                taux_francs_vers_euros)
                        else:
                            raise EmptyError
                    return handle_default(SourcePosition(filename="examples/aides_logement/prologue.catala_fr",
                                          start_line=760, start_column=11,
                                          end_line=760, end_column=46,
                                          law_headings=["Secteur accession à la propriété",
                                          "Calcul du montant de l'aide personnalisée au logement",
                                          "Déclarations des champs d'application",
                                          "Prologue : aides au logement"]), [temp_calcul_plafond_mensualite_d832_10_3_18,
                                          temp_calcul_plafond_mensualite_d832_10_3_14,
                                          temp_calcul_plafond_mensualite_d832_10_3_10,
                                          temp_calcul_plafond_mensualite_d832_10_3_6],
                                          temp_calcul_plafond_mensualite_d832_10_3_5,
                                          temp_calcul_plafond_mensualite_d832_10_3_4)
                def temp_calcul_plafond_mensualite_d832_10_3_22(_:Unit):
                    try:
                        match_arg_196 = type_pret
                        if match_arg_196.code == TypePret_Code.D331_32:
                            _ = match_arg_196.value
                            temp_calcul_plafond_mensualite_d832_10_3_23 = False
                        elif match_arg_196.code == TypePret_Code.D331_63_64:
                            _ = match_arg_196.value
                            temp_calcul_plafond_mensualite_d832_10_3_23 = True
                        elif match_arg_196.code == TypePret_Code.D331_59_8:
                            _ = match_arg_196.value
                            temp_calcul_plafond_mensualite_d832_10_3_23 = False
                        elif match_arg_196.code == TypePret_Code.D331_76_1:
                            _ = match_arg_196.value
                            temp_calcul_plafond_mensualite_d832_10_3_23 = False
                        elif match_arg_196.code == TypePret_Code.Autre:
                            _ = match_arg_196.value
                            temp_calcul_plafond_mensualite_d832_10_3_23 = False
                        match_arg_197 = anciennete_logement
                        if match_arg_197.code == NeufOuAncien_Code.Neuf:
                            _ = match_arg_197.value
                            temp_calcul_plafond_mensualite_d832_10_3_24 = False
                        elif match_arg_197.code == NeufOuAncien_Code.Ancien:
                            ameliore_par_occupant_1 = match_arg_197.value
                            match_arg_198 = ameliore_par_occupant_1
                            if match_arg_198.code == AmelioreParOccupant_Code.Oui:
                                _ = match_arg_198.value
                                temp_calcul_plafond_mensualite_d832_10_3_24 = True
                            elif match_arg_198.code == AmelioreParOccupant_Code.Non:
                                _ = match_arg_198.value
                                temp_calcul_plafond_mensualite_d832_10_3_24 = False
                        if ((date_courante_8 >=
                            date_of_numbers(2019,10,1)) and
                            ((date_courante_8 >=
                            date_of_numbers(2023,1,1)) and
                            ((date_signature_pret_1 >=
                            date_of_numbers(1992,6,30)) and
                            ((date_signature_pret_1 <=
                            date_of_numbers(1994,11,27)) and
                            (temp_calcul_plafond_mensualite_d832_10_3_24 and
                            temp_calcul_plafond_mensualite_d832_10_3_23))))):
                            if (nombre_personnes_a_charge_4 ==
                                integer_of_string("0")):
                                match_arg_199 = situation_familiale_calcul_apl_4
                                if match_arg_199.code == SituationFamilialeCalculAPL_Code.PersonneSeule:
                                    _ = match_arg_199.value
                                    temp_calcul_plafond_mensualite_d832_10_3_25 = money_of_cents_string("86900")
                                elif match_arg_199.code == SituationFamilialeCalculAPL_Code.Couple:
                                    _ = match_arg_199.value
                                    temp_calcul_plafond_mensualite_d832_10_3_25 = money_of_cents_string("97100")
                            else:
                                temp_calcul_plafond_mensualite_d832_10_3_25 = (money_of_cents_string("107300") +
                                    (money_of_cents_string("10200") *
                                    decimal_of_integer((nombre_personnes_a_charge_4 -
                                    integer_of_string("1")))))
                            return (temp_calcul_plafond_mensualite_d832_10_3_25 *
                                taux_francs_vers_euros)
                        else:
                            raise EmptyError
                    except EmptyError:
                        def temp_calcul_plafond_mensualite_d832_10_3_26(_:Unit):
                            raise EmptyError
                        def temp_calcul_plafond_mensualite_d832_10_3_27(_:Unit):
                            return False
                        def temp_calcul_plafond_mensualite_d832_10_3_28(_:Unit):
                            match_arg_200 = type_pret
                            if match_arg_200.code == TypePret_Code.D331_32:
                                _ = match_arg_200.value
                                temp_calcul_plafond_mensualite_d832_10_3_29 = False
                            elif match_arg_200.code == TypePret_Code.D331_63_64:
                                _ = match_arg_200.value
                                temp_calcul_plafond_mensualite_d832_10_3_29 = True
                            elif match_arg_200.code == TypePret_Code.D331_59_8:
                                _ = match_arg_200.value
                                temp_calcul_plafond_mensualite_d832_10_3_29 = False
                            elif match_arg_200.code == TypePret_Code.D331_76_1:
                                _ = match_arg_200.value
                                temp_calcul_plafond_mensualite_d832_10_3_29 = False
                            elif match_arg_200.code == TypePret_Code.Autre:
                                _ = match_arg_200.value
                                temp_calcul_plafond_mensualite_d832_10_3_29 = False
                            match_arg_201 = anciennete_logement
                            if match_arg_201.code == NeufOuAncien_Code.Neuf:
                                _ = match_arg_201.value
                                temp_calcul_plafond_mensualite_d832_10_3_30 = False
                            elif match_arg_201.code == NeufOuAncien_Code.Ancien:
                                _ = match_arg_201.value
                                temp_calcul_plafond_mensualite_d832_10_3_30 = True
                            if ((date_courante_8 >=
                                date_of_numbers(2019,10,1)) and
                                ((date_courante_8 >=
                                date_of_numbers(2020,10,1)) and
                                ((date_signature_pret_1 >=
                                date_of_numbers(2019,9,30)) and
                                (temp_calcul_plafond_mensualite_d832_10_3_30 and
                                temp_calcul_plafond_mensualite_d832_10_3_29)))):
                                match_arg_202 = zone_2
                                if match_arg_202.code == ZoneDHabitation_Code.Zone1:
                                    _ = match_arg_202.value
                                    if (nombre_personnes_a_charge_4 ==
                                        integer_of_string("0")):
                                        match_arg_203 = situation_familiale_calcul_apl_4
                                        if match_arg_203.code == SituationFamilialeCalculAPL_Code.PersonneSeule:
                                            _ = match_arg_203.value
                                            return money_of_cents_string("29986")
                                        elif match_arg_203.code == SituationFamilialeCalculAPL_Code.Couple:
                                            _ = match_arg_203.value
                                            return money_of_cents_string("36187")
                                    else:
                                        return (money_of_cents_string("42386") +
                                            (money_of_cents_string("6201") *
                                            decimal_of_integer((nombre_personnes_a_charge_4 -
                                            integer_of_string("1")))))
                                elif match_arg_202.code == ZoneDHabitation_Code.Zone2:
                                    _ = match_arg_202.value
                                    if (nombre_personnes_a_charge_4 ==
                                        integer_of_string("0")):
                                        match_arg_204 = situation_familiale_calcul_apl_4
                                        if match_arg_204.code == SituationFamilialeCalculAPL_Code.PersonneSeule:
                                            _ = match_arg_204.value
                                            return money_of_cents_string("26730")
                                        elif match_arg_204.code == SituationFamilialeCalculAPL_Code.Couple:
                                            _ = match_arg_204.value
                                            return money_of_cents_string("32193")
                                    else:
                                        return (money_of_cents_string("37656") +
                                            (money_of_cents_string("5463") *
                                            decimal_of_integer((nombre_personnes_a_charge_4 -
                                            integer_of_string("1")))))
                                elif match_arg_202.code == ZoneDHabitation_Code.Zone3:
                                    _ = match_arg_202.value
                                    if (nombre_personnes_a_charge_4 ==
                                        integer_of_string("0")):
                                        match_arg_205 = situation_familiale_calcul_apl_4
                                        if match_arg_205.code == SituationFamilialeCalculAPL_Code.PersonneSeule:
                                            _ = match_arg_205.value
                                            return money_of_cents_string("24964")
                                        elif match_arg_205.code == SituationFamilialeCalculAPL_Code.Couple:
                                            _ = match_arg_205.value
                                            return money_of_cents_string("29948")
                                    else:
                                        return (money_of_cents_string("34934") +
                                            (money_of_cents_string("4986") *
                                            decimal_of_integer((nombre_personnes_a_charge_4 -
                                            integer_of_string("1")))))
                            else:
                                raise EmptyError
                        def temp_calcul_plafond_mensualite_d832_10_3_31(_:Unit):
                            match_arg_206 = type_pret
                            if match_arg_206.code == TypePret_Code.D331_32:
                                _ = match_arg_206.value
                                temp_calcul_plafond_mensualite_d832_10_3_32 = False
                            elif match_arg_206.code == TypePret_Code.D331_63_64:
                                _ = match_arg_206.value
                                temp_calcul_plafond_mensualite_d832_10_3_32 = True
                            elif match_arg_206.code == TypePret_Code.D331_59_8:
                                _ = match_arg_206.value
                                temp_calcul_plafond_mensualite_d832_10_3_32 = False
                            elif match_arg_206.code == TypePret_Code.D331_76_1:
                                _ = match_arg_206.value
                                temp_calcul_plafond_mensualite_d832_10_3_32 = False
                            elif match_arg_206.code == TypePret_Code.Autre:
                                _ = match_arg_206.value
                                temp_calcul_plafond_mensualite_d832_10_3_32 = False
                            match_arg_207 = anciennete_logement
                            if match_arg_207.code == NeufOuAncien_Code.Neuf:
                                _ = match_arg_207.value
                                temp_calcul_plafond_mensualite_d832_10_3_33 = True
                            elif match_arg_207.code == NeufOuAncien_Code.Ancien:
                                _ = match_arg_207.value
                                temp_calcul_plafond_mensualite_d832_10_3_33 = False
                            if ((date_courante_8 >=
                                date_of_numbers(2019,10,1)) and
                                ((date_courante_8 >=
                                date_of_numbers(2020,10,1)) and
                                ((date_signature_pret_1 >=
                                date_of_numbers(2019,9,30)) and
                                (temp_calcul_plafond_mensualite_d832_10_3_33 and
                                temp_calcul_plafond_mensualite_d832_10_3_32)))):
                                match_arg_208 = zone_2
                                if match_arg_208.code == ZoneDHabitation_Code.Zone1:
                                    _ = match_arg_208.value
                                    if (nombre_personnes_a_charge_4 ==
                                        integer_of_string("0")):
                                        match_arg_209 = situation_familiale_calcul_apl_4
                                        if match_arg_209.code == SituationFamilialeCalculAPL_Code.PersonneSeule:
                                            _ = match_arg_209.value
                                            return money_of_cents_string("37252")
                                        elif match_arg_209.code == SituationFamilialeCalculAPL_Code.Couple:
                                            _ = match_arg_209.value
                                            return money_of_cents_string("44941")
                                    else:
                                        return (money_of_cents_string("52629") +
                                            (money_of_cents_string("7687") *
                                            decimal_of_integer((nombre_personnes_a_charge_4 -
                                            integer_of_string("1")))))
                                elif match_arg_208.code == ZoneDHabitation_Code.Zone2:
                                    _ = match_arg_208.value
                                    if (nombre_personnes_a_charge_4 ==
                                        integer_of_string("0")):
                                        match_arg_210 = situation_familiale_calcul_apl_4
                                        if match_arg_210.code == SituationFamilialeCalculAPL_Code.PersonneSeule:
                                            _ = match_arg_210.value
                                            return money_of_cents_string("33244")
                                        elif match_arg_210.code == SituationFamilialeCalculAPL_Code.Couple:
                                            _ = match_arg_210.value
                                            return money_of_cents_string("40013")
                                    else:
                                        return (money_of_cents_string("46783") +
                                            (money_of_cents_string("6768") *
                                            decimal_of_integer((nombre_personnes_a_charge_4 -
                                            integer_of_string("1")))))
                                elif match_arg_208.code == ZoneDHabitation_Code.Zone3:
                                    _ = match_arg_208.value
                                    if (nombre_personnes_a_charge_4 ==
                                        integer_of_string("0")):
                                        match_arg_211 = situation_familiale_calcul_apl_4
                                        if match_arg_211.code == SituationFamilialeCalculAPL_Code.PersonneSeule:
                                            _ = match_arg_211.value
                                            return money_of_cents_string("31036")
                                        elif match_arg_211.code == SituationFamilialeCalculAPL_Code.Couple:
                                            _ = match_arg_211.value
                                            return money_of_cents_string("37215")
                                    else:
                                        return (money_of_cents_string("43394") +
                                            (money_of_cents_string("6179") *
                                            decimal_of_integer((nombre_personnes_a_charge_4 -
                                            integer_of_string("1")))))
                            else:
                                raise EmptyError
                        def temp_calcul_plafond_mensualite_d832_10_3_34(_:Unit):
                            match_arg_212 = type_pret
                            if match_arg_212.code == TypePret_Code.D331_32:
                                _ = match_arg_212.value
                                temp_calcul_plafond_mensualite_d832_10_3_35 = False
                            elif match_arg_212.code == TypePret_Code.D331_63_64:
                                _ = match_arg_212.value
                                temp_calcul_plafond_mensualite_d832_10_3_35 = True
                            elif match_arg_212.code == TypePret_Code.D331_59_8:
                                _ = match_arg_212.value
                                temp_calcul_plafond_mensualite_d832_10_3_35 = False
                            elif match_arg_212.code == TypePret_Code.D331_76_1:
                                _ = match_arg_212.value
                                temp_calcul_plafond_mensualite_d832_10_3_35 = False
                            elif match_arg_212.code == TypePret_Code.Autre:
                                _ = match_arg_212.value
                                temp_calcul_plafond_mensualite_d832_10_3_35 = False
                            match_arg_213 = anciennete_logement
                            if match_arg_213.code == NeufOuAncien_Code.Neuf:
                                _ = match_arg_213.value
                                temp_calcul_plafond_mensualite_d832_10_3_36 = False
                            elif match_arg_213.code == NeufOuAncien_Code.Ancien:
                                _ = match_arg_213.value
                                temp_calcul_plafond_mensualite_d832_10_3_36 = True
                            if ((date_courante_8 >=
                                date_of_numbers(2019,10,1)) and
                                ((date_courante_8 >=
                                date_of_numbers(2020,10,1)) and
                                ((date_signature_pret_1 >=
                                date_of_numbers(2017,9,30)) and
                                ((date_signature_pret_1 <
                                date_of_numbers(2019,9,30)) and
                                (temp_calcul_plafond_mensualite_d832_10_3_36 and
                                temp_calcul_plafond_mensualite_d832_10_3_35))))):
                                match_arg_214 = zone_2
                                if match_arg_214.code == ZoneDHabitation_Code.Zone1:
                                    _ = match_arg_214.value
                                    if (nombre_personnes_a_charge_4 ==
                                        integer_of_string("0")):
                                        match_arg_215 = situation_familiale_calcul_apl_4
                                        if match_arg_215.code == SituationFamilialeCalculAPL_Code.PersonneSeule:
                                            _ = match_arg_215.value
                                            return money_of_cents_string("29897")
                                        elif match_arg_215.code == SituationFamilialeCalculAPL_Code.Couple:
                                            _ = match_arg_215.value
                                            return money_of_cents_string("36079")
                                    else:
                                        return (money_of_cents_string("42260") +
                                            (money_of_cents_string("6182") *
                                            decimal_of_integer((nombre_personnes_a_charge_4 -
                                            integer_of_string("1")))))
                                elif match_arg_214.code == ZoneDHabitation_Code.Zone2:
                                    _ = match_arg_214.value
                                    if (nombre_personnes_a_charge_4 ==
                                        integer_of_string("0")):
                                        match_arg_216 = situation_familiale_calcul_apl_4
                                        if match_arg_216.code == SituationFamilialeCalculAPL_Code.PersonneSeule:
                                            _ = match_arg_216.value
                                            return money_of_cents_string("26650")
                                        elif match_arg_216.code == SituationFamilialeCalculAPL_Code.Couple:
                                            _ = match_arg_216.value
                                            return money_of_cents_string("32097")
                                    else:
                                        return (money_of_cents_string("37543") +
                                            (money_of_cents_string("5447") *
                                            decimal_of_integer((nombre_personnes_a_charge_4 -
                                            integer_of_string("1")))))
                                elif match_arg_214.code == ZoneDHabitation_Code.Zone3:
                                    _ = match_arg_214.value
                                    if (nombre_personnes_a_charge_4 ==
                                        integer_of_string("0")):
                                        match_arg_217 = situation_familiale_calcul_apl_4
                                        if match_arg_217.code == SituationFamilialeCalculAPL_Code.PersonneSeule:
                                            _ = match_arg_217.value
                                            return money_of_cents_string("24889")
                                        elif match_arg_217.code == SituationFamilialeCalculAPL_Code.Couple:
                                            _ = match_arg_217.value
                                            return money_of_cents_string("29858")
                                    else:
                                        return (money_of_cents_string("34829") +
                                            (money_of_cents_string("4971") *
                                            decimal_of_integer((nombre_personnes_a_charge_4 -
                                            integer_of_string("1")))))
                            else:
                                raise EmptyError
                        def temp_calcul_plafond_mensualite_d832_10_3_37(_:Unit):
                            match_arg_218 = type_pret
                            if match_arg_218.code == TypePret_Code.D331_32:
                                _ = match_arg_218.value
                                temp_calcul_plafond_mensualite_d832_10_3_38 = False
                            elif match_arg_218.code == TypePret_Code.D331_63_64:
                                _ = match_arg_218.value
                                temp_calcul_plafond_mensualite_d832_10_3_38 = True
                            elif match_arg_218.code == TypePret_Code.D331_59_8:
                                _ = match_arg_218.value
                                temp_calcul_plafond_mensualite_d832_10_3_38 = False
                            elif match_arg_218.code == TypePret_Code.D331_76_1:
                                _ = match_arg_218.value
                                temp_calcul_plafond_mensualite_d832_10_3_38 = False
                            elif match_arg_218.code == TypePret_Code.Autre:
                                _ = match_arg_218.value
                                temp_calcul_plafond_mensualite_d832_10_3_38 = False
                            match_arg_219 = anciennete_logement
                            if match_arg_219.code == NeufOuAncien_Code.Neuf:
                                _ = match_arg_219.value
                                temp_calcul_plafond_mensualite_d832_10_3_39 = True
                            elif match_arg_219.code == NeufOuAncien_Code.Ancien:
                                _ = match_arg_219.value
                                temp_calcul_plafond_mensualite_d832_10_3_39 = False
                            if ((date_courante_8 >=
                                date_of_numbers(2019,10,1)) and
                                ((date_courante_8 >=
                                date_of_numbers(2020,10,1)) and
                                ((date_signature_pret_1 >=
                                date_of_numbers(2017,9,30)) and
                                ((date_signature_pret_1 <
                                date_of_numbers(2019,9,30)) and
                                (temp_calcul_plafond_mensualite_d832_10_3_39 and
                                temp_calcul_plafond_mensualite_d832_10_3_38))))):
                                match_arg_220 = zone_2
                                if match_arg_220.code == ZoneDHabitation_Code.Zone1:
                                    _ = match_arg_220.value
                                    if (nombre_personnes_a_charge_4 ==
                                        integer_of_string("0")):
                                        match_arg_221 = situation_familiale_calcul_apl_4
                                        if match_arg_221.code == SituationFamilialeCalculAPL_Code.PersonneSeule:
                                            _ = match_arg_221.value
                                            return money_of_cents_string("37140")
                                        elif match_arg_221.code == SituationFamilialeCalculAPL_Code.Couple:
                                            _ = match_arg_221.value
                                            return money_of_cents_string("44807")
                                    else:
                                        return (money_of_cents_string("52472") +
                                            (money_of_cents_string("7664") *
                                            decimal_of_integer((nombre_personnes_a_charge_4 -
                                            integer_of_string("1")))))
                                elif match_arg_220.code == ZoneDHabitation_Code.Zone2:
                                    _ = match_arg_220.value
                                    if (nombre_personnes_a_charge_4 ==
                                        integer_of_string("0")):
                                        match_arg_222 = situation_familiale_calcul_apl_4
                                        if match_arg_222.code == SituationFamilialeCalculAPL_Code.PersonneSeule:
                                            _ = match_arg_222.value
                                            return money_of_cents_string("33145")
                                        elif match_arg_222.code == SituationFamilialeCalculAPL_Code.Couple:
                                            _ = match_arg_222.value
                                            return money_of_cents_string("39893")
                                    else:
                                        return (money_of_cents_string("46643") +
                                            (money_of_cents_string("6748") *
                                            decimal_of_integer((nombre_personnes_a_charge_4 -
                                            integer_of_string("1")))))
                                elif match_arg_220.code == ZoneDHabitation_Code.Zone3:
                                    _ = match_arg_220.value
                                    if (nombre_personnes_a_charge_4 ==
                                        integer_of_string("0")):
                                        match_arg_223 = situation_familiale_calcul_apl_4
                                        if match_arg_223.code == SituationFamilialeCalculAPL_Code.PersonneSeule:
                                            _ = match_arg_223.value
                                            return money_of_cents_string("30943")
                                        elif match_arg_223.code == SituationFamilialeCalculAPL_Code.Couple:
                                            _ = match_arg_223.value
                                            return money_of_cents_string("37103")
                                    else:
                                        return (money_of_cents_string("43264") +
                                            (money_of_cents_string("6161") *
                                            decimal_of_integer((nombre_personnes_a_charge_4 -
                                            integer_of_string("1")))))
                            else:
                                raise EmptyError
                        def temp_calcul_plafond_mensualite_d832_10_3_40(_:Unit):
                            match_arg_224 = type_pret
                            if match_arg_224.code == TypePret_Code.D331_32:
                                _ = match_arg_224.value
                                temp_calcul_plafond_mensualite_d832_10_3_41 = False
                            elif match_arg_224.code == TypePret_Code.D331_63_64:
                                _ = match_arg_224.value
                                temp_calcul_plafond_mensualite_d832_10_3_41 = True
                            elif match_arg_224.code == TypePret_Code.D331_59_8:
                                _ = match_arg_224.value
                                temp_calcul_plafond_mensualite_d832_10_3_41 = False
                            elif match_arg_224.code == TypePret_Code.D331_76_1:
                                _ = match_arg_224.value
                                temp_calcul_plafond_mensualite_d832_10_3_41 = False
                            elif match_arg_224.code == TypePret_Code.Autre:
                                _ = match_arg_224.value
                                temp_calcul_plafond_mensualite_d832_10_3_41 = False
                            match_arg_225 = anciennete_logement
                            if match_arg_225.code == NeufOuAncien_Code.Neuf:
                                _ = match_arg_225.value
                                temp_calcul_plafond_mensualite_d832_10_3_42 = False
                            elif match_arg_225.code == NeufOuAncien_Code.Ancien:
                                _ = match_arg_225.value
                                temp_calcul_plafond_mensualite_d832_10_3_42 = True
                            if ((date_courante_8 >=
                                date_of_numbers(2019,10,1)) and
                                ((date_courante_8 >=
                                date_of_numbers(2020,10,1)) and
                                ((date_signature_pret_1 >=
                                date_of_numbers(2015,9,30)) and
                                ((date_signature_pret_1 <
                                date_of_numbers(2017,9,30)) and
                                (temp_calcul_plafond_mensualite_d832_10_3_42 and
                                temp_calcul_plafond_mensualite_d832_10_3_41))))):
                                match_arg_226 = zone_2
                                if match_arg_226.code == ZoneDHabitation_Code.Zone1:
                                    _ = match_arg_226.value
                                    if (nombre_personnes_a_charge_4 ==
                                        integer_of_string("0")):
                                        match_arg_227 = situation_familiale_calcul_apl_4
                                        if match_arg_227.code == SituationFamilialeCalculAPL_Code.PersonneSeule:
                                            _ = match_arg_227.value
                                            return money_of_cents_string("29674")
                                        elif match_arg_227.code == SituationFamilialeCalculAPL_Code.Couple:
                                            _ = match_arg_227.value
                                            return money_of_cents_string("35810")
                                    else:
                                        return (money_of_cents_string("41945") +
                                            (money_of_cents_string("6136") *
                                            decimal_of_integer((nombre_personnes_a_charge_4 -
                                            integer_of_string("1")))))
                                elif match_arg_226.code == ZoneDHabitation_Code.Zone2:
                                    _ = match_arg_226.value
                                    if (nombre_personnes_a_charge_4 ==
                                        integer_of_string("0")):
                                        match_arg_228 = situation_familiale_calcul_apl_4
                                        if match_arg_228.code == SituationFamilialeCalculAPL_Code.PersonneSeule:
                                            _ = match_arg_228.value
                                            return money_of_cents_string("26452")
                                        elif match_arg_228.code == SituationFamilialeCalculAPL_Code.Couple:
                                            _ = match_arg_228.value
                                            return money_of_cents_string("31858")
                                    else:
                                        return (money_of_cents_string("37264") +
                                            (money_of_cents_string("5406") *
                                            decimal_of_integer((nombre_personnes_a_charge_4 -
                                            integer_of_string("1")))))
                                elif match_arg_226.code == ZoneDHabitation_Code.Zone3:
                                    _ = match_arg_226.value
                                    if (nombre_personnes_a_charge_4 ==
                                        integer_of_string("0")):
                                        match_arg_229 = situation_familiale_calcul_apl_4
                                        if match_arg_229.code == SituationFamilialeCalculAPL_Code.PersonneSeule:
                                            _ = match_arg_229.value
                                            return money_of_cents_string("24704")
                                        elif match_arg_229.code == SituationFamilialeCalculAPL_Code.Couple:
                                            _ = match_arg_229.value
                                            return money_of_cents_string("29636")
                                    else:
                                        return (money_of_cents_string("34570") +
                                            (money_of_cents_string("4934") *
                                            decimal_of_integer((nombre_personnes_a_charge_4 -
                                            integer_of_string("1")))))
                            else:
                                raise EmptyError
                        def temp_calcul_plafond_mensualite_d832_10_3_43(_:Unit):
                            match_arg_230 = type_pret
                            if match_arg_230.code == TypePret_Code.D331_32:
                                _ = match_arg_230.value
                                temp_calcul_plafond_mensualite_d832_10_3_44 = False
                            elif match_arg_230.code == TypePret_Code.D331_63_64:
                                _ = match_arg_230.value
                                temp_calcul_plafond_mensualite_d832_10_3_44 = True
                            elif match_arg_230.code == TypePret_Code.D331_59_8:
                                _ = match_arg_230.value
                                temp_calcul_plafond_mensualite_d832_10_3_44 = False
                            elif match_arg_230.code == TypePret_Code.D331_76_1:
                                _ = match_arg_230.value
                                temp_calcul_plafond_mensualite_d832_10_3_44 = False
                            elif match_arg_230.code == TypePret_Code.Autre:
                                _ = match_arg_230.value
                                temp_calcul_plafond_mensualite_d832_10_3_44 = False
                            match_arg_231 = anciennete_logement
                            if match_arg_231.code == NeufOuAncien_Code.Neuf:
                                _ = match_arg_231.value
                                temp_calcul_plafond_mensualite_d832_10_3_45 = True
                            elif match_arg_231.code == NeufOuAncien_Code.Ancien:
                                _ = match_arg_231.value
                                temp_calcul_plafond_mensualite_d832_10_3_45 = False
                            if ((date_courante_8 >=
                                date_of_numbers(2019,10,1)) and
                                ((date_courante_8 >=
                                date_of_numbers(2020,10,1)) and
                                ((date_signature_pret_1 >=
                                date_of_numbers(2015,9,30)) and
                                ((date_signature_pret_1 <
                                date_of_numbers(2017,9,30)) and
                                (temp_calcul_plafond_mensualite_d832_10_3_45 and
                                temp_calcul_plafond_mensualite_d832_10_3_44))))):
                                match_arg_232 = zone_2
                                if match_arg_232.code == ZoneDHabitation_Code.Zone1:
                                    _ = match_arg_232.value
                                    if (nombre_personnes_a_charge_4 ==
                                        integer_of_string("0")):
                                        match_arg_233 = situation_familiale_calcul_apl_4
                                        if match_arg_233.code == SituationFamilialeCalculAPL_Code.PersonneSeule:
                                            _ = match_arg_233.value
                                            return money_of_cents_string("36864")
                                        elif match_arg_233.code == SituationFamilialeCalculAPL_Code.Couple:
                                            _ = match_arg_233.value
                                            return money_of_cents_string("44473")
                                    else:
                                        return (money_of_cents_string("52081") +
                                            (money_of_cents_string("7607") *
                                            decimal_of_integer((nombre_personnes_a_charge_4 -
                                            integer_of_string("1")))))
                                elif match_arg_232.code == ZoneDHabitation_Code.Zone2:
                                    _ = match_arg_232.value
                                    if (nombre_personnes_a_charge_4 ==
                                        integer_of_string("0")):
                                        match_arg_234 = situation_familiale_calcul_apl_4
                                        if match_arg_234.code == SituationFamilialeCalculAPL_Code.PersonneSeule:
                                            _ = match_arg_234.value
                                            return money_of_cents_string("32898")
                                        elif match_arg_234.code == SituationFamilialeCalculAPL_Code.Couple:
                                            _ = match_arg_234.value
                                            return money_of_cents_string("39596")
                                    else:
                                        return (money_of_cents_string("46296") +
                                            (money_of_cents_string("6698") *
                                            decimal_of_integer((nombre_personnes_a_charge_4 -
                                            integer_of_string("1")))))
                                elif match_arg_232.code == ZoneDHabitation_Code.Zone3:
                                    _ = match_arg_232.value
                                    if (nombre_personnes_a_charge_4 ==
                                        integer_of_string("0")):
                                        match_arg_235 = situation_familiale_calcul_apl_4
                                        if match_arg_235.code == SituationFamilialeCalculAPL_Code.PersonneSeule:
                                            _ = match_arg_235.value
                                            return money_of_cents_string("30713")
                                        elif match_arg_235.code == SituationFamilialeCalculAPL_Code.Couple:
                                            _ = match_arg_235.value
                                            return money_of_cents_string("36827")
                                    else:
                                        return (money_of_cents_string("42942") +
                                            (money_of_cents_string("6115") *
                                            decimal_of_integer((nombre_personnes_a_charge_4 -
                                            integer_of_string("1")))))
                            else:
                                raise EmptyError
                        def temp_calcul_plafond_mensualite_d832_10_3_46(_:Unit):
                            match_arg_236 = type_pret
                            if match_arg_236.code == TypePret_Code.D331_32:
                                _ = match_arg_236.value
                                temp_calcul_plafond_mensualite_d832_10_3_47 = False
                            elif match_arg_236.code == TypePret_Code.D331_63_64:
                                _ = match_arg_236.value
                                temp_calcul_plafond_mensualite_d832_10_3_47 = True
                            elif match_arg_236.code == TypePret_Code.D331_59_8:
                                _ = match_arg_236.value
                                temp_calcul_plafond_mensualite_d832_10_3_47 = False
                            elif match_arg_236.code == TypePret_Code.D331_76_1:
                                _ = match_arg_236.value
                                temp_calcul_plafond_mensualite_d832_10_3_47 = False
                            elif match_arg_236.code == TypePret_Code.Autre:
                                _ = match_arg_236.value
                                temp_calcul_plafond_mensualite_d832_10_3_47 = False
                            match_arg_237 = anciennete_logement
                            if match_arg_237.code == NeufOuAncien_Code.Neuf:
                                _ = match_arg_237.value
                                temp_calcul_plafond_mensualite_d832_10_3_48 = False
                            elif match_arg_237.code == NeufOuAncien_Code.Ancien:
                                _ = match_arg_237.value
                                temp_calcul_plafond_mensualite_d832_10_3_48 = True
                            if ((date_courante_8 >=
                                date_of_numbers(2019,10,1)) and
                                ((date_courante_8 >=
                                date_of_numbers(2020,10,1)) and
                                ((date_signature_pret_1 >=
                                date_of_numbers(2014,9,30)) and
                                ((date_signature_pret_1 <
                                date_of_numbers(2015,9,30)) and
                                (temp_calcul_plafond_mensualite_d832_10_3_48 and
                                temp_calcul_plafond_mensualite_d832_10_3_47))))):
                                match_arg_238 = zone_2
                                if match_arg_238.code == ZoneDHabitation_Code.Zone1:
                                    _ = match_arg_238.value
                                    if (nombre_personnes_a_charge_4 ==
                                        integer_of_string("0")):
                                        match_arg_239 = situation_familiale_calcul_apl_4
                                        if match_arg_239.code == SituationFamilialeCalculAPL_Code.PersonneSeule:
                                            _ = match_arg_239.value
                                            return money_of_cents_string("29650")
                                        elif match_arg_239.code == SituationFamilialeCalculAPL_Code.Couple:
                                            _ = match_arg_239.value
                                            return money_of_cents_string("35781")
                                    else:
                                        return (money_of_cents_string("41911") +
                                            (money_of_cents_string("6131") *
                                            decimal_of_integer((nombre_personnes_a_charge_4 -
                                            integer_of_string("1")))))
                                elif match_arg_238.code == ZoneDHabitation_Code.Zone2:
                                    _ = match_arg_238.value
                                    if (nombre_personnes_a_charge_4 ==
                                        integer_of_string("0")):
                                        match_arg_240 = situation_familiale_calcul_apl_4
                                        if match_arg_240.code == SituationFamilialeCalculAPL_Code.PersonneSeule:
                                            _ = match_arg_240.value
                                            return money_of_cents_string("26431")
                                        elif match_arg_240.code == SituationFamilialeCalculAPL_Code.Couple:
                                            _ = match_arg_240.value
                                            return money_of_cents_string("31833")
                                    else:
                                        return (money_of_cents_string("37234") +
                                            (money_of_cents_string("5402") *
                                            decimal_of_integer((nombre_personnes_a_charge_4 -
                                            integer_of_string("1")))))
                                elif match_arg_238.code == ZoneDHabitation_Code.Zone3:
                                    _ = match_arg_238.value
                                    if (nombre_personnes_a_charge_4 ==
                                        integer_of_string("0")):
                                        match_arg_241 = situation_familiale_calcul_apl_4
                                        if match_arg_241.code == SituationFamilialeCalculAPL_Code.PersonneSeule:
                                            _ = match_arg_241.value
                                            return money_of_cents_string("24684")
                                        elif match_arg_241.code == SituationFamilialeCalculAPL_Code.Couple:
                                            _ = match_arg_241.value
                                            return money_of_cents_string("29612")
                                    else:
                                        return (money_of_cents_string("34542") +
                                            (money_of_cents_string("4930") *
                                            decimal_of_integer((nombre_personnes_a_charge_4 -
                                            integer_of_string("1")))))
                            else:
                                raise EmptyError
                        def temp_calcul_plafond_mensualite_d832_10_3_49(_:Unit):
                            match_arg_242 = type_pret
                            if match_arg_242.code == TypePret_Code.D331_32:
                                _ = match_arg_242.value
                                temp_calcul_plafond_mensualite_d832_10_3_50 = False
                            elif match_arg_242.code == TypePret_Code.D331_63_64:
                                _ = match_arg_242.value
                                temp_calcul_plafond_mensualite_d832_10_3_50 = True
                            elif match_arg_242.code == TypePret_Code.D331_59_8:
                                _ = match_arg_242.value
                                temp_calcul_plafond_mensualite_d832_10_3_50 = False
                            elif match_arg_242.code == TypePret_Code.D331_76_1:
                                _ = match_arg_242.value
                                temp_calcul_plafond_mensualite_d832_10_3_50 = False
                            elif match_arg_242.code == TypePret_Code.Autre:
                                _ = match_arg_242.value
                                temp_calcul_plafond_mensualite_d832_10_3_50 = False
                            match_arg_243 = anciennete_logement
                            if match_arg_243.code == NeufOuAncien_Code.Neuf:
                                _ = match_arg_243.value
                                temp_calcul_plafond_mensualite_d832_10_3_51 = True
                            elif match_arg_243.code == NeufOuAncien_Code.Ancien:
                                _ = match_arg_243.value
                                temp_calcul_plafond_mensualite_d832_10_3_51 = False
                            if ((date_courante_8 >=
                                date_of_numbers(2019,10,1)) and
                                ((date_courante_8 >=
                                date_of_numbers(2020,10,1)) and
                                ((date_signature_pret_1 >=
                                date_of_numbers(2014,9,30)) and
                                ((date_signature_pret_1 <
                                date_of_numbers(2015,9,30)) and
                                (temp_calcul_plafond_mensualite_d832_10_3_51 and
                                temp_calcul_plafond_mensualite_d832_10_3_50))))):
                                match_arg_244 = zone_2
                                if match_arg_244.code == ZoneDHabitation_Code.Zone1:
                                    _ = match_arg_244.value
                                    if (nombre_personnes_a_charge_4 ==
                                        integer_of_string("0")):
                                        match_arg_245 = situation_familiale_calcul_apl_4
                                        if match_arg_245.code == SituationFamilialeCalculAPL_Code.PersonneSeule:
                                            _ = match_arg_245.value
                                            return money_of_cents_string("36835")
                                        elif match_arg_245.code == SituationFamilialeCalculAPL_Code.Couple:
                                            _ = match_arg_245.value
                                            return money_of_cents_string("44437")
                                    else:
                                        return (money_of_cents_string("52039") +
                                            (money_of_cents_string("7601") *
                                            decimal_of_integer((nombre_personnes_a_charge_4 -
                                            integer_of_string("1")))))
                                elif match_arg_244.code == ZoneDHabitation_Code.Zone2:
                                    _ = match_arg_244.value
                                    if (nombre_personnes_a_charge_4 ==
                                        integer_of_string("0")):
                                        match_arg_246 = situation_familiale_calcul_apl_4
                                        if match_arg_246.code == SituationFamilialeCalculAPL_Code.PersonneSeule:
                                            _ = match_arg_246.value
                                            return money_of_cents_string("32872")
                                        elif match_arg_246.code == SituationFamilialeCalculAPL_Code.Couple:
                                            _ = match_arg_246.value
                                            return money_of_cents_string("39564")
                                    else:
                                        return (money_of_cents_string("46259") +
                                            (money_of_cents_string("6693") *
                                            decimal_of_integer((nombre_personnes_a_charge_4 -
                                            integer_of_string("1")))))
                                elif match_arg_244.code == ZoneDHabitation_Code.Zone3:
                                    _ = match_arg_244.value
                                    if (nombre_personnes_a_charge_4 ==
                                        integer_of_string("0")):
                                        match_arg_247 = situation_familiale_calcul_apl_4
                                        if match_arg_247.code == SituationFamilialeCalculAPL_Code.PersonneSeule:
                                            _ = match_arg_247.value
                                            return money_of_cents_string("30688")
                                        elif match_arg_247.code == SituationFamilialeCalculAPL_Code.Couple:
                                            _ = match_arg_247.value
                                            return money_of_cents_string("36798")
                                    else:
                                        return (money_of_cents_string("42908") +
                                            (money_of_cents_string("6110") *
                                            decimal_of_integer((nombre_personnes_a_charge_4 -
                                            integer_of_string("1")))))
                            else:
                                raise EmptyError
                        def temp_calcul_plafond_mensualite_d832_10_3_52(_:Unit):
                            match_arg_248 = type_pret
                            if match_arg_248.code == TypePret_Code.D331_32:
                                _ = match_arg_248.value
                                temp_calcul_plafond_mensualite_d832_10_3_53 = False
                            elif match_arg_248.code == TypePret_Code.D331_63_64:
                                _ = match_arg_248.value
                                temp_calcul_plafond_mensualite_d832_10_3_53 = True
                            elif match_arg_248.code == TypePret_Code.D331_59_8:
                                _ = match_arg_248.value
                                temp_calcul_plafond_mensualite_d832_10_3_53 = False
                            elif match_arg_248.code == TypePret_Code.D331_76_1:
                                _ = match_arg_248.value
                                temp_calcul_plafond_mensualite_d832_10_3_53 = False
                            elif match_arg_248.code == TypePret_Code.Autre:
                                _ = match_arg_248.value
                                temp_calcul_plafond_mensualite_d832_10_3_53 = False
                            match_arg_249 = anciennete_logement
                            if match_arg_249.code == NeufOuAncien_Code.Neuf:
                                _ = match_arg_249.value
                                temp_calcul_plafond_mensualite_d832_10_3_54 = False
                            elif match_arg_249.code == NeufOuAncien_Code.Ancien:
                                _ = match_arg_249.value
                                temp_calcul_plafond_mensualite_d832_10_3_54 = True
                            if ((date_courante_8 >=
                                date_of_numbers(2019,10,1)) and
                                ((date_courante_8 >=
                                date_of_numbers(2020,10,1)) and
                                ((date_signature_pret_1 >=
                                date_of_numbers(2012,12,31)) and
                                ((date_signature_pret_1 <
                                date_of_numbers(2014,9,30)) and
                                (temp_calcul_plafond_mensualite_d832_10_3_54 and
                                temp_calcul_plafond_mensualite_d832_10_3_53))))):
                                match_arg_250 = zone_2
                                if match_arg_250.code == ZoneDHabitation_Code.Zone1:
                                    _ = match_arg_250.value
                                    if (nombre_personnes_a_charge_4 ==
                                        integer_of_string("0")):
                                        match_arg_251 = situation_familiale_calcul_apl_4
                                        if match_arg_251.code == SituationFamilialeCalculAPL_Code.PersonneSeule:
                                            _ = match_arg_251.value
                                            return money_of_cents_string("29482")
                                        elif match_arg_251.code == SituationFamilialeCalculAPL_Code.Couple:
                                            _ = match_arg_251.value
                                            return money_of_cents_string("35578")
                                    else:
                                        return (money_of_cents_string("41673") +
                                            (money_of_cents_string("6096") *
                                            decimal_of_integer((nombre_personnes_a_charge_4 -
                                            integer_of_string("1")))))
                                elif match_arg_250.code == ZoneDHabitation_Code.Zone2:
                                    _ = match_arg_250.value
                                    if (nombre_personnes_a_charge_4 ==
                                        integer_of_string("0")):
                                        match_arg_252 = situation_familiale_calcul_apl_4
                                        if match_arg_252.code == SituationFamilialeCalculAPL_Code.PersonneSeule:
                                            _ = match_arg_252.value
                                            return money_of_cents_string("26281")
                                        elif match_arg_252.code == SituationFamilialeCalculAPL_Code.Couple:
                                            _ = match_arg_252.value
                                            return money_of_cents_string("31653")
                                    else:
                                        return (money_of_cents_string("37023") +
                                            (money_of_cents_string("5371") *
                                            decimal_of_integer((nombre_personnes_a_charge_4 -
                                            integer_of_string("1")))))
                                elif match_arg_250.code == ZoneDHabitation_Code.Zone3:
                                    _ = match_arg_250.value
                                    if (nombre_personnes_a_charge_4 ==
                                        integer_of_string("0")):
                                        match_arg_253 = situation_familiale_calcul_apl_4
                                        if match_arg_253.code == SituationFamilialeCalculAPL_Code.PersonneSeule:
                                            _ = match_arg_253.value
                                            return money_of_cents_string("24544")
                                        elif match_arg_253.code == SituationFamilialeCalculAPL_Code.Couple:
                                            _ = match_arg_253.value
                                            return money_of_cents_string("29444")
                                    else:
                                        return (money_of_cents_string("34346") +
                                            (money_of_cents_string("4902") *
                                            decimal_of_integer((nombre_personnes_a_charge_4 -
                                            integer_of_string("1")))))
                            else:
                                raise EmptyError
                        def temp_calcul_plafond_mensualite_d832_10_3_55(_:Unit):
                            match_arg_254 = type_pret
                            if match_arg_254.code == TypePret_Code.D331_32:
                                _ = match_arg_254.value
                                temp_calcul_plafond_mensualite_d832_10_3_56 = False
                            elif match_arg_254.code == TypePret_Code.D331_63_64:
                                _ = match_arg_254.value
                                temp_calcul_plafond_mensualite_d832_10_3_56 = True
                            elif match_arg_254.code == TypePret_Code.D331_59_8:
                                _ = match_arg_254.value
                                temp_calcul_plafond_mensualite_d832_10_3_56 = False
                            elif match_arg_254.code == TypePret_Code.D331_76_1:
                                _ = match_arg_254.value
                                temp_calcul_plafond_mensualite_d832_10_3_56 = False
                            elif match_arg_254.code == TypePret_Code.Autre:
                                _ = match_arg_254.value
                                temp_calcul_plafond_mensualite_d832_10_3_56 = False
                            match_arg_255 = anciennete_logement
                            if match_arg_255.code == NeufOuAncien_Code.Neuf:
                                _ = match_arg_255.value
                                temp_calcul_plafond_mensualite_d832_10_3_57 = True
                            elif match_arg_255.code == NeufOuAncien_Code.Ancien:
                                _ = match_arg_255.value
                                temp_calcul_plafond_mensualite_d832_10_3_57 = False
                            if ((date_courante_8 >=
                                date_of_numbers(2019,10,1)) and
                                ((date_courante_8 >=
                                date_of_numbers(2020,10,1)) and
                                ((date_signature_pret_1 >=
                                date_of_numbers(2012,12,31)) and
                                ((date_signature_pret_1 <
                                date_of_numbers(2014,9,30)) and
                                (temp_calcul_plafond_mensualite_d832_10_3_57 and
                                temp_calcul_plafond_mensualite_d832_10_3_56))))):
                                match_arg_256 = zone_2
                                if match_arg_256.code == ZoneDHabitation_Code.Zone1:
                                    _ = match_arg_256.value
                                    if (nombre_personnes_a_charge_4 ==
                                        integer_of_string("0")):
                                        match_arg_257 = situation_familiale_calcul_apl_4
                                        if match_arg_257.code == SituationFamilialeCalculAPL_Code.PersonneSeule:
                                            _ = match_arg_257.value
                                            return money_of_cents_string("36626")
                                        elif match_arg_257.code == SituationFamilialeCalculAPL_Code.Couple:
                                            _ = match_arg_257.value
                                            return money_of_cents_string("44185")
                                    else:
                                        return (money_of_cents_string("51744") +
                                            (money_of_cents_string("7558") *
                                            decimal_of_integer((nombre_personnes_a_charge_4 -
                                            integer_of_string("1")))))
                                elif match_arg_256.code == ZoneDHabitation_Code.Zone2:
                                    _ = match_arg_256.value
                                    if (nombre_personnes_a_charge_4 ==
                                        integer_of_string("0")):
                                        match_arg_258 = situation_familiale_calcul_apl_4
                                        if match_arg_258.code == SituationFamilialeCalculAPL_Code.PersonneSeule:
                                            _ = match_arg_258.value
                                            return money_of_cents_string("32686")
                                        elif match_arg_258.code == SituationFamilialeCalculAPL_Code.Couple:
                                            _ = match_arg_258.value
                                            return money_of_cents_string("39340")
                                    else:
                                        return (money_of_cents_string("45997") +
                                            (money_of_cents_string("6655") *
                                            decimal_of_integer((nombre_personnes_a_charge_4 -
                                            integer_of_string("1")))))
                                elif match_arg_256.code == ZoneDHabitation_Code.Zone3:
                                    _ = match_arg_256.value
                                    if (nombre_personnes_a_charge_4 ==
                                        integer_of_string("0")):
                                        match_arg_259 = situation_familiale_calcul_apl_4
                                        if match_arg_259.code == SituationFamilialeCalculAPL_Code.PersonneSeule:
                                            _ = match_arg_259.value
                                            return money_of_cents_string("30514")
                                        elif match_arg_259.code == SituationFamilialeCalculAPL_Code.Couple:
                                            _ = match_arg_259.value
                                            return money_of_cents_string("36589")
                                    else:
                                        return (money_of_cents_string("42665") +
                                            (money_of_cents_string("6075") *
                                            decimal_of_integer((nombre_personnes_a_charge_4 -
                                            integer_of_string("1")))))
                            else:
                                raise EmptyError
                        def temp_calcul_plafond_mensualite_d832_10_3_58(_:Unit):
                            match_arg_260 = type_pret
                            if match_arg_260.code == TypePret_Code.D331_32:
                                _ = match_arg_260.value
                                temp_calcul_plafond_mensualite_d832_10_3_59 = False
                            elif match_arg_260.code == TypePret_Code.D331_63_64:
                                _ = match_arg_260.value
                                temp_calcul_plafond_mensualite_d832_10_3_59 = True
                            elif match_arg_260.code == TypePret_Code.D331_59_8:
                                _ = match_arg_260.value
                                temp_calcul_plafond_mensualite_d832_10_3_59 = False
                            elif match_arg_260.code == TypePret_Code.D331_76_1:
                                _ = match_arg_260.value
                                temp_calcul_plafond_mensualite_d832_10_3_59 = False
                            elif match_arg_260.code == TypePret_Code.Autre:
                                _ = match_arg_260.value
                                temp_calcul_plafond_mensualite_d832_10_3_59 = False
                            match_arg_261 = anciennete_logement
                            if match_arg_261.code == NeufOuAncien_Code.Neuf:
                                _ = match_arg_261.value
                                temp_calcul_plafond_mensualite_d832_10_3_60 = False
                            elif match_arg_261.code == NeufOuAncien_Code.Ancien:
                                _ = match_arg_261.value
                                temp_calcul_plafond_mensualite_d832_10_3_60 = True
                            if ((date_courante_8 >=
                                date_of_numbers(2019,10,1)) and
                                ((date_courante_8 >=
                                date_of_numbers(2020,10,1)) and
                                ((date_signature_pret_1 >=
                                date_of_numbers(2011,12,31)) and
                                ((date_signature_pret_1 <
                                date_of_numbers(2012,12,31)) and
                                (temp_calcul_plafond_mensualite_d832_10_3_60 and
                                temp_calcul_plafond_mensualite_d832_10_3_59))))):
                                match_arg_262 = zone_2
                                if match_arg_262.code == ZoneDHabitation_Code.Zone1:
                                    _ = match_arg_262.value
                                    if (nombre_personnes_a_charge_4 ==
                                        integer_of_string("0")):
                                        match_arg_263 = situation_familiale_calcul_apl_4
                                        if match_arg_263.code == SituationFamilialeCalculAPL_Code.PersonneSeule:
                                            _ = match_arg_263.value
                                            return money_of_cents_string("28861")
                                        elif match_arg_263.code == SituationFamilialeCalculAPL_Code.Couple:
                                            _ = match_arg_263.value
                                            return money_of_cents_string("34829")
                                    else:
                                        return (money_of_cents_string("40796") +
                                            (money_of_cents_string("5968") *
                                            decimal_of_integer((nombre_personnes_a_charge_4 -
                                            integer_of_string("1")))))
                                elif match_arg_262.code == ZoneDHabitation_Code.Zone2:
                                    _ = match_arg_262.value
                                    if (nombre_personnes_a_charge_4 ==
                                        integer_of_string("0")):
                                        match_arg_264 = situation_familiale_calcul_apl_4
                                        if match_arg_264.code == SituationFamilialeCalculAPL_Code.PersonneSeule:
                                            _ = match_arg_264.value
                                            return money_of_cents_string("25728")
                                        elif match_arg_264.code == SituationFamilialeCalculAPL_Code.Couple:
                                            _ = match_arg_264.value
                                            return money_of_cents_string("30987")
                                    else:
                                        return (money_of_cents_string("36244") +
                                            (money_of_cents_string("5258") *
                                            decimal_of_integer((nombre_personnes_a_charge_4 -
                                            integer_of_string("1")))))
                                elif match_arg_262.code == ZoneDHabitation_Code.Zone3:
                                    _ = match_arg_262.value
                                    if (nombre_personnes_a_charge_4 ==
                                        integer_of_string("0")):
                                        match_arg_265 = situation_familiale_calcul_apl_4
                                        if match_arg_265.code == SituationFamilialeCalculAPL_Code.PersonneSeule:
                                            _ = match_arg_265.value
                                            return money_of_cents_string("24027")
                                        elif match_arg_265.code == SituationFamilialeCalculAPL_Code.Couple:
                                            _ = match_arg_265.value
                                            return money_of_cents_string("28824")
                                    else:
                                        return (money_of_cents_string("33623") +
                                            (money_of_cents_string("4799") *
                                            decimal_of_integer((nombre_personnes_a_charge_4 -
                                            integer_of_string("1")))))
                            else:
                                raise EmptyError
                        def temp_calcul_plafond_mensualite_d832_10_3_61(_:Unit):
                            match_arg_266 = type_pret
                            if match_arg_266.code == TypePret_Code.D331_32:
                                _ = match_arg_266.value
                                temp_calcul_plafond_mensualite_d832_10_3_62 = False
                            elif match_arg_266.code == TypePret_Code.D331_63_64:
                                _ = match_arg_266.value
                                temp_calcul_plafond_mensualite_d832_10_3_62 = True
                            elif match_arg_266.code == TypePret_Code.D331_59_8:
                                _ = match_arg_266.value
                                temp_calcul_plafond_mensualite_d832_10_3_62 = False
                            elif match_arg_266.code == TypePret_Code.D331_76_1:
                                _ = match_arg_266.value
                                temp_calcul_plafond_mensualite_d832_10_3_62 = False
                            elif match_arg_266.code == TypePret_Code.Autre:
                                _ = match_arg_266.value
                                temp_calcul_plafond_mensualite_d832_10_3_62 = False
                            match_arg_267 = anciennete_logement
                            if match_arg_267.code == NeufOuAncien_Code.Neuf:
                                _ = match_arg_267.value
                                temp_calcul_plafond_mensualite_d832_10_3_63 = True
                            elif match_arg_267.code == NeufOuAncien_Code.Ancien:
                                _ = match_arg_267.value
                                temp_calcul_plafond_mensualite_d832_10_3_63 = False
                            if ((date_courante_8 >=
                                date_of_numbers(2019,10,1)) and
                                ((date_courante_8 >=
                                date_of_numbers(2020,10,1)) and
                                ((date_signature_pret_1 >=
                                date_of_numbers(2011,12,31)) and
                                ((date_signature_pret_1 <
                                date_of_numbers(2012,12,31)) and
                                (temp_calcul_plafond_mensualite_d832_10_3_63 and
                                temp_calcul_plafond_mensualite_d832_10_3_62))))):
                                match_arg_268 = zone_2
                                if match_arg_268.code == ZoneDHabitation_Code.Zone1:
                                    _ = match_arg_268.value
                                    if (nombre_personnes_a_charge_4 ==
                                        integer_of_string("0")):
                                        match_arg_269 = situation_familiale_calcul_apl_4
                                        if match_arg_269.code == SituationFamilialeCalculAPL_Code.PersonneSeule:
                                            _ = match_arg_269.value
                                            return money_of_cents_string("35855")
                                        elif match_arg_269.code == SituationFamilialeCalculAPL_Code.Couple:
                                            _ = match_arg_269.value
                                            return money_of_cents_string("43255")
                                    else:
                                        return (money_of_cents_string("50655") +
                                            (money_of_cents_string("7399") *
                                            decimal_of_integer((nombre_personnes_a_charge_4 -
                                            integer_of_string("1")))))
                                elif match_arg_268.code == ZoneDHabitation_Code.Zone2:
                                    _ = match_arg_268.value
                                    if (nombre_personnes_a_charge_4 ==
                                        integer_of_string("0")):
                                        match_arg_270 = situation_familiale_calcul_apl_4
                                        if match_arg_270.code == SituationFamilialeCalculAPL_Code.PersonneSeule:
                                            _ = match_arg_270.value
                                            return money_of_cents_string("31998")
                                        elif match_arg_270.code == SituationFamilialeCalculAPL_Code.Couple:
                                            _ = match_arg_270.value
                                            return money_of_cents_string("38512")
                                    else:
                                        return (money_of_cents_string("45029") +
                                            (money_of_cents_string("6515") *
                                            decimal_of_integer((nombre_personnes_a_charge_4 -
                                            integer_of_string("1")))))
                                elif match_arg_268.code == ZoneDHabitation_Code.Zone3:
                                    _ = match_arg_268.value
                                    if (nombre_personnes_a_charge_4 ==
                                        integer_of_string("0")):
                                        match_arg_271 = situation_familiale_calcul_apl_4
                                        if match_arg_271.code == SituationFamilialeCalculAPL_Code.PersonneSeule:
                                            _ = match_arg_271.value
                                            return money_of_cents_string("29872")
                                        elif match_arg_271.code == SituationFamilialeCalculAPL_Code.Couple:
                                            _ = match_arg_271.value
                                            return money_of_cents_string("35819")
                                    else:
                                        return (money_of_cents_string("41767") +
                                            (money_of_cents_string("5947") *
                                            decimal_of_integer((nombre_personnes_a_charge_4 -
                                            integer_of_string("1")))))
                            else:
                                raise EmptyError
                        def temp_calcul_plafond_mensualite_d832_10_3_64(_:Unit):
                            match_arg_272 = type_pret
                            if match_arg_272.code == TypePret_Code.D331_32:
                                _ = match_arg_272.value
                                temp_calcul_plafond_mensualite_d832_10_3_65 = False
                            elif match_arg_272.code == TypePret_Code.D331_63_64:
                                _ = match_arg_272.value
                                temp_calcul_plafond_mensualite_d832_10_3_65 = True
                            elif match_arg_272.code == TypePret_Code.D331_59_8:
                                _ = match_arg_272.value
                                temp_calcul_plafond_mensualite_d832_10_3_65 = False
                            elif match_arg_272.code == TypePret_Code.D331_76_1:
                                _ = match_arg_272.value
                                temp_calcul_plafond_mensualite_d832_10_3_65 = False
                            elif match_arg_272.code == TypePret_Code.Autre:
                                _ = match_arg_272.value
                                temp_calcul_plafond_mensualite_d832_10_3_65 = False
                            match_arg_273 = anciennete_logement
                            if match_arg_273.code == NeufOuAncien_Code.Neuf:
                                _ = match_arg_273.value
                                temp_calcul_plafond_mensualite_d832_10_3_66 = False
                            elif match_arg_273.code == NeufOuAncien_Code.Ancien:
                                _ = match_arg_273.value
                                temp_calcul_plafond_mensualite_d832_10_3_66 = True
                            if ((date_courante_8 >=
                                date_of_numbers(2019,10,1)) and
                                ((date_courante_8 >=
                                date_of_numbers(2020,10,1)) and
                                ((date_signature_pret_1 >=
                                date_of_numbers(2010,12,31)) and
                                ((date_signature_pret_1 <
                                date_of_numbers(2011,12,31)) and
                                (temp_calcul_plafond_mensualite_d832_10_3_66 and
                                temp_calcul_plafond_mensualite_d832_10_3_65))))):
                                match_arg_274 = zone_2
                                if match_arg_274.code == ZoneDHabitation_Code.Zone1:
                                    _ = match_arg_274.value
                                    if (nombre_personnes_a_charge_4 ==
                                        integer_of_string("0")):
                                        match_arg_275 = situation_familiale_calcul_apl_4
                                        if match_arg_275.code == SituationFamilialeCalculAPL_Code.PersonneSeule:
                                            _ = match_arg_275.value
                                            return money_of_cents_string("28575")
                                        elif match_arg_275.code == SituationFamilialeCalculAPL_Code.Couple:
                                            _ = match_arg_275.value
                                            return money_of_cents_string("34484")
                                    else:
                                        return (money_of_cents_string("40392") +
                                            (money_of_cents_string("5909") *
                                            decimal_of_integer((nombre_personnes_a_charge_4 -
                                            integer_of_string("1")))))
                                elif match_arg_274.code == ZoneDHabitation_Code.Zone2:
                                    _ = match_arg_274.value
                                    if (nombre_personnes_a_charge_4 ==
                                        integer_of_string("0")):
                                        match_arg_276 = situation_familiale_calcul_apl_4
                                        if match_arg_276.code == SituationFamilialeCalculAPL_Code.PersonneSeule:
                                            _ = match_arg_276.value
                                            return money_of_cents_string("25473")
                                        elif match_arg_276.code == SituationFamilialeCalculAPL_Code.Couple:
                                            _ = match_arg_276.value
                                            return money_of_cents_string("30680")
                                    else:
                                        return (money_of_cents_string("35885") +
                                            (money_of_cents_string("5206") *
                                            decimal_of_integer((nombre_personnes_a_charge_4 -
                                            integer_of_string("1")))))
                                elif match_arg_274.code == ZoneDHabitation_Code.Zone3:
                                    _ = match_arg_274.value
                                    if (nombre_personnes_a_charge_4 ==
                                        integer_of_string("0")):
                                        match_arg_277 = situation_familiale_calcul_apl_4
                                        if match_arg_277.code == SituationFamilialeCalculAPL_Code.PersonneSeule:
                                            _ = match_arg_277.value
                                            return money_of_cents_string("23789")
                                        elif match_arg_277.code == SituationFamilialeCalculAPL_Code.Couple:
                                            _ = match_arg_277.value
                                            return money_of_cents_string("28539")
                                    else:
                                        return (money_of_cents_string("33290") +
                                            (money_of_cents_string("4751") *
                                            decimal_of_integer((nombre_personnes_a_charge_4 -
                                            integer_of_string("1")))))
                            else:
                                raise EmptyError
                        def temp_calcul_plafond_mensualite_d832_10_3_67(_:Unit):
                            match_arg_278 = type_pret
                            if match_arg_278.code == TypePret_Code.D331_32:
                                _ = match_arg_278.value
                                temp_calcul_plafond_mensualite_d832_10_3_68 = False
                            elif match_arg_278.code == TypePret_Code.D331_63_64:
                                _ = match_arg_278.value
                                temp_calcul_plafond_mensualite_d832_10_3_68 = True
                            elif match_arg_278.code == TypePret_Code.D331_59_8:
                                _ = match_arg_278.value
                                temp_calcul_plafond_mensualite_d832_10_3_68 = False
                            elif match_arg_278.code == TypePret_Code.D331_76_1:
                                _ = match_arg_278.value
                                temp_calcul_plafond_mensualite_d832_10_3_68 = False
                            elif match_arg_278.code == TypePret_Code.Autre:
                                _ = match_arg_278.value
                                temp_calcul_plafond_mensualite_d832_10_3_68 = False
                            match_arg_279 = anciennete_logement
                            if match_arg_279.code == NeufOuAncien_Code.Neuf:
                                _ = match_arg_279.value
                                temp_calcul_plafond_mensualite_d832_10_3_69 = True
                            elif match_arg_279.code == NeufOuAncien_Code.Ancien:
                                _ = match_arg_279.value
                                temp_calcul_plafond_mensualite_d832_10_3_69 = False
                            if ((date_courante_8 >=
                                date_of_numbers(2019,10,1)) and
                                ((date_courante_8 >=
                                date_of_numbers(2020,10,1)) and
                                ((date_signature_pret_1 >=
                                date_of_numbers(2010,12,31)) and
                                ((date_signature_pret_1 <
                                date_of_numbers(2011,12,31)) and
                                (temp_calcul_plafond_mensualite_d832_10_3_69 and
                                temp_calcul_plafond_mensualite_d832_10_3_68))))):
                                match_arg_280 = zone_2
                                if match_arg_280.code == ZoneDHabitation_Code.Zone1:
                                    _ = match_arg_280.value
                                    if (nombre_personnes_a_charge_4 ==
                                        integer_of_string("0")):
                                        match_arg_281 = situation_familiale_calcul_apl_4
                                        if match_arg_281.code == SituationFamilialeCalculAPL_Code.PersonneSeule:
                                            _ = match_arg_281.value
                                            return money_of_cents_string("35500")
                                        elif match_arg_281.code == SituationFamilialeCalculAPL_Code.Couple:
                                            _ = match_arg_281.value
                                            return money_of_cents_string("42827")
                                    else:
                                        return (money_of_cents_string("50153") +
                                            (money_of_cents_string("7326") *
                                            decimal_of_integer((nombre_personnes_a_charge_4 -
                                            integer_of_string("1")))))
                                elif match_arg_280.code == ZoneDHabitation_Code.Zone2:
                                    _ = match_arg_280.value
                                    if (nombre_personnes_a_charge_4 ==
                                        integer_of_string("0")):
                                        match_arg_282 = situation_familiale_calcul_apl_4
                                        if match_arg_282.code == SituationFamilialeCalculAPL_Code.PersonneSeule:
                                            _ = match_arg_282.value
                                            return money_of_cents_string("31681")
                                        elif match_arg_282.code == SituationFamilialeCalculAPL_Code.Couple:
                                            _ = match_arg_282.value
                                            return money_of_cents_string("38131")
                                    else:
                                        return (money_of_cents_string("44583") +
                                            (money_of_cents_string("6450") *
                                            decimal_of_integer((nombre_personnes_a_charge_4 -
                                            integer_of_string("1")))))
                                elif match_arg_280.code == ZoneDHabitation_Code.Zone3:
                                    _ = match_arg_280.value
                                    if (nombre_personnes_a_charge_4 ==
                                        integer_of_string("0")):
                                        match_arg_283 = situation_familiale_calcul_apl_4
                                        if match_arg_283.code == SituationFamilialeCalculAPL_Code.PersonneSeule:
                                            _ = match_arg_283.value
                                            return money_of_cents_string("29576")
                                        elif match_arg_283.code == SituationFamilialeCalculAPL_Code.Couple:
                                            _ = match_arg_283.value
                                            return money_of_cents_string("35464")
                                    else:
                                        return (money_of_cents_string("41353") +
                                            (money_of_cents_string("5888") *
                                            decimal_of_integer((nombre_personnes_a_charge_4 -
                                            integer_of_string("1")))))
                            else:
                                raise EmptyError
                        def temp_calcul_plafond_mensualite_d832_10_3_70(_:Unit):
                            match_arg_284 = type_pret
                            if match_arg_284.code == TypePret_Code.D331_32:
                                _ = match_arg_284.value
                                temp_calcul_plafond_mensualite_d832_10_3_71 = False
                            elif match_arg_284.code == TypePret_Code.D331_63_64:
                                _ = match_arg_284.value
                                temp_calcul_plafond_mensualite_d832_10_3_71 = True
                            elif match_arg_284.code == TypePret_Code.D331_59_8:
                                _ = match_arg_284.value
                                temp_calcul_plafond_mensualite_d832_10_3_71 = False
                            elif match_arg_284.code == TypePret_Code.D331_76_1:
                                _ = match_arg_284.value
                                temp_calcul_plafond_mensualite_d832_10_3_71 = False
                            elif match_arg_284.code == TypePret_Code.Autre:
                                _ = match_arg_284.value
                                temp_calcul_plafond_mensualite_d832_10_3_71 = False
                            match_arg_285 = anciennete_logement
                            if match_arg_285.code == NeufOuAncien_Code.Neuf:
                                _ = match_arg_285.value
                                temp_calcul_plafond_mensualite_d832_10_3_72 = False
                            elif match_arg_285.code == NeufOuAncien_Code.Ancien:
                                _ = match_arg_285.value
                                temp_calcul_plafond_mensualite_d832_10_3_72 = True
                            if ((date_courante_8 >=
                                date_of_numbers(2019,10,1)) and
                                ((date_courante_8 >=
                                date_of_numbers(2020,10,1)) and
                                ((date_signature_pret_1 >=
                                date_of_numbers(2009,12,31)) and
                                ((date_signature_pret_1 <
                                date_of_numbers(2010,12,31)) and
                                (temp_calcul_plafond_mensualite_d832_10_3_72 and
                                temp_calcul_plafond_mensualite_d832_10_3_71))))):
                                match_arg_286 = zone_2
                                if match_arg_286.code == ZoneDHabitation_Code.Zone1:
                                    _ = match_arg_286.value
                                    if (nombre_personnes_a_charge_4 ==
                                        integer_of_string("0")):
                                        match_arg_287 = situation_familiale_calcul_apl_4
                                        if match_arg_287.code == SituationFamilialeCalculAPL_Code.PersonneSeule:
                                            _ = match_arg_287.value
                                            return money_of_cents_string("28264")
                                        elif match_arg_287.code == SituationFamilialeCalculAPL_Code.Couple:
                                            _ = match_arg_287.value
                                            return money_of_cents_string("34109")
                                    else:
                                        return (money_of_cents_string("39953") +
                                            (money_of_cents_string("5845") *
                                            decimal_of_integer((nombre_personnes_a_charge_4 -
                                            integer_of_string("1")))))
                                elif match_arg_286.code == ZoneDHabitation_Code.Zone2:
                                    _ = match_arg_286.value
                                    if (nombre_personnes_a_charge_4 ==
                                        integer_of_string("0")):
                                        match_arg_288 = situation_familiale_calcul_apl_4
                                        if match_arg_288.code == SituationFamilialeCalculAPL_Code.PersonneSeule:
                                            _ = match_arg_288.value
                                            return money_of_cents_string("25196")
                                        elif match_arg_288.code == SituationFamilialeCalculAPL_Code.Couple:
                                            _ = match_arg_288.value
                                            return money_of_cents_string("30346")
                                    else:
                                        return (money_of_cents_string("35495") +
                                            (money_of_cents_string("5149") *
                                            decimal_of_integer((nombre_personnes_a_charge_4 -
                                            integer_of_string("1")))))
                                elif match_arg_286.code == ZoneDHabitation_Code.Zone3:
                                    _ = match_arg_286.value
                                    if (nombre_personnes_a_charge_4 ==
                                        integer_of_string("0")):
                                        match_arg_289 = situation_familiale_calcul_apl_4
                                        if match_arg_289.code == SituationFamilialeCalculAPL_Code.PersonneSeule:
                                            _ = match_arg_289.value
                                            return money_of_cents_string("23530")
                                        elif match_arg_289.code == SituationFamilialeCalculAPL_Code.Couple:
                                            _ = match_arg_289.value
                                            return money_of_cents_string("28228")
                                    else:
                                        return (money_of_cents_string("32928") +
                                            (money_of_cents_string("4699") *
                                            decimal_of_integer((nombre_personnes_a_charge_4 -
                                            integer_of_string("1")))))
                            else:
                                raise EmptyError
                        def temp_calcul_plafond_mensualite_d832_10_3_73(_:Unit):
                            match_arg_290 = type_pret
                            if match_arg_290.code == TypePret_Code.D331_32:
                                _ = match_arg_290.value
                                temp_calcul_plafond_mensualite_d832_10_3_74 = False
                            elif match_arg_290.code == TypePret_Code.D331_63_64:
                                _ = match_arg_290.value
                                temp_calcul_plafond_mensualite_d832_10_3_74 = True
                            elif match_arg_290.code == TypePret_Code.D331_59_8:
                                _ = match_arg_290.value
                                temp_calcul_plafond_mensualite_d832_10_3_74 = False
                            elif match_arg_290.code == TypePret_Code.D331_76_1:
                                _ = match_arg_290.value
                                temp_calcul_plafond_mensualite_d832_10_3_74 = False
                            elif match_arg_290.code == TypePret_Code.Autre:
                                _ = match_arg_290.value
                                temp_calcul_plafond_mensualite_d832_10_3_74 = False
                            match_arg_291 = anciennete_logement
                            if match_arg_291.code == NeufOuAncien_Code.Neuf:
                                _ = match_arg_291.value
                                temp_calcul_plafond_mensualite_d832_10_3_75 = True
                            elif match_arg_291.code == NeufOuAncien_Code.Ancien:
                                _ = match_arg_291.value
                                temp_calcul_plafond_mensualite_d832_10_3_75 = False
                            if ((date_courante_8 >=
                                date_of_numbers(2019,10,1)) and
                                ((date_courante_8 >=
                                date_of_numbers(2020,10,1)) and
                                ((date_signature_pret_1 >=
                                date_of_numbers(2009,12,31)) and
                                ((date_signature_pret_1 <
                                date_of_numbers(2010,12,31)) and
                                (temp_calcul_plafond_mensualite_d832_10_3_75 and
                                temp_calcul_plafond_mensualite_d832_10_3_74))))):
                                match_arg_292 = zone_2
                                if match_arg_292.code == ZoneDHabitation_Code.Zone1:
                                    _ = match_arg_292.value
                                    if (nombre_personnes_a_charge_4 ==
                                        integer_of_string("0")):
                                        match_arg_293 = situation_familiale_calcul_apl_4
                                        if match_arg_293.code == SituationFamilialeCalculAPL_Code.PersonneSeule:
                                            _ = match_arg_293.value
                                            return money_of_cents_string("35114")
                                        elif match_arg_293.code == SituationFamilialeCalculAPL_Code.Couple:
                                            _ = match_arg_293.value
                                            return money_of_cents_string("42361")
                                    else:
                                        return (money_of_cents_string("49607") +
                                            (money_of_cents_string("7246") *
                                            decimal_of_integer((nombre_personnes_a_charge_4 -
                                            integer_of_string("1")))))
                                elif match_arg_292.code == ZoneDHabitation_Code.Zone2:
                                    _ = match_arg_292.value
                                    if (nombre_personnes_a_charge_4 ==
                                        integer_of_string("0")):
                                        match_arg_294 = situation_familiale_calcul_apl_4
                                        if match_arg_294.code == SituationFamilialeCalculAPL_Code.PersonneSeule:
                                            _ = match_arg_294.value
                                            return money_of_cents_string("31336")
                                        elif match_arg_294.code == SituationFamilialeCalculAPL_Code.Couple:
                                            _ = match_arg_294.value
                                            return money_of_cents_string("37716")
                                    else:
                                        return (money_of_cents_string("44098") +
                                            (money_of_cents_string("6380") *
                                            decimal_of_integer((nombre_personnes_a_charge_4 -
                                            integer_of_string("1")))))
                                elif match_arg_292.code == ZoneDHabitation_Code.Zone3:
                                    _ = match_arg_292.value
                                    if (nombre_personnes_a_charge_4 ==
                                        integer_of_string("0")):
                                        match_arg_295 = situation_familiale_calcul_apl_4
                                        if match_arg_295.code == SituationFamilialeCalculAPL_Code.PersonneSeule:
                                            _ = match_arg_295.value
                                            return money_of_cents_string("29254")
                                        elif match_arg_295.code == SituationFamilialeCalculAPL_Code.Couple:
                                            _ = match_arg_295.value
                                            return money_of_cents_string("35078")
                                    else:
                                        return (money_of_cents_string("40903") +
                                            (money_of_cents_string("5824") *
                                            decimal_of_integer((nombre_personnes_a_charge_4 -
                                            integer_of_string("1")))))
                            else:
                                raise EmptyError
                        def temp_calcul_plafond_mensualite_d832_10_3_76(_:Unit):
                            match_arg_296 = type_pret
                            if match_arg_296.code == TypePret_Code.D331_32:
                                _ = match_arg_296.value
                                temp_calcul_plafond_mensualite_d832_10_3_77 = False
                            elif match_arg_296.code == TypePret_Code.D331_63_64:
                                _ = match_arg_296.value
                                temp_calcul_plafond_mensualite_d832_10_3_77 = True
                            elif match_arg_296.code == TypePret_Code.D331_59_8:
                                _ = match_arg_296.value
                                temp_calcul_plafond_mensualite_d832_10_3_77 = False
                            elif match_arg_296.code == TypePret_Code.D331_76_1:
                                _ = match_arg_296.value
                                temp_calcul_plafond_mensualite_d832_10_3_77 = False
                            elif match_arg_296.code == TypePret_Code.Autre:
                                _ = match_arg_296.value
                                temp_calcul_plafond_mensualite_d832_10_3_77 = False
                            match_arg_297 = anciennete_logement
                            if match_arg_297.code == NeufOuAncien_Code.Neuf:
                                _ = match_arg_297.value
                                temp_calcul_plafond_mensualite_d832_10_3_78 = False
                            elif match_arg_297.code == NeufOuAncien_Code.Ancien:
                                _ = match_arg_297.value
                                temp_calcul_plafond_mensualite_d832_10_3_78 = True
                            if ((date_courante_8 >=
                                date_of_numbers(2019,10,1)) and
                                ((date_courante_8 >=
                                date_of_numbers(2020,10,1)) and
                                ((date_signature_pret_1 >=
                                date_of_numbers(2008,12,31)) and
                                ((date_signature_pret_1 <
                                date_of_numbers(2009,12,31)) and
                                (temp_calcul_plafond_mensualite_d832_10_3_78 and
                                temp_calcul_plafond_mensualite_d832_10_3_77))))):
                                match_arg_298 = zone_2
                                if match_arg_298.code == ZoneDHabitation_Code.Zone1:
                                    _ = match_arg_298.value
                                    if (nombre_personnes_a_charge_4 ==
                                        integer_of_string("0")):
                                        match_arg_299 = situation_familiale_calcul_apl_4
                                        if match_arg_299.code == SituationFamilialeCalculAPL_Code.PersonneSeule:
                                            _ = match_arg_299.value
                                            return money_of_cents_string("28174")
                                        elif match_arg_299.code == SituationFamilialeCalculAPL_Code.Couple:
                                            _ = match_arg_299.value
                                            return money_of_cents_string("34000")
                                    else:
                                        return (money_of_cents_string("39826") +
                                            (money_of_cents_string("5826") *
                                            decimal_of_integer((nombre_personnes_a_charge_4 -
                                            integer_of_string("1")))))
                                elif match_arg_298.code == ZoneDHabitation_Code.Zone2:
                                    _ = match_arg_298.value
                                    if (nombre_personnes_a_charge_4 ==
                                        integer_of_string("0")):
                                        match_arg_300 = situation_familiale_calcul_apl_4
                                        if match_arg_300.code == SituationFamilialeCalculAPL_Code.PersonneSeule:
                                            _ = match_arg_300.value
                                            return money_of_cents_string("25116")
                                        elif match_arg_300.code == SituationFamilialeCalculAPL_Code.Couple:
                                            _ = match_arg_300.value
                                            return money_of_cents_string("30249")
                                    else:
                                        return (money_of_cents_string("35382") +
                                            (money_of_cents_string("5133") *
                                            decimal_of_integer((nombre_personnes_a_charge_4 -
                                            integer_of_string("1")))))
                                elif match_arg_298.code == ZoneDHabitation_Code.Zone3:
                                    _ = match_arg_298.value
                                    if (nombre_personnes_a_charge_4 ==
                                        integer_of_string("0")):
                                        match_arg_301 = situation_familiale_calcul_apl_4
                                        if match_arg_301.code == SituationFamilialeCalculAPL_Code.PersonneSeule:
                                            _ = match_arg_301.value
                                            return money_of_cents_string("23455")
                                        elif match_arg_301.code == SituationFamilialeCalculAPL_Code.Couple:
                                            _ = match_arg_301.value
                                            return money_of_cents_string("28138")
                                    else:
                                        return (money_of_cents_string("32823") +
                                            (money_of_cents_string("4684") *
                                            decimal_of_integer((nombre_personnes_a_charge_4 -
                                            integer_of_string("1")))))
                            else:
                                raise EmptyError
                        def temp_calcul_plafond_mensualite_d832_10_3_79(_:Unit):
                            match_arg_302 = type_pret
                            if match_arg_302.code == TypePret_Code.D331_32:
                                _ = match_arg_302.value
                                temp_calcul_plafond_mensualite_d832_10_3_80 = False
                            elif match_arg_302.code == TypePret_Code.D331_63_64:
                                _ = match_arg_302.value
                                temp_calcul_plafond_mensualite_d832_10_3_80 = True
                            elif match_arg_302.code == TypePret_Code.D331_59_8:
                                _ = match_arg_302.value
                                temp_calcul_plafond_mensualite_d832_10_3_80 = False
                            elif match_arg_302.code == TypePret_Code.D331_76_1:
                                _ = match_arg_302.value
                                temp_calcul_plafond_mensualite_d832_10_3_80 = False
                            elif match_arg_302.code == TypePret_Code.Autre:
                                _ = match_arg_302.value
                                temp_calcul_plafond_mensualite_d832_10_3_80 = False
                            match_arg_303 = anciennete_logement
                            if match_arg_303.code == NeufOuAncien_Code.Neuf:
                                _ = match_arg_303.value
                                temp_calcul_plafond_mensualite_d832_10_3_81 = True
                            elif match_arg_303.code == NeufOuAncien_Code.Ancien:
                                _ = match_arg_303.value
                                temp_calcul_plafond_mensualite_d832_10_3_81 = False
                            if ((date_courante_8 >=
                                date_of_numbers(2019,10,1)) and
                                ((date_courante_8 >=
                                date_of_numbers(2020,10,1)) and
                                ((date_signature_pret_1 >=
                                date_of_numbers(2008,12,31)) and
                                ((date_signature_pret_1 <
                                date_of_numbers(2009,12,31)) and
                                (temp_calcul_plafond_mensualite_d832_10_3_81 and
                                temp_calcul_plafond_mensualite_d832_10_3_80))))):
                                match_arg_304 = zone_2
                                if match_arg_304.code == ZoneDHabitation_Code.Zone1:
                                    _ = match_arg_304.value
                                    if (nombre_personnes_a_charge_4 ==
                                        integer_of_string("0")):
                                        match_arg_305 = situation_familiale_calcul_apl_4
                                        if match_arg_305.code == SituationFamilialeCalculAPL_Code.PersonneSeule:
                                            _ = match_arg_305.value
                                            return money_of_cents_string("35002")
                                        elif match_arg_305.code == SituationFamilialeCalculAPL_Code.Couple:
                                            _ = match_arg_305.value
                                            return money_of_cents_string("42226")
                                    else:
                                        return (money_of_cents_string("49449") +
                                            (money_of_cents_string("7223") *
                                            decimal_of_integer((nombre_personnes_a_charge_4 -
                                            integer_of_string("1")))))
                                elif match_arg_304.code == ZoneDHabitation_Code.Zone2:
                                    _ = match_arg_304.value
                                    if (nombre_personnes_a_charge_4 ==
                                        integer_of_string("0")):
                                        match_arg_306 = situation_familiale_calcul_apl_4
                                        if match_arg_306.code == SituationFamilialeCalculAPL_Code.PersonneSeule:
                                            _ = match_arg_306.value
                                            return money_of_cents_string("31236")
                                        elif match_arg_306.code == SituationFamilialeCalculAPL_Code.Couple:
                                            _ = match_arg_306.value
                                            return money_of_cents_string("37596")
                                    else:
                                        return (money_of_cents_string("43957") +
                                            (money_of_cents_string("6360") *
                                            decimal_of_integer((nombre_personnes_a_charge_4 -
                                            integer_of_string("1")))))
                                elif match_arg_304.code == ZoneDHabitation_Code.Zone3:
                                    _ = match_arg_304.value
                                    if (nombre_personnes_a_charge_4 ==
                                        integer_of_string("0")):
                                        match_arg_307 = situation_familiale_calcul_apl_4
                                        if match_arg_307.code == SituationFamilialeCalculAPL_Code.PersonneSeule:
                                            _ = match_arg_307.value
                                            return money_of_cents_string("29161")
                                        elif match_arg_307.code == SituationFamilialeCalculAPL_Code.Couple:
                                            _ = match_arg_307.value
                                            return money_of_cents_string("34966")
                                    else:
                                        return (money_of_cents_string("40773") +
                                            (money_of_cents_string("5805") *
                                            decimal_of_integer((nombre_personnes_a_charge_4 -
                                            integer_of_string("1")))))
                            else:
                                raise EmptyError
                        def temp_calcul_plafond_mensualite_d832_10_3_82(_:Unit):
                            match_arg_308 = type_pret
                            if match_arg_308.code == TypePret_Code.D331_32:
                                _ = match_arg_308.value
                                temp_calcul_plafond_mensualite_d832_10_3_83 = False
                            elif match_arg_308.code == TypePret_Code.D331_63_64:
                                _ = match_arg_308.value
                                temp_calcul_plafond_mensualite_d832_10_3_83 = True
                            elif match_arg_308.code == TypePret_Code.D331_59_8:
                                _ = match_arg_308.value
                                temp_calcul_plafond_mensualite_d832_10_3_83 = False
                            elif match_arg_308.code == TypePret_Code.D331_76_1:
                                _ = match_arg_308.value
                                temp_calcul_plafond_mensualite_d832_10_3_83 = False
                            elif match_arg_308.code == TypePret_Code.Autre:
                                _ = match_arg_308.value
                                temp_calcul_plafond_mensualite_d832_10_3_83 = False
                            match_arg_309 = anciennete_logement
                            if match_arg_309.code == NeufOuAncien_Code.Neuf:
                                _ = match_arg_309.value
                                temp_calcul_plafond_mensualite_d832_10_3_84 = False
                            elif match_arg_309.code == NeufOuAncien_Code.Ancien:
                                _ = match_arg_309.value
                                temp_calcul_plafond_mensualite_d832_10_3_84 = True
                            if ((date_courante_8 >=
                                date_of_numbers(2019,10,1)) and
                                ((date_courante_8 >=
                                date_of_numbers(2020,10,1)) and
                                ((date_signature_pret_1 >=
                                date_of_numbers(2007,12,31)) and
                                ((date_signature_pret_1 <
                                date_of_numbers(2008,12,31)) and
                                (temp_calcul_plafond_mensualite_d832_10_3_84 and
                                temp_calcul_plafond_mensualite_d832_10_3_83))))):
                                match_arg_310 = zone_2
                                if match_arg_310.code == ZoneDHabitation_Code.Zone1:
                                    _ = match_arg_310.value
                                    if (nombre_personnes_a_charge_4 ==
                                        integer_of_string("0")):
                                        match_arg_311 = situation_familiale_calcul_apl_4
                                        if match_arg_311.code == SituationFamilialeCalculAPL_Code.PersonneSeule:
                                            _ = match_arg_311.value
                                            return money_of_cents_string("27367")
                                        elif match_arg_311.code == SituationFamilialeCalculAPL_Code.Couple:
                                            _ = match_arg_311.value
                                            return money_of_cents_string("33026")
                                    else:
                                        return (money_of_cents_string("38685") +
                                            (money_of_cents_string("5659") *
                                            decimal_of_integer((nombre_personnes_a_charge_4 -
                                            integer_of_string("1")))))
                                elif match_arg_310.code == ZoneDHabitation_Code.Zone2:
                                    _ = match_arg_310.value
                                    if (nombre_personnes_a_charge_4 ==
                                        integer_of_string("0")):
                                        match_arg_312 = situation_familiale_calcul_apl_4
                                        if match_arg_312.code == SituationFamilialeCalculAPL_Code.PersonneSeule:
                                            _ = match_arg_312.value
                                            return money_of_cents_string("24396")
                                        elif match_arg_312.code == SituationFamilialeCalculAPL_Code.Couple:
                                            _ = match_arg_312.value
                                            return money_of_cents_string("29382")
                                    else:
                                        return (money_of_cents_string("34368") +
                                            (money_of_cents_string("4986") *
                                            decimal_of_integer((nombre_personnes_a_charge_4 -
                                            integer_of_string("1")))))
                                elif match_arg_310.code == ZoneDHabitation_Code.Zone3:
                                    _ = match_arg_310.value
                                    if (nombre_personnes_a_charge_4 ==
                                        integer_of_string("0")):
                                        match_arg_313 = situation_familiale_calcul_apl_4
                                        if match_arg_313.code == SituationFamilialeCalculAPL_Code.PersonneSeule:
                                            _ = match_arg_313.value
                                            return money_of_cents_string("22783")
                                        elif match_arg_313.code == SituationFamilialeCalculAPL_Code.Couple:
                                            _ = match_arg_313.value
                                            return money_of_cents_string("27332")
                                    else:
                                        return (money_of_cents_string("31882") +
                                            (money_of_cents_string("4550") *
                                            decimal_of_integer((nombre_personnes_a_charge_4 -
                                            integer_of_string("1")))))
                            else:
                                raise EmptyError
                        def temp_calcul_plafond_mensualite_d832_10_3_85(_:Unit):
                            match_arg_314 = type_pret
                            if match_arg_314.code == TypePret_Code.D331_32:
                                _ = match_arg_314.value
                                temp_calcul_plafond_mensualite_d832_10_3_86 = False
                            elif match_arg_314.code == TypePret_Code.D331_63_64:
                                _ = match_arg_314.value
                                temp_calcul_plafond_mensualite_d832_10_3_86 = True
                            elif match_arg_314.code == TypePret_Code.D331_59_8:
                                _ = match_arg_314.value
                                temp_calcul_plafond_mensualite_d832_10_3_86 = False
                            elif match_arg_314.code == TypePret_Code.D331_76_1:
                                _ = match_arg_314.value
                                temp_calcul_plafond_mensualite_d832_10_3_86 = False
                            elif match_arg_314.code == TypePret_Code.Autre:
                                _ = match_arg_314.value
                                temp_calcul_plafond_mensualite_d832_10_3_86 = False
                            match_arg_315 = anciennete_logement
                            if match_arg_315.code == NeufOuAncien_Code.Neuf:
                                _ = match_arg_315.value
                                temp_calcul_plafond_mensualite_d832_10_3_87 = True
                            elif match_arg_315.code == NeufOuAncien_Code.Ancien:
                                _ = match_arg_315.value
                                temp_calcul_plafond_mensualite_d832_10_3_87 = False
                            if ((date_courante_8 >=
                                date_of_numbers(2019,10,1)) and
                                ((date_courante_8 >=
                                date_of_numbers(2020,10,1)) and
                                ((date_signature_pret_1 >=
                                date_of_numbers(2007,12,31)) and
                                ((date_signature_pret_1 <
                                date_of_numbers(2008,12,31)) and
                                (temp_calcul_plafond_mensualite_d832_10_3_87 and
                                temp_calcul_plafond_mensualite_d832_10_3_86))))):
                                match_arg_316 = zone_2
                                if match_arg_316.code == ZoneDHabitation_Code.Zone1:
                                    _ = match_arg_316.value
                                    if (nombre_personnes_a_charge_4 ==
                                        integer_of_string("0")):
                                        match_arg_317 = situation_familiale_calcul_apl_4
                                        if match_arg_317.code == SituationFamilialeCalculAPL_Code.PersonneSeule:
                                            _ = match_arg_317.value
                                            return money_of_cents_string("33999")
                                        elif match_arg_317.code == SituationFamilialeCalculAPL_Code.Couple:
                                            _ = match_arg_317.value
                                            return money_of_cents_string("41016")
                                    else:
                                        return (money_of_cents_string("48032") +
                                            (money_of_cents_string("7016") *
                                            decimal_of_integer((nombre_personnes_a_charge_4 -
                                            integer_of_string("1")))))
                                elif match_arg_316.code == ZoneDHabitation_Code.Zone2:
                                    _ = match_arg_316.value
                                    if (nombre_personnes_a_charge_4 ==
                                        integer_of_string("0")):
                                        match_arg_318 = situation_familiale_calcul_apl_4
                                        if match_arg_318.code == SituationFamilialeCalculAPL_Code.PersonneSeule:
                                            _ = match_arg_318.value
                                            return money_of_cents_string("30341")
                                        elif match_arg_318.code == SituationFamilialeCalculAPL_Code.Couple:
                                            _ = match_arg_318.value
                                            return money_of_cents_string("36519")
                                    else:
                                        return (money_of_cents_string("42697") +
                                            (money_of_cents_string("6178") *
                                            decimal_of_integer((nombre_personnes_a_charge_4 -
                                            integer_of_string("1")))))
                                elif match_arg_316.code == ZoneDHabitation_Code.Zone3:
                                    _ = match_arg_316.value
                                    if (nombre_personnes_a_charge_4 ==
                                        integer_of_string("0")):
                                        match_arg_319 = situation_familiale_calcul_apl_4
                                        if match_arg_319.code == SituationFamilialeCalculAPL_Code.PersonneSeule:
                                            _ = match_arg_319.value
                                            return money_of_cents_string("28325")
                                        elif match_arg_319.code == SituationFamilialeCalculAPL_Code.Couple:
                                            _ = match_arg_319.value
                                            return money_of_cents_string("33964")
                                    else:
                                        return (money_of_cents_string("39605") +
                                            (money_of_cents_string("5639") *
                                            decimal_of_integer((nombre_personnes_a_charge_4 -
                                            integer_of_string("1")))))
                            else:
                                raise EmptyError
                        def temp_calcul_plafond_mensualite_d832_10_3_88(_:Unit):
                            match_arg_320 = type_pret
                            if match_arg_320.code == TypePret_Code.D331_32:
                                _ = match_arg_320.value
                                temp_calcul_plafond_mensualite_d832_10_3_89 = False
                            elif match_arg_320.code == TypePret_Code.D331_63_64:
                                _ = match_arg_320.value
                                temp_calcul_plafond_mensualite_d832_10_3_89 = True
                            elif match_arg_320.code == TypePret_Code.D331_59_8:
                                _ = match_arg_320.value
                                temp_calcul_plafond_mensualite_d832_10_3_89 = False
                            elif match_arg_320.code == TypePret_Code.D331_76_1:
                                _ = match_arg_320.value
                                temp_calcul_plafond_mensualite_d832_10_3_89 = False
                            elif match_arg_320.code == TypePret_Code.Autre:
                                _ = match_arg_320.value
                                temp_calcul_plafond_mensualite_d832_10_3_89 = False
                            match_arg_321 = anciennete_logement
                            if match_arg_321.code == NeufOuAncien_Code.Neuf:
                                _ = match_arg_321.value
                                temp_calcul_plafond_mensualite_d832_10_3_90 = False
                            elif match_arg_321.code == NeufOuAncien_Code.Ancien:
                                _ = match_arg_321.value
                                temp_calcul_plafond_mensualite_d832_10_3_90 = True
                            if ((date_courante_8 >=
                                date_of_numbers(2019,10,1)) and
                                ((date_courante_8 >=
                                date_of_numbers(2020,10,1)) and
                                ((date_signature_pret_1 >=
                                date_of_numbers(2006,12,31)) and
                                ((date_signature_pret_1 <
                                date_of_numbers(2007,12,31)) and
                                (temp_calcul_plafond_mensualite_d832_10_3_90 and
                                temp_calcul_plafond_mensualite_d832_10_3_89))))):
                                match_arg_322 = zone_2
                                if match_arg_322.code == ZoneDHabitation_Code.Zone1:
                                    _ = match_arg_322.value
                                    if (nombre_personnes_a_charge_4 ==
                                        integer_of_string("0")):
                                        match_arg_323 = situation_familiale_calcul_apl_4
                                        if match_arg_323.code == SituationFamilialeCalculAPL_Code.PersonneSeule:
                                            _ = match_arg_323.value
                                            return money_of_cents_string("26632")
                                        elif match_arg_323.code == SituationFamilialeCalculAPL_Code.Couple:
                                            _ = match_arg_323.value
                                            return money_of_cents_string("32139")
                                    else:
                                        return (money_of_cents_string("37646") +
                                            (money_of_cents_string("5507") *
                                            decimal_of_integer((nombre_personnes_a_charge_4 -
                                            integer_of_string("1")))))
                                elif match_arg_322.code == ZoneDHabitation_Code.Zone2:
                                    _ = match_arg_322.value
                                    if (nombre_personnes_a_charge_4 ==
                                        integer_of_string("0")):
                                        match_arg_324 = situation_familiale_calcul_apl_4
                                        if match_arg_324.code == SituationFamilialeCalculAPL_Code.PersonneSeule:
                                            _ = match_arg_324.value
                                            return money_of_cents_string("23741")
                                        elif match_arg_324.code == SituationFamilialeCalculAPL_Code.Couple:
                                            _ = match_arg_324.value
                                            return money_of_cents_string("28593")
                                    else:
                                        return (money_of_cents_string("33445") +
                                            (money_of_cents_string("4852") *
                                            decimal_of_integer((nombre_personnes_a_charge_4 -
                                            integer_of_string("1")))))
                                elif match_arg_322.code == ZoneDHabitation_Code.Zone3:
                                    _ = match_arg_322.value
                                    if (nombre_personnes_a_charge_4 ==
                                        integer_of_string("0")):
                                        match_arg_325 = situation_familiale_calcul_apl_4
                                        if match_arg_325.code == SituationFamilialeCalculAPL_Code.PersonneSeule:
                                            _ = match_arg_325.value
                                            return money_of_cents_string("22171")
                                        elif match_arg_325.code == SituationFamilialeCalculAPL_Code.Couple:
                                            _ = match_arg_325.value
                                            return money_of_cents_string("36598")
                                    else:
                                        return (money_of_cents_string("31026") +
                                            (money_of_cents_string("4428") *
                                            decimal_of_integer((nombre_personnes_a_charge_4 -
                                            integer_of_string("1")))))
                            else:
                                raise EmptyError
                        def temp_calcul_plafond_mensualite_d832_10_3_91(_:Unit):
                            match_arg_326 = type_pret
                            if match_arg_326.code == TypePret_Code.D331_32:
                                _ = match_arg_326.value
                                temp_calcul_plafond_mensualite_d832_10_3_92 = False
                            elif match_arg_326.code == TypePret_Code.D331_63_64:
                                _ = match_arg_326.value
                                temp_calcul_plafond_mensualite_d832_10_3_92 = True
                            elif match_arg_326.code == TypePret_Code.D331_59_8:
                                _ = match_arg_326.value
                                temp_calcul_plafond_mensualite_d832_10_3_92 = False
                            elif match_arg_326.code == TypePret_Code.D331_76_1:
                                _ = match_arg_326.value
                                temp_calcul_plafond_mensualite_d832_10_3_92 = False
                            elif match_arg_326.code == TypePret_Code.Autre:
                                _ = match_arg_326.value
                                temp_calcul_plafond_mensualite_d832_10_3_92 = False
                            match_arg_327 = anciennete_logement
                            if match_arg_327.code == NeufOuAncien_Code.Neuf:
                                _ = match_arg_327.value
                                temp_calcul_plafond_mensualite_d832_10_3_93 = True
                            elif match_arg_327.code == NeufOuAncien_Code.Ancien:
                                _ = match_arg_327.value
                                temp_calcul_plafond_mensualite_d832_10_3_93 = False
                            if ((date_courante_8 >=
                                date_of_numbers(2019,10,1)) and
                                ((date_courante_8 >=
                                date_of_numbers(2020,10,1)) and
                                ((date_signature_pret_1 >=
                                date_of_numbers(2006,12,31)) and
                                ((date_signature_pret_1 <
                                date_of_numbers(2007,12,31)) and
                                (temp_calcul_plafond_mensualite_d832_10_3_93 and
                                temp_calcul_plafond_mensualite_d832_10_3_92))))):
                                match_arg_328 = zone_2
                                if match_arg_328.code == ZoneDHabitation_Code.Zone1:
                                    _ = match_arg_328.value
                                    if (nombre_personnes_a_charge_4 ==
                                        integer_of_string("0")):
                                        match_arg_329 = situation_familiale_calcul_apl_4
                                        if match_arg_329.code == SituationFamilialeCalculAPL_Code.PersonneSeule:
                                            _ = match_arg_329.value
                                            return money_of_cents_string("33086")
                                        elif match_arg_329.code == SituationFamilialeCalculAPL_Code.Couple:
                                            _ = match_arg_329.value
                                            return money_of_cents_string("39914")
                                    else:
                                        return (money_of_cents_string("46742") +
                                            (money_of_cents_string("6828") *
                                            decimal_of_integer((nombre_personnes_a_charge_4 -
                                            integer_of_string("1")))))
                                elif match_arg_328.code == ZoneDHabitation_Code.Zone2:
                                    _ = match_arg_328.value
                                    if (nombre_personnes_a_charge_4 ==
                                        integer_of_string("0")):
                                        match_arg_330 = situation_familiale_calcul_apl_4
                                        if match_arg_330.code == SituationFamilialeCalculAPL_Code.PersonneSeule:
                                            _ = match_arg_330.value
                                            return money_of_cents_string("29526")
                                        elif match_arg_330.code == SituationFamilialeCalculAPL_Code.Couple:
                                            _ = match_arg_330.value
                                            return money_of_cents_string("35538")
                                    else:
                                        return (money_of_cents_string("41550") +
                                            (money_of_cents_string("6012") *
                                            decimal_of_integer((nombre_personnes_a_charge_4 -
                                            integer_of_string("1")))))
                                elif match_arg_328.code == ZoneDHabitation_Code.Zone3:
                                    _ = match_arg_328.value
                                    if (nombre_personnes_a_charge_4 ==
                                        integer_of_string("0")):
                                        match_arg_331 = situation_familiale_calcul_apl_4
                                        if match_arg_331.code == SituationFamilialeCalculAPL_Code.PersonneSeule:
                                            _ = match_arg_331.value
                                            return money_of_cents_string("27564")
                                        elif match_arg_331.code == SituationFamilialeCalculAPL_Code.Couple:
                                            _ = match_arg_331.value
                                            return money_of_cents_string("33052")
                                    else:
                                        return (money_of_cents_string("38541") +
                                            (money_of_cents_string("5488") *
                                            decimal_of_integer((nombre_personnes_a_charge_4 -
                                            integer_of_string("1")))))
                            else:
                                raise EmptyError
                        def temp_calcul_plafond_mensualite_d832_10_3_94(_:Unit):
                            match_arg_332 = type_pret
                            if match_arg_332.code == TypePret_Code.D331_32:
                                _ = match_arg_332.value
                                temp_calcul_plafond_mensualite_d832_10_3_95 = False
                            elif match_arg_332.code == TypePret_Code.D331_63_64:
                                _ = match_arg_332.value
                                temp_calcul_plafond_mensualite_d832_10_3_95 = True
                            elif match_arg_332.code == TypePret_Code.D331_59_8:
                                _ = match_arg_332.value
                                temp_calcul_plafond_mensualite_d832_10_3_95 = False
                            elif match_arg_332.code == TypePret_Code.D331_76_1:
                                _ = match_arg_332.value
                                temp_calcul_plafond_mensualite_d832_10_3_95 = False
                            elif match_arg_332.code == TypePret_Code.Autre:
                                _ = match_arg_332.value
                                temp_calcul_plafond_mensualite_d832_10_3_95 = False
                            match_arg_333 = anciennete_logement
                            if match_arg_333.code == NeufOuAncien_Code.Neuf:
                                _ = match_arg_333.value
                                temp_calcul_plafond_mensualite_d832_10_3_96 = False
                            elif match_arg_333.code == NeufOuAncien_Code.Ancien:
                                _ = match_arg_333.value
                                temp_calcul_plafond_mensualite_d832_10_3_96 = True
                            if ((date_courante_8 >=
                                date_of_numbers(2019,10,1)) and
                                ((date_courante_8 >=
                                date_of_numbers(2020,10,1)) and
                                ((date_signature_pret_1 >=
                                date_of_numbers(2005,8,31)) and
                                ((date_signature_pret_1 <
                                date_of_numbers(2006,12,31)) and
                                (temp_calcul_plafond_mensualite_d832_10_3_96 and
                                temp_calcul_plafond_mensualite_d832_10_3_95))))):
                                match_arg_334 = zone_2
                                if match_arg_334.code == ZoneDHabitation_Code.Zone1:
                                    _ = match_arg_334.value
                                    if (nombre_personnes_a_charge_4 ==
                                        integer_of_string("0")):
                                        match_arg_335 = situation_familiale_calcul_apl_4
                                        if match_arg_335.code == SituationFamilialeCalculAPL_Code.PersonneSeule:
                                            _ = match_arg_335.value
                                            return money_of_cents_string("25907")
                                        elif match_arg_335.code == SituationFamilialeCalculAPL_Code.Couple:
                                            _ = match_arg_335.value
                                            return money_of_cents_string("31264")
                                    else:
                                        return (money_of_cents_string("36621") +
                                            (money_of_cents_string("5357") *
                                            decimal_of_integer((nombre_personnes_a_charge_4 -
                                            integer_of_string("1")))))
                                elif match_arg_334.code == ZoneDHabitation_Code.Zone2:
                                    _ = match_arg_334.value
                                    if (nombre_personnes_a_charge_4 ==
                                        integer_of_string("0")):
                                        match_arg_336 = situation_familiale_calcul_apl_4
                                        if match_arg_336.code == SituationFamilialeCalculAPL_Code.PersonneSeule:
                                            _ = match_arg_336.value
                                            return money_of_cents_string("23094")
                                        elif match_arg_336.code == SituationFamilialeCalculAPL_Code.Couple:
                                            _ = match_arg_336.value
                                            return money_of_cents_string("27814")
                                    else:
                                        return (money_of_cents_string("32534") +
                                            (money_of_cents_string("4720") *
                                            decimal_of_integer((nombre_personnes_a_charge_4 -
                                            integer_of_string("1")))))
                                elif match_arg_334.code == ZoneDHabitation_Code.Zone3:
                                    _ = match_arg_334.value
                                    if (nombre_personnes_a_charge_4 ==
                                        integer_of_string("0")):
                                        match_arg_337 = situation_familiale_calcul_apl_4
                                        if match_arg_337.code == SituationFamilialeCalculAPL_Code.PersonneSeule:
                                            _ = match_arg_337.value
                                            return money_of_cents_string("21567")
                                        elif match_arg_337.code == SituationFamilialeCalculAPL_Code.Couple:
                                            _ = match_arg_337.value
                                            return money_of_cents_string("25874")
                                    else:
                                        return (money_of_cents_string("30181") +
                                            (money_of_cents_string("4307") *
                                            decimal_of_integer((nombre_personnes_a_charge_4 -
                                            integer_of_string("1")))))
                            else:
                                raise EmptyError
                        def temp_calcul_plafond_mensualite_d832_10_3_97(_:Unit):
                            match_arg_338 = type_pret
                            if match_arg_338.code == TypePret_Code.D331_32:
                                _ = match_arg_338.value
                                temp_calcul_plafond_mensualite_d832_10_3_98 = False
                            elif match_arg_338.code == TypePret_Code.D331_63_64:
                                _ = match_arg_338.value
                                temp_calcul_plafond_mensualite_d832_10_3_98 = True
                            elif match_arg_338.code == TypePret_Code.D331_59_8:
                                _ = match_arg_338.value
                                temp_calcul_plafond_mensualite_d832_10_3_98 = False
                            elif match_arg_338.code == TypePret_Code.D331_76_1:
                                _ = match_arg_338.value
                                temp_calcul_plafond_mensualite_d832_10_3_98 = False
                            elif match_arg_338.code == TypePret_Code.Autre:
                                _ = match_arg_338.value
                                temp_calcul_plafond_mensualite_d832_10_3_98 = False
                            match_arg_339 = anciennete_logement
                            if match_arg_339.code == NeufOuAncien_Code.Neuf:
                                _ = match_arg_339.value
                                temp_calcul_plafond_mensualite_d832_10_3_99 = True
                            elif match_arg_339.code == NeufOuAncien_Code.Ancien:
                                _ = match_arg_339.value
                                temp_calcul_plafond_mensualite_d832_10_3_99 = False
                            if ((date_courante_8 >=
                                date_of_numbers(2019,10,1)) and
                                ((date_courante_8 >=
                                date_of_numbers(2020,10,1)) and
                                ((date_signature_pret_1 >=
                                date_of_numbers(2005,8,31)) and
                                ((date_signature_pret_1 <
                                date_of_numbers(2006,12,31)) and
                                (temp_calcul_plafond_mensualite_d832_10_3_99 and
                                temp_calcul_plafond_mensualite_d832_10_3_98))))):
                                match_arg_340 = zone_2
                                if match_arg_340.code == ZoneDHabitation_Code.Zone1:
                                    _ = match_arg_340.value
                                    if (nombre_personnes_a_charge_4 ==
                                        integer_of_string("0")):
                                        match_arg_341 = situation_familiale_calcul_apl_4
                                        if match_arg_341.code == SituationFamilialeCalculAPL_Code.PersonneSeule:
                                            _ = match_arg_341.value
                                            return money_of_cents_string("32185")
                                        elif match_arg_341.code == SituationFamilialeCalculAPL_Code.Couple:
                                            _ = match_arg_341.value
                                            return money_of_cents_string("38827")
                                    else:
                                        return (money_of_cents_string("45469") +
                                            (money_of_cents_string("6642") *
                                            decimal_of_integer((nombre_personnes_a_charge_4 -
                                            integer_of_string("1")))))
                                elif match_arg_340.code == ZoneDHabitation_Code.Zone2:
                                    _ = match_arg_340.value
                                    if (nombre_personnes_a_charge_4 ==
                                        integer_of_string("0")):
                                        match_arg_342 = situation_familiale_calcul_apl_4
                                        if match_arg_342.code == SituationFamilialeCalculAPL_Code.PersonneSeule:
                                            _ = match_arg_342.value
                                            return money_of_cents_string("28722")
                                        elif match_arg_342.code == SituationFamilialeCalculAPL_Code.Couple:
                                            _ = match_arg_342.value
                                            return money_of_cents_string("34570")
                                    else:
                                        return (money_of_cents_string("40418") +
                                            (money_of_cents_string("5848") *
                                            decimal_of_integer((nombre_personnes_a_charge_4 -
                                            integer_of_string("1")))))
                                elif match_arg_340.code == ZoneDHabitation_Code.Zone3:
                                    _ = match_arg_340.value
                                    if (nombre_personnes_a_charge_4 ==
                                        integer_of_string("0")):
                                        match_arg_343 = situation_familiale_calcul_apl_4
                                        if match_arg_343.code == SituationFamilialeCalculAPL_Code.PersonneSeule:
                                            _ = match_arg_343.value
                                            return money_of_cents_string("26813")
                                        elif match_arg_343.code == SituationFamilialeCalculAPL_Code.Couple:
                                            _ = match_arg_343.value
                                            return money_of_cents_string("32152")
                                    else:
                                        return (money_of_cents_string("37491") +
                                            (money_of_cents_string("5339") *
                                            decimal_of_integer((nombre_personnes_a_charge_4 -
                                            integer_of_string("1")))))
                            else:
                                raise EmptyError
                        def temp_calcul_plafond_mensualite_d832_10_3_100(_:Unit):
                            match_arg_344 = type_pret
                            if match_arg_344.code == TypePret_Code.D331_32:
                                _ = match_arg_344.value
                                temp_calcul_plafond_mensualite_d832_10_3_101 = False
                            elif match_arg_344.code == TypePret_Code.D331_63_64:
                                _ = match_arg_344.value
                                temp_calcul_plafond_mensualite_d832_10_3_101 = True
                            elif match_arg_344.code == TypePret_Code.D331_59_8:
                                _ = match_arg_344.value
                                temp_calcul_plafond_mensualite_d832_10_3_101 = False
                            elif match_arg_344.code == TypePret_Code.D331_76_1:
                                _ = match_arg_344.value
                                temp_calcul_plafond_mensualite_d832_10_3_101 = False
                            elif match_arg_344.code == TypePret_Code.Autre:
                                _ = match_arg_344.value
                                temp_calcul_plafond_mensualite_d832_10_3_101 = False
                            match_arg_345 = anciennete_logement
                            if match_arg_345.code == NeufOuAncien_Code.Neuf:
                                _ = match_arg_345.value
                                temp_calcul_plafond_mensualite_d832_10_3_102 = False
                            elif match_arg_345.code == NeufOuAncien_Code.Ancien:
                                _ = match_arg_345.value
                                temp_calcul_plafond_mensualite_d832_10_3_102 = True
                            if ((date_courante_8 >=
                                date_of_numbers(2019,10,1)) and
                                ((date_courante_8 >=
                                date_of_numbers(2020,10,1)) and
                                ((date_signature_pret_1 >=
                                date_of_numbers(2003,6,30)) and
                                ((date_signature_pret_1 <
                                date_of_numbers(2005,8,31)) and
                                (temp_calcul_plafond_mensualite_d832_10_3_102 and
                                temp_calcul_plafond_mensualite_d832_10_3_101))))):
                                match_arg_346 = zone_2
                                if match_arg_346.code == ZoneDHabitation_Code.Zone1:
                                    _ = match_arg_346.value
                                    if (nombre_personnes_a_charge_4 ==
                                        integer_of_string("0")):
                                        match_arg_347 = situation_familiale_calcul_apl_4
                                        if match_arg_347.code == SituationFamilialeCalculAPL_Code.PersonneSeule:
                                            _ = match_arg_347.value
                                            return money_of_cents_string("25449")
                                        elif match_arg_347.code == SituationFamilialeCalculAPL_Code.Couple:
                                            _ = match_arg_347.value
                                            return money_of_cents_string("30711")
                                    else:
                                        return (money_of_cents_string("35973") +
                                            (money_of_cents_string("5262") *
                                            decimal_of_integer((nombre_personnes_a_charge_4 -
                                            integer_of_string("1")))))
                                elif match_arg_346.code == ZoneDHabitation_Code.Zone2:
                                    _ = match_arg_346.value
                                    if (nombre_personnes_a_charge_4 ==
                                        integer_of_string("0")):
                                        match_arg_348 = situation_familiale_calcul_apl_4
                                        if match_arg_348.code == SituationFamilialeCalculAPL_Code.PersonneSeule:
                                            _ = match_arg_348.value
                                            return money_of_cents_string("22686")
                                        elif match_arg_348.code == SituationFamilialeCalculAPL_Code.Couple:
                                            _ = match_arg_348.value
                                            return money_of_cents_string("27323")
                                    else:
                                        return (money_of_cents_string("31960") +
                                            (money_of_cents_string("4637") *
                                            decimal_of_integer((nombre_personnes_a_charge_4 -
                                            integer_of_string("1")))))
                                elif match_arg_346.code == ZoneDHabitation_Code.Zone3:
                                    _ = match_arg_346.value
                                    if (nombre_personnes_a_charge_4 ==
                                        integer_of_string("0")):
                                        match_arg_349 = situation_familiale_calcul_apl_4
                                        if match_arg_349.code == SituationFamilialeCalculAPL_Code.PersonneSeule:
                                            _ = match_arg_349.value
                                            return money_of_cents_string("21186")
                                        elif match_arg_349.code == SituationFamilialeCalculAPL_Code.Couple:
                                            _ = match_arg_349.value
                                            return money_of_cents_string("25417")
                                    else:
                                        return (money_of_cents_string("29648") +
                                            (money_of_cents_string("4231") *
                                            decimal_of_integer((nombre_personnes_a_charge_4 -
                                            integer_of_string("1")))))
                            else:
                                raise EmptyError
                        def temp_calcul_plafond_mensualite_d832_10_3_103(_:Unit):
                            match_arg_350 = type_pret
                            if match_arg_350.code == TypePret_Code.D331_32:
                                _ = match_arg_350.value
                                temp_calcul_plafond_mensualite_d832_10_3_104 = False
                            elif match_arg_350.code == TypePret_Code.D331_63_64:
                                _ = match_arg_350.value
                                temp_calcul_plafond_mensualite_d832_10_3_104 = True
                            elif match_arg_350.code == TypePret_Code.D331_59_8:
                                _ = match_arg_350.value
                                temp_calcul_plafond_mensualite_d832_10_3_104 = False
                            elif match_arg_350.code == TypePret_Code.D331_76_1:
                                _ = match_arg_350.value
                                temp_calcul_plafond_mensualite_d832_10_3_104 = False
                            elif match_arg_350.code == TypePret_Code.Autre:
                                _ = match_arg_350.value
                                temp_calcul_plafond_mensualite_d832_10_3_104 = False
                            match_arg_351 = anciennete_logement
                            if match_arg_351.code == NeufOuAncien_Code.Neuf:
                                _ = match_arg_351.value
                                temp_calcul_plafond_mensualite_d832_10_3_105 = True
                            elif match_arg_351.code == NeufOuAncien_Code.Ancien:
                                _ = match_arg_351.value
                                temp_calcul_plafond_mensualite_d832_10_3_105 = False
                            if ((date_courante_8 >=
                                date_of_numbers(2019,10,1)) and
                                ((date_courante_8 >=
                                date_of_numbers(2020,10,1)) and
                                ((date_signature_pret_1 >=
                                date_of_numbers(2003,6,30)) and
                                ((date_signature_pret_1 <
                                date_of_numbers(2005,8,31)) and
                                (temp_calcul_plafond_mensualite_d832_10_3_105 and
                                temp_calcul_plafond_mensualite_d832_10_3_104))))):
                                match_arg_352 = zone_2
                                if match_arg_352.code == ZoneDHabitation_Code.Zone1:
                                    _ = match_arg_352.value
                                    if (nombre_personnes_a_charge_4 ==
                                        integer_of_string("0")):
                                        match_arg_353 = situation_familiale_calcul_apl_4
                                        if match_arg_353.code == SituationFamilialeCalculAPL_Code.PersonneSeule:
                                            _ = match_arg_353.value
                                            return money_of_cents_string("31616")
                                        elif match_arg_353.code == SituationFamilialeCalculAPL_Code.Couple:
                                            _ = match_arg_353.value
                                            return money_of_cents_string("38141")
                                    else:
                                        return (money_of_cents_string("44666") +
                                            (money_of_cents_string("6525") *
                                            decimal_of_integer((nombre_personnes_a_charge_4 -
                                            integer_of_string("1")))))
                                elif match_arg_352.code == ZoneDHabitation_Code.Zone2:
                                    _ = match_arg_352.value
                                    if (nombre_personnes_a_charge_4 ==
                                        integer_of_string("0")):
                                        match_arg_354 = situation_familiale_calcul_apl_4
                                        if match_arg_354.code == SituationFamilialeCalculAPL_Code.PersonneSeule:
                                            _ = match_arg_354.value
                                            return money_of_cents_string("28214")
                                        elif match_arg_354.code == SituationFamilialeCalculAPL_Code.Couple:
                                            _ = match_arg_354.value
                                            return money_of_cents_string("33959")
                                    else:
                                        return (money_of_cents_string("39704") +
                                            (money_of_cents_string("5745") *
                                            decimal_of_integer((nombre_personnes_a_charge_4 -
                                            integer_of_string("1")))))
                                elif match_arg_352.code == ZoneDHabitation_Code.Zone3:
                                    _ = match_arg_352.value
                                    if (nombre_personnes_a_charge_4 ==
                                        integer_of_string("0")):
                                        match_arg_355 = situation_familiale_calcul_apl_4
                                        if match_arg_355.code == SituationFamilialeCalculAPL_Code.PersonneSeule:
                                            _ = match_arg_355.value
                                            return money_of_cents_string("26339")
                                        elif match_arg_355.code == SituationFamilialeCalculAPL_Code.Couple:
                                            _ = match_arg_355.value
                                            return money_of_cents_string("31584")
                                    else:
                                        return (money_of_cents_string("36829") +
                                            (money_of_cents_string("5245") *
                                            decimal_of_integer((nombre_personnes_a_charge_4 -
                                            integer_of_string("1")))))
                            else:
                                raise EmptyError
                        def temp_calcul_plafond_mensualite_d832_10_3_106(_:Unit):
                            match_arg_356 = type_pret
                            if match_arg_356.code == TypePret_Code.D331_32:
                                _ = match_arg_356.value
                                temp_calcul_plafond_mensualite_d832_10_3_107 = False
                            elif match_arg_356.code == TypePret_Code.D331_63_64:
                                _ = match_arg_356.value
                                temp_calcul_plafond_mensualite_d832_10_3_107 = True
                            elif match_arg_356.code == TypePret_Code.D331_59_8:
                                _ = match_arg_356.value
                                temp_calcul_plafond_mensualite_d832_10_3_107 = False
                            elif match_arg_356.code == TypePret_Code.D331_76_1:
                                _ = match_arg_356.value
                                temp_calcul_plafond_mensualite_d832_10_3_107 = False
                            elif match_arg_356.code == TypePret_Code.Autre:
                                _ = match_arg_356.value
                                temp_calcul_plafond_mensualite_d832_10_3_107 = False
                            match_arg_357 = anciennete_logement
                            if match_arg_357.code == NeufOuAncien_Code.Neuf:
                                _ = match_arg_357.value
                                temp_calcul_plafond_mensualite_d832_10_3_108 = False
                            elif match_arg_357.code == NeufOuAncien_Code.Ancien:
                                _ = match_arg_357.value
                                temp_calcul_plafond_mensualite_d832_10_3_108 = True
                            if ((date_courante_8 >=
                                date_of_numbers(2019,10,1)) and
                                ((date_courante_8 >=
                                date_of_numbers(2020,10,1)) and
                                ((date_signature_pret_1 >=
                                date_of_numbers(2002,6,30)) and
                                ((date_signature_pret_1 <
                                date_of_numbers(2003,6,30)) and
                                (temp_calcul_plafond_mensualite_d832_10_3_108 and
                                temp_calcul_plafond_mensualite_d832_10_3_107))))):
                                match_arg_358 = zone_2
                                if match_arg_358.code == ZoneDHabitation_Code.Zone1:
                                    _ = match_arg_358.value
                                    if (nombre_personnes_a_charge_4 ==
                                        integer_of_string("0")):
                                        match_arg_359 = situation_familiale_calcul_apl_4
                                        if match_arg_359.code == SituationFamilialeCalculAPL_Code.PersonneSeule:
                                            _ = match_arg_359.value
                                            return money_of_cents_string("25147")
                                        elif match_arg_359.code == SituationFamilialeCalculAPL_Code.Couple:
                                            _ = match_arg_359.value
                                            return money_of_cents_string("30347")
                                    else:
                                        return (money_of_cents_string("35547") +
                                            (money_of_cents_string("5200") *
                                            decimal_of_integer((nombre_personnes_a_charge_4 -
                                            integer_of_string("1")))))
                                elif match_arg_358.code == ZoneDHabitation_Code.Zone2:
                                    _ = match_arg_358.value
                                    if (nombre_personnes_a_charge_4 ==
                                        integer_of_string("0")):
                                        match_arg_360 = situation_familiale_calcul_apl_4
                                        if match_arg_360.code == SituationFamilialeCalculAPL_Code.PersonneSeule:
                                            _ = match_arg_360.value
                                            return money_of_cents_string("22417")
                                        elif match_arg_360.code == SituationFamilialeCalculAPL_Code.Couple:
                                            _ = match_arg_360.value
                                            return money_of_cents_string("26999")
                                    else:
                                        return (money_of_cents_string("31581") +
                                            (money_of_cents_string("4582") *
                                            decimal_of_integer((nombre_personnes_a_charge_4 -
                                            integer_of_string("1")))))
                                elif match_arg_358.code == ZoneDHabitation_Code.Zone3:
                                    _ = match_arg_358.value
                                    if (nombre_personnes_a_charge_4 ==
                                        integer_of_string("0")):
                                        match_arg_361 = situation_familiale_calcul_apl_4
                                        if match_arg_361.code == SituationFamilialeCalculAPL_Code.PersonneSeule:
                                            _ = match_arg_361.value
                                            return money_of_cents_string("20935")
                                        elif match_arg_361.code == SituationFamilialeCalculAPL_Code.Couple:
                                            _ = match_arg_361.value
                                            return money_of_cents_string("25116")
                                    else:
                                        return (money_of_cents_string("29297") +
                                            (money_of_cents_string("4181") *
                                            decimal_of_integer((nombre_personnes_a_charge_4 -
                                            integer_of_string("1")))))
                            else:
                                raise EmptyError
                        def temp_calcul_plafond_mensualite_d832_10_3_109(_:Unit):
                            match_arg_362 = type_pret
                            if match_arg_362.code == TypePret_Code.D331_32:
                                _ = match_arg_362.value
                                temp_calcul_plafond_mensualite_d832_10_3_110 = False
                            elif match_arg_362.code == TypePret_Code.D331_63_64:
                                _ = match_arg_362.value
                                temp_calcul_plafond_mensualite_d832_10_3_110 = True
                            elif match_arg_362.code == TypePret_Code.D331_59_8:
                                _ = match_arg_362.value
                                temp_calcul_plafond_mensualite_d832_10_3_110 = False
                            elif match_arg_362.code == TypePret_Code.D331_76_1:
                                _ = match_arg_362.value
                                temp_calcul_plafond_mensualite_d832_10_3_110 = False
                            elif match_arg_362.code == TypePret_Code.Autre:
                                _ = match_arg_362.value
                                temp_calcul_plafond_mensualite_d832_10_3_110 = False
                            match_arg_363 = anciennete_logement
                            if match_arg_363.code == NeufOuAncien_Code.Neuf:
                                _ = match_arg_363.value
                                temp_calcul_plafond_mensualite_d832_10_3_111 = True
                            elif match_arg_363.code == NeufOuAncien_Code.Ancien:
                                _ = match_arg_363.value
                                temp_calcul_plafond_mensualite_d832_10_3_111 = False
                            if ((date_courante_8 >=
                                date_of_numbers(2019,10,1)) and
                                ((date_courante_8 >=
                                date_of_numbers(2020,10,1)) and
                                ((date_signature_pret_1 >=
                                date_of_numbers(2002,6,30)) and
                                ((date_signature_pret_1 <
                                date_of_numbers(2003,6,30)) and
                                (temp_calcul_plafond_mensualite_d832_10_3_111 and
                                temp_calcul_plafond_mensualite_d832_10_3_110))))):
                                match_arg_364 = zone_2
                                if match_arg_364.code == ZoneDHabitation_Code.Zone1:
                                    _ = match_arg_364.value
                                    if (nombre_personnes_a_charge_4 ==
                                        integer_of_string("0")):
                                        match_arg_365 = situation_familiale_calcul_apl_4
                                        if match_arg_365.code == SituationFamilialeCalculAPL_Code.PersonneSeule:
                                            _ = match_arg_365.value
                                            return money_of_cents_string("31241")
                                        elif match_arg_365.code == SituationFamilialeCalculAPL_Code.Couple:
                                            _ = match_arg_365.value
                                            return money_of_cents_string("37689")
                                    else:
                                        return (money_of_cents_string("44137") +
                                            (money_of_cents_string("6448") *
                                            decimal_of_integer((nombre_personnes_a_charge_4 -
                                            integer_of_string("1")))))
                                elif match_arg_364.code == ZoneDHabitation_Code.Zone2:
                                    _ = match_arg_364.value
                                    if (nombre_personnes_a_charge_4 ==
                                        integer_of_string("0")):
                                        match_arg_366 = situation_familiale_calcul_apl_4
                                        if match_arg_366.code == SituationFamilialeCalculAPL_Code.PersonneSeule:
                                            _ = match_arg_366.value
                                            return money_of_cents_string("27879")
                                        elif match_arg_366.code == SituationFamilialeCalculAPL_Code.Couple:
                                            _ = match_arg_366.value
                                            return money_of_cents_string("33556")
                                    else:
                                        return (money_of_cents_string("39233") +
                                            (money_of_cents_string("5677") *
                                            decimal_of_integer((nombre_personnes_a_charge_4 -
                                            integer_of_string("1")))))
                                elif match_arg_364.code == ZoneDHabitation_Code.Zone3:
                                    _ = match_arg_364.value
                                    if (nombre_personnes_a_charge_4 ==
                                        integer_of_string("0")):
                                        match_arg_367 = situation_familiale_calcul_apl_4
                                        if match_arg_367.code == SituationFamilialeCalculAPL_Code.PersonneSeule:
                                            _ = match_arg_367.value
                                            return money_of_cents_string("26027")
                                        elif match_arg_367.code == SituationFamilialeCalculAPL_Code.Couple:
                                            _ = match_arg_367.value
                                            return money_of_cents_string("31210")
                                    else:
                                        return (money_of_cents_string("36393") +
                                            (money_of_cents_string("5183") *
                                            decimal_of_integer((nombre_personnes_a_charge_4 -
                                            integer_of_string("1")))))
                            else:
                                raise EmptyError
                        def temp_calcul_plafond_mensualite_d832_10_3_112(_:Unit):
                            match_arg_368 = type_pret
                            if match_arg_368.code == TypePret_Code.D331_32:
                                _ = match_arg_368.value
                                temp_calcul_plafond_mensualite_d832_10_3_113 = False
                            elif match_arg_368.code == TypePret_Code.D331_63_64:
                                _ = match_arg_368.value
                                temp_calcul_plafond_mensualite_d832_10_3_113 = True
                            elif match_arg_368.code == TypePret_Code.D331_59_8:
                                _ = match_arg_368.value
                                temp_calcul_plafond_mensualite_d832_10_3_113 = False
                            elif match_arg_368.code == TypePret_Code.D331_76_1:
                                _ = match_arg_368.value
                                temp_calcul_plafond_mensualite_d832_10_3_113 = False
                            elif match_arg_368.code == TypePret_Code.Autre:
                                _ = match_arg_368.value
                                temp_calcul_plafond_mensualite_d832_10_3_113 = False
                            match_arg_369 = anciennete_logement
                            if match_arg_369.code == NeufOuAncien_Code.Neuf:
                                _ = match_arg_369.value
                                temp_calcul_plafond_mensualite_d832_10_3_114 = False
                            elif match_arg_369.code == NeufOuAncien_Code.Ancien:
                                _ = match_arg_369.value
                                temp_calcul_plafond_mensualite_d832_10_3_114 = True
                            if ((date_courante_8 >=
                                date_of_numbers(2019,10,1)) and
                                ((date_courante_8 >=
                                date_of_numbers(2020,10,1)) and
                                ((date_signature_pret_1 >=
                                date_of_numbers(2002,1,1)) and
                                ((date_signature_pret_1 <
                                date_of_numbers(2002,6,30)) and
                                (temp_calcul_plafond_mensualite_d832_10_3_114 and
                                temp_calcul_plafond_mensualite_d832_10_3_113))))):
                                match_arg_370 = zone_2
                                if match_arg_370.code == ZoneDHabitation_Code.Zone1:
                                    _ = match_arg_370.value
                                    if (nombre_personnes_a_charge_4 ==
                                        integer_of_string("0")):
                                        match_arg_371 = situation_familiale_calcul_apl_4
                                        if match_arg_371.code == SituationFamilialeCalculAPL_Code.PersonneSeule:
                                            _ = match_arg_371.value
                                            return money_of_cents_string("24849")
                                        elif match_arg_371.code == SituationFamilialeCalculAPL_Code.Couple:
                                            _ = match_arg_371.value
                                            return money_of_cents_string("29987")
                                    else:
                                        return (money_of_cents_string("35125") +
                                            (money_of_cents_string("5138") *
                                            decimal_of_integer((nombre_personnes_a_charge_4 -
                                            integer_of_string("1")))))
                                elif match_arg_370.code == ZoneDHabitation_Code.Zone2:
                                    _ = match_arg_370.value
                                    if (nombre_personnes_a_charge_4 ==
                                        integer_of_string("0")):
                                        match_arg_372 = situation_familiale_calcul_apl_4
                                        if match_arg_372.code == SituationFamilialeCalculAPL_Code.PersonneSeule:
                                            _ = match_arg_372.value
                                            return money_of_cents_string("22151")
                                        elif match_arg_372.code == SituationFamilialeCalculAPL_Code.Couple:
                                            _ = match_arg_372.value
                                            return money_of_cents_string("26679")
                                    else:
                                        return (money_of_cents_string("31207") +
                                            (money_of_cents_string("4528") *
                                            decimal_of_integer((nombre_personnes_a_charge_4 -
                                            integer_of_string("1")))))
                                elif match_arg_370.code == ZoneDHabitation_Code.Zone3:
                                    _ = match_arg_370.value
                                    if (nombre_personnes_a_charge_4 ==
                                        integer_of_string("0")):
                                        match_arg_373 = situation_familiale_calcul_apl_4
                                        if match_arg_373.code == SituationFamilialeCalculAPL_Code.PersonneSeule:
                                            _ = match_arg_373.value
                                            return money_of_cents_string("20687")
                                        elif match_arg_373.code == SituationFamilialeCalculAPL_Code.Couple:
                                            _ = match_arg_373.value
                                            return money_of_cents_string("24818")
                                    else:
                                        return (money_of_cents_string("28949") +
                                            (money_of_cents_string("4131") *
                                            decimal_of_integer((nombre_personnes_a_charge_4 -
                                            integer_of_string("1")))))
                            else:
                                raise EmptyError
                        def temp_calcul_plafond_mensualite_d832_10_3_115(_:Unit):
                            match_arg_374 = type_pret
                            if match_arg_374.code == TypePret_Code.D331_32:
                                _ = match_arg_374.value
                                temp_calcul_plafond_mensualite_d832_10_3_116 = False
                            elif match_arg_374.code == TypePret_Code.D331_63_64:
                                _ = match_arg_374.value
                                temp_calcul_plafond_mensualite_d832_10_3_116 = True
                            elif match_arg_374.code == TypePret_Code.D331_59_8:
                                _ = match_arg_374.value
                                temp_calcul_plafond_mensualite_d832_10_3_116 = False
                            elif match_arg_374.code == TypePret_Code.D331_76_1:
                                _ = match_arg_374.value
                                temp_calcul_plafond_mensualite_d832_10_3_116 = False
                            elif match_arg_374.code == TypePret_Code.Autre:
                                _ = match_arg_374.value
                                temp_calcul_plafond_mensualite_d832_10_3_116 = False
                            match_arg_375 = anciennete_logement
                            if match_arg_375.code == NeufOuAncien_Code.Neuf:
                                _ = match_arg_375.value
                                temp_calcul_plafond_mensualite_d832_10_3_117 = False
                            elif match_arg_375.code == NeufOuAncien_Code.Ancien:
                                _ = match_arg_375.value
                                temp_calcul_plafond_mensualite_d832_10_3_117 = True
                            if ((date_courante_8 >=
                                date_of_numbers(2019,10,1)) and
                                ((date_courante_8 >=
                                date_of_numbers(2020,10,1)) and
                                ((date_signature_pret_1 >=
                                date_of_numbers(2001,7,1)) and
                                ((date_signature_pret_1 <
                                date_of_numbers(2001,12,31)) and
                                (temp_calcul_plafond_mensualite_d832_10_3_117 and
                                temp_calcul_plafond_mensualite_d832_10_3_116))))):
                                match_arg_376 = zone_2
                                if match_arg_376.code == ZoneDHabitation_Code.Zone1:
                                    _ = match_arg_376.value
                                    if (nombre_personnes_a_charge_4 ==
                                        integer_of_string("0")):
                                        match_arg_377 = situation_familiale_calcul_apl_4
                                        if match_arg_377.code == SituationFamilialeCalculAPL_Code.PersonneSeule:
                                            _ = match_arg_377.value
                                            temp_calcul_plafond_mensualite_d832_10_3_118 = money_of_cents_string("163000")
                                        elif match_arg_377.code == SituationFamilialeCalculAPL_Code.Couple:
                                            _ = match_arg_377.value
                                            temp_calcul_plafond_mensualite_d832_10_3_118 = money_of_cents_string("196700")
                                    else:
                                        temp_calcul_plafond_mensualite_d832_10_3_118 = (money_of_cents_string("230400") +
                                            (money_of_cents_string("33700") *
                                            decimal_of_integer((nombre_personnes_a_charge_4 -
                                            integer_of_string("1")))))
                                elif match_arg_376.code == ZoneDHabitation_Code.Zone2:
                                    _ = match_arg_376.value
                                    if (nombre_personnes_a_charge_4 ==
                                        integer_of_string("0")):
                                        match_arg_378 = situation_familiale_calcul_apl_4
                                        if match_arg_378.code == SituationFamilialeCalculAPL_Code.PersonneSeule:
                                            _ = match_arg_378.value
                                            temp_calcul_plafond_mensualite_d832_10_3_118 = money_of_cents_string("145300")
                                        elif match_arg_378.code == SituationFamilialeCalculAPL_Code.Couple:
                                            _ = match_arg_378.value
                                            temp_calcul_plafond_mensualite_d832_10_3_118 = money_of_cents_string("175000")
                                    else:
                                        temp_calcul_plafond_mensualite_d832_10_3_118 = (money_of_cents_string("204700") +
                                            (money_of_cents_string("29700") *
                                            decimal_of_integer((nombre_personnes_a_charge_4 -
                                            integer_of_string("1")))))
                                elif match_arg_376.code == ZoneDHabitation_Code.Zone3:
                                    _ = match_arg_376.value
                                    if (nombre_personnes_a_charge_4 ==
                                        integer_of_string("0")):
                                        match_arg_379 = situation_familiale_calcul_apl_4
                                        if match_arg_379.code == SituationFamilialeCalculAPL_Code.PersonneSeule:
                                            _ = match_arg_379.value
                                            temp_calcul_plafond_mensualite_d832_10_3_118 = money_of_cents_string("135700")
                                        elif match_arg_379.code == SituationFamilialeCalculAPL_Code.Couple:
                                            _ = match_arg_379.value
                                            temp_calcul_plafond_mensualite_d832_10_3_118 = money_of_cents_string("162800")
                                    else:
                                        temp_calcul_plafond_mensualite_d832_10_3_118 = (money_of_cents_string("189900") +
                                            (money_of_cents_string("27100") *
                                            decimal_of_integer((nombre_personnes_a_charge_4 -
                                            integer_of_string("1")))))
                                return (temp_calcul_plafond_mensualite_d832_10_3_118 *
                                    taux_francs_vers_euros)
                            else:
                                raise EmptyError
                        def temp_calcul_plafond_mensualite_d832_10_3_119(_:Unit):
                            match_arg_380 = type_pret
                            if match_arg_380.code == TypePret_Code.D331_32:
                                _ = match_arg_380.value
                                temp_calcul_plafond_mensualite_d832_10_3_120 = False
                            elif match_arg_380.code == TypePret_Code.D331_63_64:
                                _ = match_arg_380.value
                                temp_calcul_plafond_mensualite_d832_10_3_120 = True
                            elif match_arg_380.code == TypePret_Code.D331_59_8:
                                _ = match_arg_380.value
                                temp_calcul_plafond_mensualite_d832_10_3_120 = False
                            elif match_arg_380.code == TypePret_Code.D331_76_1:
                                _ = match_arg_380.value
                                temp_calcul_plafond_mensualite_d832_10_3_120 = False
                            elif match_arg_380.code == TypePret_Code.Autre:
                                _ = match_arg_380.value
                                temp_calcul_plafond_mensualite_d832_10_3_120 = False
                            match_arg_381 = anciennete_logement
                            if match_arg_381.code == NeufOuAncien_Code.Neuf:
                                _ = match_arg_381.value
                                temp_calcul_plafond_mensualite_d832_10_3_121 = True
                            elif match_arg_381.code == NeufOuAncien_Code.Ancien:
                                _ = match_arg_381.value
                                temp_calcul_plafond_mensualite_d832_10_3_121 = False
                            if ((date_courante_8 >=
                                date_of_numbers(2019,10,1)) and
                                ((date_courante_8 >=
                                date_of_numbers(2020,10,1)) and
                                ((date_signature_pret_1 >=
                                date_of_numbers(2002,1,1)) and
                                ((date_signature_pret_1 <
                                date_of_numbers(2002,6,30)) and
                                (temp_calcul_plafond_mensualite_d832_10_3_121 and
                                temp_calcul_plafond_mensualite_d832_10_3_120))))):
                                match_arg_382 = zone_2
                                if match_arg_382.code == ZoneDHabitation_Code.Zone1:
                                    _ = match_arg_382.value
                                    if (nombre_personnes_a_charge_4 ==
                                        integer_of_string("0")):
                                        match_arg_383 = situation_familiale_calcul_apl_4
                                        if match_arg_383.code == SituationFamilialeCalculAPL_Code.PersonneSeule:
                                            _ = match_arg_383.value
                                            return money_of_cents_string("30871")
                                        elif match_arg_383.code == SituationFamilialeCalculAPL_Code.Couple:
                                            _ = match_arg_383.value
                                            return money_of_cents_string("37243")
                                    else:
                                        return (money_of_cents_string("43615") +
                                            (money_of_cents_string("6372") *
                                            decimal_of_integer((nombre_personnes_a_charge_4 -
                                            integer_of_string("1")))))
                                elif match_arg_382.code == ZoneDHabitation_Code.Zone2:
                                    _ = match_arg_382.value
                                    if (nombre_personnes_a_charge_4 ==
                                        integer_of_string("0")):
                                        match_arg_384 = situation_familiale_calcul_apl_4
                                        if match_arg_384.code == SituationFamilialeCalculAPL_Code.PersonneSeule:
                                            _ = match_arg_384.value
                                            return money_of_cents_string("27548")
                                        elif match_arg_384.code == SituationFamilialeCalculAPL_Code.Couple:
                                            _ = match_arg_384.value
                                            return money_of_cents_string("33148")
                                    else:
                                        return (money_of_cents_string("38768") +
                                            (money_of_cents_string("5610") *
                                            decimal_of_integer((nombre_personnes_a_charge_4 -
                                            integer_of_string("1")))))
                                elif match_arg_382.code == ZoneDHabitation_Code.Zone3:
                                    _ = match_arg_382.value
                                    if (nombre_personnes_a_charge_4 ==
                                        integer_of_string("0")):
                                        match_arg_385 = situation_familiale_calcul_apl_4
                                        if match_arg_385.code == SituationFamilialeCalculAPL_Code.PersonneSeule:
                                            _ = match_arg_385.value
                                            return money_of_cents_string("25718")
                                        elif match_arg_385.code == SituationFamilialeCalculAPL_Code.Couple:
                                            _ = match_arg_385.value
                                            return money_of_cents_string("30840")
                                    else:
                                        return (money_of_cents_string("35962") +
                                            (money_of_cents_string("5122") *
                                            decimal_of_integer((nombre_personnes_a_charge_4 -
                                            integer_of_string("1")))))
                            else:
                                raise EmptyError
                        def temp_calcul_plafond_mensualite_d832_10_3_122(_:Unit):
                            match_arg_386 = type_pret
                            if match_arg_386.code == TypePret_Code.D331_32:
                                _ = match_arg_386.value
                                temp_calcul_plafond_mensualite_d832_10_3_123 = False
                            elif match_arg_386.code == TypePret_Code.D331_63_64:
                                _ = match_arg_386.value
                                temp_calcul_plafond_mensualite_d832_10_3_123 = True
                            elif match_arg_386.code == TypePret_Code.D331_59_8:
                                _ = match_arg_386.value
                                temp_calcul_plafond_mensualite_d832_10_3_123 = False
                            elif match_arg_386.code == TypePret_Code.D331_76_1:
                                _ = match_arg_386.value
                                temp_calcul_plafond_mensualite_d832_10_3_123 = False
                            elif match_arg_386.code == TypePret_Code.Autre:
                                _ = match_arg_386.value
                                temp_calcul_plafond_mensualite_d832_10_3_123 = False
                            match_arg_387 = anciennete_logement
                            if match_arg_387.code == NeufOuAncien_Code.Neuf:
                                _ = match_arg_387.value
                                temp_calcul_plafond_mensualite_d832_10_3_124 = True
                            elif match_arg_387.code == NeufOuAncien_Code.Ancien:
                                _ = match_arg_387.value
                                temp_calcul_plafond_mensualite_d832_10_3_124 = False
                            if ((date_courante_8 >=
                                date_of_numbers(2019,10,1)) and
                                ((date_courante_8 >=
                                date_of_numbers(2020,10,1)) and
                                ((date_signature_pret_1 >=
                                date_of_numbers(2001,7,1)) and
                                ((date_signature_pret_1 <
                                date_of_numbers(2001,12,31)) and
                                (temp_calcul_plafond_mensualite_d832_10_3_124 and
                                temp_calcul_plafond_mensualite_d832_10_3_123))))):
                                match_arg_388 = zone_2
                                if match_arg_388.code == ZoneDHabitation_Code.Zone1:
                                    _ = match_arg_388.value
                                    if (nombre_personnes_a_charge_4 ==
                                        integer_of_string("0")):
                                        match_arg_389 = situation_familiale_calcul_apl_4
                                        if match_arg_389.code == SituationFamilialeCalculAPL_Code.PersonneSeule:
                                            _ = match_arg_389.value
                                            temp_calcul_plafond_mensualite_d832_10_3_125 = money_of_cents_string("202500")
                                        elif match_arg_389.code == SituationFamilialeCalculAPL_Code.Couple:
                                            _ = match_arg_389.value
                                            temp_calcul_plafond_mensualite_d832_10_3_125 = money_of_cents_string("244300")
                                    else:
                                        temp_calcul_plafond_mensualite_d832_10_3_125 = (money_of_cents_string("286100") +
                                            (money_of_cents_string("41800") *
                                            decimal_of_integer((nombre_personnes_a_charge_4 -
                                            integer_of_string("1")))))
                                elif match_arg_388.code == ZoneDHabitation_Code.Zone2:
                                    _ = match_arg_388.value
                                    if (nombre_personnes_a_charge_4 ==
                                        integer_of_string("0")):
                                        match_arg_390 = situation_familiale_calcul_apl_4
                                        if match_arg_390.code == SituationFamilialeCalculAPL_Code.PersonneSeule:
                                            _ = match_arg_390.value
                                            temp_calcul_plafond_mensualite_d832_10_3_125 = money_of_cents_string("180700")
                                        elif match_arg_390.code == SituationFamilialeCalculAPL_Code.Couple:
                                            _ = match_arg_390.value
                                            temp_calcul_plafond_mensualite_d832_10_3_125 = money_of_cents_string("217500")
                                    else:
                                        temp_calcul_plafond_mensualite_d832_10_3_125 = (money_of_cents_string("254300") +
                                            (money_of_cents_string("36800") *
                                            decimal_of_integer((nombre_personnes_a_charge_4 -
                                            integer_of_string("1")))))
                                elif match_arg_388.code == ZoneDHabitation_Code.Zone3:
                                    _ = match_arg_388.value
                                    if (nombre_personnes_a_charge_4 ==
                                        integer_of_string("0")):
                                        match_arg_391 = situation_familiale_calcul_apl_4
                                        if match_arg_391.code == SituationFamilialeCalculAPL_Code.PersonneSeule:
                                            _ = match_arg_391.value
                                            temp_calcul_plafond_mensualite_d832_10_3_125 = money_of_cents_string("168700")
                                        elif match_arg_391.code == SituationFamilialeCalculAPL_Code.Couple:
                                            _ = match_arg_391.value
                                            temp_calcul_plafond_mensualite_d832_10_3_125 = money_of_cents_string("202300")
                                    else:
                                        temp_calcul_plafond_mensualite_d832_10_3_125 = (money_of_cents_string("235900") +
                                            (money_of_cents_string("33600") *
                                            decimal_of_integer((nombre_personnes_a_charge_4 -
                                            integer_of_string("1")))))
                                return (temp_calcul_plafond_mensualite_d832_10_3_125 *
                                    taux_francs_vers_euros)
                            else:
                                raise EmptyError
                        def temp_calcul_plafond_mensualite_d832_10_3_126(_:Unit):
                            match_arg_392 = type_pret
                            if match_arg_392.code == TypePret_Code.D331_32:
                                _ = match_arg_392.value
                                temp_calcul_plafond_mensualite_d832_10_3_127 = False
                            elif match_arg_392.code == TypePret_Code.D331_63_64:
                                _ = match_arg_392.value
                                temp_calcul_plafond_mensualite_d832_10_3_127 = True
                            elif match_arg_392.code == TypePret_Code.D331_59_8:
                                _ = match_arg_392.value
                                temp_calcul_plafond_mensualite_d832_10_3_127 = False
                            elif match_arg_392.code == TypePret_Code.D331_76_1:
                                _ = match_arg_392.value
                                temp_calcul_plafond_mensualite_d832_10_3_127 = False
                            elif match_arg_392.code == TypePret_Code.Autre:
                                _ = match_arg_392.value
                                temp_calcul_plafond_mensualite_d832_10_3_127 = False
                            match_arg_393 = anciennete_logement
                            if match_arg_393.code == NeufOuAncien_Code.Neuf:
                                _ = match_arg_393.value
                                temp_calcul_plafond_mensualite_d832_10_3_128 = False
                            elif match_arg_393.code == NeufOuAncien_Code.Ancien:
                                _ = match_arg_393.value
                                temp_calcul_plafond_mensualite_d832_10_3_128 = True
                            if ((date_courante_8 >=
                                date_of_numbers(2019,10,1)) and
                                ((date_courante_8 >=
                                date_of_numbers(2020,10,1)) and
                                ((date_signature_pret_1 >=
                                date_of_numbers(2000,6,30)) and
                                ((date_signature_pret_1 <=
                                date_of_numbers(2001,6,30)) and
                                (temp_calcul_plafond_mensualite_d832_10_3_128 and
                                temp_calcul_plafond_mensualite_d832_10_3_127))))):
                                match_arg_394 = zone_2
                                if match_arg_394.code == ZoneDHabitation_Code.Zone1:
                                    _ = match_arg_394.value
                                    if (nombre_personnes_a_charge_4 ==
                                        integer_of_string("0")):
                                        match_arg_395 = situation_familiale_calcul_apl_4
                                        if match_arg_395.code == SituationFamilialeCalculAPL_Code.PersonneSeule:
                                            _ = match_arg_395.value
                                            temp_calcul_plafond_mensualite_d832_10_3_129 = money_of_cents_string("161100")
                                        elif match_arg_395.code == SituationFamilialeCalculAPL_Code.Couple:
                                            _ = match_arg_395.value
                                            temp_calcul_plafond_mensualite_d832_10_3_129 = money_of_cents_string("194400")
                                    else:
                                        temp_calcul_plafond_mensualite_d832_10_3_129 = (money_of_cents_string("227700") +
                                            (money_of_cents_string("33300") *
                                            decimal_of_integer((nombre_personnes_a_charge_4 -
                                            integer_of_string("1")))))
                                elif match_arg_394.code == ZoneDHabitation_Code.Zone2:
                                    _ = match_arg_394.value
                                    if (nombre_personnes_a_charge_4 ==
                                        integer_of_string("0")):
                                        match_arg_396 = situation_familiale_calcul_apl_4
                                        if match_arg_396.code == SituationFamilialeCalculAPL_Code.PersonneSeule:
                                            _ = match_arg_396.value
                                            temp_calcul_plafond_mensualite_d832_10_3_129 = money_of_cents_string("143600")
                                        elif match_arg_396.code == SituationFamilialeCalculAPL_Code.Couple:
                                            _ = match_arg_396.value
                                            temp_calcul_plafond_mensualite_d832_10_3_129 = money_of_cents_string("172900")
                                    else:
                                        temp_calcul_plafond_mensualite_d832_10_3_129 = (money_of_cents_string("202200") +
                                            (money_of_cents_string("29300") *
                                            decimal_of_integer((nombre_personnes_a_charge_4 -
                                            integer_of_string("1")))))
                                elif match_arg_394.code == ZoneDHabitation_Code.Zone3:
                                    _ = match_arg_394.value
                                    if (nombre_personnes_a_charge_4 ==
                                        integer_of_string("0")):
                                        match_arg_397 = situation_familiale_calcul_apl_4
                                        if match_arg_397.code == SituationFamilialeCalculAPL_Code.PersonneSeule:
                                            _ = match_arg_397.value
                                            temp_calcul_plafond_mensualite_d832_10_3_129 = money_of_cents_string("134100")
                                        elif match_arg_397.code == SituationFamilialeCalculAPL_Code.Couple:
                                            _ = match_arg_397.value
                                            temp_calcul_plafond_mensualite_d832_10_3_129 = money_of_cents_string("160900")
                                    else:
                                        temp_calcul_plafond_mensualite_d832_10_3_129 = (money_of_cents_string("187700") +
                                            (money_of_cents_string("26800") *
                                            decimal_of_integer((nombre_personnes_a_charge_4 -
                                            integer_of_string("1")))))
                                return (temp_calcul_plafond_mensualite_d832_10_3_129 *
                                    taux_francs_vers_euros)
                            else:
                                raise EmptyError
                        def temp_calcul_plafond_mensualite_d832_10_3_130(_:Unit):
                            match_arg_398 = type_pret
                            if match_arg_398.code == TypePret_Code.D331_32:
                                _ = match_arg_398.value
                                temp_calcul_plafond_mensualite_d832_10_3_131 = False
                            elif match_arg_398.code == TypePret_Code.D331_63_64:
                                _ = match_arg_398.value
                                temp_calcul_plafond_mensualite_d832_10_3_131 = True
                            elif match_arg_398.code == TypePret_Code.D331_59_8:
                                _ = match_arg_398.value
                                temp_calcul_plafond_mensualite_d832_10_3_131 = False
                            elif match_arg_398.code == TypePret_Code.D331_76_1:
                                _ = match_arg_398.value
                                temp_calcul_plafond_mensualite_d832_10_3_131 = False
                            elif match_arg_398.code == TypePret_Code.Autre:
                                _ = match_arg_398.value
                                temp_calcul_plafond_mensualite_d832_10_3_131 = False
                            match_arg_399 = anciennete_logement
                            if match_arg_399.code == NeufOuAncien_Code.Neuf:
                                _ = match_arg_399.value
                                temp_calcul_plafond_mensualite_d832_10_3_132 = True
                            elif match_arg_399.code == NeufOuAncien_Code.Ancien:
                                _ = match_arg_399.value
                                temp_calcul_plafond_mensualite_d832_10_3_132 = False
                            if ((date_courante_8 >=
                                date_of_numbers(2019,10,1)) and
                                ((date_courante_8 >=
                                date_of_numbers(2020,10,1)) and
                                ((date_signature_pret_1 >=
                                date_of_numbers(2000,6,30)) and
                                ((date_signature_pret_1 <=
                                date_of_numbers(2001,6,30)) and
                                (temp_calcul_plafond_mensualite_d832_10_3_132 and
                                temp_calcul_plafond_mensualite_d832_10_3_131))))):
                                match_arg_400 = zone_2
                                if match_arg_400.code == ZoneDHabitation_Code.Zone1:
                                    _ = match_arg_400.value
                                    if (nombre_personnes_a_charge_4 ==
                                        integer_of_string("0")):
                                        match_arg_401 = situation_familiale_calcul_apl_4
                                        if match_arg_401.code == SituationFamilialeCalculAPL_Code.PersonneSeule:
                                            _ = match_arg_401.value
                                            temp_calcul_plafond_mensualite_d832_10_3_133 = money_of_cents_string("200100")
                                        elif match_arg_401.code == SituationFamilialeCalculAPL_Code.Couple:
                                            _ = match_arg_401.value
                                            temp_calcul_plafond_mensualite_d832_10_3_133 = money_of_cents_string("141400")
                                    else:
                                        temp_calcul_plafond_mensualite_d832_10_3_133 = (money_of_cents_string("182700") +
                                            (money_of_cents_string("41300") *
                                            decimal_of_integer((nombre_personnes_a_charge_4 -
                                            integer_of_string("1")))))
                                elif match_arg_400.code == ZoneDHabitation_Code.Zone2:
                                    _ = match_arg_400.value
                                    if (nombre_personnes_a_charge_4 ==
                                        integer_of_string("0")):
                                        match_arg_402 = situation_familiale_calcul_apl_4
                                        if match_arg_402.code == SituationFamilialeCalculAPL_Code.PersonneSeule:
                                            _ = match_arg_402.value
                                            temp_calcul_plafond_mensualite_d832_10_3_133 = money_of_cents_string("178600")
                                        elif match_arg_402.code == SituationFamilialeCalculAPL_Code.Couple:
                                            _ = match_arg_402.value
                                            temp_calcul_plafond_mensualite_d832_10_3_133 = money_of_cents_string("215000")
                                    else:
                                        temp_calcul_plafond_mensualite_d832_10_3_133 = (money_of_cents_string("251400") +
                                            (money_of_cents_string("36400") *
                                            decimal_of_integer((nombre_personnes_a_charge_4 -
                                            integer_of_string("1")))))
                                elif match_arg_400.code == ZoneDHabitation_Code.Zone3:
                                    _ = match_arg_400.value
                                    if (nombre_personnes_a_charge_4 ==
                                        integer_of_string("0")):
                                        match_arg_403 = situation_familiale_calcul_apl_4
                                        if match_arg_403.code == SituationFamilialeCalculAPL_Code.PersonneSeule:
                                            _ = match_arg_403.value
                                            temp_calcul_plafond_mensualite_d832_10_3_133 = money_of_cents_string("166700")
                                        elif match_arg_403.code == SituationFamilialeCalculAPL_Code.Couple:
                                            _ = match_arg_403.value
                                            temp_calcul_plafond_mensualite_d832_10_3_133 = money_of_cents_string("199900")
                                    else:
                                        temp_calcul_plafond_mensualite_d832_10_3_133 = (money_of_cents_string("233100") +
                                            (money_of_cents_string("33200") *
                                            decimal_of_integer((nombre_personnes_a_charge_4 -
                                            integer_of_string("1")))))
                                return (temp_calcul_plafond_mensualite_d832_10_3_133 *
                                    taux_francs_vers_euros)
                            else:
                                raise EmptyError
                        def temp_calcul_plafond_mensualite_d832_10_3_134(_:Unit):
                            match_arg_404 = type_pret
                            if match_arg_404.code == TypePret_Code.D331_32:
                                _ = match_arg_404.value
                                temp_calcul_plafond_mensualite_d832_10_3_135 = False
                            elif match_arg_404.code == TypePret_Code.D331_63_64:
                                _ = match_arg_404.value
                                temp_calcul_plafond_mensualite_d832_10_3_135 = True
                            elif match_arg_404.code == TypePret_Code.D331_59_8:
                                _ = match_arg_404.value
                                temp_calcul_plafond_mensualite_d832_10_3_135 = False
                            elif match_arg_404.code == TypePret_Code.D331_76_1:
                                _ = match_arg_404.value
                                temp_calcul_plafond_mensualite_d832_10_3_135 = False
                            elif match_arg_404.code == TypePret_Code.Autre:
                                _ = match_arg_404.value
                                temp_calcul_plafond_mensualite_d832_10_3_135 = False
                            match_arg_405 = anciennete_logement
                            if match_arg_405.code == NeufOuAncien_Code.Neuf:
                                _ = match_arg_405.value
                                temp_calcul_plafond_mensualite_d832_10_3_136 = False
                            elif match_arg_405.code == NeufOuAncien_Code.Ancien:
                                _ = match_arg_405.value
                                temp_calcul_plafond_mensualite_d832_10_3_136 = True
                            if ((date_courante_8 >=
                                date_of_numbers(2019,10,1)) and
                                ((date_courante_8 >=
                                date_of_numbers(2020,10,1)) and
                                ((date_signature_pret_1 >=
                                date_of_numbers(1994,11,27)) and
                                ((date_signature_pret_1 <
                                date_of_numbers(2000,6,30)) and
                                (temp_calcul_plafond_mensualite_d832_10_3_136 and
                                temp_calcul_plafond_mensualite_d832_10_3_135))))):
                                match_arg_406 = zone_2
                                if match_arg_406.code == ZoneDHabitation_Code.Zone1:
                                    _ = match_arg_406.value
                                    if (nombre_personnes_a_charge_4 ==
                                        integer_of_string("0")):
                                        match_arg_407 = situation_familiale_calcul_apl_4
                                        if match_arg_407.code == SituationFamilialeCalculAPL_Code.PersonneSeule:
                                            _ = match_arg_407.value
                                            temp_calcul_plafond_mensualite_d832_10_3_137 = money_of_cents_string("159500")
                                        elif match_arg_407.code == SituationFamilialeCalculAPL_Code.Couple:
                                            _ = match_arg_407.value
                                            temp_calcul_plafond_mensualite_d832_10_3_137 = money_of_cents_string("192500")
                                    else:
                                        temp_calcul_plafond_mensualite_d832_10_3_137 = (money_of_cents_string("225500") +
                                            (money_of_cents_string("33000") *
                                            decimal_of_integer((nombre_personnes_a_charge_4 -
                                            integer_of_string("1")))))
                                elif match_arg_406.code == ZoneDHabitation_Code.Zone2:
                                    _ = match_arg_406.value
                                    if (nombre_personnes_a_charge_4 ==
                                        integer_of_string("0")):
                                        match_arg_408 = situation_familiale_calcul_apl_4
                                        if match_arg_408.code == SituationFamilialeCalculAPL_Code.PersonneSeule:
                                            _ = match_arg_408.value
                                            temp_calcul_plafond_mensualite_d832_10_3_137 = money_of_cents_string("142200")
                                        elif match_arg_408.code == SituationFamilialeCalculAPL_Code.Couple:
                                            _ = match_arg_408.value
                                            temp_calcul_plafond_mensualite_d832_10_3_137 = money_of_cents_string("171200")
                                    else:
                                        temp_calcul_plafond_mensualite_d832_10_3_137 = (money_of_cents_string("200200") +
                                            (money_of_cents_string("29000") *
                                            decimal_of_integer((nombre_personnes_a_charge_4 -
                                            integer_of_string("1")))))
                                elif match_arg_406.code == ZoneDHabitation_Code.Zone3:
                                    _ = match_arg_406.value
                                    if (nombre_personnes_a_charge_4 ==
                                        integer_of_string("0")):
                                        match_arg_409 = situation_familiale_calcul_apl_4
                                        if match_arg_409.code == SituationFamilialeCalculAPL_Code.PersonneSeule:
                                            _ = match_arg_409.value
                                            temp_calcul_plafond_mensualite_d832_10_3_137 = money_of_cents_string("132800")
                                        elif match_arg_409.code == SituationFamilialeCalculAPL_Code.Couple:
                                            _ = match_arg_409.value
                                            temp_calcul_plafond_mensualite_d832_10_3_137 = money_of_cents_string("159300")
                                    else:
                                        temp_calcul_plafond_mensualite_d832_10_3_137 = (money_of_cents_string("185800") +
                                            (money_of_cents_string("26500") *
                                            decimal_of_integer((nombre_personnes_a_charge_4 -
                                            integer_of_string("1")))))
                                return (temp_calcul_plafond_mensualite_d832_10_3_137 *
                                    taux_francs_vers_euros)
                            else:
                                raise EmptyError
                        def temp_calcul_plafond_mensualite_d832_10_3_138(_:Unit):
                            match_arg_410 = type_pret
                            if match_arg_410.code == TypePret_Code.D331_32:
                                _ = match_arg_410.value
                                temp_calcul_plafond_mensualite_d832_10_3_139 = False
                            elif match_arg_410.code == TypePret_Code.D331_63_64:
                                _ = match_arg_410.value
                                temp_calcul_plafond_mensualite_d832_10_3_139 = True
                            elif match_arg_410.code == TypePret_Code.D331_59_8:
                                _ = match_arg_410.value
                                temp_calcul_plafond_mensualite_d832_10_3_139 = False
                            elif match_arg_410.code == TypePret_Code.D331_76_1:
                                _ = match_arg_410.value
                                temp_calcul_plafond_mensualite_d832_10_3_139 = False
                            elif match_arg_410.code == TypePret_Code.Autre:
                                _ = match_arg_410.value
                                temp_calcul_plafond_mensualite_d832_10_3_139 = False
                            match_arg_411 = anciennete_logement
                            if match_arg_411.code == NeufOuAncien_Code.Neuf:
                                _ = match_arg_411.value
                                temp_calcul_plafond_mensualite_d832_10_3_140 = True
                            elif match_arg_411.code == NeufOuAncien_Code.Ancien:
                                _ = match_arg_411.value
                                temp_calcul_plafond_mensualite_d832_10_3_140 = False
                            if ((date_courante_8 >=
                                date_of_numbers(2019,10,1)) and
                                ((date_courante_8 >=
                                date_of_numbers(2020,10,1)) and
                                ((date_signature_pret_1 >=
                                date_of_numbers(1994,11,27)) and
                                ((date_signature_pret_1 <
                                date_of_numbers(2000,6,30)) and
                                (temp_calcul_plafond_mensualite_d832_10_3_140 and
                                temp_calcul_plafond_mensualite_d832_10_3_139))))):
                                match_arg_412 = zone_2
                                if match_arg_412.code == ZoneDHabitation_Code.Zone1:
                                    _ = match_arg_412.value
                                    if (nombre_personnes_a_charge_4 ==
                                        integer_of_string("0")):
                                        match_arg_413 = situation_familiale_calcul_apl_4
                                        if match_arg_413.code == SituationFamilialeCalculAPL_Code.PersonneSeule:
                                            _ = match_arg_413.value
                                            temp_calcul_plafond_mensualite_d832_10_3_141 = money_of_cents_string("198100")
                                        elif match_arg_413.code == SituationFamilialeCalculAPL_Code.Couple:
                                            _ = match_arg_413.value
                                            temp_calcul_plafond_mensualite_d832_10_3_141 = money_of_cents_string("239000")
                                    else:
                                        temp_calcul_plafond_mensualite_d832_10_3_141 = (money_of_cents_string("279900") +
                                            (money_of_cents_string("40900") *
                                            decimal_of_integer((nombre_personnes_a_charge_4 -
                                            integer_of_string("1")))))
                                elif match_arg_412.code == ZoneDHabitation_Code.Zone2:
                                    _ = match_arg_412.value
                                    if (nombre_personnes_a_charge_4 ==
                                        integer_of_string("0")):
                                        match_arg_414 = situation_familiale_calcul_apl_4
                                        if match_arg_414.code == SituationFamilialeCalculAPL_Code.PersonneSeule:
                                            _ = match_arg_414.value
                                            temp_calcul_plafond_mensualite_d832_10_3_141 = money_of_cents_string("176800")
                                        elif match_arg_414.code == SituationFamilialeCalculAPL_Code.Couple:
                                            _ = match_arg_414.value
                                            temp_calcul_plafond_mensualite_d832_10_3_141 = money_of_cents_string("212800")
                                    else:
                                        temp_calcul_plafond_mensualite_d832_10_3_141 = (money_of_cents_string("248800") +
                                            (money_of_cents_string("36000") *
                                            decimal_of_integer((nombre_personnes_a_charge_4 -
                                            integer_of_string("1")))))
                                elif match_arg_412.code == ZoneDHabitation_Code.Zone3:
                                    _ = match_arg_412.value
                                    if (nombre_personnes_a_charge_4 ==
                                        integer_of_string("0")):
                                        match_arg_415 = situation_familiale_calcul_apl_4
                                        if match_arg_415.code == SituationFamilialeCalculAPL_Code.PersonneSeule:
                                            _ = match_arg_415.value
                                            temp_calcul_plafond_mensualite_d832_10_3_141 = money_of_cents_string("165000")
                                        elif match_arg_415.code == SituationFamilialeCalculAPL_Code.Couple:
                                            _ = match_arg_415.value
                                            temp_calcul_plafond_mensualite_d832_10_3_141 = money_of_cents_string("197900")
                                    else:
                                        temp_calcul_plafond_mensualite_d832_10_3_141 = (money_of_cents_string("230800") +
                                            (money_of_cents_string("32900") *
                                            decimal_of_integer((nombre_personnes_a_charge_4 -
                                            integer_of_string("1")))))
                                return (temp_calcul_plafond_mensualite_d832_10_3_141 *
                                    taux_francs_vers_euros)
                            else:
                                raise EmptyError
                        def temp_calcul_plafond_mensualite_d832_10_3_142(_:Unit):
                            match_arg_416 = type_pret
                            if match_arg_416.code == TypePret_Code.D331_32:
                                _ = match_arg_416.value
                                temp_calcul_plafond_mensualite_d832_10_3_143 = False
                            elif match_arg_416.code == TypePret_Code.D331_63_64:
                                _ = match_arg_416.value
                                temp_calcul_plafond_mensualite_d832_10_3_143 = True
                            elif match_arg_416.code == TypePret_Code.D331_59_8:
                                _ = match_arg_416.value
                                temp_calcul_plafond_mensualite_d832_10_3_143 = False
                            elif match_arg_416.code == TypePret_Code.D331_76_1:
                                _ = match_arg_416.value
                                temp_calcul_plafond_mensualite_d832_10_3_143 = False
                            elif match_arg_416.code == TypePret_Code.Autre:
                                _ = match_arg_416.value
                                temp_calcul_plafond_mensualite_d832_10_3_143 = False
                            match_arg_417 = anciennete_logement
                            if match_arg_417.code == NeufOuAncien_Code.Neuf:
                                _ = match_arg_417.value
                                temp_calcul_plafond_mensualite_d832_10_3_144 = False
                            elif match_arg_417.code == NeufOuAncien_Code.Ancien:
                                _ = match_arg_417.value
                                temp_calcul_plafond_mensualite_d832_10_3_144 = True
                            if ((date_courante_8 >=
                                date_of_numbers(2019,10,1)) and
                                ((date_courante_8 >=
                                date_of_numbers(2020,10,1)) and
                                ((date_signature_pret_1 >=
                                date_of_numbers(1992,6,30)) and
                                ((date_signature_pret_1 <
                                date_of_numbers(1994,11,27)) and
                                (temp_calcul_plafond_mensualite_d832_10_3_144 and
                                temp_calcul_plafond_mensualite_d832_10_3_143))))):
                                match_arg_418 = zone_2
                                if match_arg_418.code == ZoneDHabitation_Code.Zone1:
                                    _ = match_arg_418.value
                                    if (nombre_personnes_a_charge_4 ==
                                        integer_of_string("0")):
                                        match_arg_419 = situation_familiale_calcul_apl_4
                                        if match_arg_419.code == SituationFamilialeCalculAPL_Code.PersonneSeule:
                                            _ = match_arg_419.value
                                            temp_calcul_plafond_mensualite_d832_10_3_145 = money_of_cents_string("167800")
                                        elif match_arg_419.code == SituationFamilialeCalculAPL_Code.Couple:
                                            _ = match_arg_419.value
                                            temp_calcul_plafond_mensualite_d832_10_3_145 = money_of_cents_string("202500")
                                    else:
                                        temp_calcul_plafond_mensualite_d832_10_3_145 = (money_of_cents_string("237200") +
                                            (money_of_cents_string("34700") *
                                            decimal_of_integer((nombre_personnes_a_charge_4 -
                                            integer_of_string("1")))))
                                elif match_arg_418.code == ZoneDHabitation_Code.Zone2:
                                    _ = match_arg_418.value
                                    if (nombre_personnes_a_charge_4 ==
                                        integer_of_string("0")):
                                        match_arg_420 = situation_familiale_calcul_apl_4
                                        if match_arg_420.code == SituationFamilialeCalculAPL_Code.PersonneSeule:
                                            _ = match_arg_420.value
                                            temp_calcul_plafond_mensualite_d832_10_3_145 = money_of_cents_string("149600")
                                        elif match_arg_420.code == SituationFamilialeCalculAPL_Code.Couple:
                                            _ = match_arg_420.value
                                            temp_calcul_plafond_mensualite_d832_10_3_145 = money_of_cents_string("180100")
                                    else:
                                        temp_calcul_plafond_mensualite_d832_10_3_145 = (money_of_cents_string("210600") +
                                            (money_of_cents_string("30500") *
                                            decimal_of_integer((nombre_personnes_a_charge_4 -
                                            integer_of_string("1")))))
                                elif match_arg_418.code == ZoneDHabitation_Code.Zone3:
                                    _ = match_arg_418.value
                                    if (nombre_personnes_a_charge_4 ==
                                        integer_of_string("0")):
                                        match_arg_421 = situation_familiale_calcul_apl_4
                                        if match_arg_421.code == SituationFamilialeCalculAPL_Code.PersonneSeule:
                                            _ = match_arg_421.value
                                            temp_calcul_plafond_mensualite_d832_10_3_145 = money_of_cents_string("139700")
                                        elif match_arg_421.code == SituationFamilialeCalculAPL_Code.Couple:
                                            _ = match_arg_421.value
                                            temp_calcul_plafond_mensualite_d832_10_3_145 = money_of_cents_string("167600")
                                    else:
                                        temp_calcul_plafond_mensualite_d832_10_3_145 = (money_of_cents_string("195500") +
                                            (money_of_cents_string("27900") *
                                            decimal_of_integer((nombre_personnes_a_charge_4 -
                                            integer_of_string("1")))))
                                return (temp_calcul_plafond_mensualite_d832_10_3_145 *
                                    taux_francs_vers_euros)
                            else:
                                raise EmptyError
                        def temp_calcul_plafond_mensualite_d832_10_3_146(_:Unit):
                            match_arg_422 = type_pret
                            if match_arg_422.code == TypePret_Code.D331_32:
                                _ = match_arg_422.value
                                temp_calcul_plafond_mensualite_d832_10_3_147 = False
                            elif match_arg_422.code == TypePret_Code.D331_63_64:
                                _ = match_arg_422.value
                                temp_calcul_plafond_mensualite_d832_10_3_147 = True
                            elif match_arg_422.code == TypePret_Code.D331_59_8:
                                _ = match_arg_422.value
                                temp_calcul_plafond_mensualite_d832_10_3_147 = False
                            elif match_arg_422.code == TypePret_Code.D331_76_1:
                                _ = match_arg_422.value
                                temp_calcul_plafond_mensualite_d832_10_3_147 = False
                            elif match_arg_422.code == TypePret_Code.Autre:
                                _ = match_arg_422.value
                                temp_calcul_plafond_mensualite_d832_10_3_147 = False
                            match_arg_423 = anciennete_logement
                            if match_arg_423.code == NeufOuAncien_Code.Neuf:
                                _ = match_arg_423.value
                                temp_calcul_plafond_mensualite_d832_10_3_148 = True
                            elif match_arg_423.code == NeufOuAncien_Code.Ancien:
                                _ = match_arg_423.value
                                temp_calcul_plafond_mensualite_d832_10_3_148 = False
                            if ((date_courante_8 >=
                                date_of_numbers(2019,10,1)) and
                                ((date_courante_8 >=
                                date_of_numbers(2020,10,1)) and
                                ((date_signature_pret_1 >=
                                date_of_numbers(1992,6,30)) and
                                ((date_signature_pret_1 <
                                date_of_numbers(1994,11,27)) and
                                (temp_calcul_plafond_mensualite_d832_10_3_148 and
                                temp_calcul_plafond_mensualite_d832_10_3_147))))):
                                match_arg_424 = zone_2
                                if match_arg_424.code == ZoneDHabitation_Code.Zone1:
                                    _ = match_arg_424.value
                                    if (nombre_personnes_a_charge_4 ==
                                        integer_of_string("0")):
                                        match_arg_425 = situation_familiale_calcul_apl_4
                                        if match_arg_425.code == SituationFamilialeCalculAPL_Code.PersonneSeule:
                                            _ = match_arg_425.value
                                            temp_calcul_plafond_mensualite_d832_10_3_149 = money_of_cents_string("208500")
                                        elif match_arg_425.code == SituationFamilialeCalculAPL_Code.Couple:
                                            _ = match_arg_425.value
                                            temp_calcul_plafond_mensualite_d832_10_3_149 = money_of_cents_string("251500")
                                    else:
                                        temp_calcul_plafond_mensualite_d832_10_3_149 = (money_of_cents_string("294500") +
                                            (money_of_cents_string("43000") *
                                            decimal_of_integer((nombre_personnes_a_charge_4 -
                                            integer_of_string("1")))))
                                elif match_arg_424.code == ZoneDHabitation_Code.Zone2:
                                    _ = match_arg_424.value
                                    if (nombre_personnes_a_charge_4 ==
                                        integer_of_string("0")):
                                        match_arg_426 = situation_familiale_calcul_apl_4
                                        if match_arg_426.code == SituationFamilialeCalculAPL_Code.PersonneSeule:
                                            _ = match_arg_426.value
                                            temp_calcul_plafond_mensualite_d832_10_3_149 = money_of_cents_string("186000")
                                        elif match_arg_426.code == SituationFamilialeCalculAPL_Code.Couple:
                                            _ = match_arg_426.value
                                            temp_calcul_plafond_mensualite_d832_10_3_149 = money_of_cents_string("223900")
                                    else:
                                        temp_calcul_plafond_mensualite_d832_10_3_149 = (money_of_cents_string("261800") +
                                            (money_of_cents_string("37900") *
                                            decimal_of_integer((nombre_personnes_a_charge_4 -
                                            integer_of_string("1")))))
                                elif match_arg_424.code == ZoneDHabitation_Code.Zone3:
                                    _ = match_arg_424.value
                                    if (nombre_personnes_a_charge_4 ==
                                        integer_of_string("0")):
                                        match_arg_427 = situation_familiale_calcul_apl_4
                                        if match_arg_427.code == SituationFamilialeCalculAPL_Code.PersonneSeule:
                                            _ = match_arg_427.value
                                            temp_calcul_plafond_mensualite_d832_10_3_149 = money_of_cents_string("173600")
                                        elif match_arg_427.code == SituationFamilialeCalculAPL_Code.Couple:
                                            _ = match_arg_427.value
                                            temp_calcul_plafond_mensualite_d832_10_3_149 = money_of_cents_string("208200")
                                    else:
                                        temp_calcul_plafond_mensualite_d832_10_3_149 = (money_of_cents_string("242800") +
                                            (money_of_cents_string("34600") *
                                            decimal_of_integer((nombre_personnes_a_charge_4 -
                                            integer_of_string("1")))))
                                return (temp_calcul_plafond_mensualite_d832_10_3_149 *
                                    taux_francs_vers_euros)
                            else:
                                raise EmptyError
                        return handle_default(SourcePosition(filename="examples/aides_logement/prologue.catala_fr",
                                              start_line=760,
                                              start_column=11,
                                              end_line=760, end_column=46,
                                              law_headings=["Secteur accession à la propriété",
                                              "Calcul du montant de l'aide personnalisée au logement",
                                              "Déclarations des champs d'application",
                                              "Prologue : aides au logement"]), [temp_calcul_plafond_mensualite_d832_10_3_146,
                                              temp_calcul_plafond_mensualite_d832_10_3_142,
                                              temp_calcul_plafond_mensualite_d832_10_3_138,
                                              temp_calcul_plafond_mensualite_d832_10_3_134,
                                              temp_calcul_plafond_mensualite_d832_10_3_130,
                                              temp_calcul_plafond_mensualite_d832_10_3_126,
                                              temp_calcul_plafond_mensualite_d832_10_3_122,
                                              temp_calcul_plafond_mensualite_d832_10_3_119,
                                              temp_calcul_plafond_mensualite_d832_10_3_115,
                                              temp_calcul_plafond_mensualite_d832_10_3_112,
                                              temp_calcul_plafond_mensualite_d832_10_3_109,
                                              temp_calcul_plafond_mensualite_d832_10_3_106,
                                              temp_calcul_plafond_mensualite_d832_10_3_103,
                                              temp_calcul_plafond_mensualite_d832_10_3_100,
                                              temp_calcul_plafond_mensualite_d832_10_3_97,
                                              temp_calcul_plafond_mensualite_d832_10_3_94,
                                              temp_calcul_plafond_mensualite_d832_10_3_91,
                                              temp_calcul_plafond_mensualite_d832_10_3_88,
                                              temp_calcul_plafond_mensualite_d832_10_3_85,
                                              temp_calcul_plafond_mensualite_d832_10_3_82,
                                              temp_calcul_plafond_mensualite_d832_10_3_79,
                                              temp_calcul_plafond_mensualite_d832_10_3_76,
                                              temp_calcul_plafond_mensualite_d832_10_3_73,
                                              temp_calcul_plafond_mensualite_d832_10_3_70,
                                              temp_calcul_plafond_mensualite_d832_10_3_67,
                                              temp_calcul_plafond_mensualite_d832_10_3_64,
                                              temp_calcul_plafond_mensualite_d832_10_3_61,
                                              temp_calcul_plafond_mensualite_d832_10_3_58,
                                              temp_calcul_plafond_mensualite_d832_10_3_55,
                                              temp_calcul_plafond_mensualite_d832_10_3_52,
                                              temp_calcul_plafond_mensualite_d832_10_3_49,
                                              temp_calcul_plafond_mensualite_d832_10_3_46,
                                              temp_calcul_plafond_mensualite_d832_10_3_43,
                                              temp_calcul_plafond_mensualite_d832_10_3_40,
                                              temp_calcul_plafond_mensualite_d832_10_3_37,
                                              temp_calcul_plafond_mensualite_d832_10_3_34,
                                              temp_calcul_plafond_mensualite_d832_10_3_31,
                                              temp_calcul_plafond_mensualite_d832_10_3_28],
                                              temp_calcul_plafond_mensualite_d832_10_3_27,
                                              temp_calcul_plafond_mensualite_d832_10_3_26)
                return handle_default(SourcePosition(filename="examples/aides_logement/prologue.catala_fr",
                                      start_line=760, start_column=11,
                                      end_line=760, end_column=46,
                                      law_headings=["Secteur accession à la propriété",
                                      "Calcul du montant de l'aide personnalisée au logement",
                                      "Déclarations des champs d'application",
                                      "Prologue : aides au logement"]), [temp_calcul_plafond_mensualite_d832_10_3_22,
                                      temp_calcul_plafond_mensualite_d832_10_3_3],
                                      temp_calcul_plafond_mensualite_d832_10_3_2,
                                      temp_calcul_plafond_mensualite_d832_10_3_1)
            except EmptyError:
                raise NoValueProvided(SourcePosition(filename="examples/aides_logement/prologue.catala_fr",
                                                     start_line=760,
                                                     start_column=11,
                                                     end_line=760,
                                                     end_column=46,
                                                     law_headings=["Secteur accession à la propriété",
                                                     "Calcul du montant de l'aide personnalisée au logement",
                                                     "Déclarations des champs d'application",
                                                     "Prologue : aides au logement"]))
    except EmptyError:
        temp_calcul_plafond_mensualite_d832_10_3 = dead_value
        raise NoValueProvided(SourcePosition(filename="examples/aides_logement/prologue.catala_fr",
                                             start_line=760, start_column=11,
                                             end_line=760, end_column=46,
                                             law_headings=["Secteur accession à la propriété",
                                             "Calcul du montant de l'aide personnalisée au logement",
                                             "Déclarations des champs d'application",
                                             "Prologue : aides au logement"]))
    calcul_plafond_mensualite_d832_10_3 = temp_calcul_plafond_mensualite_d832_10_3
    try:
        temp_n_nombre_parts_d832_11_1 = calcul_nombre_parts_dot_n_nombre_parts_d832_11
    except EmptyError:
        temp_n_nombre_parts_d832_11_1 = dead_value
        raise NoValueProvided(SourcePosition(filename="examples/aides_logement/prologue.catala_fr",
                                             start_line=762, start_column=11,
                                             end_line=762, end_column=33,
                                             law_headings=["Secteur accession à la propriété",
                                             "Calcul du montant de l'aide personnalisée au logement",
                                             "Déclarations des champs d'application",
                                             "Prologue : aides au logement"]))
    n_nombre_parts_d832_11_1 = temp_n_nombre_parts_d832_11_1
    try:
        try:
            if situation_r822_11_13_17:
                temp_ressources_menage_avec_d832_18 = ressources_menage_arrondies_3
            else:
                temp_ressources_menage_avec_d832_18 = dead_value
                raise EmptyError
        except EmptyError:
            if (ressources_menage_arrondies_3 <= (mensualite_principale *
                coefficient_multiplicateur_d832_18)):
                temp_ressources_menage_avec_d832_18 = (mensualite_principale *
                    coefficient_multiplicateur_d832_18)
            else:
                temp_ressources_menage_avec_d832_18 = ressources_menage_arrondies_3
    except EmptyError:
        temp_ressources_menage_avec_d832_18 = dead_value
        raise NoValueProvided(SourcePosition(filename="examples/aides_logement/prologue.catala_fr",
                                             start_line=771, start_column=11,
                                             end_line=771, end_column=41,
                                             law_headings=["Secteur accession à la propriété",
                                             "Calcul du montant de l'aide personnalisée au logement",
                                             "Déclarations des champs d'application",
                                             "Prologue : aides au logement"]))
    ressources_menage_avec_d832_18 = temp_ressources_menage_avec_d832_18
    try:
        def temp_traitement_aide_finale_minoration_forfaitaire_2(aide_finale_11:Money):
            try:
                if ((aide_finale_11 - montant_forfaitaire_d832_10) >=
                    money_of_cents_string("0")):
                    return (aide_finale_11 - montant_forfaitaire_d832_10)
                else:
                    return money_of_cents_string("0")
            except EmptyError:
                raise NoValueProvided(SourcePosition(filename="examples/aides_logement/prologue.catala_fr",
                                                     start_line=792,
                                                     start_column=10,
                                                     end_line=792,
                                                     end_column=32,
                                                     law_headings=["Secteur accession à la propriété",
                                                     "Calcul du montant de l'aide personnalisée au logement",
                                                     "Déclarations des champs d'application",
                                                     "Prologue : aides au logement"]))
    except EmptyError:
        temp_traitement_aide_finale_minoration_forfaitaire_2 = dead_value
        raise NoValueProvided(SourcePosition(filename="examples/aides_logement/prologue.catala_fr",
                                             start_line=792, start_column=10,
                                             end_line=792, end_column=32,
                                             law_headings=["Secteur accession à la propriété",
                                             "Calcul du montant de l'aide personnalisée au logement",
                                             "Déclarations des champs d'application",
                                             "Prologue : aides au logement"]))
    traitement_aide_finale_minoration_forfaitaire_2 = temp_traitement_aide_finale_minoration_forfaitaire_2
    try:
        def temp_depense_nette_minimale_d832_10(allocation_mensuelle_2:Money):
            try:
                try:
                    if (date_signature_pret >=
                        date_of_numbers(1999,6,30)):
                        return ((mensualite_principale +
                            montant_forfaitaire_charges_d832_10) -
                            allocation_mensuelle_2)
                    else:
                        raise EmptyError
                except EmptyError:
                    return (mensualite_principale - allocation_mensuelle_2)
            except EmptyError:
                raise NoValueProvided(SourcePosition(filename="examples/aides_logement/prologue.catala_fr",
                                                     start_line=767,
                                                     start_column=11,
                                                     end_line=767,
                                                     end_column=41,
                                                     law_headings=["Secteur accession à la propriété",
                                                     "Calcul du montant de l'aide personnalisée au logement",
                                                     "Déclarations des champs d'application",
                                                     "Prologue : aides au logement"]))
    except EmptyError:
        temp_depense_nette_minimale_d832_10 = dead_value
        raise NoValueProvided(SourcePosition(filename="examples/aides_logement/prologue.catala_fr",
                                             start_line=767, start_column=11,
                                             end_line=767, end_column=41,
                                             law_headings=["Secteur accession à la propriété",
                                             "Calcul du montant de l'aide personnalisée au logement",
                                             "Déclarations des champs d'application",
                                             "Prologue : aides au logement"]))
    depense_nette_minimale_d832_10 = temp_depense_nette_minimale_d832_10
    try:
        try:
            if local_habite_premiere_fois_beneficiaire:
                if (calcul_plafond_mensualite_d832_10_3(date_signature_pret) <
                    calcul_plafond_mensualite_d832_10_3(date_entree_logement)):
                    temp_plafond_mensualite_d832_10_3_base = calcul_plafond_mensualite_d832_10_3(
                        date_entree_logement)
                else:
                    temp_plafond_mensualite_d832_10_3_base = calcul_plafond_mensualite_d832_10_3(
                        date_signature_pret)
            else:
                temp_plafond_mensualite_d832_10_3_base = dead_value
                raise EmptyError
        except EmptyError:
            temp_plafond_mensualite_d832_10_3_base = calcul_plafond_mensualite_d832_10_3(
                date_signature_pret)
    except EmptyError:
        temp_plafond_mensualite_d832_10_3_base = dead_value
        raise NoValueProvided(SourcePosition(filename="examples/aides_logement/prologue.catala_fr",
                                             start_line=758, start_column=10,
                                             end_line=758, end_column=14,
                                             law_headings=["Secteur accession à la propriété",
                                             "Calcul du montant de l'aide personnalisée au logement",
                                             "Déclarations des champs d'application",
                                             "Prologue : aides au logement"]))
    plafond_mensualite_d832_10_3_base = temp_plafond_mensualite_d832_10_3_base
    try:
        temp_calcul_equivalence_loyer_minimale_dot_date_courante_1 = date_courante_8
    except EmptyError:
        temp_calcul_equivalence_loyer_minimale_dot_date_courante_1 = dead_value
        raise NoValueProvided(SourcePosition(filename="examples/aides_logement/prologue.catala_fr",
                                             start_line=799, start_column=14,
                                             end_line=799, end_column=61,
                                             law_headings=["Secteur accession à la propriété",
                                             "Calcul du montant de l'aide personnalisée au logement",
                                             "Déclarations des champs d'application",
                                             "Prologue : aides au logement"]))
    calcul_equivalence_loyer_minimale_dot_date_courante_1 = temp_calcul_equivalence_loyer_minimale_dot_date_courante_1
    try:
        temp_calcul_equivalence_loyer_minimale_dot_ressources_menage_arrondies_1 = ressources_menage_arrondies_3
    except EmptyError:
        temp_calcul_equivalence_loyer_minimale_dot_ressources_menage_arrondies_1 = dead_value
        raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                             start_line=3484,
                                             start_column=14, end_line=3484,
                                             end_column=75,
                                             law_headings=["Article D832-15",
                                             "Section 2 : Accession à la propriété",
                                             "Chapitre II : Modalités de liquidation et de versement de l'aide personnalisée au logement",
                                             "Titre III : Aide personnalisée au logement",
                                             "Livre VIII : Aides personnelles au logement",
                                             "Partie réglementaire",
                                             "Code de la construction et de l'habitation"]))
    calcul_equivalence_loyer_minimale_dot_ressources_menage_arrondies_1 = temp_calcul_equivalence_loyer_minimale_dot_ressources_menage_arrondies_1
    try:
        temp_calcul_equivalence_loyer_minimale_dot_condition_2_du_832_25_1 = False
    except EmptyError:
        temp_calcul_equivalence_loyer_minimale_dot_condition_2_du_832_25_1 = dead_value
        raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                             start_line=3483,
                                             start_column=14, end_line=3483,
                                             end_column=69,
                                             law_headings=["Article D832-15",
                                             "Section 2 : Accession à la propriété",
                                             "Chapitre II : Modalités de liquidation et de versement de l'aide personnalisée au logement",
                                             "Titre III : Aide personnalisée au logement",
                                             "Livre VIII : Aides personnelles au logement",
                                             "Partie réglementaire",
                                             "Code de la construction et de l'habitation"]))
    calcul_equivalence_loyer_minimale_dot_condition_2_du_832_25_1 = temp_calcul_equivalence_loyer_minimale_dot_condition_2_du_832_25_1
    try:
        temp_calcul_equivalence_loyer_minimale_dot_n_nombre_parts_d832_25_1 = n_nombre_parts_d832_11_1
    except EmptyError:
        temp_calcul_equivalence_loyer_minimale_dot_n_nombre_parts_d832_25_1 = dead_value
        raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                             start_line=3486,
                                             start_column=14, end_line=3486,
                                             end_column=70,
                                             law_headings=["Article D832-15",
                                             "Section 2 : Accession à la propriété",
                                             "Chapitre II : Modalités de liquidation et de versement de l'aide personnalisée au logement",
                                             "Titre III : Aide personnalisée au logement",
                                             "Livre VIII : Aides personnelles au logement",
                                             "Partie réglementaire",
                                             "Code de la construction et de l'habitation"]))
    calcul_equivalence_loyer_minimale_dot_n_nombre_parts_d832_25_1 = temp_calcul_equivalence_loyer_minimale_dot_n_nombre_parts_d832_25_1
    result_6 = calcul_equivalence_loyer_minimale(CalculEquivalenceLoyerMinimaleIn(date_courante_in = calcul_equivalence_loyer_minimale_dot_date_courante_1,
                                                 ressources_menage_arrondies_in = calcul_equivalence_loyer_minimale_dot_ressources_menage_arrondies_1,
                                                 condition_2_du_832_25_in = calcul_equivalence_loyer_minimale_dot_condition_2_du_832_25_1,
                                                 n_nombre_parts_d832_25_in = calcul_equivalence_loyer_minimale_dot_n_nombre_parts_d832_25_1))
    calcul_equivalence_loyer_minimale_dot_montant_1 = result_6.montant
    try:
        temp_coefficient_prise_en_charge_d832_10_formule = (decimal_of_string("0.95") -
            (ressources_menage_arrondies_3 /
            (coefficient_multiplicateur_d832_11 * n_nombre_parts_d832_11_1)))
    except EmptyError:
        temp_coefficient_prise_en_charge_d832_10_formule = dead_value
        raise NoValueProvided(SourcePosition(filename="examples/aides_logement/prologue.catala_fr",
                                             start_line=764, start_column=10,
                                             end_line=764, end_column=17,
                                             law_headings=["Secteur accession à la propriété",
                                             "Calcul du montant de l'aide personnalisée au logement",
                                             "Déclarations des champs d'application",
                                             "Prologue : aides au logement"]))
    coefficient_prise_en_charge_d832_10_formule = temp_coefficient_prise_en_charge_d832_10_formule
    try:
        def temp_abattement_depense_nette_minimale_d832_10(allocation_mensuelle_3:Money):
            try:
                if (depense_nette_minimale_d832_10(allocation_mensuelle_3) <=
                    (ressources_menage_avec_d832_18 *
                    coefficient_multiplicateur_d832_17_3)):
                    return ((ressources_menage_avec_d832_18 *
                        coefficient_multiplicateur_d832_17_3) -
                        depense_nette_minimale_d832_10(allocation_mensuelle_3))
                else:
                    return money_of_cents_string("0")
            except EmptyError:
                raise NoValueProvided(SourcePosition(filename="examples/aides_logement/prologue.catala_fr",
                                                     start_line=769,
                                                     start_column=11,
                                                     end_line=769,
                                                     end_column=52,
                                                     law_headings=["Secteur accession à la propriété",
                                                     "Calcul du montant de l'aide personnalisée au logement",
                                                     "Déclarations des champs d'application",
                                                     "Prologue : aides au logement"]))
    except EmptyError:
        temp_abattement_depense_nette_minimale_d832_10 = dead_value
        raise NoValueProvided(SourcePosition(filename="examples/aides_logement/prologue.catala_fr",
                                             start_line=769, start_column=11,
                                             end_line=769, end_column=52,
                                             law_headings=["Secteur accession à la propriété",
                                             "Calcul du montant de l'aide personnalisée au logement",
                                             "Déclarations des champs d'application",
                                             "Prologue : aides au logement"]))
    abattement_depense_nette_minimale_d832_10 = temp_abattement_depense_nette_minimale_d832_10
    try:
        try:
            try:
                if ((date_courante_8 < date_of_numbers(2021,10,1)) and
                    (date_courante_8 >=
                    date_of_numbers(2020,10,1))):
                    if copropriete:
                        temp_plafond_mensualite_d832_10_3_coproprietaires = (plafond_mensualite_d832_10_3_base *
                            decimal_of_string("0.75"))
                    else:
                        temp_plafond_mensualite_d832_10_3_coproprietaires = plafond_mensualite_d832_10_3_base
                else:
                    temp_plafond_mensualite_d832_10_3_coproprietaires = dead_value
                    raise EmptyError
            except EmptyError:
                if ((date_courante_8 >= date_of_numbers(2021,10,1)) and
                    (date_courante_8 <
                    date_of_numbers(2022,7,1))):
                    if copropriete:
                        temp_plafond_mensualite_d832_10_3_coproprietaires = (plafond_mensualite_d832_10_3_base *
                            decimal_of_string("0.75"))
                    else:
                        temp_plafond_mensualite_d832_10_3_coproprietaires = plafond_mensualite_d832_10_3_base
                else:
                    temp_plafond_mensualite_d832_10_3_coproprietaires = dead_value
                    raise EmptyError
        except EmptyError:
            if (date_courante_8 >=
                date_of_numbers(2022,7,1)):
                if copropriete:
                    temp_plafond_mensualite_d832_10_3_coproprietaires = (plafond_mensualite_d832_10_3_base *
                        decimal_of_string("0.75"))
                else:
                    temp_plafond_mensualite_d832_10_3_coproprietaires = plafond_mensualite_d832_10_3_base
            else:
                temp_plafond_mensualite_d832_10_3_coproprietaires = dead_value
                raise EmptyError
    except EmptyError:
        temp_plafond_mensualite_d832_10_3_coproprietaires = dead_value
        raise NoValueProvided(SourcePosition(filename="examples/aides_logement/prologue.catala_fr",
                                             start_line=759, start_column=10,
                                             end_line=759, end_column=25,
                                             law_headings=["Secteur accession à la propriété",
                                             "Calcul du montant de l'aide personnalisée au logement",
                                             "Déclarations des champs d'application",
                                             "Prologue : aides au logement"]))
    plafond_mensualite_d832_10_3_coproprietaires = temp_plafond_mensualite_d832_10_3_coproprietaires
    try:
        def temp_mensualite_minimale(_:Unit):
            raise EmptyError
        def temp_mensualite_minimale_1(_:Unit):
            return False
        def temp_mensualite_minimale_2(_:Unit):
            match_arg_428 = type_travaux_logement
            if match_arg_428.code == TypeTravauxLogementD83215_Code.TravauxPourAcquisitionD832_15_1:
                _ = match_arg_428.value
                temp_mensualite_minimale_3 = False
            elif match_arg_428.code == TypeTravauxLogementD83215_Code.TravauxSurLogementDejaAcquisD832_15_2:
                _ = match_arg_428.value
                temp_mensualite_minimale_3 = True
            elif match_arg_428.code == TypeTravauxLogementD83215_Code.PasDeTravaux:
                _ = match_arg_428.value
                temp_mensualite_minimale_3 = False
            if temp_mensualite_minimale_3:
                return calcul_equivalence_loyer_minimale_dot_montant_1
            else:
                raise EmptyError
        def temp_mensualite_minimale_4(_:Unit):
            match_arg_429 = type_travaux_logement
            if match_arg_429.code == TypeTravauxLogementD83215_Code.TravauxPourAcquisitionD832_15_1:
                _ = match_arg_429.value
                temp_mensualite_minimale_5 = False
            elif match_arg_429.code == TypeTravauxLogementD83215_Code.TravauxSurLogementDejaAcquisD832_15_2:
                _ = match_arg_429.value
                temp_mensualite_minimale_5 = False
            elif match_arg_429.code == TypeTravauxLogementD83215_Code.PasDeTravaux:
                _ = match_arg_429.value
                temp_mensualite_minimale_5 = True
            match_arg_430 = type_travaux_logement
            if match_arg_430.code == TypeTravauxLogementD83215_Code.TravauxPourAcquisitionD832_15_1:
                _ = match_arg_430.value
                temp_mensualite_minimale_6 = True
            elif match_arg_430.code == TypeTravauxLogementD83215_Code.TravauxSurLogementDejaAcquisD832_15_2:
                _ = match_arg_430.value
                temp_mensualite_minimale_6 = False
            elif match_arg_430.code == TypeTravauxLogementD83215_Code.PasDeTravaux:
                _ = match_arg_430.value
                temp_mensualite_minimale_6 = False
            if (temp_mensualite_minimale_6 or
                temp_mensualite_minimale_5):
                if (decimal_of_money(ressources_menage_arrondies_3) <=
                    (decimal_of_money(montant_limite_tranches_d832_15_1) *
                    n_nombre_parts_d832_11_1)):
                    temp_mensualite_minimale_7 = (decimal_of_money(ressources_menage_arrondies_3) *
                        taux_tranche_inferieure_d832_15_1)
                else:
                    temp_mensualite_minimale_7 = ((decimal_of_money(montant_limite_tranches_d832_15_1) *
                        n_nombre_parts_d832_11_1) *
                        taux_tranche_inferieure_d832_15_1)
                if (decimal_of_money(ressources_menage_arrondies_3) >=
                    (decimal_of_money(montant_limite_tranches_d832_15_1) *
                    n_nombre_parts_d832_11_1)):
                    temp_mensualite_minimale_8 = ((decimal_of_money(ressources_menage_arrondies_3) -
                        (decimal_of_money(montant_limite_tranches_d832_15_1) *
                        n_nombre_parts_d832_11_1)) *
                        taux_tranche_superieure_d832_15_1)
                else:
                    temp_mensualite_minimale_8 = decimal_of_string("0.")
                return money_of_decimal(((temp_mensualite_minimale_8 +
                    temp_mensualite_minimale_7) / decimal_of_string("12.")))
            else:
                raise EmptyError
        temp_mensualite_minimale_9 = handle_default(SourcePosition(filename="examples/aides_logement/prologue.catala_fr",
                                                    start_line=756,
                                                    start_column=12,
                                                    end_line=756, end_column=31,
                                                    law_headings=["Secteur accession à la propriété",
                                                    "Calcul du montant de l'aide personnalisée au logement",
                                                    "Déclarations des champs d'application",
                                                    "Prologue : aides au logement"]), [temp_mensualite_minimale_4,
                                                    temp_mensualite_minimale_2],
                                                    temp_mensualite_minimale_1,
                                                    temp_mensualite_minimale)
    except EmptyError:
        temp_mensualite_minimale_9 = dead_value
        raise NoValueProvided(SourcePosition(filename="examples/aides_logement/prologue.catala_fr",
                                             start_line=756, start_column=12,
                                             end_line=756, end_column=31,
                                             law_headings=["Secteur accession à la propriété",
                                             "Calcul du montant de l'aide personnalisée au logement",
                                             "Déclarations des champs d'application",
                                             "Prologue : aides au logement"]))
    mensualite_minimale = temp_mensualite_minimale_9
    try:
        temp_coefficient_prise_en_charge_d832_10_coeff_arrondi = (decimal_round(((coefficient_prise_en_charge_d832_10_formule -
            decimal_of_string("0.005")) * decimal_of_string("100."))) /
            decimal_of_string("100."))
    except EmptyError:
        temp_coefficient_prise_en_charge_d832_10_coeff_arrondi = dead_value
        raise NoValueProvided(SourcePosition(filename="examples/aides_logement/prologue.catala_fr",
                                             start_line=765, start_column=10,
                                             end_line=765, end_column=23,
                                             law_headings=["Secteur accession à la propriété",
                                             "Calcul du montant de l'aide personnalisée au logement",
                                             "Déclarations des champs d'application",
                                             "Prologue : aides au logement"]))
    coefficient_prise_en_charge_d832_10_coeff_arrondi = temp_coefficient_prise_en_charge_d832_10_coeff_arrondi
    try:
        def temp_traitement_aide_finale_abattement_1(aide_finale_12:Money):
            try:
                if ((traitement_aide_finale_minoration_forfaitaire_2(
                    aide_finale_12) -
                    abattement_depense_nette_minimale_d832_10(traitement_aide_finale_minoration_forfaitaire_2(
                                                              aide_finale_12))) >=
                    money_of_cents_string("0")):
                    return (traitement_aide_finale_minoration_forfaitaire_2(
                        aide_finale_12) -
                        abattement_depense_nette_minimale_d832_10(traitement_aide_finale_minoration_forfaitaire_2(
                                                                  aide_finale_12)))
                else:
                    return money_of_cents_string("0")
            except EmptyError:
                raise NoValueProvided(SourcePosition(filename="examples/aides_logement/prologue.catala_fr",
                                                     start_line=793,
                                                     start_column=10,
                                                     end_line=793,
                                                     end_column=20,
                                                     law_headings=["Secteur accession à la propriété",
                                                     "Calcul du montant de l'aide personnalisée au logement",
                                                     "Déclarations des champs d'application",
                                                     "Prologue : aides au logement"]))
    except EmptyError:
        temp_traitement_aide_finale_abattement_1 = dead_value
        raise NoValueProvided(SourcePosition(filename="examples/aides_logement/prologue.catala_fr",
                                             start_line=793, start_column=10,
                                             end_line=793, end_column=20,
                                             law_headings=["Secteur accession à la propriété",
                                             "Calcul du montant de l'aide personnalisée au logement",
                                             "Déclarations des champs d'application",
                                             "Prologue : aides au logement"]))
    traitement_aide_finale_abattement_1 = temp_traitement_aide_finale_abattement_1
    try:
        if (mensualite_principale >
            plafond_mensualite_d832_10_3_coproprietaires):
            temp_mensualite_eligible = plafond_mensualite_d832_10_3_coproprietaires
        else:
            temp_mensualite_eligible = mensualite_principale
    except EmptyError:
        temp_mensualite_eligible = dead_value
        raise NoValueProvided(SourcePosition(filename="examples/aides_logement/prologue.catala_fr",
                                             start_line=755, start_column=12,
                                             end_line=755, end_column=31,
                                             law_headings=["Secteur accession à la propriété",
                                             "Calcul du montant de l'aide personnalisée au logement",
                                             "Déclarations des champs d'application",
                                             "Prologue : aides au logement"]))
    mensualite_eligible = temp_mensualite_eligible
    try:
        if (coefficient_prise_en_charge_d832_10_coeff_arrondi >=
            decimal_of_string("0.95")):
            temp_coefficient_prise_en_charge_d832_10_seuil = decimal_of_string("0.95")
        else:
            temp_coefficient_prise_en_charge_d832_10_seuil = coefficient_prise_en_charge_d832_10_coeff_arrondi
    except EmptyError:
        temp_coefficient_prise_en_charge_d832_10_seuil = dead_value
        raise NoValueProvided(SourcePosition(filename="examples/aides_logement/prologue.catala_fr",
                                             start_line=766, start_column=10,
                                             end_line=766, end_column=15,
                                             law_headings=["Secteur accession à la propriété",
                                             "Calcul du montant de l'aide personnalisée au logement",
                                             "Déclarations des champs d'application",
                                             "Prologue : aides au logement"]))
    coefficient_prise_en_charge_d832_10_seuil = temp_coefficient_prise_en_charge_d832_10_seuil
    try:
        def temp_traitement_aide_finale_contributions_sociales_arrondi_2(aide_finale_13:Money):
            try:
                if ((money_round(((traitement_aide_finale_abattement_1(
                    aide_finale_13) -
                    contributions_sociales_dot_montant_2(traitement_aide_finale_abattement_1(
                                                         aide_finale_13))) -
                    money_of_cents_string("50"))) +
                    contributions_sociales_dot_montant_2(traitement_aide_finale_abattement_1(
                                                         aide_finale_13))) >=
                    money_of_cents_string("0")):
                    return (money_round(((traitement_aide_finale_abattement_1(
                        aide_finale_13) -
                        contributions_sociales_dot_montant_2(traitement_aide_finale_abattement_1(
                                                             aide_finale_13))) -
                        money_of_cents_string("50"))) +
                        contributions_sociales_dot_montant_2(traitement_aide_finale_abattement_1(
                                                             aide_finale_13)))
                else:
                    return money_of_cents_string("0")
            except EmptyError:
                raise NoValueProvided(SourcePosition(filename="examples/aides_logement/prologue.catala_fr",
                                                     start_line=794,
                                                     start_column=10,
                                                     end_line=794,
                                                     end_column=40,
                                                     law_headings=["Secteur accession à la propriété",
                                                     "Calcul du montant de l'aide personnalisée au logement",
                                                     "Déclarations des champs d'application",
                                                     "Prologue : aides au logement"]))
    except EmptyError:
        temp_traitement_aide_finale_contributions_sociales_arrondi_2 = dead_value
        raise NoValueProvided(SourcePosition(filename="examples/aides_logement/prologue.catala_fr",
                                             start_line=794, start_column=10,
                                             end_line=794, end_column=40,
                                             law_headings=["Secteur accession à la propriété",
                                             "Calcul du montant de l'aide personnalisée au logement",
                                             "Déclarations des champs d'application",
                                             "Prologue : aides au logement"]))
    traitement_aide_finale_contributions_sociales_arrondi_2 = temp_traitement_aide_finale_contributions_sociales_arrondi_2
    try:
        if ((((mensualite_eligible + montant_forfaitaire_charges_d832_10) -
            mensualite_minimale) *
            coefficient_prise_en_charge_d832_10_seuil) <
            money_of_cents_string("0")):
            temp_aide_finale_formule_2 = money_of_cents_string("0")
        else:
            temp_aide_finale_formule_2 = (((mensualite_eligible +
                montant_forfaitaire_charges_d832_10) - mensualite_minimale) *
                coefficient_prise_en_charge_d832_10_seuil)
    except EmptyError:
        temp_aide_finale_formule_2 = dead_value
        raise NoValueProvided(SourcePosition(filename="examples/aides_logement/prologue.catala_fr",
                                             start_line=789, start_column=12,
                                             end_line=789, end_column=31,
                                             law_headings=["Secteur accession à la propriété",
                                             "Calcul du montant de l'aide personnalisée au logement",
                                             "Déclarations des champs d'application",
                                             "Prologue : aides au logement"]))
    aide_finale_formule_2 = temp_aide_finale_formule_2
    try:
        def temp_traitement_aide_finale_montant_minimal_2(aide_finale_14:Money):
            try:
                if (traitement_aide_finale_contributions_sociales_arrondi_2(
                    aide_finale_14) <
                    montant_minimal_aide_d832_10):
                    return money_of_cents_string("0")
                else:
                    return traitement_aide_finale_contributions_sociales_arrondi_2(
                        aide_finale_14)
            except EmptyError:
                raise NoValueProvided(SourcePosition(filename="examples/aides_logement/prologue.catala_fr",
                                                     start_line=795,
                                                     start_column=10,
                                                     end_line=795,
                                                     end_column=25,
                                                     law_headings=["Secteur accession à la propriété",
                                                     "Calcul du montant de l'aide personnalisée au logement",
                                                     "Déclarations des champs d'application",
                                                     "Prologue : aides au logement"]))
    except EmptyError:
        temp_traitement_aide_finale_montant_minimal_2 = dead_value
        raise NoValueProvided(SourcePosition(filename="examples/aides_logement/prologue.catala_fr",
                                             start_line=795, start_column=10,
                                             end_line=795, end_column=25,
                                             law_headings=["Secteur accession à la propriété",
                                             "Calcul du montant de l'aide personnalisée au logement",
                                             "Déclarations des champs d'application",
                                             "Prologue : aides au logement"]))
    traitement_aide_finale_montant_minimal_2 = temp_traitement_aide_finale_montant_minimal_2
    try:
        temp___10 = (date_courante_8 >= date_of_numbers(2020,10,1))
    except EmptyError:
        temp___10 = dead_value
        raise NoValueProvided(SourcePosition(filename="examples/aides_logement/prologue.catala_fr",
                                             start_line=803, start_column=13,
                                             end_line=803, end_column=42,
                                             law_headings=["Secteur accession à la propriété",
                                             "Calcul du montant de l'aide personnalisée au logement",
                                             "Déclarations des champs d'application",
                                             "Prologue : aides au logement"]))
    if not (temp___10):
        raise AssertionFailure(SourcePosition(filename="examples/aides_logement/prologue.catala_fr",
                                              start_line=803,
                                              start_column=13, end_line=803,
                                              end_column=42,
                                              law_headings=["Secteur accession à la propriété",
                                                           "Calcul du montant de l'aide personnalisée au logement",
                                                           "Déclarations des champs d'application",
                                                           "Prologue : aides au logement"]))
    return CalculAidePersonnaliseeLogementAccessionPropriete(mensualite_eligible = mensualite_eligible,
        mensualite_minimale = mensualite_minimale,
        coefficient_prise_en_charge_d832_10 = coefficient_prise_en_charge_d832_10_seuil,
        aide_finale_formule = aide_finale_formule_2,
        traitement_aide_finale = traitement_aide_finale_montant_minimal_2)

def ressources_aides_personnelle_logement(ressources_aides_personnelle_logement_in:RessourcesAidesPersonnelleLogementIn):
    ressources_demandeur = ressources_aides_personnelle_logement_in.ressources_demandeur_in
    ressources_conjoint = ressources_aides_personnelle_logement_in.ressources_conjoint_in
    personnes_vivant_habituellement_foyer = ressources_aides_personnelle_logement_in.personnes_vivant_habituellement_foyer_in
    demandeur_exerce_activite_remuneree = ressources_aides_personnelle_logement_in.demandeur_exerce_activite_remuneree_in
    conjoint_exerce_activite_remuneree = ressources_aides_personnelle_logement_in.conjoint_exerce_activite_remuneree_in
    personnes_a_charge = ressources_aides_personnelle_logement_in.personnes_a_charge_in
    situation_familiale = ressources_aides_personnelle_logement_in.situation_familiale_in
    mode_occupation_1 = ressources_aides_personnelle_logement_in.mode_occupation_in
    date_courante_9 = ressources_aides_personnelle_logement_in.date_courante_in
    condition_age_bourse_enseignement_superieur = ressources_aides_personnelle_logement_in.condition_age_bourse_enseignement_superieur_in
    demandeur_poursuit_des_etudes = ressources_aides_personnelle_logement_in.demandeur_poursuit_des_etudes_in
    date_demande_ou_reexamen_droit = ressources_aides_personnelle_logement_in.date_demande_ou_reexamen_droit_in
    paiement_logement_distinct_professionnel = ressources_aides_personnelle_logement_in.paiement_logement_distinct_professionnel_in
    ressources_menage_arrondies_base = ressources_aides_personnelle_logement_in.ressources_menage_arrondies_base_in
    try:
        def temp_ressources_personnes_vivant_habituellement_foyer(personne:PersonneVivantHabituellementAuFoyer):
            return personne.ressources
        def temp_ressources_personnes_vivant_habituellement_foyer_1(sum1_2:Money, sum2_2:Money):
            return (sum1_2 + sum2_2)
        temp_ressources_personnes_vivant_habituellement_foyer_2 = list_reduce(
            temp_ressources_personnes_vivant_habituellement_foyer_1,
            money_of_cents_string("0"),
            list_map(temp_ressources_personnes_vivant_habituellement_foyer,
            personnes_vivant_habituellement_foyer))
    except EmptyError:
        temp_ressources_personnes_vivant_habituellement_foyer_2 = dead_value
        raise NoValueProvided(SourcePosition(filename="examples/aides_logement/prologue.catala_fr",
                                             start_line=535, start_column=11,
                                             end_line=535, end_column=59,
                                             law_headings=["Prise en compte des ressources pour les aides personnelles au logement",
                                             "Déclarations des champs d'application",
                                             "Prologue : aides au logement"]))
    ressources_personnes_vivant_habituellement_foyer = temp_ressources_personnes_vivant_habituellement_foyer_2
    try:
        match_arg_431 = situation_familiale
        if match_arg_431.code == SituationFamiliale_Code.Celibataire:
            _ = match_arg_431.value
            if (list_length(personnes_a_charge) ==
                integer_of_string("0")):
                temp_abattement_r_822_10 = money_of_cents_string("0")
            else:
                if (list_length(personnes_a_charge) <=
                    integer_of_string("2")):
                    temp_abattement_r_822_10 = money_of_cents_string("90100")
                else:
                    temp_abattement_r_822_10 = money_of_cents_string("135000")
        elif match_arg_431.code == SituationFamiliale_Code.Maries:
            _ = match_arg_431.value
            temp_abattement_r_822_10 = money_of_cents_string("0")
        elif match_arg_431.code == SituationFamiliale_Code.Pacses:
            _ = match_arg_431.value
            temp_abattement_r_822_10 = money_of_cents_string("0")
        elif match_arg_431.code == SituationFamiliale_Code.Concubins:
            _ = match_arg_431.value
            temp_abattement_r_822_10 = money_of_cents_string("0")
        elif match_arg_431.code == SituationFamiliale_Code.CelibataireSepareDeFait:
            _ = match_arg_431.value
            if (list_length(personnes_a_charge) ==
                integer_of_string("0")):
                temp_abattement_r_822_10 = money_of_cents_string("0")
            else:
                if (list_length(personnes_a_charge) <=
                    integer_of_string("2")):
                    temp_abattement_r_822_10 = money_of_cents_string("90100")
                else:
                    temp_abattement_r_822_10 = money_of_cents_string("135000")
        elif match_arg_431.code == SituationFamiliale_Code.ConcubinageDontSepareDeFait:
            _ = match_arg_431.value
            temp_abattement_r_822_10 = money_of_cents_string("0")
    except EmptyError:
        temp_abattement_r_822_10 = dead_value
        raise NoValueProvided(SourcePosition(filename="examples/aides_logement/prologue.catala_fr",
                                             start_line=540, start_column=11,
                                             end_line=540, end_column=30,
                                             law_headings=["Prise en compte des ressources pour les aides personnelles au logement",
                                             "Déclarations des champs d'application",
                                             "Prologue : aides au logement"]))
    abattement_r_822_10 = temp_abattement_r_822_10
    try:
        if (date_courante_9 >=
            date_of_numbers(2019,10,1)):
            temp_montant_forfaitaire_r_822_7 = money_of_cents_string("9500")
        else:
            temp_montant_forfaitaire_r_822_7 = dead_value
            raise EmptyError
    except EmptyError:
        temp_montant_forfaitaire_r_822_7 = dead_value
        raise NoValueProvided(SourcePosition(filename="examples/aides_logement/prologue.catala_fr",
                                             start_line=539, start_column=11,
                                             end_line=539, end_column=38,
                                             law_headings=["Prise en compte des ressources pour les aides personnelles au logement",
                                             "Déclarations des champs d'application",
                                             "Prologue : aides au logement"]))
    montant_forfaitaire_r_822_7 = temp_montant_forfaitaire_r_822_7
    try:
        if (date_courante_9 >=
            date_of_numbers(2019,10,1)):
            temp_montant_forfaitaire_r_822_8 = money_of_cents_string("258900")
        else:
            temp_montant_forfaitaire_r_822_8 = dead_value
            raise EmptyError
    except EmptyError:
        temp_montant_forfaitaire_r_822_8 = dead_value
        raise NoValueProvided(SourcePosition(filename="examples/aides_logement/prologue.catala_fr",
                                             start_line=537, start_column=11,
                                             end_line=537, end_column=38,
                                             law_headings=["Prise en compte des ressources pour les aides personnelles au logement",
                                             "Déclarations des champs d'application",
                                             "Prologue : aides au logement"]))
    montant_forfaitaire_r_822_8 = temp_montant_forfaitaire_r_822_8
    try:
        temp_base_mensuelle_allocations_familiales_dot_date_courante = date_demande_ou_reexamen_droit
    except EmptyError:
        temp_base_mensuelle_allocations_familiales_dot_date_courante = dead_value
        raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                             start_line=418, start_column=14,
                                             end_line=418, end_column=65,
                                             law_headings=["Article R822-7",
                                             "Sous-section 2 : Principes de neutralisation et d'abattement",
                                             "Section 2 : Conditions relatives aux ressources",
                                             "Chapitre II : Conditions générales d'attribution",
                                             "Titre II : Dispositions communes aux aides personnelles au logement",
                                             "Livre VIII : Aides personnelles au logement",
                                             "Partie réglementaire",
                                             "Code de la construction et de l'habitation"]))
    base_mensuelle_allocations_familiales_dot_date_courante = temp_base_mensuelle_allocations_familiales_dot_date_courante
    result_7 = base_mensuelle_allocations_familiales(BaseMensuelleAllocationsFamilialesIn(date_courante_in = base_mensuelle_allocations_familiales_dot_date_courante))
    base_mensuelle_allocations_familiales_dot_montant = result_7.montant
    try:
        try:
            match_arg_432 = mode_occupation_1
            if match_arg_432.code == ModeOccupation_Code.Locataire:
                _ = match_arg_432.value
                temp_ressources_prises_en_compte = False
            elif match_arg_432.code == ModeOccupation_Code.ResidentLogementFoyer:
                _ = match_arg_432.value
                temp_ressources_prises_en_compte = True
            elif match_arg_432.code == ModeOccupation_Code.AccessionProprieteLocalUsageExclusifHabitation:
                _ = match_arg_432.value
                temp_ressources_prises_en_compte = False
            elif match_arg_432.code == ModeOccupation_Code.SousLocataire:
                _ = match_arg_432.value
                temp_ressources_prises_en_compte = False
            elif match_arg_432.code == ModeOccupation_Code.LocationAccession:
                _ = match_arg_432.value
                temp_ressources_prises_en_compte = False
            match_arg_433 = mode_occupation_1
            if match_arg_433.code == ModeOccupation_Code.Locataire:
                _ = match_arg_433.value
                temp_ressources_prises_en_compte_1 = True
            elif match_arg_433.code == ModeOccupation_Code.ResidentLogementFoyer:
                _ = match_arg_433.value
                temp_ressources_prises_en_compte_1 = False
            elif match_arg_433.code == ModeOccupation_Code.AccessionProprieteLocalUsageExclusifHabitation:
                _ = match_arg_433.value
                temp_ressources_prises_en_compte_1 = False
            elif match_arg_433.code == ModeOccupation_Code.SousLocataire:
                _ = match_arg_433.value
                temp_ressources_prises_en_compte_1 = False
            elif match_arg_433.code == ModeOccupation_Code.LocationAccession:
                _ = match_arg_433.value
                temp_ressources_prises_en_compte_1 = False
            if ((temp_ressources_prises_en_compte_1 or
                temp_ressources_prises_en_compte) and
                (condition_age_bourse_enseignement_superieur and
                demandeur_poursuit_des_etudes)):
                temp_ressources_prises_en_compte_2 = money_of_cents_string("0")
            else:
                temp_ressources_prises_en_compte_2 = dead_value
                raise EmptyError
        except EmptyError:
            temp_ressources_prises_en_compte_2 = ((ressources_demandeur +
                ressources_conjoint) +
                ressources_personnes_vivant_habituellement_foyer)
    except EmptyError:
        temp_ressources_prises_en_compte_2 = dead_value
        raise NoValueProvided(SourcePosition(filename="examples/aides_logement/prologue.catala_fr",
                                             start_line=546, start_column=12,
                                             end_line=546, end_column=39,
                                             law_headings=["Prise en compte des ressources pour les aides personnelles au logement",
                                             "Déclarations des champs d'application",
                                             "Prologue : aides au logement"]))
    ressources_prises_en_compte = temp_ressources_prises_en_compte_2
    try:
        match_arg_434 = paiement_logement_distinct_professionnel
        if match_arg_434.code == PaiementLogementDistinctProfessionnel_Code.OuiAvecLoyerOuCharges:
            loyer_ou_charges = match_arg_434.value
            temp_abattement_r_822_8 = montant_forfaitaire_r_822_8
        elif match_arg_434.code == PaiementLogementDistinctProfessionnel_Code.Non:
            _ = match_arg_434.value
            temp_abattement_r_822_8 = money_of_cents_string("0")
    except EmptyError:
        temp_abattement_r_822_8 = dead_value
        raise NoValueProvided(SourcePosition(filename="examples/aides_logement/prologue.catala_fr",
                                             start_line=536, start_column=11,
                                             end_line=536, end_column=29,
                                             law_headings=["Prise en compte des ressources pour les aides personnelles au logement",
                                             "Déclarations des champs d'application",
                                             "Prologue : aides au logement"]))
    abattement_r_822_8 = temp_abattement_r_822_8
    try:
        if (demandeur_exerce_activite_remuneree and
            (conjoint_exerce_activite_remuneree and ((ressources_demandeur +
            ressources_conjoint) >=
            (base_mensuelle_allocations_familiales_dot_montant *
            decimal_of_string("12."))))):
            temp_abattement_r_822_7 = montant_forfaitaire_r_822_7
        else:
            temp_abattement_r_822_7 = money_of_cents_string("0")
    except EmptyError:
        temp_abattement_r_822_7 = dead_value
        raise NoValueProvided(SourcePosition(filename="examples/aides_logement/prologue.catala_fr",
                                             start_line=538, start_column=11,
                                             end_line=538, end_column=29,
                                             law_headings=["Prise en compte des ressources pour les aides personnelles au logement",
                                             "Déclarations des champs d'application",
                                             "Prologue : aides au logement"]))
    abattement_r_822_7 = temp_abattement_r_822_7
    try:
        def temp___11(acc:bool, personne_1:PersonneVivantHabituellementAuFoyer):
            return (acc and
                personne_1.duree_residence_durant_periode_r_822_3_1_superieure_a_6_mois)
        temp___12 = list_fold_left(temp___11, True,
                                   personnes_vivant_habituellement_foyer)
    except EmptyError:
        temp___12 = dead_value
        raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                             start_line=142, start_column=13,
                                             end_line=143, end_column=74,
                                             law_headings=["Article R822-2",
                                             "Sous-section 1 : Modalités générales de l'appréciation des ressources",
                                             "Section 2 : Conditions relatives aux ressources",
                                             "Chapitre II : Conditions générales d'attribution",
                                             "Titre II : Dispositions communes aux aides personnelles au logement",
                                             "Livre VIII : Aides personnelles au logement",
                                             "Partie réglementaire",
                                             "Code de la construction et de l'habitation"]))
    if not (temp___12):
        raise AssertionFailure(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                              start_line=142,
                                              start_column=13, end_line=143,
                                              end_column=74,
                                              law_headings=["Article R822-2",
                                                           "Sous-section 1 : Modalités générales de l'appréciation des ressources",
                                                           "Section 2 : Conditions relatives aux ressources",
                                                           "Chapitre II : Conditions générales d'attribution",
                                                           "Titre II : Dispositions communes aux aides personnelles au logement",
                                                           "Livre VIII : Aides personnelles au logement",
                                                           "Partie réglementaire",
                                                           "Code de la construction et de l'habitation"]))
    return RessourcesAidesPersonnelleLogement(ressources_prises_en_compte = ressources_prises_en_compte)

def eligibilite_prestations_familiales(eligibilite_prestations_familiales_in:EligibilitePrestationsFamilialesIn):
    date_courante_10 = eligibilite_prestations_familiales_in.date_courante_in
    prestation_courante = eligibilite_prestations_familiales_in.prestation_courante_in
    residence_4 = eligibilite_prestations_familiales_in.residence_in
    age_l512_3_2 = eligibilite_prestations_familiales_in.age_l512_3_2_in
    try:
        try:
            temp_age_l512_3_2 = age_l512_3_2(Unit())
        except EmptyError:
            temp_age_l512_3_2 = duration_of_numbers(20,0,0)
    except EmptyError:
        temp_age_l512_3_2 = dead_value
        raise NoValueProvided(SourcePosition(filename="examples/aides_logement/../prestations_familiales/prologue.catala_fr",
                                             start_line=46, start_column=21,
                                             end_line=46, end_column=33,
                                             law_headings=["Prologue : prestations familiales"]))
    age_l512_3_2_1 = temp_age_l512_3_2
    try:
        temp_smic_dot_date_courante = date_courante_10
    except EmptyError:
        temp_smic_dot_date_courante = dead_value
        raise NoValueProvided(SourcePosition(filename="examples/aides_logement/../prestations_familiales/prologue.catala_fr",
                                             start_line=57, start_column=14,
                                             end_line=57, end_column=32,
                                             law_headings=["Prologue : prestations familiales"]))
    smic_dot_date_courante = temp_smic_dot_date_courante
    try:
        temp_smic_dot_residence = residence_4
    except EmptyError:
        temp_smic_dot_residence = dead_value
        raise NoValueProvided(SourcePosition(filename="examples/aides_logement/../prestations_familiales/prologue.catala_fr",
                                             start_line=56, start_column=14,
                                             end_line=56, end_column=28,
                                             law_headings=["Prologue : prestations familiales"]))
    smic_dot_residence = temp_smic_dot_residence
    result_8 = smic(SmicIn(date_courante_in = smic_dot_date_courante,
                    residence_in = smic_dot_residence))
    smic_dot_brut_horaire = result_8.brut_horaire
    try:
        try:
            if ((residence_4 == Collectivite(Collectivite_Code.Guadeloupe,
                Unit())) or ((residence_4 ==
                Collectivite(Collectivite_Code.Guyane, Unit())) or
                ((residence_4 == Collectivite(Collectivite_Code.Martinique,
                Unit())) or ((residence_4 ==
                Collectivite(Collectivite_Code.LaReunion, Unit())) or
                ((residence_4 ==
                Collectivite(Collectivite_Code.SaintBarthelemy, Unit())) or
                (residence_4 == Collectivite(Collectivite_Code.SaintMartin,
                Unit()))))))):
                temp_regime_outre_mer_l751_1 = True
            else:
                temp_regime_outre_mer_l751_1 = dead_value
                raise EmptyError
        except EmptyError:
            temp_regime_outre_mer_l751_1 = False
    except EmptyError:
        temp_regime_outre_mer_l751_1 = dead_value
        raise NoValueProvided(SourcePosition(filename="examples/aides_logement/../prestations_familiales/prologue.catala_fr",
                                             start_line=51, start_column=12,
                                             end_line=51, end_column=35,
                                             law_headings=["Prologue : prestations familiales"]))
    regime_outre_mer_l751_1 = temp_regime_outre_mer_l751_1
    try:
        try:
            if regime_outre_mer_l751_1:
                temp_plafond_l512_3_2 = ((smic_dot_brut_horaire *
                    decimal_of_string("0.55")) * decimal_of_string("169."))
            else:
                temp_plafond_l512_3_2 = dead_value
                raise EmptyError
        except EmptyError:
            temp_plafond_l512_3_2 = ((smic_dot_brut_horaire *
                decimal_of_string("0.55")) * decimal_of_string("169."))
    except EmptyError:
        temp_plafond_l512_3_2 = dead_value
        raise NoValueProvided(SourcePosition(filename="examples/aides_logement/../prestations_familiales/prologue.catala_fr",
                                             start_line=44, start_column=11,
                                             end_line=44, end_column=27,
                                             law_headings=["Prologue : prestations familiales"]))
    plafond_l512_3_2 = temp_plafond_l512_3_2
    try:
        def temp_conditions_hors_age(enfant:EnfantPrestationsFamiliales):
            try:
                try:
                    match_arg_435 = enfant.obligation_scolaire
                    if match_arg_435.code == SituationObligationScolaire_Code.Avant:
                        _ = match_arg_435.value
                        temp_conditions_hors_age_1 = False
                    elif match_arg_435.code == SituationObligationScolaire_Code.Pendant:
                        _ = match_arg_435.value
                        temp_conditions_hors_age_1 = False
                    elif match_arg_435.code == SituationObligationScolaire_Code.Apres:
                        _ = match_arg_435.value
                        temp_conditions_hors_age_1 = True
                    match_arg_436 = enfant.obligation_scolaire
                    if match_arg_436.code == SituationObligationScolaire_Code.Avant:
                        _ = match_arg_436.value
                        temp_conditions_hors_age_2 = False
                    elif match_arg_436.code == SituationObligationScolaire_Code.Pendant:
                        _ = match_arg_436.value
                        temp_conditions_hors_age_2 = True
                    elif match_arg_436.code == SituationObligationScolaire_Code.Apres:
                        _ = match_arg_436.value
                        temp_conditions_hors_age_2 = False
                    match_arg_437 = enfant.obligation_scolaire
                    if match_arg_437.code == SituationObligationScolaire_Code.Avant:
                        _ = match_arg_437.value
                        temp_conditions_hors_age_3 = True
                    elif match_arg_437.code == SituationObligationScolaire_Code.Pendant:
                        _ = match_arg_437.value
                        temp_conditions_hors_age_3 = False
                    elif match_arg_437.code == SituationObligationScolaire_Code.Apres:
                        _ = match_arg_437.value
                        temp_conditions_hors_age_3 = False
                    if ((temp_conditions_hors_age_3 or
                        (temp_conditions_hors_age_2 or
                        temp_conditions_hors_age_1)) and
                        (enfant.remuneration_mensuelle <=
                        plafond_l512_3_2)):
                        return True
                    else:
                        raise EmptyError
                except EmptyError:
                    return False
            except EmptyError:
                raise NoValueProvided(SourcePosition(filename="examples/aides_logement/../prestations_familiales/prologue.catala_fr",
                                                     start_line=49,
                                                     start_column=12,
                                                     end_line=49,
                                                     end_column=31,
                                                     law_headings=["Prologue : prestations familiales"]))
    except EmptyError:
        temp_conditions_hors_age = dead_value
        raise NoValueProvided(SourcePosition(filename="examples/aides_logement/../prestations_familiales/prologue.catala_fr",
                                             start_line=49, start_column=12,
                                             end_line=49, end_column=31,
                                             law_headings=["Prologue : prestations familiales"]))
    conditions_hors_age = temp_conditions_hors_age
    try:
        def temp_droit_ouvert(enfant_1:EnfantPrestationsFamiliales):
            try:
                try:
                    try:
                        try:
                            temp_droit_ouvert_1 = age_l512_3_2_1
                        except EmptyError:
                            temp_droit_ouvert_1 = dead_value
                            raise NoValueProvided(SourcePosition(filename="examples/aides_logement/../prestations_familiales/sécurité_sociale_L.catala_fr",
                                                                 start_line=72,
                                                                 start_column=30,
                                                                 end_line=72,
                                                                 end_column=42,
                                                                 law_headings=["Article L512-3",
                                                                 "Chapitre 2 : Champ d'application",
                                                                 "Titre 1 : Champ d'application - Généralités",
                                                                 "Livre 5 : Prestations familiales et prestations assimilées",
                                                                 "Partie législative",
                                                                 "Code de la sécurité sociale"]))
                        try:
                            temp_droit_ouvert_2 = date_courante_10
                        except EmptyError:
                            temp_droit_ouvert_2 = dead_value
                            raise NoValueProvided(SourcePosition(filename="examples/aides_logement/../prestations_familiales/sécurité_sociale_L.catala_fr",
                                                                 start_line=71,
                                                                 start_column=37,
                                                                 end_line=71,
                                                                 end_column=50,
                                                                 law_headings=["Article L512-3",
                                                                 "Chapitre 2 : Champ d'application",
                                                                 "Titre 1 : Champ d'application - Généralités",
                                                                 "Livre 5 : Prestations familiales et prestations assimilées",
                                                                 "Partie législative",
                                                                 "Code de la sécurité sociale"]))
                        try:
                            temp_droit_ouvert_3 = enfant_1.date_de_naissance
                        except EmptyError:
                            temp_droit_ouvert_3 = dead_value
                            raise NoValueProvided(SourcePosition(filename="examples/aides_logement/../prestations_familiales/sécurité_sociale_L.catala_fr",
                                                                 start_line=70,
                                                                 start_column=38,
                                                                 end_line=70,
                                                                 end_column=62,
                                                                 law_headings=["Article L512-3",
                                                                 "Chapitre 2 : Champ d'application",
                                                                 "Titre 1 : Champ d'application - Généralités",
                                                                 "Livre 5 : Prestations familiales et prestations assimilées",
                                                                 "Partie législative",
                                                                 "Code de la sécurité sociale"]))
                        match_arg_438 = enfant_1.obligation_scolaire
                        if match_arg_438.code == SituationObligationScolaire_Code.Avant:
                            _ = match_arg_438.value
                            temp_droit_ouvert_4 = False
                        elif match_arg_438.code == SituationObligationScolaire_Code.Pendant:
                            _ = match_arg_438.value
                            temp_droit_ouvert_4 = False
                        elif match_arg_438.code == SituationObligationScolaire_Code.Apres:
                            _ = match_arg_438.value
                            temp_droit_ouvert_4 = True
                        if (temp_droit_ouvert_4 and
                            ((enfant_1.remuneration_mensuelle <=
                            plafond_l512_3_2) and
                            VerificationAgeSuperieurA(est_superieur = verification_age_superieur_a(
                            VerificationAgeSuperieurAIn(date_naissance_in = temp_droit_ouvert_3,
                            date_courante_in = temp_droit_ouvert_2,
                            annees_in = temp_droit_ouvert_1)).est_superieur).est_superieur)):
                            return True
                        else:
                            raise EmptyError
                    except EmptyError:
                        match_arg_439 = enfant_1.obligation_scolaire
                        if match_arg_439.code == SituationObligationScolaire_Code.Avant:
                            _ = match_arg_439.value
                            temp_droit_ouvert_5 = False
                        elif match_arg_439.code == SituationObligationScolaire_Code.Pendant:
                            _ = match_arg_439.value
                            temp_droit_ouvert_5 = True
                        elif match_arg_439.code == SituationObligationScolaire_Code.Apres:
                            _ = match_arg_439.value
                            temp_droit_ouvert_5 = False
                        match_arg_440 = enfant_1.obligation_scolaire
                        if match_arg_440.code == SituationObligationScolaire_Code.Avant:
                            _ = match_arg_440.value
                            temp_droit_ouvert_6 = True
                        elif match_arg_440.code == SituationObligationScolaire_Code.Pendant:
                            _ = match_arg_440.value
                            temp_droit_ouvert_6 = False
                        elif match_arg_440.code == SituationObligationScolaire_Code.Apres:
                            _ = match_arg_440.value
                            temp_droit_ouvert_6 = False
                        if (temp_droit_ouvert_6 or
                            temp_droit_ouvert_5):
                            return True
                        else:
                            raise EmptyError
                except EmptyError:
                    return False
            except EmptyError:
                raise NoValueProvided(SourcePosition(filename="examples/aides_logement/../prestations_familiales/prologue.catala_fr",
                                                     start_line=47,
                                                     start_column=12,
                                                     end_line=47,
                                                     end_column=24,
                                                     law_headings=["Prologue : prestations familiales"]))
    except EmptyError:
        temp_droit_ouvert = dead_value
        raise NoValueProvided(SourcePosition(filename="examples/aides_logement/../prestations_familiales/prologue.catala_fr",
                                             start_line=47, start_column=12,
                                             end_line=47, end_column=24,
                                             law_headings=["Prologue : prestations familiales"]))
    droit_ouvert = temp_droit_ouvert
    return EligibilitePrestationsFamiliales(age_l512_3_2 = age_l512_3_2_1,
        droit_ouvert = droit_ouvert,
        conditions_hors_age = conditions_hors_age,
        regime_outre_mer_l751_1 = regime_outre_mer_l751_1)

def calcul_allocation_logement_locatif(calcul_allocation_logement_locatif_in:CalculAllocationLogementLocatifIn):
    loyer_principal = calcul_allocation_logement_locatif_in.loyer_principal_in
    ressources_menage_arrondies_4 = calcul_allocation_logement_locatif_in.ressources_menage_arrondies_in
    beneficiaire_aide_adulte_ou_enfant_handicapes_1 = calcul_allocation_logement_locatif_in.beneficiaire_aide_adulte_ou_enfant_handicapes_in
    date_courante_11 = calcul_allocation_logement_locatif_in.date_courante_in
    nombre_personnes_a_charge_5 = calcul_allocation_logement_locatif_in.nombre_personnes_a_charge_in
    situation_familiale_calcul_apl_5 = calcul_allocation_logement_locatif_in.situation_familiale_calcul_apl_in
    zone_3 = calcul_allocation_logement_locatif_in.zone_in
    logement_est_chambre_1 = calcul_allocation_logement_locatif_in.logement_est_chambre_in
    agees_ou_handicap_adultes_hebergees_onereux_particuliers_1 = calcul_allocation_logement_locatif_in.agees_ou_handicap_adultes_hebergees_onereux_particuliers_in
    type_aide_1 = calcul_allocation_logement_locatif_in.type_aide_in
    colocation_1 = calcul_allocation_logement_locatif_in.colocation_in
    reduction_loyer_solidarite_1 = calcul_allocation_logement_locatif_in.reduction_loyer_solidarite_in
    logement_meuble_d842_2_1 = calcul_allocation_logement_locatif_in.logement_meuble_d842_2_in
    residence_5 = calcul_allocation_logement_locatif_in.residence_in
    changement_logement_d842_4 = calcul_allocation_logement_locatif_in.changement_logement_d842_4_in
    try:
        temp_calcul_apl_locatif_dot_loyer_principal_base = loyer_principal
    except EmptyError:
        temp_calcul_apl_locatif_dot_loyer_principal_base = dead_value
        raise NoValueProvided(SourcePosition(filename="examples/aides_logement/prologue.catala_fr",
                                             start_line=880, start_column=14,
                                             end_line=880, end_column=48,
                                             law_headings=["Secteur locatif",
                                             "Calcul du montant de l'allocation logement",
                                             "Prologue : aides au logement"]))
    calcul_apl_locatif_dot_loyer_principal_base = temp_calcul_apl_locatif_dot_loyer_principal_base
    try:
        temp_calcul_apl_locatif_dot_ressources_menage_arrondies = ressources_menage_arrondies_4
    except EmptyError:
        temp_calcul_apl_locatif_dot_ressources_menage_arrondies = dead_value
        raise NoValueProvided(SourcePosition(filename="examples/aides_logement/prologue.catala_fr",
                                             start_line=882, start_column=14,
                                             end_line=882, end_column=60,
                                             law_headings=["Secteur locatif",
                                             "Calcul du montant de l'allocation logement",
                                             "Prologue : aides au logement"]))
    calcul_apl_locatif_dot_ressources_menage_arrondies = temp_calcul_apl_locatif_dot_ressources_menage_arrondies
    try:
        temp_calcul_apl_locatif_dot_beneficiaire_aide_adulte_ou_enfant_handicapes = beneficiaire_aide_adulte_ou_enfant_handicapes_1
    except EmptyError:
        temp_calcul_apl_locatif_dot_beneficiaire_aide_adulte_ou_enfant_handicapes = dead_value
        raise NoValueProvided(SourcePosition(filename="examples/aides_logement/prologue.catala_fr",
                                             start_line=884, start_column=14,
                                             end_line=884, end_column=78,
                                             law_headings=["Secteur locatif",
                                             "Calcul du montant de l'allocation logement",
                                             "Prologue : aides au logement"]))
    calcul_apl_locatif_dot_beneficiaire_aide_adulte_ou_enfant_handicapes = temp_calcul_apl_locatif_dot_beneficiaire_aide_adulte_ou_enfant_handicapes
    try:
        temp_calcul_apl_locatif_dot_date_courante = date_courante_11
    except EmptyError:
        temp_calcul_apl_locatif_dot_date_courante = dead_value
        raise NoValueProvided(SourcePosition(filename="examples/aides_logement/prologue.catala_fr",
                                             start_line=887, start_column=14,
                                             end_line=887, end_column=46,
                                             law_headings=["Secteur locatif",
                                             "Calcul du montant de l'allocation logement",
                                             "Prologue : aides au logement"]))
    calcul_apl_locatif_dot_date_courante = temp_calcul_apl_locatif_dot_date_courante
    try:
        temp_calcul_apl_locatif_dot_nombre_personnes_a_charge = nombre_personnes_a_charge_5
    except EmptyError:
        temp_calcul_apl_locatif_dot_nombre_personnes_a_charge = dead_value
        raise NoValueProvided(SourcePosition(filename="examples/aides_logement/prologue.catala_fr",
                                             start_line=889, start_column=14,
                                             end_line=889, end_column=58,
                                             law_headings=["Secteur locatif",
                                             "Calcul du montant de l'allocation logement",
                                             "Prologue : aides au logement"]))
    calcul_apl_locatif_dot_nombre_personnes_a_charge = temp_calcul_apl_locatif_dot_nombre_personnes_a_charge
    try:
        temp_calcul_apl_locatif_dot_situation_familiale_calcul_apl = situation_familiale_calcul_apl_5
    except EmptyError:
        temp_calcul_apl_locatif_dot_situation_familiale_calcul_apl = dead_value
        raise NoValueProvided(SourcePosition(filename="examples/aides_logement/prologue.catala_fr",
                                             start_line=891, start_column=14,
                                             end_line=891, end_column=63,
                                             law_headings=["Secteur locatif",
                                             "Calcul du montant de l'allocation logement",
                                             "Prologue : aides au logement"]))
    calcul_apl_locatif_dot_situation_familiale_calcul_apl = temp_calcul_apl_locatif_dot_situation_familiale_calcul_apl
    try:
        temp_calcul_apl_locatif_dot_zone = zone_3
    except EmptyError:
        temp_calcul_apl_locatif_dot_zone = dead_value
        raise NoValueProvided(SourcePosition(filename="examples/aides_logement/prologue.catala_fr",
                                             start_line=893, start_column=14,
                                             end_line=893, end_column=37,
                                             law_headings=["Secteur locatif",
                                             "Calcul du montant de l'allocation logement",
                                             "Prologue : aides au logement"]))
    calcul_apl_locatif_dot_zone = temp_calcul_apl_locatif_dot_zone
    try:
        temp_calcul_apl_locatif_dot_logement_est_chambre = logement_est_chambre_1
    except EmptyError:
        temp_calcul_apl_locatif_dot_logement_est_chambre = dead_value
        raise NoValueProvided(SourcePosition(filename="examples/aides_logement/prologue.catala_fr",
                                             start_line=895, start_column=14,
                                             end_line=895, end_column=53,
                                             law_headings=["Secteur locatif",
                                             "Calcul du montant de l'allocation logement",
                                             "Prologue : aides au logement"]))
    calcul_apl_locatif_dot_logement_est_chambre = temp_calcul_apl_locatif_dot_logement_est_chambre
    try:
        temp_calcul_apl_locatif_dot_agees_ou_handicap_adultes_hebergees_onereux_particuliers = agees_ou_handicap_adultes_hebergees_onereux_particuliers_1
    except EmptyError:
        temp_calcul_apl_locatif_dot_agees_ou_handicap_adultes_hebergees_onereux_particuliers = dead_value
        raise NoValueProvided(SourcePosition(filename="examples/aides_logement/prologue.catala_fr",
                                             start_line=898, start_column=5,
                                             end_line=899, end_column=63,
                                             law_headings=["Secteur locatif",
                                             "Calcul du montant de l'allocation logement",
                                             "Prologue : aides au logement"]))
    calcul_apl_locatif_dot_agees_ou_handicap_adultes_hebergees_onereux_particuliers = temp_calcul_apl_locatif_dot_agees_ou_handicap_adultes_hebergees_onereux_particuliers
    try:
        temp_calcul_apl_locatif_dot_type_aide = type_aide_1
    except EmptyError:
        temp_calcul_apl_locatif_dot_type_aide = dead_value
        raise NoValueProvided(SourcePosition(filename="examples/aides_logement/prologue.catala_fr",
                                             start_line=902, start_column=14,
                                             end_line=902, end_column=42,
                                             law_headings=["Secteur locatif",
                                             "Calcul du montant de l'allocation logement",
                                             "Prologue : aides au logement"]))
    calcul_apl_locatif_dot_type_aide = temp_calcul_apl_locatif_dot_type_aide
    try:
        temp_calcul_apl_locatif_dot_colocation = colocation_1
    except EmptyError:
        temp_calcul_apl_locatif_dot_colocation = dead_value
        raise NoValueProvided(SourcePosition(filename="examples/aides_logement/prologue.catala_fr",
                                             start_line=904, start_column=14,
                                             end_line=904, end_column=43,
                                             law_headings=["Secteur locatif",
                                             "Calcul du montant de l'allocation logement",
                                             "Prologue : aides au logement"]))
    calcul_apl_locatif_dot_colocation = temp_calcul_apl_locatif_dot_colocation
    try:
        temp_calcul_apl_locatif_dot_reduction_loyer_solidarite = reduction_loyer_solidarite_1
    except EmptyError:
        temp_calcul_apl_locatif_dot_reduction_loyer_solidarite = dead_value
        raise NoValueProvided(SourcePosition(filename="examples/aides_logement/prologue.catala_fr",
                                             start_line=906, start_column=14,
                                             end_line=906, end_column=59,
                                             law_headings=["Secteur locatif",
                                             "Calcul du montant de l'allocation logement",
                                             "Prologue : aides au logement"]))
    calcul_apl_locatif_dot_reduction_loyer_solidarite = temp_calcul_apl_locatif_dot_reduction_loyer_solidarite
    try:
        temp_calcul_apl_locatif_dot_logement_meuble_d842_2 = logement_meuble_d842_2_1
    except EmptyError:
        temp_calcul_apl_locatif_dot_logement_meuble_d842_2 = dead_value
        raise NoValueProvided(SourcePosition(filename="examples/aides_logement/prologue.catala_fr",
                                             start_line=908, start_column=14,
                                             end_line=908, end_column=55,
                                             law_headings=["Secteur locatif",
                                             "Calcul du montant de l'allocation logement",
                                             "Prologue : aides au logement"]))
    calcul_apl_locatif_dot_logement_meuble_d842_2 = temp_calcul_apl_locatif_dot_logement_meuble_d842_2
    try:
        temp_calcul_apl_locatif_dot_residence = residence_5
    except EmptyError:
        temp_calcul_apl_locatif_dot_residence = dead_value
        raise NoValueProvided(SourcePosition(filename="examples/aides_logement/prologue.catala_fr",
                                             start_line=910, start_column=14,
                                             end_line=910, end_column=42,
                                             law_headings=["Secteur locatif",
                                             "Calcul du montant de l'allocation logement",
                                             "Prologue : aides au logement"]))
    calcul_apl_locatif_dot_residence = temp_calcul_apl_locatif_dot_residence
    result_9 = calcul_aide_personnalisee_logement_locatif(CalculAidePersonnaliseeLogementLocatifIn(loyer_principal_base_in = calcul_apl_locatif_dot_loyer_principal_base,
                                                          ressources_menage_arrondies_in = calcul_apl_locatif_dot_ressources_menage_arrondies,
                                                          beneficiaire_aide_adulte_ou_enfant_handicapes_in = calcul_apl_locatif_dot_beneficiaire_aide_adulte_ou_enfant_handicapes,
                                                          date_courante_in = calcul_apl_locatif_dot_date_courante,
                                                          nombre_personnes_a_charge_in = calcul_apl_locatif_dot_nombre_personnes_a_charge,
                                                          situation_familiale_calcul_apl_in = calcul_apl_locatif_dot_situation_familiale_calcul_apl,
                                                          zone_in = calcul_apl_locatif_dot_zone,
                                                          logement_est_chambre_in = calcul_apl_locatif_dot_logement_est_chambre,
                                                          agees_ou_handicap_adultes_hebergees_onereux_particuliers_in = calcul_apl_locatif_dot_agees_ou_handicap_adultes_hebergees_onereux_particuliers,
                                                          type_aide_in = calcul_apl_locatif_dot_type_aide,
                                                          colocation_in = calcul_apl_locatif_dot_colocation,
                                                          reduction_loyer_solidarite_in = calcul_apl_locatif_dot_reduction_loyer_solidarite,
                                                          logement_meuble_d842_2_in = calcul_apl_locatif_dot_logement_meuble_d842_2,
                                                          residence_in = calcul_apl_locatif_dot_residence))
    calcul_apl_locatif_dot_montant_forfaitaire_charges_d823_16 = result_9.montant_forfaitaire_charges_d823_16
    calcul_apl_locatif_dot_plafond_loyer_d823_16_2 = result_9.plafond_loyer_d823_16_2
    calcul_apl_locatif_dot_participation_minimale = result_9.participation_minimale
    calcul_apl_locatif_dot_taux_composition_familiale = result_9.taux_composition_familiale
    calcul_apl_locatif_dot_participation_personnelle = result_9.participation_personnelle
    calcul_apl_locatif_dot_aide_finale_formule = result_9.aide_finale_formule
    calcul_apl_locatif_dot_traitement_aide_finale_montant_minimal = result_9.traitement_aide_finale
    try:
        def temp_traitement_aide_finale(aide_finale_15:Money):
            try:
                try:
                    match_arg_441 = changement_logement_d842_4
                    if match_arg_441.code == ChangementLogementD8424_Code.Changement:
                        infos = match_arg_441.value
                        temp_traitement_aide_finale_1 = (loyer_principal >=
                            infos.ancien_loyer_principal)
                    elif match_arg_441.code == ChangementLogementD8424_Code.PasDeChangement:
                        _ = match_arg_441.value
                        temp_traitement_aide_finale_1 = False
                    if temp_traitement_aide_finale_1:
                        return aide_finale_15
                    else:
                        raise EmptyError
                except EmptyError:
                    return calcul_apl_locatif_dot_traitement_aide_finale_montant_minimal(
                        aide_finale_15)
            except EmptyError:
                raise NoValueProvided(SourcePosition(filename="examples/aides_logement/prologue.catala_fr",
                                                     start_line=876,
                                                     start_column=12,
                                                     end_line=876,
                                                     end_column=34,
                                                     law_headings=["Secteur locatif",
                                                     "Calcul du montant de l'allocation logement",
                                                     "Prologue : aides au logement"]))
    except EmptyError:
        temp_traitement_aide_finale = dead_value
        raise NoValueProvided(SourcePosition(filename="examples/aides_logement/prologue.catala_fr",
                                             start_line=876, start_column=12,
                                             end_line=876, end_column=34,
                                             law_headings=["Secteur locatif",
                                             "Calcul du montant de l'allocation logement",
                                             "Prologue : aides au logement"]))
    traitement_aide_finale = temp_traitement_aide_finale
    try:
        try:
            match_arg_442 = changement_logement_d842_4
            if match_arg_442.code == ChangementLogementD8424_Code.Changement:
                infos_1 = match_arg_442.value
                temp_aide_finale_formule_3 = (loyer_principal >=
                    infos_1.ancien_loyer_principal)
            elif match_arg_442.code == ChangementLogementD8424_Code.PasDeChangement:
                _ = match_arg_442.value
                temp_aide_finale_formule_3 = False
            if temp_aide_finale_formule_3:
                match_arg_443 = changement_logement_d842_4
                if match_arg_443.code == ChangementLogementD8424_Code.Changement:
                    infos_2 = match_arg_443.value
                    temp_aide_finale_formule_4 = (loyer_principal -
                        (infos_2.ancien_loyer_principal -
                        infos_2.ancienne_allocation_logement))
                elif match_arg_443.code == ChangementLogementD8424_Code.PasDeChangement:
                    _ = match_arg_443.value
                    temp_aide_finale_formule_4 = money_of_cents_string("0")
            else:
                temp_aide_finale_formule_4 = dead_value
                raise EmptyError
        except EmptyError:
            temp_aide_finale_formule_4 = calcul_apl_locatif_dot_aide_finale_formule
    except EmptyError:
        temp_aide_finale_formule_4 = dead_value
        raise NoValueProvided(SourcePosition(filename="examples/aides_logement/prologue.catala_fr",
                                             start_line=874, start_column=12,
                                             end_line=874, end_column=31,
                                             law_headings=["Secteur locatif",
                                             "Calcul du montant de l'allocation logement",
                                             "Prologue : aides au logement"]))
    aide_finale_formule_3 = temp_aide_finale_formule_4
    return CalculAllocationLogementLocatif(aide_finale_formule = aide_finale_formule_3,
        traitement_aide_finale = traitement_aide_finale)

def calcul_allocation_logement_foyer(calcul_allocation_logement_foyer_in:CalculAllocationLogementFoyerIn):
    type_logement_foyer_1 = calcul_allocation_logement_foyer_in.type_logement_foyer_in
    date_conventionnement_1 = calcul_allocation_logement_foyer_in.date_conventionnement_in
    residence_6 = calcul_allocation_logement_foyer_in.residence_in
    redevance_1 = calcul_allocation_logement_foyer_in.redevance_in
    ressources_menage_arrondies_5 = calcul_allocation_logement_foyer_in.ressources_menage_arrondies_in
    nombre_personnes_a_charge_6 = calcul_allocation_logement_foyer_in.nombre_personnes_a_charge_in
    situation_familiale_calcul_apl_6 = calcul_allocation_logement_foyer_in.situation_familiale_calcul_apl_in
    zone_4 = calcul_allocation_logement_foyer_in.zone_in
    date_courante_12 = calcul_allocation_logement_foyer_in.date_courante_in
    categorie_equivalence_loyer_d842_16 = calcul_allocation_logement_foyer_in.categorie_equivalence_loyer_d842_16_in
    try:
        temp_calcul_nombre_parts_dot_condition_2_du_832_25_1 = True
    except EmptyError:
        temp_calcul_nombre_parts_dot_condition_2_du_832_25_1 = dead_value
        raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                             start_line=4841,
                                             start_column=14, end_line=4841,
                                             end_column=55,
                                             law_headings=["Article D842-15",
                                             "Section 3 : Logements-foyers",
                                             "Chapitre 2 : Modalités de liquidation et de versement des allocations de logement",
                                             "Titre IV : Allocations de Logement",
                                             "Livre VIII : Aides personnelles au logement",
                                             "Partie réglementaire",
                                             "Code de la construction et de l'habitation"]))
    calcul_nombre_parts_dot_condition_2_du_832_25_1 = temp_calcul_nombre_parts_dot_condition_2_du_832_25_1
    try:
        temp_calcul_nombre_parts_dot_nombre_personnes_a_charge_2 = nombre_personnes_a_charge_6
    except EmptyError:
        temp_calcul_nombre_parts_dot_nombre_personnes_a_charge_2 = dead_value
        raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                             start_line=4836,
                                             start_column=14, end_line=4836,
                                             end_column=59,
                                             law_headings=["Article D842-15",
                                             "Section 3 : Logements-foyers",
                                             "Chapitre 2 : Modalités de liquidation et de versement des allocations de logement",
                                             "Titre IV : Allocations de Logement",
                                             "Livre VIII : Aides personnelles au logement",
                                             "Partie réglementaire",
                                             "Code de la construction et de l'habitation"]))
    calcul_nombre_parts_dot_nombre_personnes_a_charge_2 = temp_calcul_nombre_parts_dot_nombre_personnes_a_charge_2
    try:
        temp_calcul_nombre_parts_dot_situation_familiale_calcul_apl_2 = situation_familiale_calcul_apl_6
    except EmptyError:
        temp_calcul_nombre_parts_dot_situation_familiale_calcul_apl_2 = dead_value
        raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                             start_line=4838,
                                             start_column=14, end_line=4838,
                                             end_column=64,
                                             law_headings=["Article D842-15",
                                             "Section 3 : Logements-foyers",
                                             "Chapitre 2 : Modalités de liquidation et de versement des allocations de logement",
                                             "Titre IV : Allocations de Logement",
                                             "Livre VIII : Aides personnelles au logement",
                                             "Partie réglementaire",
                                             "Code de la construction et de l'habitation"]))
    calcul_nombre_parts_dot_situation_familiale_calcul_apl_2 = temp_calcul_nombre_parts_dot_situation_familiale_calcul_apl_2
    try:
        temp_calcul_nombre_parts_dot_residence_1 = residence_6
    except EmptyError:
        temp_calcul_nombre_parts_dot_residence_1 = dead_value
        raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                             start_line=4840,
                                             start_column=14, end_line=4840,
                                             end_column=43,
                                             law_headings=["Article D842-15",
                                             "Section 3 : Logements-foyers",
                                             "Chapitre 2 : Modalités de liquidation et de versement des allocations de logement",
                                             "Titre IV : Allocations de Logement",
                                             "Livre VIII : Aides personnelles au logement",
                                             "Partie réglementaire",
                                             "Code de la construction et de l'habitation"]))
    calcul_nombre_parts_dot_residence_1 = temp_calcul_nombre_parts_dot_residence_1
    def temp_calcul_nombre_parts_dot_limitation_majoration_personnes_a_charge_2(_:Unit):
        temp_calcul_nombre_parts_dot_limitation_majoration_personnes_a_charge_3 = dead_value
        raise EmptyError
        return temp_calcul_nombre_parts_dot_limitation_majoration_personnes_a_charge_3
    calcul_nombre_parts_dot_limitation_majoration_personnes_a_charge_1 = temp_calcul_nombre_parts_dot_limitation_majoration_personnes_a_charge_2
    result_10 = calcul_nombre_part_logement_foyer(CalculNombrePartLogementFoyerIn(condition_2_du_832_25_in = calcul_nombre_parts_dot_condition_2_du_832_25_1,
                                                  nombre_personnes_a_charge_in = calcul_nombre_parts_dot_nombre_personnes_a_charge_2,
                                                  situation_familiale_calcul_apl_in = calcul_nombre_parts_dot_situation_familiale_calcul_apl_2,
                                                  residence_in = calcul_nombre_parts_dot_residence_1,
                                                  limitation_majoration_personnes_a_charge_in = calcul_nombre_parts_dot_limitation_majoration_personnes_a_charge_1))
    calcul_nombre_parts_dot_n_nombre_parts_d832_25_1 = result_10.n_nombre_parts_d832_25
    try:
        temp_contributions_sociales_dot_date_courante_3 = date_courante_12
    except EmptyError:
        temp_contributions_sociales_dot_date_courante_3 = dead_value
        raise NoValueProvided(SourcePosition(filename="examples/aides_logement/prologue.catala_fr",
                                             start_line=1081,
                                             start_column=14, end_line=1081,
                                             end_column=50,
                                             law_headings=["Secteur logement-foyer",
                                             "Calcul du montant de l'allocation logement",
                                             "Prologue : aides au logement"]))
    contributions_sociales_dot_date_courante_3 = temp_contributions_sociales_dot_date_courante_3
    result_11 = contributions_sociales_aides_personnelle_logement(ContributionsSocialesAidesPersonnelleLogementIn(date_courante_in = contributions_sociales_dot_date_courante_3))
    contributions_sociales_dot_montant_3 = result_11.montant
    try:
        temp_calcul_apl_logement_foyer_dot_type_logement_foyer = type_logement_foyer_1
    except EmptyError:
        temp_calcul_apl_logement_foyer_dot_type_logement_foyer = dead_value
        raise NoValueProvided(SourcePosition(filename="examples/aides_logement/prologue.catala_fr",
                                             start_line=1065,
                                             start_column=14, end_line=1065,
                                             end_column=59,
                                             law_headings=["Secteur logement-foyer",
                                             "Calcul du montant de l'allocation logement",
                                             "Prologue : aides au logement"]))
    calcul_apl_logement_foyer_dot_type_logement_foyer = temp_calcul_apl_logement_foyer_dot_type_logement_foyer
    try:
        temp_calcul_apl_logement_foyer_dot_date_conventionnement = date_conventionnement_1
    except EmptyError:
        temp_calcul_apl_logement_foyer_dot_date_conventionnement = dead_value
        raise NoValueProvided(SourcePosition(filename="examples/aides_logement/prologue.catala_fr",
                                             start_line=1067,
                                             start_column=14, end_line=1067,
                                             end_column=61,
                                             law_headings=["Secteur logement-foyer",
                                             "Calcul du montant de l'allocation logement",
                                             "Prologue : aides au logement"]))
    calcul_apl_logement_foyer_dot_date_conventionnement = temp_calcul_apl_logement_foyer_dot_date_conventionnement
    try:
        temp_calcul_apl_logement_foyer_dot_ressources_menage_arrondies = ressources_menage_arrondies_5
    except EmptyError:
        temp_calcul_apl_logement_foyer_dot_ressources_menage_arrondies = dead_value
        raise NoValueProvided(SourcePosition(filename="examples/aides_logement/prologue.catala_fr",
                                             start_line=1071,
                                             start_column=14, end_line=1071,
                                             end_column=67,
                                             law_headings=["Secteur logement-foyer",
                                             "Calcul du montant de l'allocation logement",
                                             "Prologue : aides au logement"]))
    calcul_apl_logement_foyer_dot_ressources_menage_arrondies = temp_calcul_apl_logement_foyer_dot_ressources_menage_arrondies
    try:
        temp_calcul_apl_logement_foyer_dot_nombre_personnes_a_charge = nombre_personnes_a_charge_6
    except EmptyError:
        temp_calcul_apl_logement_foyer_dot_nombre_personnes_a_charge = dead_value
        raise NoValueProvided(SourcePosition(filename="examples/aides_logement/prologue.catala_fr",
                                             start_line=1073,
                                             start_column=14, end_line=1073,
                                             end_column=65,
                                             law_headings=["Secteur logement-foyer",
                                             "Calcul du montant de l'allocation logement",
                                             "Prologue : aides au logement"]))
    calcul_apl_logement_foyer_dot_nombre_personnes_a_charge = temp_calcul_apl_logement_foyer_dot_nombre_personnes_a_charge
    try:
        temp_calcul_apl_logement_foyer_dot_situation_familiale_calcul_apl = situation_familiale_calcul_apl_6
    except EmptyError:
        temp_calcul_apl_logement_foyer_dot_situation_familiale_calcul_apl = dead_value
        raise NoValueProvided(SourcePosition(filename="examples/aides_logement/prologue.catala_fr",
                                             start_line=1075,
                                             start_column=14, end_line=1075,
                                             end_column=70,
                                             law_headings=["Secteur logement-foyer",
                                             "Calcul du montant de l'allocation logement",
                                             "Prologue : aides au logement"]))
    calcul_apl_logement_foyer_dot_situation_familiale_calcul_apl = temp_calcul_apl_logement_foyer_dot_situation_familiale_calcul_apl
    try:
        temp_calcul_apl_logement_foyer_dot_zone = zone_4
    except EmptyError:
        temp_calcul_apl_logement_foyer_dot_zone = dead_value
        raise NoValueProvided(SourcePosition(filename="examples/aides_logement/prologue.catala_fr",
                                             start_line=1077,
                                             start_column=14, end_line=1077,
                                             end_column=44,
                                             law_headings=["Secteur logement-foyer",
                                             "Calcul du montant de l'allocation logement",
                                             "Prologue : aides au logement"]))
    calcul_apl_logement_foyer_dot_zone = temp_calcul_apl_logement_foyer_dot_zone
    try:
        temp_calcul_apl_logement_foyer_dot_date_courante = date_courante_12
    except EmptyError:
        temp_calcul_apl_logement_foyer_dot_date_courante = dead_value
        raise NoValueProvided(SourcePosition(filename="examples/aides_logement/prologue.catala_fr",
                                             start_line=1079,
                                             start_column=14, end_line=1079,
                                             end_column=53,
                                             law_headings=["Secteur logement-foyer",
                                             "Calcul du montant de l'allocation logement",
                                             "Prologue : aides au logement"]))
    calcul_apl_logement_foyer_dot_date_courante = temp_calcul_apl_logement_foyer_dot_date_courante
    try:
        temp_calcul_apl_logement_foyer_dot_redevance = redevance_1
    except EmptyError:
        temp_calcul_apl_logement_foyer_dot_redevance = dead_value
        raise NoValueProvided(SourcePosition(filename="examples/aides_logement/prologue.catala_fr",
                                             start_line=1069,
                                             start_column=14, end_line=1069,
                                             end_column=49,
                                             law_headings=["Secteur logement-foyer",
                                             "Calcul du montant de l'allocation logement",
                                             "Prologue : aides au logement"]))
    calcul_apl_logement_foyer_dot_redevance = temp_calcul_apl_logement_foyer_dot_redevance
    try:
        temp_calcul_apl_logement_foyer_dot_residence = residence_6
    except EmptyError:
        temp_calcul_apl_logement_foyer_dot_residence = dead_value
        raise NoValueProvided(SourcePosition(filename="examples/aides_logement/prologue.catala_fr",
                                             start_line=1078,
                                             start_column=14, end_line=1078,
                                             end_column=49,
                                             law_headings=["Secteur logement-foyer",
                                             "Calcul du montant de l'allocation logement",
                                             "Prologue : aides au logement"]))
    calcul_apl_logement_foyer_dot_residence = temp_calcul_apl_logement_foyer_dot_residence
    def temp_calcul_apl_logement_foyer_dot_condition_2_du_832_25(_:Unit):
        return True
    calcul_apl_logement_foyer_dot_condition_2_du_832_25 = temp_calcul_apl_logement_foyer_dot_condition_2_du_832_25
    def temp_calcul_apl_logement_foyer_dot_limitation_majoration_personnes_a_charge(_:Unit):
        match_arg_444 = residence_6
        if match_arg_444.code == Collectivite_Code.Guadeloupe:
            _ = match_arg_444.value
            temp_calcul_apl_logement_foyer_dot_limitation_majoration_personnes_a_charge_1 = True
        elif match_arg_444.code == Collectivite_Code.Guyane:
            _ = match_arg_444.value
            temp_calcul_apl_logement_foyer_dot_limitation_majoration_personnes_a_charge_1 = True
        elif match_arg_444.code == Collectivite_Code.Martinique:
            _ = match_arg_444.value
            temp_calcul_apl_logement_foyer_dot_limitation_majoration_personnes_a_charge_1 = True
        elif match_arg_444.code == Collectivite_Code.LaReunion:
            _ = match_arg_444.value
            temp_calcul_apl_logement_foyer_dot_limitation_majoration_personnes_a_charge_1 = True
        elif match_arg_444.code == Collectivite_Code.SaintBarthelemy:
            _ = match_arg_444.value
            temp_calcul_apl_logement_foyer_dot_limitation_majoration_personnes_a_charge_1 = False
        elif match_arg_444.code == Collectivite_Code.SaintMartin:
            _ = match_arg_444.value
            temp_calcul_apl_logement_foyer_dot_limitation_majoration_personnes_a_charge_1 = False
        elif match_arg_444.code == Collectivite_Code.Metropole:
            _ = match_arg_444.value
            temp_calcul_apl_logement_foyer_dot_limitation_majoration_personnes_a_charge_1 = False
        elif match_arg_444.code == Collectivite_Code.SaintPierreEtMiquelon:
            _ = match_arg_444.value
            temp_calcul_apl_logement_foyer_dot_limitation_majoration_personnes_a_charge_1 = False
        elif match_arg_444.code == Collectivite_Code.Mayotte:
            _ = match_arg_444.value
            temp_calcul_apl_logement_foyer_dot_limitation_majoration_personnes_a_charge_1 = True
        if temp_calcul_apl_logement_foyer_dot_limitation_majoration_personnes_a_charge_1:
            temp_calcul_apl_logement_foyer_dot_limitation_majoration_personnes_a_charge_2 = True
        else:
            temp_calcul_apl_logement_foyer_dot_limitation_majoration_personnes_a_charge_2 = dead_value
            raise EmptyError
        return temp_calcul_apl_logement_foyer_dot_limitation_majoration_personnes_a_charge_2
    calcul_apl_logement_foyer_dot_limitation_majoration_personnes_a_charge = temp_calcul_apl_logement_foyer_dot_limitation_majoration_personnes_a_charge
    def temp_calcul_apl_logement_foyer_dot_n_nombre_parts_d832_25(_:Unit):
        temp_calcul_apl_logement_foyer_dot_n_nombre_parts_d832_25_1 = dead_value
        raise EmptyError
        return temp_calcul_apl_logement_foyer_dot_n_nombre_parts_d832_25_1
    calcul_apl_logement_foyer_dot_n_nombre_parts_d832_25 = temp_calcul_apl_logement_foyer_dot_n_nombre_parts_d832_25
    result_12 = calcul_aide_personnalisee_logement_foyer(CalculAidePersonnaliseeLogementFoyerIn(type_logement_foyer_in = calcul_apl_logement_foyer_dot_type_logement_foyer,
                                                         date_conventionnement_in = calcul_apl_logement_foyer_dot_date_conventionnement,
                                                         ressources_menage_arrondies_in = calcul_apl_logement_foyer_dot_ressources_menage_arrondies,
                                                         nombre_personnes_a_charge_in = calcul_apl_logement_foyer_dot_nombre_personnes_a_charge,
                                                         situation_familiale_calcul_apl_in = calcul_apl_logement_foyer_dot_situation_familiale_calcul_apl,
                                                         zone_in = calcul_apl_logement_foyer_dot_zone,
                                                         date_courante_in = calcul_apl_logement_foyer_dot_date_courante,
                                                         redevance_in = calcul_apl_logement_foyer_dot_redevance,
                                                         residence_in = calcul_apl_logement_foyer_dot_residence,
                                                         condition_2_du_832_25_in = calcul_apl_logement_foyer_dot_condition_2_du_832_25,
                                                         limitation_majoration_personnes_a_charge_in = calcul_apl_logement_foyer_dot_limitation_majoration_personnes_a_charge,
                                                         n_nombre_parts_d832_25_in = calcul_apl_logement_foyer_dot_n_nombre_parts_d832_25))
    calcul_apl_logement_foyer_dot_coefficient_multiplicateur_d832_25 = result_12.coefficient_multiplicateur_d832_25
    calcul_apl_logement_foyer_dot_coefficient_r_d832_25 = result_12.coefficient_r_d832_25
    calcul_apl_logement_foyer_dot_n_nombre_parts_d832_25_1 = result_12.n_nombre_parts_d832_25
    calcul_apl_logement_foyer_dot_equivalence_loyer_eligible = result_12.equivalence_loyer_eligible
    calcul_apl_logement_foyer_dot_plafond_equivalence_loyer_eligible = result_12.plafond_equivalence_loyer_eligible
    calcul_apl_logement_foyer_dot_equivalence_loyer_minimale = result_12.equivalence_loyer_minimale
    calcul_apl_logement_foyer_dot_coefficient_prise_en_charge_d832_25_seuil = result_12.coefficient_prise_en_charge_d832_25
    calcul_apl_logement_foyer_dot_aide_finale_formule = result_12.aide_finale_formule
    calcul_apl_logement_foyer_dot_traitement_aide_finale_montant_minimal = result_12.traitement_aide_finale
    try:
        try:
            try:
                try:
                    try:
                        try:
                            match_arg_445 = residence_6
                            if match_arg_445.code == Collectivite_Code.Guadeloupe:
                                _ = match_arg_445.value
                                temp_multiplicateur_majoration_charges = True
                            elif match_arg_445.code == Collectivite_Code.Guyane:
                                _ = match_arg_445.value
                                temp_multiplicateur_majoration_charges = False
                            elif match_arg_445.code == Collectivite_Code.Martinique:
                                _ = match_arg_445.value
                                temp_multiplicateur_majoration_charges = True
                            elif match_arg_445.code == Collectivite_Code.LaReunion:
                                _ = match_arg_445.value
                                temp_multiplicateur_majoration_charges = True
                            elif match_arg_445.code == Collectivite_Code.SaintBarthelemy:
                                _ = match_arg_445.value
                                temp_multiplicateur_majoration_charges = True
                            elif match_arg_445.code == Collectivite_Code.SaintMartin:
                                _ = match_arg_445.value
                                temp_multiplicateur_majoration_charges = True
                            elif match_arg_445.code == Collectivite_Code.Metropole:
                                _ = match_arg_445.value
                                temp_multiplicateur_majoration_charges = False
                            elif match_arg_445.code == Collectivite_Code.SaintPierreEtMiquelon:
                                _ = match_arg_445.value
                                temp_multiplicateur_majoration_charges = False
                            elif match_arg_445.code == Collectivite_Code.Mayotte:
                                _ = match_arg_445.value
                                temp_multiplicateur_majoration_charges = True
                            if (((date_courante_12 >=
                                date_of_numbers(2020,1,1)) and
                                (date_courante_12 <
                                date_of_numbers(2020,10,1))) and
                                (temp_multiplicateur_majoration_charges and
                                (nombre_personnes_a_charge_6 >=
                                integer_of_string("6")))):
                                temp_multiplicateur_majoration_charges_1 = decimal_of_string("6.")
                            else:
                                temp_multiplicateur_majoration_charges_1 = dead_value
                                raise EmptyError
                        except EmptyError:
                            match_arg_446 = residence_6
                            if match_arg_446.code == Collectivite_Code.Guadeloupe:
                                _ = match_arg_446.value
                                temp_multiplicateur_majoration_charges_2 = True
                            elif match_arg_446.code == Collectivite_Code.Guyane:
                                _ = match_arg_446.value
                                temp_multiplicateur_majoration_charges_2 = False
                            elif match_arg_446.code == Collectivite_Code.Martinique:
                                _ = match_arg_446.value
                                temp_multiplicateur_majoration_charges_2 = True
                            elif match_arg_446.code == Collectivite_Code.LaReunion:
                                _ = match_arg_446.value
                                temp_multiplicateur_majoration_charges_2 = True
                            elif match_arg_446.code == Collectivite_Code.SaintBarthelemy:
                                _ = match_arg_446.value
                                temp_multiplicateur_majoration_charges_2 = True
                            elif match_arg_446.code == Collectivite_Code.SaintMartin:
                                _ = match_arg_446.value
                                temp_multiplicateur_majoration_charges_2 = True
                            elif match_arg_446.code == Collectivite_Code.Metropole:
                                _ = match_arg_446.value
                                temp_multiplicateur_majoration_charges_2 = False
                            elif match_arg_446.code == Collectivite_Code.SaintPierreEtMiquelon:
                                _ = match_arg_446.value
                                temp_multiplicateur_majoration_charges_2 = False
                            elif match_arg_446.code == Collectivite_Code.Mayotte:
                                _ = match_arg_446.value
                                temp_multiplicateur_majoration_charges_2 = True
                            if (((date_courante_12 >=
                                date_of_numbers(2020,10,1)) and
                                (date_courante_12 <
                                date_of_numbers(2021,10,1))) and
                                (temp_multiplicateur_majoration_charges_2 and
                                (nombre_personnes_a_charge_6 >=
                                integer_of_string("6")))):
                                temp_multiplicateur_majoration_charges_1 = decimal_of_string("6.")
                            else:
                                temp_multiplicateur_majoration_charges_1 = dead_value
                                raise EmptyError
                    except EmptyError:
                        match_arg_447 = residence_6
                        if match_arg_447.code == Collectivite_Code.Guadeloupe:
                            _ = match_arg_447.value
                            temp_multiplicateur_majoration_charges_3 = True
                        elif match_arg_447.code == Collectivite_Code.Guyane:
                            _ = match_arg_447.value
                            temp_multiplicateur_majoration_charges_3 = False
                        elif match_arg_447.code == Collectivite_Code.Martinique:
                            _ = match_arg_447.value
                            temp_multiplicateur_majoration_charges_3 = True
                        elif match_arg_447.code == Collectivite_Code.LaReunion:
                            _ = match_arg_447.value
                            temp_multiplicateur_majoration_charges_3 = True
                        elif match_arg_447.code == Collectivite_Code.SaintBarthelemy:
                            _ = match_arg_447.value
                            temp_multiplicateur_majoration_charges_3 = True
                        elif match_arg_447.code == Collectivite_Code.SaintMartin:
                            _ = match_arg_447.value
                            temp_multiplicateur_majoration_charges_3 = True
                        elif match_arg_447.code == Collectivite_Code.Metropole:
                            _ = match_arg_447.value
                            temp_multiplicateur_majoration_charges_3 = False
                        elif match_arg_447.code == Collectivite_Code.SaintPierreEtMiquelon:
                            _ = match_arg_447.value
                            temp_multiplicateur_majoration_charges_3 = False
                        elif match_arg_447.code == Collectivite_Code.Mayotte:
                            _ = match_arg_447.value
                            temp_multiplicateur_majoration_charges_3 = True
                        if (((date_courante_12 >=
                            date_of_numbers(2021,10,1)) and
                            (date_courante_12 <
                            date_of_numbers(2022,1,1))) and
                            (temp_multiplicateur_majoration_charges_3 and
                            (nombre_personnes_a_charge_6 >=
                            integer_of_string("6")))):
                            temp_multiplicateur_majoration_charges_1 = decimal_of_string("6.")
                        else:
                            temp_multiplicateur_majoration_charges_1 = dead_value
                            raise EmptyError
                except EmptyError:
                    match_arg_448 = residence_6
                    if match_arg_448.code == Collectivite_Code.Guadeloupe:
                        _ = match_arg_448.value
                        temp_multiplicateur_majoration_charges_4 = True
                    elif match_arg_448.code == Collectivite_Code.Guyane:
                        _ = match_arg_448.value
                        temp_multiplicateur_majoration_charges_4 = False
                    elif match_arg_448.code == Collectivite_Code.Martinique:
                        _ = match_arg_448.value
                        temp_multiplicateur_majoration_charges_4 = True
                    elif match_arg_448.code == Collectivite_Code.LaReunion:
                        _ = match_arg_448.value
                        temp_multiplicateur_majoration_charges_4 = True
                    elif match_arg_448.code == Collectivite_Code.SaintBarthelemy:
                        _ = match_arg_448.value
                        temp_multiplicateur_majoration_charges_4 = True
                    elif match_arg_448.code == Collectivite_Code.SaintMartin:
                        _ = match_arg_448.value
                        temp_multiplicateur_majoration_charges_4 = True
                    elif match_arg_448.code == Collectivite_Code.Metropole:
                        _ = match_arg_448.value
                        temp_multiplicateur_majoration_charges_4 = False
                    elif match_arg_448.code == Collectivite_Code.SaintPierreEtMiquelon:
                        _ = match_arg_448.value
                        temp_multiplicateur_majoration_charges_4 = False
                    elif match_arg_448.code == Collectivite_Code.Mayotte:
                        _ = match_arg_448.value
                        temp_multiplicateur_majoration_charges_4 = True
                    if (((date_courante_12 >= date_of_numbers(2022,1,1)) and
                        (date_courante_12 < date_of_numbers(2022,7,1))) and
                        (temp_multiplicateur_majoration_charges_4 and
                        (nombre_personnes_a_charge_6 >=
                        integer_of_string("6")))):
                        temp_multiplicateur_majoration_charges_1 = decimal_of_string("6.")
                    else:
                        temp_multiplicateur_majoration_charges_1 = dead_value
                        raise EmptyError
            except EmptyError:
                match_arg_449 = residence_6
                if match_arg_449.code == Collectivite_Code.Guadeloupe:
                    _ = match_arg_449.value
                    temp_multiplicateur_majoration_charges_5 = True
                elif match_arg_449.code == Collectivite_Code.Guyane:
                    _ = match_arg_449.value
                    temp_multiplicateur_majoration_charges_5 = False
                elif match_arg_449.code == Collectivite_Code.Martinique:
                    _ = match_arg_449.value
                    temp_multiplicateur_majoration_charges_5 = True
                elif match_arg_449.code == Collectivite_Code.LaReunion:
                    _ = match_arg_449.value
                    temp_multiplicateur_majoration_charges_5 = True
                elif match_arg_449.code == Collectivite_Code.SaintBarthelemy:
                    _ = match_arg_449.value
                    temp_multiplicateur_majoration_charges_5 = True
                elif match_arg_449.code == Collectivite_Code.SaintMartin:
                    _ = match_arg_449.value
                    temp_multiplicateur_majoration_charges_5 = True
                elif match_arg_449.code == Collectivite_Code.Metropole:
                    _ = match_arg_449.value
                    temp_multiplicateur_majoration_charges_5 = False
                elif match_arg_449.code == Collectivite_Code.SaintPierreEtMiquelon:
                    _ = match_arg_449.value
                    temp_multiplicateur_majoration_charges_5 = False
                elif match_arg_449.code == Collectivite_Code.Mayotte:
                    _ = match_arg_449.value
                    temp_multiplicateur_majoration_charges_5 = True
                if (((date_courante_12 >= date_of_numbers(2022,7,1)) and
                    (date_courante_12 < date_of_numbers(2023,1,1))) and
                    (temp_multiplicateur_majoration_charges_5 and
                    (nombre_personnes_a_charge_6 >=
                    integer_of_string("6")))):
                    temp_multiplicateur_majoration_charges_1 = decimal_of_string("6.")
                else:
                    temp_multiplicateur_majoration_charges_1 = dead_value
                    raise EmptyError
        except EmptyError:
            try:
                if ((date_courante_12 >= date_of_numbers(2021,10,1)) and
                    (date_courante_12 <
                    date_of_numbers(2022,7,1))):
                    temp_multiplicateur_majoration_charges_1 = decimal_of_integer(nombre_personnes_a_charge_6)
                else:
                    temp_multiplicateur_majoration_charges_1 = dead_value
                    raise EmptyError
            except EmptyError:
                if (date_courante_12 >=
                    date_of_numbers(2022,7,1)):
                    temp_multiplicateur_majoration_charges_1 = decimal_of_integer(nombre_personnes_a_charge_6)
                else:
                    temp_multiplicateur_majoration_charges_1 = dead_value
                    raise EmptyError
    except EmptyError:
        temp_multiplicateur_majoration_charges_1 = dead_value
        raise NoValueProvided(SourcePosition(filename="examples/aides_logement/prologue.catala_fr",
                                             start_line=1041,
                                             start_column=11, end_line=1041,
                                             end_column=44,
                                             law_headings=["Secteur logement-foyer",
                                             "Calcul du montant de l'allocation logement",
                                             "Prologue : aides au logement"]))
    multiplicateur_majoration_charges = temp_multiplicateur_majoration_charges_1
    try:
        if (date_courante_12 >=
            date_of_numbers(2019,10,1)):
            temp_montant_minimal_depense_nette_d842_17 = money_of_cents_string("1500")
        else:
            temp_montant_minimal_depense_nette_d842_17 = dead_value
            raise EmptyError
    except EmptyError:
        temp_montant_minimal_depense_nette_d842_17 = dead_value
        raise NoValueProvided(SourcePosition(filename="examples/aides_logement/prologue.catala_fr",
                                             start_line=1040,
                                             start_column=11, end_line=1040,
                                             end_column=48,
                                             law_headings=["Secteur logement-foyer",
                                             "Calcul du montant de l'allocation logement",
                                             "Prologue : aides au logement"]))
    montant_minimal_depense_nette_d842_17 = temp_montant_minimal_depense_nette_d842_17
    try:
        if (date_courante_12 >=
            date_of_numbers(2019,10,1)):
            temp_montant_forfaitaire_d842_15 = money_of_cents_string("500")
        else:
            temp_montant_forfaitaire_d842_15 = dead_value
            raise EmptyError
    except EmptyError:
        temp_montant_forfaitaire_d842_15 = dead_value
        raise NoValueProvided(SourcePosition(filename="examples/aides_logement/prologue.catala_fr",
                                             start_line=1039,
                                             start_column=11, end_line=1039,
                                             end_column=38,
                                             law_headings=["Secteur logement-foyer",
                                             "Calcul du montant de l'allocation logement",
                                             "Prologue : aides au logement"]))
    montant_forfaitaire_d842_15 = temp_montant_forfaitaire_d842_15
    try:
        if (date_courante_12 >=
            date_of_numbers(2019,10,1)):
            temp_montant_minimal_aide_d842_15 = money_of_cents_string("1000")
        else:
            temp_montant_minimal_aide_d842_15 = dead_value
            raise EmptyError
    except EmptyError:
        temp_montant_minimal_aide_d842_15 = dead_value
        raise NoValueProvided(SourcePosition(filename="examples/aides_logement/prologue.catala_fr",
                                             start_line=1038,
                                             start_column=11, end_line=1038,
                                             end_column=39,
                                             law_headings=["Secteur logement-foyer",
                                             "Calcul du montant de l'allocation logement",
                                             "Prologue : aides au logement"]))
    montant_minimal_aide_d842_15 = temp_montant_minimal_aide_d842_15
    try:
        def temp_equivalence_loyer(_:Unit):
            raise EmptyError
        def temp_equivalence_loyer_1(_:Unit):
            return False
        def temp_equivalence_loyer_2(_:Unit):
            try:
                match_arg_450 = categorie_equivalence_loyer_d842_16
                if match_arg_450.code == CategorieEquivalenceLoyerAllocationLogementFoyer_Code.EtudiantLogeEnChambreCROUS:
                    _ = match_arg_450.value
                    temp_equivalence_loyer_3 = False
                elif match_arg_450.code == CategorieEquivalenceLoyerAllocationLogementFoyer_Code.EtudiantLogeEnChambreCROUSRehabilitee:
                    _ = match_arg_450.value
                    temp_equivalence_loyer_3 = False
                elif match_arg_450.code == CategorieEquivalenceLoyerAllocationLogementFoyer_Code.PersonnesAgeesSelon3DeD842_16:
                    _ = match_arg_450.value
                    temp_equivalence_loyer_3 = False
                elif match_arg_450.code == CategorieEquivalenceLoyerAllocationLogementFoyer_Code.AutresPersonnes:
                    _ = match_arg_450.value
                    temp_equivalence_loyer_3 = True
                if (((date_courante_12 >= date_of_numbers(2020,10,1)) and
                    (date_courante_12 < date_of_numbers(2021,10,1))) and
                    temp_equivalence_loyer_3):
                    match_arg_451 = situation_familiale_calcul_apl_6
                    if match_arg_451.code == SituationFamilialeCalculAPL_Code.PersonneSeule:
                        _ = match_arg_451.value
                        return money_of_cents_string("16941")
                    elif match_arg_451.code == SituationFamilialeCalculAPL_Code.Couple:
                        _ = match_arg_451.value
                        return money_of_cents_string("26329")
                else:
                    raise EmptyError
            except EmptyError:
                match_arg_452 = categorie_equivalence_loyer_d842_16
                if match_arg_452.code == CategorieEquivalenceLoyerAllocationLogementFoyer_Code.EtudiantLogeEnChambreCROUS:
                    _ = match_arg_452.value
                    temp_equivalence_loyer_4 = False
                elif match_arg_452.code == CategorieEquivalenceLoyerAllocationLogementFoyer_Code.EtudiantLogeEnChambreCROUSRehabilitee:
                    _ = match_arg_452.value
                    temp_equivalence_loyer_4 = True
                elif match_arg_452.code == CategorieEquivalenceLoyerAllocationLogementFoyer_Code.PersonnesAgeesSelon3DeD842_16:
                    _ = match_arg_452.value
                    temp_equivalence_loyer_4 = False
                elif match_arg_452.code == CategorieEquivalenceLoyerAllocationLogementFoyer_Code.AutresPersonnes:
                    _ = match_arg_452.value
                    temp_equivalence_loyer_4 = False
                if (((date_courante_12 >= date_of_numbers(2020,10,1)) and
                    (date_courante_12 < date_of_numbers(2021,10,1))) and
                    temp_equivalence_loyer_4):
                    match_arg_453 = situation_familiale_calcul_apl_6
                    if match_arg_453.code == SituationFamilialeCalculAPL_Code.PersonneSeule:
                        _ = match_arg_453.value
                        return money_of_cents_string("16941")
                    elif match_arg_453.code == SituationFamilialeCalculAPL_Code.Couple:
                        _ = match_arg_453.value
                        return money_of_cents_string("26329")
                else:
                    raise EmptyError
        def temp_equivalence_loyer_5(_:Unit):
            match_arg_454 = categorie_equivalence_loyer_d842_16
            if match_arg_454.code == CategorieEquivalenceLoyerAllocationLogementFoyer_Code.EtudiantLogeEnChambreCROUS:
                _ = match_arg_454.value
                temp_equivalence_loyer_6 = False
            elif match_arg_454.code == CategorieEquivalenceLoyerAllocationLogementFoyer_Code.EtudiantLogeEnChambreCROUSRehabilitee:
                _ = match_arg_454.value
                temp_equivalence_loyer_6 = False
            elif match_arg_454.code == CategorieEquivalenceLoyerAllocationLogementFoyer_Code.PersonnesAgeesSelon3DeD842_16:
                _ = match_arg_454.value
                temp_equivalence_loyer_6 = True
            elif match_arg_454.code == CategorieEquivalenceLoyerAllocationLogementFoyer_Code.AutresPersonnes:
                _ = match_arg_454.value
                temp_equivalence_loyer_6 = False
            if (((date_courante_12 >= date_of_numbers(2020,10,1)) and
                (date_courante_12 < date_of_numbers(2021,10,1))) and
                temp_equivalence_loyer_6):
                match_arg_455 = situation_familiale_calcul_apl_6
                if match_arg_455.code == SituationFamilialeCalculAPL_Code.PersonneSeule:
                    _ = match_arg_455.value
                    return money_of_cents_string("20554")
                elif match_arg_455.code == SituationFamilialeCalculAPL_Code.Couple:
                    _ = match_arg_455.value
                    return money_of_cents_string("31939")
            else:
                raise EmptyError
        def temp_equivalence_loyer_7(_:Unit):
            match_arg_456 = categorie_equivalence_loyer_d842_16
            if match_arg_456.code == CategorieEquivalenceLoyerAllocationLogementFoyer_Code.EtudiantLogeEnChambreCROUS:
                _ = match_arg_456.value
                temp_equivalence_loyer_8 = True
            elif match_arg_456.code == CategorieEquivalenceLoyerAllocationLogementFoyer_Code.EtudiantLogeEnChambreCROUSRehabilitee:
                _ = match_arg_456.value
                temp_equivalence_loyer_8 = False
            elif match_arg_456.code == CategorieEquivalenceLoyerAllocationLogementFoyer_Code.PersonnesAgeesSelon3DeD842_16:
                _ = match_arg_456.value
                temp_equivalence_loyer_8 = False
            elif match_arg_456.code == CategorieEquivalenceLoyerAllocationLogementFoyer_Code.AutresPersonnes:
                _ = match_arg_456.value
                temp_equivalence_loyer_8 = False
            if (((date_courante_12 >= date_of_numbers(2020,10,1)) and
                (date_courante_12 < date_of_numbers(2021,10,1))) and
                temp_equivalence_loyer_8):
                match_arg_457 = situation_familiale_calcul_apl_6
                if match_arg_457.code == SituationFamilialeCalculAPL_Code.PersonneSeule:
                    _ = match_arg_457.value
                    return money_of_cents_string("8379")
                elif match_arg_457.code == SituationFamilialeCalculAPL_Code.Couple:
                    _ = match_arg_457.value
                    return money_of_cents_string("13045")
            else:
                raise EmptyError
        def temp_equivalence_loyer_9(_:Unit):
            try:
                match_arg_458 = categorie_equivalence_loyer_d842_16
                if match_arg_458.code == CategorieEquivalenceLoyerAllocationLogementFoyer_Code.EtudiantLogeEnChambreCROUS:
                    _ = match_arg_458.value
                    temp_equivalence_loyer_10 = False
                elif match_arg_458.code == CategorieEquivalenceLoyerAllocationLogementFoyer_Code.EtudiantLogeEnChambreCROUSRehabilitee:
                    _ = match_arg_458.value
                    temp_equivalence_loyer_10 = False
                elif match_arg_458.code == CategorieEquivalenceLoyerAllocationLogementFoyer_Code.PersonnesAgeesSelon3DeD842_16:
                    _ = match_arg_458.value
                    temp_equivalence_loyer_10 = False
                elif match_arg_458.code == CategorieEquivalenceLoyerAllocationLogementFoyer_Code.AutresPersonnes:
                    _ = match_arg_458.value
                    temp_equivalence_loyer_10 = True
                if (((date_courante_12 >= date_of_numbers(2021,10,1)) and
                    (date_courante_12 < date_of_numbers(2022,7,1))) and
                    temp_equivalence_loyer_10):
                    match_arg_459 = situation_familiale_calcul_apl_6
                    if match_arg_459.code == SituationFamilialeCalculAPL_Code.PersonneSeule:
                        _ = match_arg_459.value
                        return money_of_cents_string("17012")
                    elif match_arg_459.code == SituationFamilialeCalculAPL_Code.Couple:
                        _ = match_arg_459.value
                        return money_of_cents_string("26440")
                else:
                    raise EmptyError
            except EmptyError:
                match_arg_460 = categorie_equivalence_loyer_d842_16
                if match_arg_460.code == CategorieEquivalenceLoyerAllocationLogementFoyer_Code.EtudiantLogeEnChambreCROUS:
                    _ = match_arg_460.value
                    temp_equivalence_loyer_11 = False
                elif match_arg_460.code == CategorieEquivalenceLoyerAllocationLogementFoyer_Code.EtudiantLogeEnChambreCROUSRehabilitee:
                    _ = match_arg_460.value
                    temp_equivalence_loyer_11 = True
                elif match_arg_460.code == CategorieEquivalenceLoyerAllocationLogementFoyer_Code.PersonnesAgeesSelon3DeD842_16:
                    _ = match_arg_460.value
                    temp_equivalence_loyer_11 = False
                elif match_arg_460.code == CategorieEquivalenceLoyerAllocationLogementFoyer_Code.AutresPersonnes:
                    _ = match_arg_460.value
                    temp_equivalence_loyer_11 = False
                if (((date_courante_12 >= date_of_numbers(2021,10,1)) and
                    (date_courante_12 < date_of_numbers(2022,7,1))) and
                    temp_equivalence_loyer_11):
                    match_arg_461 = situation_familiale_calcul_apl_6
                    if match_arg_461.code == SituationFamilialeCalculAPL_Code.PersonneSeule:
                        _ = match_arg_461.value
                        return money_of_cents_string("17012")
                    elif match_arg_461.code == SituationFamilialeCalculAPL_Code.Couple:
                        _ = match_arg_461.value
                        return money_of_cents_string("26440")
                else:
                    raise EmptyError
        def temp_equivalence_loyer_12(_:Unit):
            match_arg_462 = categorie_equivalence_loyer_d842_16
            if match_arg_462.code == CategorieEquivalenceLoyerAllocationLogementFoyer_Code.EtudiantLogeEnChambreCROUS:
                _ = match_arg_462.value
                temp_equivalence_loyer_13 = False
            elif match_arg_462.code == CategorieEquivalenceLoyerAllocationLogementFoyer_Code.EtudiantLogeEnChambreCROUSRehabilitee:
                _ = match_arg_462.value
                temp_equivalence_loyer_13 = False
            elif match_arg_462.code == CategorieEquivalenceLoyerAllocationLogementFoyer_Code.PersonnesAgeesSelon3DeD842_16:
                _ = match_arg_462.value
                temp_equivalence_loyer_13 = True
            elif match_arg_462.code == CategorieEquivalenceLoyerAllocationLogementFoyer_Code.AutresPersonnes:
                _ = match_arg_462.value
                temp_equivalence_loyer_13 = False
            if (((date_courante_12 >= date_of_numbers(2021,10,1)) and
                (date_courante_12 < date_of_numbers(2022,7,1))) and
                temp_equivalence_loyer_13):
                match_arg_463 = situation_familiale_calcul_apl_6
                if match_arg_463.code == SituationFamilialeCalculAPL_Code.PersonneSeule:
                    _ = match_arg_463.value
                    return money_of_cents_string("20640")
                elif match_arg_463.code == SituationFamilialeCalculAPL_Code.Couple:
                    _ = match_arg_463.value
                    return money_of_cents_string("32073")
            else:
                raise EmptyError
        def temp_equivalence_loyer_14(_:Unit):
            match_arg_464 = categorie_equivalence_loyer_d842_16
            if match_arg_464.code == CategorieEquivalenceLoyerAllocationLogementFoyer_Code.EtudiantLogeEnChambreCROUS:
                _ = match_arg_464.value
                temp_equivalence_loyer_15 = True
            elif match_arg_464.code == CategorieEquivalenceLoyerAllocationLogementFoyer_Code.EtudiantLogeEnChambreCROUSRehabilitee:
                _ = match_arg_464.value
                temp_equivalence_loyer_15 = False
            elif match_arg_464.code == CategorieEquivalenceLoyerAllocationLogementFoyer_Code.PersonnesAgeesSelon3DeD842_16:
                _ = match_arg_464.value
                temp_equivalence_loyer_15 = False
            elif match_arg_464.code == CategorieEquivalenceLoyerAllocationLogementFoyer_Code.AutresPersonnes:
                _ = match_arg_464.value
                temp_equivalence_loyer_15 = False
            if (((date_courante_12 >= date_of_numbers(2021,10,1)) and
                (date_courante_12 < date_of_numbers(2022,7,1))) and
                temp_equivalence_loyer_15):
                match_arg_465 = situation_familiale_calcul_apl_6
                if match_arg_465.code == SituationFamilialeCalculAPL_Code.PersonneSeule:
                    _ = match_arg_465.value
                    return money_of_cents_string("8414")
                elif match_arg_465.code == SituationFamilialeCalculAPL_Code.Couple:
                    _ = match_arg_465.value
                    return money_of_cents_string("13100")
            else:
                raise EmptyError
        def temp_equivalence_loyer_16(_:Unit):
            try:
                match_arg_466 = categorie_equivalence_loyer_d842_16
                if match_arg_466.code == CategorieEquivalenceLoyerAllocationLogementFoyer_Code.EtudiantLogeEnChambreCROUS:
                    _ = match_arg_466.value
                    temp_equivalence_loyer_17 = False
                elif match_arg_466.code == CategorieEquivalenceLoyerAllocationLogementFoyer_Code.EtudiantLogeEnChambreCROUSRehabilitee:
                    _ = match_arg_466.value
                    temp_equivalence_loyer_17 = False
                elif match_arg_466.code == CategorieEquivalenceLoyerAllocationLogementFoyer_Code.PersonnesAgeesSelon3DeD842_16:
                    _ = match_arg_466.value
                    temp_equivalence_loyer_17 = False
                elif match_arg_466.code == CategorieEquivalenceLoyerAllocationLogementFoyer_Code.AutresPersonnes:
                    _ = match_arg_466.value
                    temp_equivalence_loyer_17 = True
                if ((date_courante_12 >= date_of_numbers(2022,7,1)) and
                    temp_equivalence_loyer_17):
                    match_arg_467 = situation_familiale_calcul_apl_6
                    if match_arg_467.code == SituationFamilialeCalculAPL_Code.PersonneSeule:
                        _ = match_arg_467.value
                        return money_of_cents_string("17607")
                    elif match_arg_467.code == SituationFamilialeCalculAPL_Code.Couple:
                        _ = match_arg_467.value
                        return money_of_cents_string("27365")
                else:
                    raise EmptyError
            except EmptyError:
                match_arg_468 = categorie_equivalence_loyer_d842_16
                if match_arg_468.code == CategorieEquivalenceLoyerAllocationLogementFoyer_Code.EtudiantLogeEnChambreCROUS:
                    _ = match_arg_468.value
                    temp_equivalence_loyer_18 = False
                elif match_arg_468.code == CategorieEquivalenceLoyerAllocationLogementFoyer_Code.EtudiantLogeEnChambreCROUSRehabilitee:
                    _ = match_arg_468.value
                    temp_equivalence_loyer_18 = True
                elif match_arg_468.code == CategorieEquivalenceLoyerAllocationLogementFoyer_Code.PersonnesAgeesSelon3DeD842_16:
                    _ = match_arg_468.value
                    temp_equivalence_loyer_18 = False
                elif match_arg_468.code == CategorieEquivalenceLoyerAllocationLogementFoyer_Code.AutresPersonnes:
                    _ = match_arg_468.value
                    temp_equivalence_loyer_18 = False
                if ((date_courante_12 >= date_of_numbers(2022,7,1)) and
                    temp_equivalence_loyer_18):
                    match_arg_469 = situation_familiale_calcul_apl_6
                    if match_arg_469.code == SituationFamilialeCalculAPL_Code.PersonneSeule:
                        _ = match_arg_469.value
                        return money_of_cents_string("17607")
                    elif match_arg_469.code == SituationFamilialeCalculAPL_Code.Couple:
                        _ = match_arg_469.value
                        return money_of_cents_string("27365")
                else:
                    raise EmptyError
        def temp_equivalence_loyer_19(_:Unit):
            match_arg_470 = categorie_equivalence_loyer_d842_16
            if match_arg_470.code == CategorieEquivalenceLoyerAllocationLogementFoyer_Code.EtudiantLogeEnChambreCROUS:
                _ = match_arg_470.value
                temp_equivalence_loyer_20 = False
            elif match_arg_470.code == CategorieEquivalenceLoyerAllocationLogementFoyer_Code.EtudiantLogeEnChambreCROUSRehabilitee:
                _ = match_arg_470.value
                temp_equivalence_loyer_20 = False
            elif match_arg_470.code == CategorieEquivalenceLoyerAllocationLogementFoyer_Code.PersonnesAgeesSelon3DeD842_16:
                _ = match_arg_470.value
                temp_equivalence_loyer_20 = True
            elif match_arg_470.code == CategorieEquivalenceLoyerAllocationLogementFoyer_Code.AutresPersonnes:
                _ = match_arg_470.value
                temp_equivalence_loyer_20 = False
            if ((date_courante_12 >= date_of_numbers(2022,7,1)) and
                temp_equivalence_loyer_20):
                match_arg_471 = situation_familiale_calcul_apl_6
                if match_arg_471.code == SituationFamilialeCalculAPL_Code.PersonneSeule:
                    _ = match_arg_471.value
                    return money_of_cents_string("21362")
                elif match_arg_471.code == SituationFamilialeCalculAPL_Code.Couple:
                    _ = match_arg_471.value
                    return money_of_cents_string("33196")
            else:
                raise EmptyError
        def temp_equivalence_loyer_21(_:Unit):
            match_arg_472 = categorie_equivalence_loyer_d842_16
            if match_arg_472.code == CategorieEquivalenceLoyerAllocationLogementFoyer_Code.EtudiantLogeEnChambreCROUS:
                _ = match_arg_472.value
                temp_equivalence_loyer_22 = True
            elif match_arg_472.code == CategorieEquivalenceLoyerAllocationLogementFoyer_Code.EtudiantLogeEnChambreCROUSRehabilitee:
                _ = match_arg_472.value
                temp_equivalence_loyer_22 = False
            elif match_arg_472.code == CategorieEquivalenceLoyerAllocationLogementFoyer_Code.PersonnesAgeesSelon3DeD842_16:
                _ = match_arg_472.value
                temp_equivalence_loyer_22 = False
            elif match_arg_472.code == CategorieEquivalenceLoyerAllocationLogementFoyer_Code.AutresPersonnes:
                _ = match_arg_472.value
                temp_equivalence_loyer_22 = False
            if ((date_courante_12 >= date_of_numbers(2022,7,1)) and
                temp_equivalence_loyer_22):
                match_arg_473 = situation_familiale_calcul_apl_6
                if match_arg_473.code == SituationFamilialeCalculAPL_Code.PersonneSeule:
                    _ = match_arg_473.value
                    return money_of_cents_string("8708")
                elif match_arg_473.code == SituationFamilialeCalculAPL_Code.Couple:
                    _ = match_arg_473.value
                    return money_of_cents_string("13559")
            else:
                raise EmptyError
        temp_equivalence_loyer_23 = handle_default(SourcePosition(filename="examples/aides_logement/prologue.catala_fr",
                                                   start_line=1043,
                                                   start_column=12,
                                                   end_line=1043, end_column=29,
                                                   law_headings=["Secteur logement-foyer",
                                                   "Calcul du montant de l'allocation logement",
                                                   "Prologue : aides au logement"]), [temp_equivalence_loyer_21,
                                                   temp_equivalence_loyer_19,
                                                   temp_equivalence_loyer_16,
                                                   temp_equivalence_loyer_14,
                                                   temp_equivalence_loyer_12,
                                                   temp_equivalence_loyer_9,
                                                   temp_equivalence_loyer_7,
                                                   temp_equivalence_loyer_5,
                                                   temp_equivalence_loyer_2],
                                                   temp_equivalence_loyer_1,
                                                   temp_equivalence_loyer)
    except EmptyError:
        temp_equivalence_loyer_23 = dead_value
        raise NoValueProvided(SourcePosition(filename="examples/aides_logement/prologue.catala_fr",
                                             start_line=1043,
                                             start_column=12, end_line=1043,
                                             end_column=29,
                                             law_headings=["Secteur logement-foyer",
                                             "Calcul du montant de l'allocation logement",
                                             "Prologue : aides au logement"]))
    equivalence_loyer = temp_equivalence_loyer_23
    try:
        temp_calcul_equivalence_loyer_minimale_dot_date_courante_2 = date_courante_12
    except EmptyError:
        temp_calcul_equivalence_loyer_minimale_dot_date_courante_2 = dead_value
        raise NoValueProvided(SourcePosition(filename="examples/aides_logement/prologue.catala_fr",
                                             start_line=1082,
                                             start_column=14, end_line=1082,
                                             end_column=61,
                                             law_headings=["Secteur logement-foyer",
                                             "Calcul du montant de l'allocation logement",
                                             "Prologue : aides au logement"]))
    calcul_equivalence_loyer_minimale_dot_date_courante_2 = temp_calcul_equivalence_loyer_minimale_dot_date_courante_2
    try:
        temp_calcul_equivalence_loyer_minimale_dot_ressources_menage_arrondies_2 = ressources_menage_arrondies_5
    except EmptyError:
        temp_calcul_equivalence_loyer_minimale_dot_ressources_menage_arrondies_2 = dead_value
        raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                             start_line=4833,
                                             start_column=14, end_line=4833,
                                             end_column=75,
                                             law_headings=["Article D842-15",
                                             "Section 3 : Logements-foyers",
                                             "Chapitre 2 : Modalités de liquidation et de versement des allocations de logement",
                                             "Titre IV : Allocations de Logement",
                                             "Livre VIII : Aides personnelles au logement",
                                             "Partie réglementaire",
                                             "Code de la construction et de l'habitation"]))
    calcul_equivalence_loyer_minimale_dot_ressources_menage_arrondies_2 = temp_calcul_equivalence_loyer_minimale_dot_ressources_menage_arrondies_2
    try:
        temp_calcul_equivalence_loyer_minimale_dot_condition_2_du_832_25_2 = True
    except EmptyError:
        temp_calcul_equivalence_loyer_minimale_dot_condition_2_du_832_25_2 = dead_value
        raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                             start_line=4832,
                                             start_column=14, end_line=4832,
                                             end_column=69,
                                             law_headings=["Article D842-15",
                                             "Section 3 : Logements-foyers",
                                             "Chapitre 2 : Modalités de liquidation et de versement des allocations de logement",
                                             "Titre IV : Allocations de Logement",
                                             "Livre VIII : Aides personnelles au logement",
                                             "Partie réglementaire",
                                             "Code de la construction et de l'habitation"]))
    calcul_equivalence_loyer_minimale_dot_condition_2_du_832_25_2 = temp_calcul_equivalence_loyer_minimale_dot_condition_2_du_832_25_2
    try:
        temp_calcul_equivalence_loyer_minimale_dot_n_nombre_parts_d832_25_2 = calcul_nombre_parts_dot_n_nombre_parts_d832_25_1
    except EmptyError:
        temp_calcul_equivalence_loyer_minimale_dot_n_nombre_parts_d832_25_2 = dead_value
        raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                             start_line=4843,
                                             start_column=14, end_line=4843,
                                             end_column=70,
                                             law_headings=["Article D842-15",
                                             "Section 3 : Logements-foyers",
                                             "Chapitre 2 : Modalités de liquidation et de versement des allocations de logement",
                                             "Titre IV : Allocations de Logement",
                                             "Livre VIII : Aides personnelles au logement",
                                             "Partie réglementaire",
                                             "Code de la construction et de l'habitation"]))
    calcul_equivalence_loyer_minimale_dot_n_nombre_parts_d832_25_2 = temp_calcul_equivalence_loyer_minimale_dot_n_nombre_parts_d832_25_2
    result_13 = calcul_equivalence_loyer_minimale(CalculEquivalenceLoyerMinimaleIn(date_courante_in = calcul_equivalence_loyer_minimale_dot_date_courante_2,
                                                  ressources_menage_arrondies_in = calcul_equivalence_loyer_minimale_dot_ressources_menage_arrondies_2,
                                                  condition_2_du_832_25_in = calcul_equivalence_loyer_minimale_dot_condition_2_du_832_25_2,
                                                  n_nombre_parts_d832_25_in = calcul_equivalence_loyer_minimale_dot_n_nombre_parts_d832_25_2))
    calcul_equivalence_loyer_minimale_dot_montant_2 = result_13.montant
    try:
        temp_coefficient_prise_en_charge = calcul_apl_logement_foyer_dot_coefficient_prise_en_charge_d832_25_seuil
    except EmptyError:
        temp_coefficient_prise_en_charge = dead_value
        raise NoValueProvided(SourcePosition(filename="examples/aides_logement/prologue.catala_fr",
                                             start_line=1042,
                                             start_column=12, end_line=1042,
                                             end_column=39,
                                             law_headings=["Secteur logement-foyer",
                                             "Calcul du montant de l'allocation logement",
                                             "Prologue : aides au logement"]))
    coefficient_prise_en_charge = temp_coefficient_prise_en_charge
    try:
        try:
            def temp_montant_forfaitaire_charges(_:Unit):
                raise EmptyError
            def temp_montant_forfaitaire_charges_1(_:Unit):
                return False
            def temp_montant_forfaitaire_charges_2(_:Unit):
                match_arg_474 = residence_6
                if match_arg_474.code == Collectivite_Code.Guadeloupe:
                    _ = match_arg_474.value
                    temp_montant_forfaitaire_charges_3 = True
                elif match_arg_474.code == Collectivite_Code.Guyane:
                    _ = match_arg_474.value
                    temp_montant_forfaitaire_charges_3 = False
                elif match_arg_474.code == Collectivite_Code.Martinique:
                    _ = match_arg_474.value
                    temp_montant_forfaitaire_charges_3 = True
                elif match_arg_474.code == Collectivite_Code.LaReunion:
                    _ = match_arg_474.value
                    temp_montant_forfaitaire_charges_3 = True
                elif match_arg_474.code == Collectivite_Code.SaintBarthelemy:
                    _ = match_arg_474.value
                    temp_montant_forfaitaire_charges_3 = True
                elif match_arg_474.code == Collectivite_Code.SaintMartin:
                    _ = match_arg_474.value
                    temp_montant_forfaitaire_charges_3 = True
                elif match_arg_474.code == Collectivite_Code.Metropole:
                    _ = match_arg_474.value
                    temp_montant_forfaitaire_charges_3 = False
                elif match_arg_474.code == Collectivite_Code.SaintPierreEtMiquelon:
                    _ = match_arg_474.value
                    temp_montant_forfaitaire_charges_3 = False
                elif match_arg_474.code == Collectivite_Code.Mayotte:
                    _ = match_arg_474.value
                    temp_montant_forfaitaire_charges_3 = True
                if (((date_courante_12 >= date_of_numbers(2020,1,1)) and
                    (date_courante_12 < date_of_numbers(2020,10,1))) and
                    temp_montant_forfaitaire_charges_3):
                    if ((money_of_cents_string("3614") +
                        (money_of_cents_string("929") *
                        decimal_of_integer(nombre_personnes_a_charge_6))) >
                        (money_of_cents_string("3614") +
                        (money_of_cents_string("929") *
                        decimal_of_string("6.")))):
                        return (money_of_cents_string("3614") +
                            (money_of_cents_string("929") *
                            decimal_of_string("6.")))
                    else:
                        return (money_of_cents_string("3614") +
                            (money_of_cents_string("929") *
                            decimal_of_integer(nombre_personnes_a_charge_6)))
                else:
                    raise EmptyError
            def temp_montant_forfaitaire_charges_4(_:Unit):
                match_arg_475 = residence_6
                if match_arg_475.code == Collectivite_Code.Guadeloupe:
                    _ = match_arg_475.value
                    temp_montant_forfaitaire_charges_5 = True
                elif match_arg_475.code == Collectivite_Code.Guyane:
                    _ = match_arg_475.value
                    temp_montant_forfaitaire_charges_5 = False
                elif match_arg_475.code == Collectivite_Code.Martinique:
                    _ = match_arg_475.value
                    temp_montant_forfaitaire_charges_5 = True
                elif match_arg_475.code == Collectivite_Code.LaReunion:
                    _ = match_arg_475.value
                    temp_montant_forfaitaire_charges_5 = True
                elif match_arg_475.code == Collectivite_Code.SaintBarthelemy:
                    _ = match_arg_475.value
                    temp_montant_forfaitaire_charges_5 = True
                elif match_arg_475.code == Collectivite_Code.SaintMartin:
                    _ = match_arg_475.value
                    temp_montant_forfaitaire_charges_5 = True
                elif match_arg_475.code == Collectivite_Code.Metropole:
                    _ = match_arg_475.value
                    temp_montant_forfaitaire_charges_5 = False
                elif match_arg_475.code == Collectivite_Code.SaintPierreEtMiquelon:
                    _ = match_arg_475.value
                    temp_montant_forfaitaire_charges_5 = False
                elif match_arg_475.code == Collectivite_Code.Mayotte:
                    _ = match_arg_475.value
                    temp_montant_forfaitaire_charges_5 = True
                if (((date_courante_12 >= date_of_numbers(2020,10,1)) and
                    (date_courante_12 < date_of_numbers(2021,10,1))) and
                    temp_montant_forfaitaire_charges_5):
                    if ((money_of_cents_string("3625") +
                        (money_of_cents_string("932") *
                        decimal_of_integer(nombre_personnes_a_charge_6))) >
                        (money_of_cents_string("3625") +
                        (money_of_cents_string("932") *
                        decimal_of_string("6.")))):
                        return (money_of_cents_string("3625") +
                            (money_of_cents_string("932") *
                            decimal_of_string("6.")))
                    else:
                        return (money_of_cents_string("3625") +
                            (money_of_cents_string("932") *
                            decimal_of_integer(nombre_personnes_a_charge_6)))
                else:
                    raise EmptyError
            def temp_montant_forfaitaire_charges_6(_:Unit):
                try:
                    match_arg_476 = residence_6
                    if match_arg_476.code == Collectivite_Code.Guadeloupe:
                        _ = match_arg_476.value
                        temp_montant_forfaitaire_charges_7 = True
                    elif match_arg_476.code == Collectivite_Code.Guyane:
                        _ = match_arg_476.value
                        temp_montant_forfaitaire_charges_7 = False
                    elif match_arg_476.code == Collectivite_Code.Martinique:
                        _ = match_arg_476.value
                        temp_montant_forfaitaire_charges_7 = True
                    elif match_arg_476.code == Collectivite_Code.LaReunion:
                        _ = match_arg_476.value
                        temp_montant_forfaitaire_charges_7 = True
                    elif match_arg_476.code == Collectivite_Code.SaintBarthelemy:
                        _ = match_arg_476.value
                        temp_montant_forfaitaire_charges_7 = True
                    elif match_arg_476.code == Collectivite_Code.SaintMartin:
                        _ = match_arg_476.value
                        temp_montant_forfaitaire_charges_7 = True
                    elif match_arg_476.code == Collectivite_Code.Metropole:
                        _ = match_arg_476.value
                        temp_montant_forfaitaire_charges_7 = False
                    elif match_arg_476.code == Collectivite_Code.SaintPierreEtMiquelon:
                        _ = match_arg_476.value
                        temp_montant_forfaitaire_charges_7 = False
                    elif match_arg_476.code == Collectivite_Code.Mayotte:
                        _ = match_arg_476.value
                        temp_montant_forfaitaire_charges_7 = True
                    if (((date_courante_12 >= date_of_numbers(2021,10,1)) and
                        (date_courante_12 < date_of_numbers(2022,1,1))) and
                        temp_montant_forfaitaire_charges_7):
                        if ((money_of_cents_string("3640") +
                            (money_of_cents_string("936") *
                            decimal_of_integer(nombre_personnes_a_charge_6))) >
                            (money_of_cents_string("3640") +
                            (money_of_cents_string("936") *
                            decimal_of_string("6.")))):
                            return (money_of_cents_string("3640") +
                                (money_of_cents_string("936") *
                                decimal_of_string("6.")))
                        else:
                            return (money_of_cents_string("3640") +
                                (money_of_cents_string("936") *
                                decimal_of_integer(nombre_personnes_a_charge_6)))
                    else:
                        raise EmptyError
                except EmptyError:
                    match_arg_477 = residence_6
                    if match_arg_477.code == Collectivite_Code.Guadeloupe:
                        _ = match_arg_477.value
                        temp_montant_forfaitaire_charges_8 = True
                    elif match_arg_477.code == Collectivite_Code.Guyane:
                        _ = match_arg_477.value
                        temp_montant_forfaitaire_charges_8 = False
                    elif match_arg_477.code == Collectivite_Code.Martinique:
                        _ = match_arg_477.value
                        temp_montant_forfaitaire_charges_8 = True
                    elif match_arg_477.code == Collectivite_Code.LaReunion:
                        _ = match_arg_477.value
                        temp_montant_forfaitaire_charges_8 = True
                    elif match_arg_477.code == Collectivite_Code.SaintBarthelemy:
                        _ = match_arg_477.value
                        temp_montant_forfaitaire_charges_8 = True
                    elif match_arg_477.code == Collectivite_Code.SaintMartin:
                        _ = match_arg_477.value
                        temp_montant_forfaitaire_charges_8 = True
                    elif match_arg_477.code == Collectivite_Code.Metropole:
                        _ = match_arg_477.value
                        temp_montant_forfaitaire_charges_8 = False
                    elif match_arg_477.code == Collectivite_Code.SaintPierreEtMiquelon:
                        _ = match_arg_477.value
                        temp_montant_forfaitaire_charges_8 = False
                    elif match_arg_477.code == Collectivite_Code.Mayotte:
                        _ = match_arg_477.value
                        temp_montant_forfaitaire_charges_8 = True
                    if (((date_courante_12 >= date_of_numbers(2022,1,1)) and
                        (date_courante_12 < date_of_numbers(2022,7,1))) and
                        temp_montant_forfaitaire_charges_8):
                        if ((money_of_cents_string("3640") +
                            (money_of_cents_string("936") *
                            decimal_of_integer(nombre_personnes_a_charge_6))) >
                            (money_of_cents_string("3640") +
                            (money_of_cents_string("936") *
                            decimal_of_string("6.")))):
                            return (money_of_cents_string("3640") +
                                (money_of_cents_string("936") *
                                decimal_of_string("6.")))
                        else:
                            return (money_of_cents_string("3640") +
                                (money_of_cents_string("936") *
                                decimal_of_integer(nombre_personnes_a_charge_6)))
                    else:
                        raise EmptyError
            def temp_montant_forfaitaire_charges_9(_:Unit):
                match_arg_478 = residence_6
                if match_arg_478.code == Collectivite_Code.Guadeloupe:
                    _ = match_arg_478.value
                    temp_montant_forfaitaire_charges_10 = True
                elif match_arg_478.code == Collectivite_Code.Guyane:
                    _ = match_arg_478.value
                    temp_montant_forfaitaire_charges_10 = False
                elif match_arg_478.code == Collectivite_Code.Martinique:
                    _ = match_arg_478.value
                    temp_montant_forfaitaire_charges_10 = True
                elif match_arg_478.code == Collectivite_Code.LaReunion:
                    _ = match_arg_478.value
                    temp_montant_forfaitaire_charges_10 = True
                elif match_arg_478.code == Collectivite_Code.SaintBarthelemy:
                    _ = match_arg_478.value
                    temp_montant_forfaitaire_charges_10 = True
                elif match_arg_478.code == Collectivite_Code.SaintMartin:
                    _ = match_arg_478.value
                    temp_montant_forfaitaire_charges_10 = True
                elif match_arg_478.code == Collectivite_Code.Metropole:
                    _ = match_arg_478.value
                    temp_montant_forfaitaire_charges_10 = False
                elif match_arg_478.code == Collectivite_Code.SaintPierreEtMiquelon:
                    _ = match_arg_478.value
                    temp_montant_forfaitaire_charges_10 = False
                elif match_arg_478.code == Collectivite_Code.Mayotte:
                    _ = match_arg_478.value
                    temp_montant_forfaitaire_charges_10 = True
                if (((date_courante_12 >= date_of_numbers(2022,7,1)) and
                    (date_courante_12 < date_of_numbers(2023,1,1))) and
                    temp_montant_forfaitaire_charges_10):
                    if ((money_of_cents_string("3767") +
                        (money_of_cents_string("969") *
                        decimal_of_integer(nombre_personnes_a_charge_6))) >
                        (money_of_cents_string("3767") +
                        (money_of_cents_string("969") *
                        decimal_of_string("6.")))):
                        return (money_of_cents_string("3767") +
                            (money_of_cents_string("969") *
                            decimal_of_string("6.")))
                    else:
                        return (money_of_cents_string("3767") +
                            (money_of_cents_string("969") *
                            decimal_of_integer(nombre_personnes_a_charge_6)))
                else:
                    raise EmptyError
            def temp_montant_forfaitaire_charges_11(_:Unit):
                match_arg_479 = residence_6
                if match_arg_479.code == Collectivite_Code.Guadeloupe:
                    _ = match_arg_479.value
                    temp_montant_forfaitaire_charges_12 = True
                elif match_arg_479.code == Collectivite_Code.Guyane:
                    _ = match_arg_479.value
                    temp_montant_forfaitaire_charges_12 = False
                elif match_arg_479.code == Collectivite_Code.Martinique:
                    _ = match_arg_479.value
                    temp_montant_forfaitaire_charges_12 = True
                elif match_arg_479.code == Collectivite_Code.LaReunion:
                    _ = match_arg_479.value
                    temp_montant_forfaitaire_charges_12 = True
                elif match_arg_479.code == Collectivite_Code.SaintBarthelemy:
                    _ = match_arg_479.value
                    temp_montant_forfaitaire_charges_12 = True
                elif match_arg_479.code == Collectivite_Code.SaintMartin:
                    _ = match_arg_479.value
                    temp_montant_forfaitaire_charges_12 = True
                elif match_arg_479.code == Collectivite_Code.Metropole:
                    _ = match_arg_479.value
                    temp_montant_forfaitaire_charges_12 = False
                elif match_arg_479.code == Collectivite_Code.SaintPierreEtMiquelon:
                    _ = match_arg_479.value
                    temp_montant_forfaitaire_charges_12 = False
                elif match_arg_479.code == Collectivite_Code.Mayotte:
                    _ = match_arg_479.value
                    temp_montant_forfaitaire_charges_12 = True
                if ((date_courante_12 >= date_of_numbers(2023,1,1)) and
                    temp_montant_forfaitaire_charges_12):
                    return (money_of_cents_string("3767") +
                        (money_of_cents_string("969") *
                        multiplicateur_majoration_charges))
                else:
                    raise EmptyError
            temp_montant_forfaitaire_charges_13 = handle_default(SourcePosition(filename="examples/aides_logement/prologue.catala_fr",
                                                                 start_line=1044,
                                                                 start_column=12,
                                                                 end_line=1044, end_column=39,
                                                                 law_headings=["Secteur logement-foyer",
                                                                 "Calcul du montant de l'allocation logement",
                                                                 "Prologue : aides au logement"]), [temp_montant_forfaitaire_charges_11,
                                                                 temp_montant_forfaitaire_charges_9,
                                                                 temp_montant_forfaitaire_charges_6,
                                                                 temp_montant_forfaitaire_charges_4,
                                                                 temp_montant_forfaitaire_charges_2],
                                                                 temp_montant_forfaitaire_charges_1,
                                                                 temp_montant_forfaitaire_charges)
        except EmptyError:
            def temp_montant_forfaitaire_charges_14(_:Unit):
                raise EmptyError
            def temp_montant_forfaitaire_charges_15(_:Unit):
                return False
            def temp_montant_forfaitaire_charges_16(_:Unit):
                if ((date_courante_12 >= date_of_numbers(2020,10,1)) and
                    (date_courante_12 <
                    date_of_numbers(2021,10,1))):
                    if (nombre_personnes_a_charge_6 ==
                        integer_of_string("0")):
                        return money_of_cents_string("5399")
                    else:
                        return (money_of_cents_string("5399") +
                            (money_of_cents_string("1224") *
                            decimal_of_integer(nombre_personnes_a_charge_6)))
                else:
                    raise EmptyError
            def temp_montant_forfaitaire_charges_17(_:Unit):
                if ((date_courante_12 >= date_of_numbers(2021,10,1)) and
                    (date_courante_12 <
                    date_of_numbers(2022,7,1))):
                    if (nombre_personnes_a_charge_6 ==
                        integer_of_string("0")):
                        return money_of_cents_string("5422")
                    else:
                        return (money_of_cents_string("5422") +
                            (money_of_cents_string("1229") *
                            multiplicateur_majoration_charges))
                else:
                    raise EmptyError
            def temp_montant_forfaitaire_charges_18(_:Unit):
                if (date_courante_12 >=
                    date_of_numbers(2022,7,1)):
                    if (nombre_personnes_a_charge_6 ==
                        integer_of_string("0")):
                        return money_of_cents_string("5612")
                    else:
                        return (money_of_cents_string("5612") +
                            (money_of_cents_string("1272") *
                            multiplicateur_majoration_charges))
                else:
                    raise EmptyError
            temp_montant_forfaitaire_charges_13 = handle_default(SourcePosition(filename="examples/aides_logement/prologue.catala_fr",
                                                                 start_line=1044,
                                                                 start_column=12,
                                                                 end_line=1044, end_column=39,
                                                                 law_headings=["Secteur logement-foyer",
                                                                 "Calcul du montant de l'allocation logement",
                                                                 "Prologue : aides au logement"]), [temp_montant_forfaitaire_charges_18,
                                                                 temp_montant_forfaitaire_charges_17,
                                                                 temp_montant_forfaitaire_charges_16],
                                                                 temp_montant_forfaitaire_charges_15,
                                                                 temp_montant_forfaitaire_charges_14)
    except EmptyError:
        temp_montant_forfaitaire_charges_13 = dead_value
        raise NoValueProvided(SourcePosition(filename="examples/aides_logement/prologue.catala_fr",
                                             start_line=1044,
                                             start_column=12, end_line=1044,
                                             end_column=39,
                                             law_headings=["Secteur logement-foyer",
                                             "Calcul du montant de l'allocation logement",
                                             "Prologue : aides au logement"]))
    montant_forfaitaire_charges = temp_montant_forfaitaire_charges_13
    try:
        def temp_traitement_aide_finale_minoration_forfaitaire_3(aide_finale_16:Money):
            try:
                if ((aide_finale_16 - montant_forfaitaire_d842_15) <
                    money_of_cents_string("0")):
                    return money_of_cents_string("0")
                else:
                    return (aide_finale_16 - montant_forfaitaire_d842_15)
            except EmptyError:
                raise NoValueProvided(SourcePosition(filename="examples/aides_logement/prologue.catala_fr",
                                                     start_line=1058,
                                                     start_column=10,
                                                     end_line=1058,
                                                     end_column=32,
                                                     law_headings=["Secteur logement-foyer",
                                                     "Calcul du montant de l'allocation logement",
                                                     "Prologue : aides au logement"]))
    except EmptyError:
        temp_traitement_aide_finale_minoration_forfaitaire_3 = dead_value
        raise NoValueProvided(SourcePosition(filename="examples/aides_logement/prologue.catala_fr",
                                             start_line=1058,
                                             start_column=10, end_line=1058,
                                             end_column=32,
                                             law_headings=["Secteur logement-foyer",
                                             "Calcul du montant de l'allocation logement",
                                             "Prologue : aides au logement"]))
    traitement_aide_finale_minoration_forfaitaire_3 = temp_traitement_aide_finale_minoration_forfaitaire_3
    try:
        temp_loyer_minimal = calcul_equivalence_loyer_minimale_dot_montant_2
    except EmptyError:
        temp_loyer_minimal = dead_value
        raise NoValueProvided(SourcePosition(filename="examples/aides_logement/prologue.catala_fr",
                                             start_line=1045,
                                             start_column=12, end_line=1045,
                                             end_column=25,
                                             law_headings=["Secteur logement-foyer",
                                             "Calcul du montant de l'allocation logement",
                                             "Prologue : aides au logement"]))
    loyer_minimal = temp_loyer_minimal
    try:
        def temp_depense_nette_minimale(allocation_mensuelle_4:Money):
            try:
                return ((equivalence_loyer + montant_forfaitaire_charges) -
                    allocation_mensuelle_4)
            except EmptyError:
                raise NoValueProvided(SourcePosition(filename="examples/aides_logement/prologue.catala_fr",
                                                     start_line=1034,
                                                     start_column=11,
                                                     end_line=1034,
                                                     end_column=33,
                                                     law_headings=["Secteur logement-foyer",
                                                     "Calcul du montant de l'allocation logement",
                                                     "Prologue : aides au logement"]))
    except EmptyError:
        temp_depense_nette_minimale = dead_value
        raise NoValueProvided(SourcePosition(filename="examples/aides_logement/prologue.catala_fr",
                                             start_line=1034,
                                             start_column=11, end_line=1034,
                                             end_column=33,
                                             law_headings=["Secteur logement-foyer",
                                             "Calcul du montant de l'allocation logement",
                                             "Prologue : aides au logement"]))
    depense_nette_minimale = temp_depense_nette_minimale
    try:
        temp_aide_finale_formule_5 = (((equivalence_loyer +
            montant_forfaitaire_charges) - loyer_minimal) *
            coefficient_prise_en_charge)
    except EmptyError:
        temp_aide_finale_formule_5 = dead_value
        raise NoValueProvided(SourcePosition(filename="examples/aides_logement/prologue.catala_fr",
                                             start_line=1055,
                                             start_column=12, end_line=1055,
                                             end_column=31,
                                             law_headings=["Secteur logement-foyer",
                                             "Calcul du montant de l'allocation logement",
                                             "Prologue : aides au logement"]))
    aide_finale_formule_4 = temp_aide_finale_formule_5
    try:
        def temp_abattement_depense_nette_minimale(allocation_mensuelle_5:Money):
            try:
                if (depense_nette_minimale(allocation_mensuelle_5) <
                    montant_minimal_depense_nette_d842_17):
                    return (montant_minimal_depense_nette_d842_17 -
                        depense_nette_minimale(allocation_mensuelle_5))
                else:
                    return money_of_cents_string("0")
            except EmptyError:
                raise NoValueProvided(SourcePosition(filename="examples/aides_logement/prologue.catala_fr",
                                                     start_line=1036,
                                                     start_column=11,
                                                     end_line=1036,
                                                     end_column=44,
                                                     law_headings=["Secteur logement-foyer",
                                                     "Calcul du montant de l'allocation logement",
                                                     "Prologue : aides au logement"]))
    except EmptyError:
        temp_abattement_depense_nette_minimale = dead_value
        raise NoValueProvided(SourcePosition(filename="examples/aides_logement/prologue.catala_fr",
                                             start_line=1036,
                                             start_column=11, end_line=1036,
                                             end_column=44,
                                             law_headings=["Secteur logement-foyer",
                                             "Calcul du montant de l'allocation logement",
                                             "Prologue : aides au logement"]))
    abattement_depense_nette_minimale = temp_abattement_depense_nette_minimale
    try:
        def temp_traitement_aide_finale_depense_nette_minimale(aide_finale_17:Money):
            try:
                if ((traitement_aide_finale_minoration_forfaitaire_3(
                    aide_finale_17) -
                    abattement_depense_nette_minimale(traitement_aide_finale_minoration_forfaitaire_3(
                                                      aide_finale_17))) <
                    money_of_cents_string("0")):
                    return money_of_cents_string("0")
                else:
                    return (traitement_aide_finale_minoration_forfaitaire_3(
                        aide_finale_17) -
                        abattement_depense_nette_minimale(traitement_aide_finale_minoration_forfaitaire_3(
                                                          aide_finale_17)))
            except EmptyError:
                raise NoValueProvided(SourcePosition(filename="examples/aides_logement/prologue.catala_fr",
                                                     start_line=1059,
                                                     start_column=10,
                                                     end_line=1059,
                                                     end_column=32,
                                                     law_headings=["Secteur logement-foyer",
                                                     "Calcul du montant de l'allocation logement",
                                                     "Prologue : aides au logement"]))
    except EmptyError:
        temp_traitement_aide_finale_depense_nette_minimale = dead_value
        raise NoValueProvided(SourcePosition(filename="examples/aides_logement/prologue.catala_fr",
                                             start_line=1059,
                                             start_column=10, end_line=1059,
                                             end_column=32,
                                             law_headings=["Secteur logement-foyer",
                                             "Calcul du montant de l'allocation logement",
                                             "Prologue : aides au logement"]))
    traitement_aide_finale_depense_nette_minimale = temp_traitement_aide_finale_depense_nette_minimale
    try:
        def temp_traitement_aide_finale_redevance(aide_finale_18:Money):
            try:
                if (traitement_aide_finale_depense_nette_minimale(aide_finale_18) >
                    redevance_1):
                    return redevance_1
                else:
                    return traitement_aide_finale_depense_nette_minimale(
                        aide_finale_18)
            except EmptyError:
                raise NoValueProvided(SourcePosition(filename="examples/aides_logement/prologue.catala_fr",
                                                     start_line=1060,
                                                     start_column=10,
                                                     end_line=1060,
                                                     end_column=19,
                                                     law_headings=["Secteur logement-foyer",
                                                     "Calcul du montant de l'allocation logement",
                                                     "Prologue : aides au logement"]))
    except EmptyError:
        temp_traitement_aide_finale_redevance = dead_value
        raise NoValueProvided(SourcePosition(filename="examples/aides_logement/prologue.catala_fr",
                                             start_line=1060,
                                             start_column=10, end_line=1060,
                                             end_column=19,
                                             law_headings=["Secteur logement-foyer",
                                             "Calcul du montant de l'allocation logement",
                                             "Prologue : aides au logement"]))
    traitement_aide_finale_redevance = temp_traitement_aide_finale_redevance
    try:
        def temp_traitement_aide_finale_contributions_sociales_arrondi_3(aide_finale_19:Money):
            try:
                if ((money_round(((traitement_aide_finale_redevance(aide_finale_19) -
                    contributions_sociales_dot_montant_3(traitement_aide_finale_redevance(
                                                         aide_finale_19))) -
                    money_of_cents_string("50"))) +
                    contributions_sociales_dot_montant_3(traitement_aide_finale_redevance(
                                                         aide_finale_19))) >=
                    money_of_cents_string("0")):
                    return (money_round(((traitement_aide_finale_redevance(
                        aide_finale_19) -
                        contributions_sociales_dot_montant_3(traitement_aide_finale_redevance(
                                                             aide_finale_19))) -
                        money_of_cents_string("50"))) +
                        contributions_sociales_dot_montant_3(traitement_aide_finale_redevance(
                                                             aide_finale_19)))
                else:
                    return money_of_cents_string("0")
            except EmptyError:
                raise NoValueProvided(SourcePosition(filename="examples/aides_logement/prologue.catala_fr",
                                                     start_line=1061,
                                                     start_column=10,
                                                     end_line=1061,
                                                     end_column=40,
                                                     law_headings=["Secteur logement-foyer",
                                                     "Calcul du montant de l'allocation logement",
                                                     "Prologue : aides au logement"]))
    except EmptyError:
        temp_traitement_aide_finale_contributions_sociales_arrondi_3 = dead_value
        raise NoValueProvided(SourcePosition(filename="examples/aides_logement/prologue.catala_fr",
                                             start_line=1061,
                                             start_column=10, end_line=1061,
                                             end_column=40,
                                             law_headings=["Secteur logement-foyer",
                                             "Calcul du montant de l'allocation logement",
                                             "Prologue : aides au logement"]))
    traitement_aide_finale_contributions_sociales_arrondi_3 = temp_traitement_aide_finale_contributions_sociales_arrondi_3
    try:
        def temp_traitement_aide_finale_montant_minimal_3(aide_finale_20:Money):
            try:
                if (traitement_aide_finale_contributions_sociales_arrondi_3(
                    aide_finale_20) <
                    montant_minimal_aide_d842_15):
                    return money_of_cents_string("0")
                else:
                    return traitement_aide_finale_contributions_sociales_arrondi_3(
                        aide_finale_20)
            except EmptyError:
                raise NoValueProvided(SourcePosition(filename="examples/aides_logement/prologue.catala_fr",
                                                     start_line=1062,
                                                     start_column=10,
                                                     end_line=1062,
                                                     end_column=25,
                                                     law_headings=["Secteur logement-foyer",
                                                     "Calcul du montant de l'allocation logement",
                                                     "Prologue : aides au logement"]))
    except EmptyError:
        temp_traitement_aide_finale_montant_minimal_3 = dead_value
        raise NoValueProvided(SourcePosition(filename="examples/aides_logement/prologue.catala_fr",
                                             start_line=1062,
                                             start_column=10, end_line=1062,
                                             end_column=25,
                                             law_headings=["Secteur logement-foyer",
                                             "Calcul du montant de l'allocation logement",
                                             "Prologue : aides au logement"]))
    traitement_aide_finale_montant_minimal_3 = temp_traitement_aide_finale_montant_minimal_3
    try:
        temp___13 = (date_courante_12 >= date_of_numbers(2021,10,1))
    except EmptyError:
        temp___13 = dead_value
        raise NoValueProvided(SourcePosition(filename="examples/aides_logement/prologue.catala_fr",
                                             start_line=1086,
                                             start_column=13, end_line=1086,
                                             end_column=42,
                                             law_headings=["Secteur logement-foyer",
                                             "Calcul du montant de l'allocation logement",
                                             "Prologue : aides au logement"]))
    if not (temp___13):
        raise AssertionFailure(SourcePosition(filename="examples/aides_logement/prologue.catala_fr",
                                              start_line=1086,
                                              start_column=13, end_line=1086,
                                              end_column=42,
                                              law_headings=["Secteur logement-foyer",
                                                           "Calcul du montant de l'allocation logement",
                                                           "Prologue : aides au logement"]))
    return CalculAllocationLogementFoyer(coefficient_prise_en_charge = coefficient_prise_en_charge,
        equivalence_loyer = equivalence_loyer,
        montant_forfaitaire_charges = montant_forfaitaire_charges,
        loyer_minimal = loyer_minimal,
        aide_finale_formule = aide_finale_formule_4,
        traitement_aide_finale = traitement_aide_finale_montant_minimal_3)

def calcul_allocation_logement_accession_propriete(calcul_allocation_logement_accession_propriete_in:CalculAllocationLogementAccessionProprieteIn):
    ressources_menage_arrondies_base_1 = calcul_allocation_logement_accession_propriete_in.ressources_menage_arrondies_base_in
    nombre_personnes_a_charge_7 = calcul_allocation_logement_accession_propriete_in.nombre_personnes_a_charge_in
    situation_familiale_calcul_apl_7 = calcul_allocation_logement_accession_propriete_in.situation_familiale_calcul_apl_in
    zone_5 = calcul_allocation_logement_accession_propriete_in.zone_in
    residence_7 = calcul_allocation_logement_accession_propriete_in.residence_in
    date_courante_13 = calcul_allocation_logement_accession_propriete_in.date_courante_in
    mensualite_principale_1 = calcul_allocation_logement_accession_propriete_in.mensualite_principale_in
    situation_r822_11_13_17_1 = calcul_allocation_logement_accession_propriete_in.situation_r822_11_13_17_in
    date_signature_pret_2 = calcul_allocation_logement_accession_propriete_in.date_signature_pret_in
    type_travaux_logement_1 = calcul_allocation_logement_accession_propriete_in.type_travaux_logement_in
    local_habite_premiere_fois_beneficiaire_1 = calcul_allocation_logement_accession_propriete_in.local_habite_premiere_fois_beneficiaire_in
    date_entree_logement_1 = calcul_allocation_logement_accession_propriete_in.date_entree_logement_in
    charges_mensuelles_pret = calcul_allocation_logement_accession_propriete_in.charges_mensuelles_pret_in
    copropriete_1 = calcul_allocation_logement_accession_propriete_in.copropriete_in
    operations_logement_evolutifs_sociaux_accession_propriete_aidee__etat = calcul_allocation_logement_accession_propriete_in.operations_logement_evolutifs_sociaux_accession_propriete_aidee_Etat_in
    try:
        temp_taux_francs_vers_euros_1 = (decimal_of_string("1.") /
            decimal_of_string("6.55957"))
    except EmptyError:
        temp_taux_francs_vers_euros_1 = dead_value
        raise NoValueProvided(SourcePosition(filename="examples/aides_logement/prologue.catala_fr",
                                             start_line=955, start_column=11,
                                             end_line=955, end_column=33,
                                             law_headings=["Secteur accession à la propriété",
                                             "Calcul du montant de l'allocation logement",
                                             "Prologue : aides au logement"]))
    taux_francs_vers_euros_1 = temp_taux_francs_vers_euros_1
    try:
        temp_calcul_nombre_parts_dot_nombre_personnes_a_charge_3 = nombre_personnes_a_charge_7
    except EmptyError:
        temp_calcul_nombre_parts_dot_nombre_personnes_a_charge_3 = dead_value
        raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                             start_line=4447,
                                             start_column=14, end_line=4447,
                                             end_column=59,
                                             law_headings=["Article D842-6",
                                             "Section 2 : Accession à la propriété",
                                             "Chapitre 2 : Modalités de liquidation et de versement des allocations de logement",
                                             "Titre IV : Allocations de Logement",
                                             "Livre VIII : Aides personnelles au logement",
                                             "Partie réglementaire",
                                             "Code de la construction et de l'habitation"]))
    calcul_nombre_parts_dot_nombre_personnes_a_charge_3 = temp_calcul_nombre_parts_dot_nombre_personnes_a_charge_3
    try:
        temp_calcul_nombre_parts_dot_situation_familiale_calcul_apl_3 = situation_familiale_calcul_apl_7
    except EmptyError:
        temp_calcul_nombre_parts_dot_situation_familiale_calcul_apl_3 = dead_value
        raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                             start_line=4449,
                                             start_column=14, end_line=4449,
                                             end_column=64,
                                             law_headings=["Article D842-6",
                                             "Section 2 : Accession à la propriété",
                                             "Chapitre 2 : Modalités de liquidation et de versement des allocations de logement",
                                             "Titre IV : Allocations de Logement",
                                             "Livre VIII : Aides personnelles au logement",
                                             "Partie réglementaire",
                                             "Code de la construction et de l'habitation"]))
    calcul_nombre_parts_dot_situation_familiale_calcul_apl_3 = temp_calcul_nombre_parts_dot_situation_familiale_calcul_apl_3
    result_14 = calcul_nombre_parts_accession_propriete(CalculNombrePartsAccessionProprieteIn(nombre_personnes_a_charge_in = calcul_nombre_parts_dot_nombre_personnes_a_charge_3,
                                                        situation_familiale_calcul_apl_in = calcul_nombre_parts_dot_situation_familiale_calcul_apl_3))
    calcul_nombre_parts_dot_n_nombre_parts_d832_11_1 = result_14.n_nombre_parts_d832_11
    try:
        temp_contributions_sociales_dot_date_courante_4 = date_courante_13
    except EmptyError:
        temp_contributions_sociales_dot_date_courante_4 = dead_value
        raise NoValueProvided(SourcePosition(filename="examples/aides_logement/prologue.catala_fr",
                                             start_line=1009,
                                             start_column=14, end_line=1009,
                                             end_column=50,
                                             law_headings=["Secteur accession à la propriété",
                                             "Calcul du montant de l'allocation logement",
                                             "Prologue : aides au logement"]))
    contributions_sociales_dot_date_courante_4 = temp_contributions_sociales_dot_date_courante_4
    result_15 = contributions_sociales_aides_personnelle_logement(ContributionsSocialesAidesPersonnelleLogementIn(date_courante_in = contributions_sociales_dot_date_courante_4))
    contributions_sociales_dot_montant_4 = result_15.montant
    try:
        try:
            try:
                try:
                    try:
                        try:
                            match_arg_480 = residence_7
                            if match_arg_480.code == Collectivite_Code.Guadeloupe:
                                _ = match_arg_480.value
                                temp_multiplicateur_majoration_charges_6 = True
                            elif match_arg_480.code == Collectivite_Code.Guyane:
                                _ = match_arg_480.value
                                temp_multiplicateur_majoration_charges_6 = False
                            elif match_arg_480.code == Collectivite_Code.Martinique:
                                _ = match_arg_480.value
                                temp_multiplicateur_majoration_charges_6 = True
                            elif match_arg_480.code == Collectivite_Code.LaReunion:
                                _ = match_arg_480.value
                                temp_multiplicateur_majoration_charges_6 = True
                            elif match_arg_480.code == Collectivite_Code.SaintBarthelemy:
                                _ = match_arg_480.value
                                temp_multiplicateur_majoration_charges_6 = True
                            elif match_arg_480.code == Collectivite_Code.SaintMartin:
                                _ = match_arg_480.value
                                temp_multiplicateur_majoration_charges_6 = True
                            elif match_arg_480.code == Collectivite_Code.Metropole:
                                _ = match_arg_480.value
                                temp_multiplicateur_majoration_charges_6 = False
                            elif match_arg_480.code == Collectivite_Code.SaintPierreEtMiquelon:
                                _ = match_arg_480.value
                                temp_multiplicateur_majoration_charges_6 = False
                            elif match_arg_480.code == Collectivite_Code.Mayotte:
                                _ = match_arg_480.value
                                temp_multiplicateur_majoration_charges_6 = True
                            if (((date_courante_13 >=
                                date_of_numbers(2020,1,1)) and
                                (date_courante_13 <
                                date_of_numbers(2020,10,1))) and
                                (temp_multiplicateur_majoration_charges_6 and
                                (nombre_personnes_a_charge_7 >=
                                integer_of_string("6")))):
                                temp_multiplicateur_majoration_charges_7 = decimal_of_string("6.")
                            else:
                                temp_multiplicateur_majoration_charges_7 = dead_value
                                raise EmptyError
                        except EmptyError:
                            match_arg_481 = residence_7
                            if match_arg_481.code == Collectivite_Code.Guadeloupe:
                                _ = match_arg_481.value
                                temp_multiplicateur_majoration_charges_8 = True
                            elif match_arg_481.code == Collectivite_Code.Guyane:
                                _ = match_arg_481.value
                                temp_multiplicateur_majoration_charges_8 = False
                            elif match_arg_481.code == Collectivite_Code.Martinique:
                                _ = match_arg_481.value
                                temp_multiplicateur_majoration_charges_8 = True
                            elif match_arg_481.code == Collectivite_Code.LaReunion:
                                _ = match_arg_481.value
                                temp_multiplicateur_majoration_charges_8 = True
                            elif match_arg_481.code == Collectivite_Code.SaintBarthelemy:
                                _ = match_arg_481.value
                                temp_multiplicateur_majoration_charges_8 = True
                            elif match_arg_481.code == Collectivite_Code.SaintMartin:
                                _ = match_arg_481.value
                                temp_multiplicateur_majoration_charges_8 = True
                            elif match_arg_481.code == Collectivite_Code.Metropole:
                                _ = match_arg_481.value
                                temp_multiplicateur_majoration_charges_8 = False
                            elif match_arg_481.code == Collectivite_Code.SaintPierreEtMiquelon:
                                _ = match_arg_481.value
                                temp_multiplicateur_majoration_charges_8 = False
                            elif match_arg_481.code == Collectivite_Code.Mayotte:
                                _ = match_arg_481.value
                                temp_multiplicateur_majoration_charges_8 = True
                            if (((date_courante_13 >=
                                date_of_numbers(2020,10,1)) and
                                (date_courante_13 <
                                date_of_numbers(2021,10,1))) and
                                (temp_multiplicateur_majoration_charges_8 and
                                (nombre_personnes_a_charge_7 >=
                                integer_of_string("6")))):
                                temp_multiplicateur_majoration_charges_7 = decimal_of_string("6.")
                            else:
                                temp_multiplicateur_majoration_charges_7 = dead_value
                                raise EmptyError
                    except EmptyError:
                        match_arg_482 = residence_7
                        if match_arg_482.code == Collectivite_Code.Guadeloupe:
                            _ = match_arg_482.value
                            temp_multiplicateur_majoration_charges_9 = True
                        elif match_arg_482.code == Collectivite_Code.Guyane:
                            _ = match_arg_482.value
                            temp_multiplicateur_majoration_charges_9 = False
                        elif match_arg_482.code == Collectivite_Code.Martinique:
                            _ = match_arg_482.value
                            temp_multiplicateur_majoration_charges_9 = True
                        elif match_arg_482.code == Collectivite_Code.LaReunion:
                            _ = match_arg_482.value
                            temp_multiplicateur_majoration_charges_9 = True
                        elif match_arg_482.code == Collectivite_Code.SaintBarthelemy:
                            _ = match_arg_482.value
                            temp_multiplicateur_majoration_charges_9 = True
                        elif match_arg_482.code == Collectivite_Code.SaintMartin:
                            _ = match_arg_482.value
                            temp_multiplicateur_majoration_charges_9 = True
                        elif match_arg_482.code == Collectivite_Code.Metropole:
                            _ = match_arg_482.value
                            temp_multiplicateur_majoration_charges_9 = False
                        elif match_arg_482.code == Collectivite_Code.SaintPierreEtMiquelon:
                            _ = match_arg_482.value
                            temp_multiplicateur_majoration_charges_9 = False
                        elif match_arg_482.code == Collectivite_Code.Mayotte:
                            _ = match_arg_482.value
                            temp_multiplicateur_majoration_charges_9 = True
                        if (((date_courante_13 >=
                            date_of_numbers(2021,10,1)) and
                            (date_courante_13 <
                            date_of_numbers(2022,1,1))) and
                            (temp_multiplicateur_majoration_charges_9 and
                            (nombre_personnes_a_charge_7 >=
                            integer_of_string("6")))):
                            temp_multiplicateur_majoration_charges_7 = decimal_of_string("6.")
                        else:
                            temp_multiplicateur_majoration_charges_7 = dead_value
                            raise EmptyError
                except EmptyError:
                    match_arg_483 = residence_7
                    if match_arg_483.code == Collectivite_Code.Guadeloupe:
                        _ = match_arg_483.value
                        temp_multiplicateur_majoration_charges_10 = True
                    elif match_arg_483.code == Collectivite_Code.Guyane:
                        _ = match_arg_483.value
                        temp_multiplicateur_majoration_charges_10 = False
                    elif match_arg_483.code == Collectivite_Code.Martinique:
                        _ = match_arg_483.value
                        temp_multiplicateur_majoration_charges_10 = True
                    elif match_arg_483.code == Collectivite_Code.LaReunion:
                        _ = match_arg_483.value
                        temp_multiplicateur_majoration_charges_10 = True
                    elif match_arg_483.code == Collectivite_Code.SaintBarthelemy:
                        _ = match_arg_483.value
                        temp_multiplicateur_majoration_charges_10 = True
                    elif match_arg_483.code == Collectivite_Code.SaintMartin:
                        _ = match_arg_483.value
                        temp_multiplicateur_majoration_charges_10 = True
                    elif match_arg_483.code == Collectivite_Code.Metropole:
                        _ = match_arg_483.value
                        temp_multiplicateur_majoration_charges_10 = False
                    elif match_arg_483.code == Collectivite_Code.SaintPierreEtMiquelon:
                        _ = match_arg_483.value
                        temp_multiplicateur_majoration_charges_10 = False
                    elif match_arg_483.code == Collectivite_Code.Mayotte:
                        _ = match_arg_483.value
                        temp_multiplicateur_majoration_charges_10 = True
                    if (((date_courante_13 >= date_of_numbers(2022,1,1)) and
                        (date_courante_13 < date_of_numbers(2022,7,1))) and
                        (temp_multiplicateur_majoration_charges_10 and
                        (nombre_personnes_a_charge_7 >=
                        integer_of_string("6")))):
                        temp_multiplicateur_majoration_charges_7 = decimal_of_string("6.")
                    else:
                        temp_multiplicateur_majoration_charges_7 = dead_value
                        raise EmptyError
            except EmptyError:
                match_arg_484 = residence_7
                if match_arg_484.code == Collectivite_Code.Guadeloupe:
                    _ = match_arg_484.value
                    temp_multiplicateur_majoration_charges_11 = True
                elif match_arg_484.code == Collectivite_Code.Guyane:
                    _ = match_arg_484.value
                    temp_multiplicateur_majoration_charges_11 = False
                elif match_arg_484.code == Collectivite_Code.Martinique:
                    _ = match_arg_484.value
                    temp_multiplicateur_majoration_charges_11 = True
                elif match_arg_484.code == Collectivite_Code.LaReunion:
                    _ = match_arg_484.value
                    temp_multiplicateur_majoration_charges_11 = True
                elif match_arg_484.code == Collectivite_Code.SaintBarthelemy:
                    _ = match_arg_484.value
                    temp_multiplicateur_majoration_charges_11 = True
                elif match_arg_484.code == Collectivite_Code.SaintMartin:
                    _ = match_arg_484.value
                    temp_multiplicateur_majoration_charges_11 = True
                elif match_arg_484.code == Collectivite_Code.Metropole:
                    _ = match_arg_484.value
                    temp_multiplicateur_majoration_charges_11 = False
                elif match_arg_484.code == Collectivite_Code.SaintPierreEtMiquelon:
                    _ = match_arg_484.value
                    temp_multiplicateur_majoration_charges_11 = False
                elif match_arg_484.code == Collectivite_Code.Mayotte:
                    _ = match_arg_484.value
                    temp_multiplicateur_majoration_charges_11 = True
                if (((date_courante_13 >= date_of_numbers(2022,7,1)) and
                    (date_courante_13 < date_of_numbers(2023,1,1))) and
                    (temp_multiplicateur_majoration_charges_11 and
                    (nombre_personnes_a_charge_7 >=
                    integer_of_string("6")))):
                    temp_multiplicateur_majoration_charges_7 = decimal_of_string("6.")
                else:
                    temp_multiplicateur_majoration_charges_7 = dead_value
                    raise EmptyError
        except EmptyError:
            try:
                if ((date_courante_13 >= date_of_numbers(2021,10,1)) and
                    (date_courante_13 <
                    date_of_numbers(2022,7,1))):
                    temp_multiplicateur_majoration_charges_7 = decimal_of_integer(nombre_personnes_a_charge_7)
                else:
                    temp_multiplicateur_majoration_charges_7 = dead_value
                    raise EmptyError
            except EmptyError:
                if (date_courante_13 >=
                    date_of_numbers(2022,7,1)):
                    temp_multiplicateur_majoration_charges_7 = decimal_of_integer(nombre_personnes_a_charge_7)
                else:
                    temp_multiplicateur_majoration_charges_7 = dead_value
                    raise EmptyError
    except EmptyError:
        temp_multiplicateur_majoration_charges_7 = dead_value
        raise NoValueProvided(SourcePosition(filename="examples/aides_logement/prologue.catala_fr",
                                             start_line=966, start_column=11,
                                             end_line=966, end_column=44,
                                             law_headings=["Secteur accession à la propriété",
                                             "Calcul du montant de l'allocation logement",
                                             "Prologue : aides au logement"]))
    multiplicateur_majoration_charges_1 = temp_multiplicateur_majoration_charges_7
    try:
        if (date_courante_13 >=
            date_of_numbers(2019,10,1)):
            temp_coefficient_d842_12 = decimal_of_string("16.25")
        else:
            temp_coefficient_d842_12 = dead_value
            raise EmptyError
    except EmptyError:
        temp_coefficient_d842_12 = dead_value
        raise NoValueProvided(SourcePosition(filename="examples/aides_logement/prologue.catala_fr",
                                             start_line=964, start_column=11,
                                             end_line=964, end_column=30,
                                             law_headings=["Secteur accession à la propriété",
                                             "Calcul du montant de l'allocation logement",
                                             "Prologue : aides au logement"]))
    coefficient_d842_12 = temp_coefficient_d842_12
    try:
        if (date_courante_13 >=
            date_of_numbers(2019,10,1)):
            temp_coefficient_d842_11 = decimal_of_string("0.0234")
        else:
            temp_coefficient_d842_11 = dead_value
            raise EmptyError
    except EmptyError:
        temp_coefficient_d842_11 = dead_value
        raise NoValueProvided(SourcePosition(filename="examples/aides_logement/prologue.catala_fr",
                                             start_line=963, start_column=11,
                                             end_line=963, end_column=30,
                                             law_headings=["Secteur accession à la propriété",
                                             "Calcul du montant de l'allocation logement",
                                             "Prologue : aides au logement"]))
    coefficient_d842_11 = temp_coefficient_d842_11
    try:
        if (date_courante_13 >=
            date_of_numbers(2019,10,1)):
            temp_montant_forfaitaire_d842_12 = money_of_cents_string("390000")
        else:
            temp_montant_forfaitaire_d842_12 = dead_value
            raise EmptyError
    except EmptyError:
        temp_montant_forfaitaire_d842_12 = dead_value
        raise NoValueProvided(SourcePosition(filename="examples/aides_logement/prologue.catala_fr",
                                             start_line=962, start_column=11,
                                             end_line=962, end_column=38,
                                             law_headings=["Secteur accession à la propriété",
                                             "Calcul du montant de l'allocation logement",
                                             "Prologue : aides au logement"]))
    montant_forfaitaire_d842_12 = temp_montant_forfaitaire_d842_12
    try:
        if (date_courante_13 >=
            date_of_numbers(2019,10,1)):
            temp_montant_forfaitaire_d842_11 = money_of_cents_string("1500")
        else:
            temp_montant_forfaitaire_d842_11 = dead_value
            raise EmptyError
    except EmptyError:
        temp_montant_forfaitaire_d842_11 = dead_value
        raise NoValueProvided(SourcePosition(filename="examples/aides_logement/prologue.catala_fr",
                                             start_line=961, start_column=11,
                                             end_line=961, end_column=38,
                                             law_headings=["Secteur accession à la propriété",
                                             "Calcul du montant de l'allocation logement",
                                             "Prologue : aides au logement"]))
    montant_forfaitaire_d842_11 = temp_montant_forfaitaire_d842_11
    try:
        if (date_courante_13 >=
            date_of_numbers(2019,10,1)):
            temp_montant_minimal_aide_d842_6 = money_of_cents_string("1000")
        else:
            temp_montant_minimal_aide_d842_6 = dead_value
            raise EmptyError
    except EmptyError:
        temp_montant_minimal_aide_d842_6 = dead_value
        raise NoValueProvided(SourcePosition(filename="examples/aides_logement/prologue.catala_fr",
                                             start_line=960, start_column=11,
                                             end_line=960, end_column=38,
                                             law_headings=["Secteur accession à la propriété",
                                             "Calcul du montant de l'allocation logement",
                                             "Prologue : aides au logement"]))
    montant_minimal_aide_d842_6 = temp_montant_minimal_aide_d842_6
    try:
        if (date_courante_13 >=
            date_of_numbers(2019,10,1)):
            temp_montant_forfaitaire_d842_6 = money_of_cents_string("500")
        else:
            temp_montant_forfaitaire_d842_6 = dead_value
            raise EmptyError
    except EmptyError:
        temp_montant_forfaitaire_d842_6 = dead_value
        raise NoValueProvided(SourcePosition(filename="examples/aides_logement/prologue.catala_fr",
                                             start_line=952, start_column=11,
                                             end_line=952, end_column=37,
                                             law_headings=["Secteur accession à la propriété",
                                             "Calcul du montant de l'allocation logement",
                                             "Prologue : aides au logement"]))
    montant_forfaitaire_d842_6 = temp_montant_forfaitaire_d842_6
    try:
        try:
            try:
                try:
                    match_arg_485 = residence_7
                    if match_arg_485.code == Collectivite_Code.Guadeloupe:
                        _ = match_arg_485.value
                        temp_condition_d842_11_3 = False
                    elif match_arg_485.code == Collectivite_Code.Guyane:
                        _ = match_arg_485.value
                        temp_condition_d842_11_3 = False
                    elif match_arg_485.code == Collectivite_Code.Martinique:
                        _ = match_arg_485.value
                        temp_condition_d842_11_3 = False
                    elif match_arg_485.code == Collectivite_Code.LaReunion:
                        _ = match_arg_485.value
                        temp_condition_d842_11_3 = False
                    elif match_arg_485.code == Collectivite_Code.SaintBarthelemy:
                        _ = match_arg_485.value
                        temp_condition_d842_11_3 = True
                    elif match_arg_485.code == Collectivite_Code.SaintMartin:
                        _ = match_arg_485.value
                        temp_condition_d842_11_3 = True
                    elif match_arg_485.code == Collectivite_Code.Metropole:
                        _ = match_arg_485.value
                        temp_condition_d842_11_3 = False
                    elif match_arg_485.code == Collectivite_Code.SaintPierreEtMiquelon:
                        _ = match_arg_485.value
                        temp_condition_d842_11_3 = False
                    elif match_arg_485.code == Collectivite_Code.Mayotte:
                        _ = match_arg_485.value
                        temp_condition_d842_11_3 = False
                    if (temp_condition_d842_11_3 and
                        operations_logement_evolutifs_sociaux_accession_propriete_aidee__etat):
                        temp_condition_d842_11_3_1 = False
                    else:
                        temp_condition_d842_11_3_1 = dead_value
                        raise EmptyError
                except EmptyError:
                    match_arg_486 = residence_7
                    if match_arg_486.code == Collectivite_Code.Guadeloupe:
                        _ = match_arg_486.value
                        temp_condition_d842_11_3_2 = True
                    elif match_arg_486.code == Collectivite_Code.Guyane:
                        _ = match_arg_486.value
                        temp_condition_d842_11_3_2 = True
                    elif match_arg_486.code == Collectivite_Code.Martinique:
                        _ = match_arg_486.value
                        temp_condition_d842_11_3_2 = True
                    elif match_arg_486.code == Collectivite_Code.LaReunion:
                        _ = match_arg_486.value
                        temp_condition_d842_11_3_2 = True
                    elif match_arg_486.code == Collectivite_Code.SaintBarthelemy:
                        _ = match_arg_486.value
                        temp_condition_d842_11_3_2 = False
                    elif match_arg_486.code == Collectivite_Code.SaintMartin:
                        _ = match_arg_486.value
                        temp_condition_d842_11_3_2 = False
                    elif match_arg_486.code == Collectivite_Code.Metropole:
                        _ = match_arg_486.value
                        temp_condition_d842_11_3_2 = False
                    elif match_arg_486.code == Collectivite_Code.SaintPierreEtMiquelon:
                        _ = match_arg_486.value
                        temp_condition_d842_11_3_2 = False
                    elif match_arg_486.code == Collectivite_Code.Mayotte:
                        _ = match_arg_486.value
                        temp_condition_d842_11_3_2 = True
                    if (temp_condition_d842_11_3_2 and
                        operations_logement_evolutifs_sociaux_accession_propriete_aidee__etat):
                        temp_condition_d842_11_3_1 = False
                    else:
                        temp_condition_d842_11_3_1 = dead_value
                        raise EmptyError
            except EmptyError:
                match_arg_487 = type_travaux_logement_1
                if match_arg_487.code == TypeTravauxLogementR8425_Code.ObjectifDecenceLogement:
                    _ = match_arg_487.value
                    temp_condition_d842_11_3_3 = False
                elif match_arg_487.code == TypeTravauxLogementR8425_Code.PrevuDansListeR321_15:
                    _ = match_arg_487.value
                    temp_condition_d842_11_3_3 = False
                elif match_arg_487.code == TypeTravauxLogementR8425_Code.AgrandirOuRendreHabitableD331_63:
                    _ = match_arg_487.value
                    temp_condition_d842_11_3_3 = True
                elif match_arg_487.code == TypeTravauxLogementR8425_Code.PasDeTravaux:
                    _ = match_arg_487.value
                    temp_condition_d842_11_3_3 = False
                match_arg_488 = type_travaux_logement_1
                if match_arg_488.code == TypeTravauxLogementR8425_Code.ObjectifDecenceLogement:
                    _ = match_arg_488.value
                    temp_condition_d842_11_3_4 = True
                elif match_arg_488.code == TypeTravauxLogementR8425_Code.PrevuDansListeR321_15:
                    _ = match_arg_488.value
                    temp_condition_d842_11_3_4 = False
                elif match_arg_488.code == TypeTravauxLogementR8425_Code.AgrandirOuRendreHabitableD331_63:
                    _ = match_arg_488.value
                    temp_condition_d842_11_3_4 = False
                elif match_arg_488.code == TypeTravauxLogementR8425_Code.PasDeTravaux:
                    _ = match_arg_488.value
                    temp_condition_d842_11_3_4 = False
                match_arg_489 = type_travaux_logement_1
                if match_arg_489.code == TypeTravauxLogementR8425_Code.ObjectifDecenceLogement:
                    _ = match_arg_489.value
                    temp_condition_d842_11_3_5 = False
                elif match_arg_489.code == TypeTravauxLogementR8425_Code.PrevuDansListeR321_15:
                    _ = match_arg_489.value
                    temp_condition_d842_11_3_5 = False
                elif match_arg_489.code == TypeTravauxLogementR8425_Code.AgrandirOuRendreHabitableD331_63:
                    _ = match_arg_489.value
                    temp_condition_d842_11_3_5 = False
                elif match_arg_489.code == TypeTravauxLogementR8425_Code.PasDeTravaux:
                    _ = match_arg_489.value
                    temp_condition_d842_11_3_5 = True
                if ((temp_condition_d842_11_3_5 or
                    (temp_condition_d842_11_3_4 or
                    temp_condition_d842_11_3_3)) and
                    (date_signature_pret_2 >=
                    date_of_numbers(1999,7,1))):
                    temp_condition_d842_11_3_1 = True
                else:
                    temp_condition_d842_11_3_1 = dead_value
                    raise EmptyError
        except EmptyError:
            temp_condition_d842_11_3_1 = False
    except EmptyError:
        temp_condition_d842_11_3_1 = dead_value
        raise NoValueProvided(SourcePosition(filename="examples/aides_logement/prologue.catala_fr",
                                             start_line=965, start_column=11,
                                             end_line=965, end_column=30,
                                             law_headings=["Secteur accession à la propriété",
                                             "Calcul du montant de l'allocation logement",
                                             "Prologue : aides au logement"]))
    condition_d842_11_3 = temp_condition_d842_11_3_1
    try:
        def temp_calcul_plafond_mensualite_d842_6_base(date_calcul:Date, nombre_personnes_a_charge_8:Integer):
            try:
                def temp_calcul_plafond_mensualite_d842_6_base_1(_:Unit):
                    raise EmptyError
                def temp_calcul_plafond_mensualite_d842_6_base_2(_:Unit):
                    return False
                def temp_calcul_plafond_mensualite_d842_6_base_3(_:Unit):
                    if ((date_courante_13 >= date_of_numbers(2020,1,1)) and
                        (date_calcul >=
                        date_of_numbers(2019,10,1))):
                        match_arg_490 = zone_5
                        if match_arg_490.code == ZoneDHabitation_Code.Zone1:
                            _ = match_arg_490.value
                            if (nombre_personnes_a_charge_8 ==
                                integer_of_string("0")):
                                match_arg_491 = situation_familiale_calcul_apl_7
                                if match_arg_491.code == SituationFamilialeCalculAPL_Code.PersonneSeule:
                                    _ = match_arg_491.value
                                    return money_of_cents_string("31476")
                                elif match_arg_491.code == SituationFamilialeCalculAPL_Code.Couple:
                                    _ = match_arg_491.value
                                    return money_of_cents_string("37933")
                            else:
                                if (nombre_personnes_a_charge_8 ==
                                    integer_of_string("1")):
                                    return money_of_cents_string("40787")
                                else:
                                    if (nombre_personnes_a_charge_8 ==
                                        integer_of_string("2")):
                                        return money_of_cents_string("41927")
                                    else:
                                        if (nombre_personnes_a_charge_8 ==
                                            integer_of_string("3")):
                                            return money_of_cents_string("43106")
                                        else:
                                            if (nombre_personnes_a_charge_8 ==
                                                integer_of_string("4")):
                                                return money_of_cents_string("44262")
                                            else:
                                                if (nombre_personnes_a_charge_8 ==
                                                    integer_of_string("5")):
                                                    return money_of_cents_string("45200")
                                                else:
                                                    return (money_of_cents_string("45200") +
                                                        (money_of_cents_string("3936") *
                                                        decimal_of_integer((nombre_personnes_a_charge_8 -
                                                        integer_of_string("5")))))
                        elif match_arg_490.code == ZoneDHabitation_Code.Zone2:
                            _ = match_arg_490.value
                            if (nombre_personnes_a_charge_8 ==
                                integer_of_string("0")):
                                match_arg_492 = situation_familiale_calcul_apl_7
                                if match_arg_492.code == SituationFamilialeCalculAPL_Code.PersonneSeule:
                                    _ = match_arg_492.value
                                    return money_of_cents_string("27614")
                                elif match_arg_492.code == SituationFamilialeCalculAPL_Code.Couple:
                                    _ = match_arg_492.value
                                    return money_of_cents_string("33853")
                            else:
                                if (nombre_personnes_a_charge_8 ==
                                    integer_of_string("1")):
                                    return money_of_cents_string("36646")
                                else:
                                    if (nombre_personnes_a_charge_8 ==
                                        integer_of_string("2")):
                                        return money_of_cents_string("37915")
                                    else:
                                        if (nombre_personnes_a_charge_8 ==
                                            integer_of_string("3")):
                                            return money_of_cents_string("39222")
                                        else:
                                            if (nombre_personnes_a_charge_8 ==
                                                integer_of_string("4")):
                                                return money_of_cents_string("40510")
                                            else:
                                                if (nombre_personnes_a_charge_8 ==
                                                    integer_of_string("5")):
                                                    return money_of_cents_string("43378")
                                                else:
                                                    return (money_of_cents_string("43378") +
                                                        (money_of_cents_string("3771") *
                                                        decimal_of_integer((nombre_personnes_a_charge_8 -
                                                        integer_of_string("5")))))
                        elif match_arg_490.code == ZoneDHabitation_Code.Zone3:
                            _ = match_arg_490.value
                            if (nombre_personnes_a_charge_8 ==
                                integer_of_string("0")):
                                match_arg_493 = situation_familiale_calcul_apl_7
                                if match_arg_493.code == SituationFamilialeCalculAPL_Code.PersonneSeule:
                                    _ = match_arg_493.value
                                    return money_of_cents_string("25904")
                                elif match_arg_493.code == SituationFamilialeCalculAPL_Code.Couple:
                                    _ = match_arg_493.value
                                    return money_of_cents_string("31419")
                            else:
                                if (nombre_personnes_a_charge_8 ==
                                    integer_of_string("1")):
                                    return money_of_cents_string("34255")
                                else:
                                    if (nombre_personnes_a_charge_8 ==
                                        integer_of_string("2")):
                                        return money_of_cents_string("35670")
                                    else:
                                        if (nombre_personnes_a_charge_8 ==
                                            integer_of_string("3")):
                                            return money_of_cents_string("37107")
                                        else:
                                            if (nombre_personnes_a_charge_8 ==
                                                integer_of_string("4")):
                                                return money_of_cents_string("38521")
                                            else:
                                                if (nombre_personnes_a_charge_8 ==
                                                    integer_of_string("5")):
                                                    return money_of_cents_string("41392")
                                                else:
                                                    return (money_of_cents_string("41392") +
                                                        (money_of_cents_string("3588") *
                                                        decimal_of_integer((nombre_personnes_a_charge_8 -
                                                        integer_of_string("5")))))
                    else:
                        raise EmptyError
                def temp_calcul_plafond_mensualite_d842_6_base_4(_:Unit):
                    if ((date_courante_13 >= date_of_numbers(2020,1,1)) and
                        ((date_calcul >= date_of_numbers(2017,10,1)) and
                        (date_calcul <
                        date_of_numbers(2019,10,1)))):
                        match_arg_494 = zone_5
                        if match_arg_494.code == ZoneDHabitation_Code.Zone1:
                            _ = match_arg_494.value
                            if (nombre_personnes_a_charge_8 ==
                                integer_of_string("0")):
                                match_arg_495 = situation_familiale_calcul_apl_7
                                if match_arg_495.code == SituationFamilialeCalculAPL_Code.PersonneSeule:
                                    _ = match_arg_495.value
                                    return money_of_cents_string("31382")
                                elif match_arg_495.code == SituationFamilialeCalculAPL_Code.Couple:
                                    _ = match_arg_495.value
                                    return money_of_cents_string("37820")
                            else:
                                if (nombre_personnes_a_charge_8 ==
                                    integer_of_string("1")):
                                    return money_of_cents_string("40665")
                                else:
                                    if (nombre_personnes_a_charge_8 ==
                                        integer_of_string("2")):
                                        return money_of_cents_string("41801")
                                    else:
                                        if (nombre_personnes_a_charge_8 ==
                                            integer_of_string("3")):
                                            return money_of_cents_string("42977")
                                        else:
                                            if (nombre_personnes_a_charge_8 ==
                                                integer_of_string("4")):
                                                return money_of_cents_string("44130")
                                            else:
                                                if (nombre_personnes_a_charge_8 ==
                                                    integer_of_string("5")):
                                                    return money_of_cents_string("45064")
                                                else:
                                                    return (money_of_cents_string("45064") +
                                                        (money_of_cents_string("3924") *
                                                        decimal_of_integer((nombre_personnes_a_charge_8 -
                                                        integer_of_string("5")))))
                        elif match_arg_494.code == ZoneDHabitation_Code.Zone2:
                            _ = match_arg_494.value
                            if (nombre_personnes_a_charge_8 ==
                                integer_of_string("0")):
                                match_arg_496 = situation_familiale_calcul_apl_7
                                if match_arg_496.code == SituationFamilialeCalculAPL_Code.PersonneSeule:
                                    _ = match_arg_496.value
                                    return money_of_cents_string("27531")
                                elif match_arg_496.code == SituationFamilialeCalculAPL_Code.Couple:
                                    _ = match_arg_496.value
                                    return money_of_cents_string("33751")
                            else:
                                if (nombre_personnes_a_charge_8 ==
                                    integer_of_string("1")):
                                    return money_of_cents_string("36536")
                                else:
                                    if (nombre_personnes_a_charge_8 ==
                                        integer_of_string("2")):
                                        return money_of_cents_string("37801")
                                    else:
                                        if (nombre_personnes_a_charge_8 ==
                                            integer_of_string("3")):
                                            return money_of_cents_string("39105")
                                        else:
                                            if (nombre_personnes_a_charge_8 ==
                                                integer_of_string("4")):
                                                return money_of_cents_string("40389")
                                            else:
                                                if (nombre_personnes_a_charge_8 ==
                                                    integer_of_string("5")):
                                                    return money_of_cents_string("43248")
                                                else:
                                                    return (money_of_cents_string("43248") +
                                                        (money_of_cents_string("3760") *
                                                        decimal_of_integer((nombre_personnes_a_charge_8 -
                                                        integer_of_string("5")))))
                        elif match_arg_494.code == ZoneDHabitation_Code.Zone3:
                            _ = match_arg_494.value
                            if (nombre_personnes_a_charge_8 ==
                                integer_of_string("0")):
                                match_arg_497 = situation_familiale_calcul_apl_7
                                if match_arg_497.code == SituationFamilialeCalculAPL_Code.PersonneSeule:
                                    _ = match_arg_497.value
                                    return money_of_cents_string("25826")
                                elif match_arg_497.code == SituationFamilialeCalculAPL_Code.Couple:
                                    _ = match_arg_497.value
                                    return money_of_cents_string("31325")
                            else:
                                if (nombre_personnes_a_charge_8 ==
                                    integer_of_string("1")):
                                    return money_of_cents_string("34152")
                                else:
                                    if (nombre_personnes_a_charge_8 ==
                                        integer_of_string("2")):
                                        return money_of_cents_string("35564")
                                    else:
                                        if (nombre_personnes_a_charge_8 ==
                                            integer_of_string("3")):
                                            return money_of_cents_string("36996")
                                        else:
                                            if (nombre_personnes_a_charge_8 ==
                                                integer_of_string("4")):
                                                return money_of_cents_string("38406")
                                            else:
                                                if (nombre_personnes_a_charge_8 ==
                                                    integer_of_string("5")):
                                                    return money_of_cents_string("41268")
                                                else:
                                                    return (money_of_cents_string("41268") +
                                                        (money_of_cents_string("3578") *
                                                        decimal_of_integer((nombre_personnes_a_charge_8 -
                                                        integer_of_string("5")))))
                    else:
                        raise EmptyError
                def temp_calcul_plafond_mensualite_d842_6_base_5(_:Unit):
                    if ((date_courante_13 >= date_of_numbers(2020,1,1)) and
                        ((date_calcul >= date_of_numbers(2015,10,1)) and
                        (date_calcul <
                        date_of_numbers(2017,10,1)))):
                        match_arg_498 = zone_5
                        if match_arg_498.code == ZoneDHabitation_Code.Zone1:
                            _ = match_arg_498.value
                            if (nombre_personnes_a_charge_8 ==
                                integer_of_string("0")):
                                match_arg_499 = situation_familiale_calcul_apl_7
                                if match_arg_499.code == SituationFamilialeCalculAPL_Code.PersonneSeule:
                                    _ = match_arg_499.value
                                    return money_of_cents_string("31148")
                                elif match_arg_499.code == SituationFamilialeCalculAPL_Code.Couple:
                                    _ = match_arg_499.value
                                    return money_of_cents_string("37538")
                            else:
                                if (nombre_personnes_a_charge_8 ==
                                    integer_of_string("1")):
                                    return money_of_cents_string("40362")
                                else:
                                    if (nombre_personnes_a_charge_8 ==
                                        integer_of_string("2")):
                                        return money_of_cents_string("41490")
                                    else:
                                        if (nombre_personnes_a_charge_8 ==
                                            integer_of_string("3")):
                                            return money_of_cents_string("42657")
                                        else:
                                            if (nombre_personnes_a_charge_8 ==
                                                integer_of_string("4")):
                                                return money_of_cents_string("43801")
                                            else:
                                                if (nombre_personnes_a_charge_8 ==
                                                    integer_of_string("5")):
                                                    return money_of_cents_string("44729")
                                                else:
                                                    return (money_of_cents_string("44729") +
                                                        (money_of_cents_string("3895") *
                                                        decimal_of_integer((nombre_personnes_a_charge_8 -
                                                        integer_of_string("5")))))
                        elif match_arg_498.code == ZoneDHabitation_Code.Zone2:
                            _ = match_arg_498.value
                            if (nombre_personnes_a_charge_8 ==
                                integer_of_string("0")):
                                match_arg_500 = situation_familiale_calcul_apl_7
                                if match_arg_500.code == SituationFamilialeCalculAPL_Code.PersonneSeule:
                                    _ = match_arg_500.value
                                    return money_of_cents_string("27326")
                                elif match_arg_500.code == SituationFamilialeCalculAPL_Code.Couple:
                                    _ = match_arg_500.value
                                    return money_of_cents_string("33500")
                            else:
                                if (nombre_personnes_a_charge_8 ==
                                    integer_of_string("1")):
                                    return money_of_cents_string("36264")
                                else:
                                    if (nombre_personnes_a_charge_8 ==
                                        integer_of_string("2")):
                                        return money_of_cents_string("37520")
                                    else:
                                        if (nombre_personnes_a_charge_8 ==
                                            integer_of_string("3")):
                                            return money_of_cents_string("38814")
                                        else:
                                            if (nombre_personnes_a_charge_8 ==
                                                integer_of_string("4")):
                                                return money_of_cents_string("40088")
                                            else:
                                                if (nombre_personnes_a_charge_8 ==
                                                    integer_of_string("5")):
                                                    return money_of_cents_string("42926")
                                                else:
                                                    return (money_of_cents_string("42926") +
                                                        (money_of_cents_string("3732") *
                                                        decimal_of_integer((nombre_personnes_a_charge_8 -
                                                        integer_of_string("5")))))
                        elif match_arg_498.code == ZoneDHabitation_Code.Zone3:
                            _ = match_arg_498.value
                            if (nombre_personnes_a_charge_8 ==
                                integer_of_string("0")):
                                match_arg_501 = situation_familiale_calcul_apl_7
                                if match_arg_501.code == SituationFamilialeCalculAPL_Code.PersonneSeule:
                                    _ = match_arg_501.value
                                    return money_of_cents_string("25634")
                                elif match_arg_501.code == SituationFamilialeCalculAPL_Code.Couple:
                                    _ = match_arg_501.value
                                    return money_of_cents_string("31092")
                            else:
                                if (nombre_personnes_a_charge_8 ==
                                    integer_of_string("1")):
                                    return money_of_cents_string("33898")
                                else:
                                    if (nombre_personnes_a_charge_8 ==
                                        integer_of_string("2")):
                                        return money_of_cents_string("35299")
                                    else:
                                        if (nombre_personnes_a_charge_8 ==
                                            integer_of_string("3")):
                                            return money_of_cents_string("36721")
                                        else:
                                            if (nombre_personnes_a_charge_8 ==
                                                integer_of_string("4")):
                                                return money_of_cents_string("38120")
                                            else:
                                                if (nombre_personnes_a_charge_8 ==
                                                    integer_of_string("5")):
                                                    return money_of_cents_string("40961")
                                                else:
                                                    return (money_of_cents_string("40961") +
                                                        (money_of_cents_string("3551") *
                                                        decimal_of_integer((nombre_personnes_a_charge_8 -
                                                        integer_of_string("5")))))
                    else:
                        raise EmptyError
                def temp_calcul_plafond_mensualite_d842_6_base_6(_:Unit):
                    if ((date_courante_13 >= date_of_numbers(2020,1,1)) and
                        ((date_calcul >= date_of_numbers(2014,10,1)) and
                        (date_calcul <
                        date_of_numbers(2015,10,1)))):
                        match_arg_502 = zone_5
                        if match_arg_502.code == ZoneDHabitation_Code.Zone1:
                            _ = match_arg_502.value
                            if (nombre_personnes_a_charge_8 ==
                                integer_of_string("0")):
                                match_arg_503 = situation_familiale_calcul_apl_7
                                if match_arg_503.code == SituationFamilialeCalculAPL_Code.PersonneSeule:
                                    _ = match_arg_503.value
                                    return money_of_cents_string("31123")
                                elif match_arg_503.code == SituationFamilialeCalculAPL_Code.Couple:
                                    _ = match_arg_503.value
                                    return money_of_cents_string("37508")
                            else:
                                if (nombre_personnes_a_charge_8 ==
                                    integer_of_string("1")):
                                    return money_of_cents_string("40330")
                                else:
                                    if (nombre_personnes_a_charge_8 ==
                                        integer_of_string("2")):
                                        return money_of_cents_string("41457")
                                    else:
                                        if (nombre_personnes_a_charge_8 ==
                                            integer_of_string("3")):
                                            return money_of_cents_string("42623")
                                        else:
                                            if (nombre_personnes_a_charge_8 ==
                                                integer_of_string("4")):
                                                return money_of_cents_string("43766")
                                            else:
                                                if (nombre_personnes_a_charge_8 ==
                                                    integer_of_string("5")):
                                                    return money_of_cents_string("44693")
                                                else:
                                                    return (money_of_cents_string("44693") +
                                                        (money_of_cents_string("3892") *
                                                        decimal_of_integer((nombre_personnes_a_charge_8 -
                                                        integer_of_string("5")))))
                        elif match_arg_502.code == ZoneDHabitation_Code.Zone2:
                            _ = match_arg_502.value
                            if (nombre_personnes_a_charge_8 ==
                                integer_of_string("0")):
                                match_arg_504 = situation_familiale_calcul_apl_7
                                if match_arg_504.code == SituationFamilialeCalculAPL_Code.PersonneSeule:
                                    _ = match_arg_504.value
                                    return money_of_cents_string("27304")
                                elif match_arg_504.code == SituationFamilialeCalculAPL_Code.Couple:
                                    _ = match_arg_504.value
                                    return money_of_cents_string("33473")
                            else:
                                if (nombre_personnes_a_charge_8 ==
                                    integer_of_string("1")):
                                    return money_of_cents_string("36235")
                                else:
                                    if (nombre_personnes_a_charge_8 ==
                                        integer_of_string("2")):
                                        return money_of_cents_string("37490")
                                    else:
                                        if (nombre_personnes_a_charge_8 ==
                                            integer_of_string("3")):
                                            return money_of_cents_string("38783")
                                        else:
                                            if (nombre_personnes_a_charge_8 ==
                                                integer_of_string("4")):
                                                return money_of_cents_string("40056")
                                            else:
                                                if (nombre_personnes_a_charge_8 ==
                                                    integer_of_string("5")):
                                                    return money_of_cents_string("42892")
                                                else:
                                                    return (money_of_cents_string("42892") +
                                                        (money_of_cents_string("3729") *
                                                        decimal_of_integer((nombre_personnes_a_charge_8 -
                                                        integer_of_string("5")))))
                        elif match_arg_502.code == ZoneDHabitation_Code.Zone3:
                            _ = match_arg_502.value
                            if (nombre_personnes_a_charge_8 ==
                                integer_of_string("0")):
                                match_arg_505 = situation_familiale_calcul_apl_7
                                if match_arg_505.code == SituationFamilialeCalculAPL_Code.PersonneSeule:
                                    _ = match_arg_505.value
                                    return money_of_cents_string("25614")
                                elif match_arg_505.code == SituationFamilialeCalculAPL_Code.Couple:
                                    _ = match_arg_505.value
                                    return money_of_cents_string("31067")
                            else:
                                if (nombre_personnes_a_charge_8 ==
                                    integer_of_string("1")):
                                    return money_of_cents_string("33871")
                                else:
                                    if (nombre_personnes_a_charge_8 ==
                                        integer_of_string("2")):
                                        return money_of_cents_string("35271")
                                    else:
                                        if (nombre_personnes_a_charge_8 ==
                                            integer_of_string("3")):
                                            return money_of_cents_string("36692")
                                        else:
                                            if (nombre_personnes_a_charge_8 ==
                                                integer_of_string("4")):
                                                return money_of_cents_string("38090")
                                            else:
                                                if (nombre_personnes_a_charge_8 ==
                                                    integer_of_string("5")):
                                                    return money_of_cents_string("40928")
                                                else:
                                                    return (money_of_cents_string("40928") +
                                                        (money_of_cents_string("3548") *
                                                        decimal_of_integer((nombre_personnes_a_charge_8 -
                                                        integer_of_string("5")))))
                    else:
                        raise EmptyError
                def temp_calcul_plafond_mensualite_d842_6_base_7(_:Unit):
                    if ((date_courante_13 >= date_of_numbers(2020,1,1)) and
                        ((date_calcul >= date_of_numbers(2013,1,1)) and
                        (date_calcul <
                        date_of_numbers(2014,10,1)))):
                        match_arg_506 = zone_5
                        if match_arg_506.code == ZoneDHabitation_Code.Zone1:
                            _ = match_arg_506.value
                            if (nombre_personnes_a_charge_8 ==
                                integer_of_string("0")):
                                match_arg_507 = situation_familiale_calcul_apl_7
                                if match_arg_507.code == SituationFamilialeCalculAPL_Code.PersonneSeule:
                                    _ = match_arg_507.value
                                    return money_of_cents_string("30947")
                                elif match_arg_507.code == SituationFamilialeCalculAPL_Code.Couple:
                                    _ = match_arg_507.value
                                    return money_of_cents_string("37295")
                            else:
                                if (nombre_personnes_a_charge_8 ==
                                    integer_of_string("1")):
                                    return money_of_cents_string("40101")
                                else:
                                    if (nombre_personnes_a_charge_8 ==
                                        integer_of_string("2")):
                                        return money_of_cents_string("41222")
                                    else:
                                        if (nombre_personnes_a_charge_8 ==
                                            integer_of_string("3")):
                                            return money_of_cents_string("42381")
                                        else:
                                            if (nombre_personnes_a_charge_8 ==
                                                integer_of_string("4")):
                                                return money_of_cents_string("43518")
                                            else:
                                                if (nombre_personnes_a_charge_8 ==
                                                    integer_of_string("5")):
                                                    return money_of_cents_string("44440")
                                                else:
                                                    return (money_of_cents_string("44440") +
                                                        (money_of_cents_string("3870") *
                                                        decimal_of_integer((nombre_personnes_a_charge_8 -
                                                        integer_of_string("5")))))
                        elif match_arg_506.code == ZoneDHabitation_Code.Zone2:
                            _ = match_arg_506.value
                            if (nombre_personnes_a_charge_8 ==
                                integer_of_string("0")):
                                match_arg_508 = situation_familiale_calcul_apl_7
                                if match_arg_508.code == SituationFamilialeCalculAPL_Code.PersonneSeule:
                                    _ = match_arg_508.value
                                    return money_of_cents_string("27149")
                                elif match_arg_508.code == SituationFamilialeCalculAPL_Code.Couple:
                                    _ = match_arg_508.value
                                    return money_of_cents_string("33283")
                            else:
                                if (nombre_personnes_a_charge_8 ==
                                    integer_of_string("1")):
                                    return money_of_cents_string("36030")
                                else:
                                    if (nombre_personnes_a_charge_8 ==
                                        integer_of_string("2")):
                                        return money_of_cents_string("37278")
                                    else:
                                        if (nombre_personnes_a_charge_8 ==
                                            integer_of_string("3")):
                                            return money_of_cents_string("38563")
                                        else:
                                            if (nombre_personnes_a_charge_8 ==
                                                integer_of_string("4")):
                                                return money_of_cents_string("39829")
                                            else:
                                                if (nombre_personnes_a_charge_8 ==
                                                    integer_of_string("5")):
                                                    return money_of_cents_string("42649")
                                                else:
                                                    return (money_of_cents_string("42659") +
                                                        (money_of_cents_string("3708") *
                                                        decimal_of_integer((nombre_personnes_a_charge_8 -
                                                        integer_of_string("5")))))
                        elif match_arg_506.code == ZoneDHabitation_Code.Zone3:
                            _ = match_arg_506.value
                            if (nombre_personnes_a_charge_8 ==
                                integer_of_string("0")):
                                match_arg_509 = situation_familiale_calcul_apl_7
                                if match_arg_509.code == SituationFamilialeCalculAPL_Code.PersonneSeule:
                                    _ = match_arg_509.value
                                    return money_of_cents_string("25469")
                                elif match_arg_509.code == SituationFamilialeCalculAPL_Code.Couple:
                                    _ = match_arg_509.value
                                    return money_of_cents_string("30891")
                            else:
                                if (nombre_personnes_a_charge_8 ==
                                    integer_of_string("1")):
                                    return money_of_cents_string("33679")
                                else:
                                    if (nombre_personnes_a_charge_8 ==
                                        integer_of_string("2")):
                                        return money_of_cents_string("35071")
                                    else:
                                        if (nombre_personnes_a_charge_8 ==
                                            integer_of_string("3")):
                                            return money_of_cents_string("36484")
                                        else:
                                            if (nombre_personnes_a_charge_8 ==
                                                integer_of_string("4")):
                                                return money_of_cents_string("37874")
                                            else:
                                                if (nombre_personnes_a_charge_8 ==
                                                    integer_of_string("5")):
                                                    return money_of_cents_string("40696")
                                                else:
                                                    return (money_of_cents_string("40696") +
                                                        (money_of_cents_string("3528") *
                                                        decimal_of_integer((nombre_personnes_a_charge_8 -
                                                        integer_of_string("5")))))
                    else:
                        raise EmptyError
                def temp_calcul_plafond_mensualite_d842_6_base_8(_:Unit):
                    if ((date_courante_13 >= date_of_numbers(2020,1,1)) and
                        ((date_calcul >= date_of_numbers(2012,1,1)) and
                        (date_calcul <
                        date_of_numbers(2013,1,1)))):
                        match_arg_510 = zone_5
                        if match_arg_510.code == ZoneDHabitation_Code.Zone1:
                            _ = match_arg_510.value
                            if (nombre_personnes_a_charge_8 ==
                                integer_of_string("0")):
                                match_arg_511 = situation_familiale_calcul_apl_7
                                if match_arg_511.code == SituationFamilialeCalculAPL_Code.PersonneSeule:
                                    _ = match_arg_511.value
                                    return money_of_cents_string("30296")
                                elif match_arg_511.code == SituationFamilialeCalculAPL_Code.Couple:
                                    _ = match_arg_511.value
                                    return money_of_cents_string("36510")
                            else:
                                if (nombre_personnes_a_charge_8 ==
                                    integer_of_string("1")):
                                    return money_of_cents_string("39257")
                                else:
                                    if (nombre_personnes_a_charge_8 ==
                                        integer_of_string("2")):
                                        return money_of_cents_string("40354")
                                    else:
                                        if (nombre_personnes_a_charge_8 ==
                                            integer_of_string("3")):
                                            return money_of_cents_string("41489")
                                        else:
                                            if (nombre_personnes_a_charge_8 ==
                                                integer_of_string("4")):
                                                return money_of_cents_string("42602")
                                            else:
                                                if (nombre_personnes_a_charge_8 ==
                                                    integer_of_string("5")):
                                                    return money_of_cents_string("43505")
                                                else:
                                                    return (money_of_cents_string("43505") +
                                                        (money_of_cents_string("3789") *
                                                        decimal_of_integer((nombre_personnes_a_charge_8 -
                                                        integer_of_string("5")))))
                        elif match_arg_510.code == ZoneDHabitation_Code.Zone2:
                            _ = match_arg_510.value
                            if (nombre_personnes_a_charge_8 ==
                                integer_of_string("0")):
                                match_arg_512 = situation_familiale_calcul_apl_7
                                if match_arg_512.code == SituationFamilialeCalculAPL_Code.PersonneSeule:
                                    _ = match_arg_512.value
                                    return money_of_cents_string("26578")
                                elif match_arg_512.code == SituationFamilialeCalculAPL_Code.Couple:
                                    _ = match_arg_512.value
                                    return money_of_cents_string("32582")
                            else:
                                if (nombre_personnes_a_charge_8 ==
                                    integer_of_string("1")):
                                    return money_of_cents_string("35272")
                                else:
                                    if (nombre_personnes_a_charge_8 ==
                                        integer_of_string("2")):
                                        return money_of_cents_string("36493")
                                    else:
                                        if (nombre_personnes_a_charge_8 ==
                                            integer_of_string("3")):
                                            return money_of_cents_string("37751")
                                        else:
                                            if (nombre_personnes_a_charge_8 ==
                                                integer_of_string("4")):
                                                return money_of_cents_string("38991")
                                            else:
                                                if (nombre_personnes_a_charge_8 ==
                                                    integer_of_string("5")):
                                                    return money_of_cents_string("41751")
                                                else:
                                                    return (money_of_cents_string("41751") +
                                                        (money_of_cents_string("3630") *
                                                        decimal_of_integer((nombre_personnes_a_charge_8 -
                                                        integer_of_string("5")))))
                        elif match_arg_510.code == ZoneDHabitation_Code.Zone3:
                            _ = match_arg_510.value
                            if (nombre_personnes_a_charge_8 ==
                                integer_of_string("0")):
                                match_arg_513 = situation_familiale_calcul_apl_7
                                if match_arg_513.code == SituationFamilialeCalculAPL_Code.PersonneSeule:
                                    _ = match_arg_513.value
                                    return money_of_cents_string("24933")
                                elif match_arg_513.code == SituationFamilialeCalculAPL_Code.Couple:
                                    _ = match_arg_513.value
                                    return money_of_cents_string("30241")
                            else:
                                if (nombre_personnes_a_charge_8 ==
                                    integer_of_string("1")):
                                    return money_of_cents_string("32970")
                                else:
                                    if (nombre_personnes_a_charge_8 ==
                                        integer_of_string("2")):
                                        return money_of_cents_string("34333")
                                    else:
                                        if (nombre_personnes_a_charge_8 ==
                                            integer_of_string("3")):
                                            return money_of_cents_string("35716")
                                        else:
                                            if (nombre_personnes_a_charge_8 ==
                                                integer_of_string("4")):
                                                return money_of_cents_string("37077")
                                            else:
                                                if (nombre_personnes_a_charge_8 ==
                                                    integer_of_string("5")):
                                                    return money_of_cents_string("39839")
                                                else:
                                                    return (money_of_cents_string("39839") +
                                                        (money_of_cents_string("3454") *
                                                        decimal_of_integer((nombre_personnes_a_charge_8 -
                                                        integer_of_string("5")))))
                    else:
                        raise EmptyError
                def temp_calcul_plafond_mensualite_d842_6_base_9(_:Unit):
                    if ((date_courante_13 >= date_of_numbers(2020,1,1)) and
                        ((date_calcul >= date_of_numbers(2011,1,1)) and
                        (date_calcul <
                        date_of_numbers(2012,1,1)))):
                        match_arg_514 = zone_5
                        if match_arg_514.code == ZoneDHabitation_Code.Zone1:
                            _ = match_arg_514.value
                            if (nombre_personnes_a_charge_8 ==
                                integer_of_string("0")):
                                match_arg_515 = situation_familiale_calcul_apl_7
                                if match_arg_515.code == SituationFamilialeCalculAPL_Code.PersonneSeule:
                                    _ = match_arg_515.value
                                    return money_of_cents_string("29996")
                                elif match_arg_515.code == SituationFamilialeCalculAPL_Code.Couple:
                                    _ = match_arg_515.value
                                    return money_of_cents_string("36149")
                            else:
                                if (nombre_personnes_a_charge_8 ==
                                    integer_of_string("1")):
                                    return money_of_cents_string("38868")
                                else:
                                    if (nombre_personnes_a_charge_8 ==
                                        integer_of_string("2")):
                                        return money_of_cents_string("39954")
                                    else:
                                        if (nombre_personnes_a_charge_8 ==
                                            integer_of_string("3")):
                                            return money_of_cents_string("41078")
                                        else:
                                            if (nombre_personnes_a_charge_8 ==
                                                integer_of_string("4")):
                                                return money_of_cents_string("42180")
                                            else:
                                                if (nombre_personnes_a_charge_8 ==
                                                    integer_of_string("5")):
                                                    return money_of_cents_string("43074")
                                                else:
                                                    return (money_of_cents_string("43074") +
                                                        (money_of_cents_string("3751") *
                                                        decimal_of_integer((nombre_personnes_a_charge_8 -
                                                        integer_of_string("5")))))
                        elif match_arg_514.code == ZoneDHabitation_Code.Zone2:
                            _ = match_arg_514.value
                            if (nombre_personnes_a_charge_8 ==
                                integer_of_string("0")):
                                match_arg_516 = situation_familiale_calcul_apl_7
                                if match_arg_516.code == SituationFamilialeCalculAPL_Code.PersonneSeule:
                                    _ = match_arg_516.value
                                    return money_of_cents_string("26315")
                                elif match_arg_516.code == SituationFamilialeCalculAPL_Code.Couple:
                                    _ = match_arg_516.value
                                    return money_of_cents_string("32259")
                            else:
                                if (nombre_personnes_a_charge_8 ==
                                    integer_of_string("1")):
                                    return money_of_cents_string("34923")
                                else:
                                    if (nombre_personnes_a_charge_8 ==
                                        integer_of_string("2")):
                                        return money_of_cents_string("36132")
                                    else:
                                        if (nombre_personnes_a_charge_8 ==
                                            integer_of_string("3")):
                                            return money_of_cents_string("37373")
                                        else:
                                            if (nombre_personnes_a_charge_8 ==
                                                integer_of_string("4")):
                                                return money_of_cents_string("38605")
                                            else:
                                                if (nombre_personnes_a_charge_8 ==
                                                    integer_of_string("5")):
                                                    return money_of_cents_string("41338")
                                                else:
                                                    return (money_of_cents_string("41338") +
                                                        (money_of_cents_string("3594") *
                                                        decimal_of_integer((nombre_personnes_a_charge_8 -
                                                        integer_of_string("5")))))
                        elif match_arg_514.code == ZoneDHabitation_Code.Zone3:
                            _ = match_arg_514.value
                            if (nombre_personnes_a_charge_8 ==
                                integer_of_string("0")):
                                match_arg_517 = situation_familiale_calcul_apl_7
                                if match_arg_517.code == SituationFamilialeCalculAPL_Code.PersonneSeule:
                                    _ = match_arg_517.value
                                    return money_of_cents_string("24686")
                                elif match_arg_517.code == SituationFamilialeCalculAPL_Code.Couple:
                                    _ = match_arg_517.value
                                    return money_of_cents_string("29942")
                            else:
                                if (nombre_personnes_a_charge_8 ==
                                    integer_of_string("1")):
                                    return money_of_cents_string("32644")
                                else:
                                    if (nombre_personnes_a_charge_8 ==
                                        integer_of_string("2")):
                                        return money_of_cents_string("33993")
                                    else:
                                        if (nombre_personnes_a_charge_8 ==
                                            integer_of_string("3")):
                                            return money_of_cents_string("35362")
                                        else:
                                            if (nombre_personnes_a_charge_8 ==
                                                integer_of_string("4")):
                                                return money_of_cents_string("36710")
                                            else:
                                                if (nombre_personnes_a_charge_8 ==
                                                    integer_of_string("5")):
                                                    return money_of_cents_string("39445")
                                                else:
                                                    return (money_of_cents_string("39445") +
                                                        (money_of_cents_string("3420") *
                                                        decimal_of_integer((nombre_personnes_a_charge_8 -
                                                        integer_of_string("5")))))
                    else:
                        raise EmptyError
                def temp_calcul_plafond_mensualite_d842_6_base_10(_:Unit):
                    if ((date_courante_13 >= date_of_numbers(2020,1,1)) and
                        ((date_calcul >= date_of_numbers(2010,1,1)) and
                        (date_calcul <
                        date_of_numbers(2011,1,1)))):
                        match_arg_518 = zone_5
                        if match_arg_518.code == ZoneDHabitation_Code.Zone1:
                            _ = match_arg_518.value
                            if (nombre_personnes_a_charge_8 ==
                                integer_of_string("0")):
                                match_arg_519 = situation_familiale_calcul_apl_7
                                if match_arg_519.code == SituationFamilialeCalculAPL_Code.PersonneSeule:
                                    _ = match_arg_519.value
                                    return money_of_cents_string("29670")
                                elif match_arg_519.code == SituationFamilialeCalculAPL_Code.Couple:
                                    _ = match_arg_519.value
                                    return money_of_cents_string("35757")
                            else:
                                if (nombre_personnes_a_charge_8 ==
                                    integer_of_string("1")):
                                    return money_of_cents_string("38445")
                                else:
                                    if (nombre_personnes_a_charge_8 ==
                                        integer_of_string("2")):
                                        return money_of_cents_string("39519")
                                    else:
                                        if (nombre_personnes_a_charge_8 ==
                                            integer_of_string("3")):
                                            return money_of_cents_string("40601")
                                        else:
                                            if (nombre_personnes_a_charge_8 ==
                                                integer_of_string("4")):
                                                return money_of_cents_string("41721")
                                            else:
                                                if (nombre_personnes_a_charge_8 ==
                                                    integer_of_string("5")):
                                                    return money_of_cents_string("42605")
                                                else:
                                                    return (money_of_cents_string("42605") +
                                                        (money_of_cents_string("3710") *
                                                        decimal_of_integer((nombre_personnes_a_charge_8 -
                                                        integer_of_string("5")))))
                        elif match_arg_518.code == ZoneDHabitation_Code.Zone2:
                            _ = match_arg_518.value
                            if (nombre_personnes_a_charge_8 ==
                                integer_of_string("0")):
                                match_arg_520 = situation_familiale_calcul_apl_7
                                if match_arg_520.code == SituationFamilialeCalculAPL_Code.PersonneSeule:
                                    _ = match_arg_520.value
                                    return money_of_cents_string("26029")
                                elif match_arg_520.code == SituationFamilialeCalculAPL_Code.Couple:
                                    _ = match_arg_520.value
                                    return money_of_cents_string("31908")
                            else:
                                if (nombre_personnes_a_charge_8 ==
                                    integer_of_string("1")):
                                    return money_of_cents_string("34643")
                                else:
                                    if (nombre_personnes_a_charge_8 ==
                                        integer_of_string("2")):
                                        return money_of_cents_string("35739")
                                    else:
                                        if (nombre_personnes_a_charge_8 ==
                                            integer_of_string("3")):
                                            return money_of_cents_string("36970")
                                        else:
                                            if (nombre_personnes_a_charge_8 ==
                                                integer_of_string("4")):
                                                return money_of_cents_string("38185")
                                            else:
                                                if (nombre_personnes_a_charge_8 ==
                                                    integer_of_string("5")):
                                                    return money_of_cents_string("40888")
                                                else:
                                                    return (money_of_cents_string("40888") +
                                                        (money_of_cents_string("3555") *
                                                        decimal_of_integer((nombre_personnes_a_charge_8 -
                                                        integer_of_string("5")))))
                        elif match_arg_518.code == ZoneDHabitation_Code.Zone3:
                            _ = match_arg_518.value
                            if (nombre_personnes_a_charge_8 ==
                                integer_of_string("0")):
                                match_arg_521 = situation_familiale_calcul_apl_7
                                if match_arg_521.code == SituationFamilialeCalculAPL_Code.PersonneSeule:
                                    _ = match_arg_521.value
                                    return money_of_cents_string("24417")
                                elif match_arg_521.code == SituationFamilialeCalculAPL_Code.Couple:
                                    _ = match_arg_521.value
                                    return money_of_cents_string("29616")
                            else:
                                if (nombre_personnes_a_charge_8 ==
                                    integer_of_string("1")):
                                    return money_of_cents_string("32289")
                                else:
                                    if (nombre_personnes_a_charge_8 ==
                                        integer_of_string("2")):
                                        return money_of_cents_string("33623")
                                    else:
                                        if (nombre_personnes_a_charge_8 ==
                                            integer_of_string("3")):
                                            return money_of_cents_string("34977")
                                        else:
                                            if (nombre_personnes_a_charge_8 ==
                                                integer_of_string("4")):
                                                return money_of_cents_string("36311")
                                            else:
                                                if (nombre_personnes_a_charge_8 ==
                                                    integer_of_string("5")):
                                                    return money_of_cents_string("39016")
                                                else:
                                                    return (money_of_cents_string("39016") +
                                                        (money_of_cents_string("3383") *
                                                        decimal_of_integer((nombre_personnes_a_charge_8 -
                                                        integer_of_string("5")))))
                    else:
                        raise EmptyError
                def temp_calcul_plafond_mensualite_d842_6_base_11(_:Unit):
                    if ((date_courante_13 >= date_of_numbers(2020,1,1)) and
                        ((date_calcul >= date_of_numbers(2009,1,1)) and
                        (date_calcul <
                        date_of_numbers(2010,1,1)))):
                        match_arg_522 = zone_5
                        if match_arg_522.code == ZoneDHabitation_Code.Zone1:
                            _ = match_arg_522.value
                            if (nombre_personnes_a_charge_8 ==
                                integer_of_string("0")):
                                match_arg_523 = situation_familiale_calcul_apl_7
                                if match_arg_523.code == SituationFamilialeCalculAPL_Code.PersonneSeule:
                                    _ = match_arg_523.value
                                    return money_of_cents_string("29575")
                                elif match_arg_523.code == SituationFamilialeCalculAPL_Code.Couple:
                                    _ = match_arg_523.value
                                    return money_of_cents_string("35642")
                            else:
                                if (nombre_personnes_a_charge_8 ==
                                    integer_of_string("1")):
                                    return money_of_cents_string("38322")
                                else:
                                    if (nombre_personnes_a_charge_8 ==
                                        integer_of_string("2")):
                                        return money_of_cents_string("39393")
                                    else:
                                        if (nombre_personnes_a_charge_8 ==
                                            integer_of_string("3")):
                                            return money_of_cents_string("40501")
                                        else:
                                            if (nombre_personnes_a_charge_8 ==
                                                integer_of_string("4")):
                                                return money_of_cents_string("41588")
                                            else:
                                                if (nombre_personnes_a_charge_8 ==
                                                    integer_of_string("5")):
                                                    return money_of_cents_string("42469")
                                                else:
                                                    return (money_of_cents_string("42469") +
                                                        (money_of_cents_string("3698") *
                                                        decimal_of_integer((nombre_personnes_a_charge_8 -
                                                        integer_of_string("5")))))
                        elif match_arg_522.code == ZoneDHabitation_Code.Zone2:
                            _ = match_arg_522.value
                            if (nombre_personnes_a_charge_8 ==
                                integer_of_string("0")):
                                match_arg_524 = situation_familiale_calcul_apl_7
                                if match_arg_524.code == SituationFamilialeCalculAPL_Code.PersonneSeule:
                                    _ = match_arg_524.value
                                    return money_of_cents_string("25946")
                                elif match_arg_524.code == SituationFamilialeCalculAPL_Code.Couple:
                                    _ = match_arg_524.value
                                    return money_of_cents_string("31806")
                            else:
                                if (nombre_personnes_a_charge_8 ==
                                    integer_of_string("1")):
                                    return money_of_cents_string("34433")
                                else:
                                    if (nombre_personnes_a_charge_8 ==
                                        integer_of_string("2")):
                                        return money_of_cents_string("35625")
                                    else:
                                        if (nombre_personnes_a_charge_8 ==
                                            integer_of_string("3")):
                                            return money_of_cents_string("36852")
                                        else:
                                            if (nombre_personnes_a_charge_8 ==
                                                integer_of_string("4")):
                                                return money_of_cents_string("38063")
                                            else:
                                                if (nombre_personnes_a_charge_8 ==
                                                    integer_of_string("5")):
                                                    return money_of_cents_string("40758")
                                                else:
                                                    return (money_of_cents_string("40758") +
                                                        (money_of_cents_string("3544") *
                                                        decimal_of_integer((nombre_personnes_a_charge_8 -
                                                        integer_of_string("5")))))
                        elif match_arg_522.code == ZoneDHabitation_Code.Zone3:
                            _ = match_arg_522.value
                            if (nombre_personnes_a_charge_8 ==
                                integer_of_string("0")):
                                match_arg_525 = situation_familiale_calcul_apl_7
                                if match_arg_525.code == SituationFamilialeCalculAPL_Code.PersonneSeule:
                                    _ = match_arg_525.value
                                    return money_of_cents_string("24339")
                                elif match_arg_525.code == SituationFamilialeCalculAPL_Code.Couple:
                                    _ = match_arg_525.value
                                    return money_of_cents_string("29522")
                            else:
                                if (nombre_personnes_a_charge_8 ==
                                    integer_of_string("1")):
                                    return money_of_cents_string("32186")
                                else:
                                    if (nombre_personnes_a_charge_8 ==
                                        integer_of_string("2")):
                                        return money_of_cents_string("33516")
                                    else:
                                        if (nombre_personnes_a_charge_8 ==
                                            integer_of_string("3")):
                                            return money_of_cents_string("34865")
                                        else:
                                            if (nombre_personnes_a_charge_8 ==
                                                integer_of_string("4")):
                                                return money_of_cents_string("36195")
                                            else:
                                                if (nombre_personnes_a_charge_8 ==
                                                    integer_of_string("5")):
                                                    return money_of_cents_string("38892")
                                                else:
                                                    return (money_of_cents_string("38892") +
                                                        (money_of_cents_string("3372") *
                                                        decimal_of_integer((nombre_personnes_a_charge_8 -
                                                        integer_of_string("5")))))
                    else:
                        raise EmptyError
                def temp_calcul_plafond_mensualite_d842_6_base_12(_:Unit):
                    if ((date_courante_13 >= date_of_numbers(2020,1,1)) and
                        ((date_calcul >= date_of_numbers(2008,1,1)) and
                        (date_calcul <
                        date_of_numbers(2009,1,1)))):
                        match_arg_526 = zone_5
                        if match_arg_526.code == ZoneDHabitation_Code.Zone1:
                            _ = match_arg_526.value
                            if (nombre_personnes_a_charge_8 ==
                                integer_of_string("0")):
                                match_arg_527 = situation_familiale_calcul_apl_7
                                if match_arg_527.code == SituationFamilialeCalculAPL_Code.PersonneSeule:
                                    _ = match_arg_527.value
                                    return money_of_cents_string("28728")
                                elif match_arg_527.code == SituationFamilialeCalculAPL_Code.Couple:
                                    _ = match_arg_527.value
                                    return money_of_cents_string("34621")
                            else:
                                if (nombre_personnes_a_charge_8 ==
                                    integer_of_string("1")):
                                    return money_of_cents_string("37224")
                                else:
                                    if (nombre_personnes_a_charge_8 ==
                                        integer_of_string("2")):
                                        return money_of_cents_string("38264")
                                    else:
                                        if (nombre_personnes_a_charge_8 ==
                                            integer_of_string("3")):
                                            return money_of_cents_string("39340")
                                        else:
                                            if (nombre_personnes_a_charge_8 ==
                                                integer_of_string("4")):
                                                return money_of_cents_string("40396")
                                            else:
                                                if (nombre_personnes_a_charge_8 ==
                                                    integer_of_string("5")):
                                                    return money_of_cents_string("41252")
                                                else:
                                                    return (money_of_cents_string("41252") +
                                                        (money_of_cents_string("3592") *
                                                        decimal_of_integer((nombre_personnes_a_charge_8 -
                                                        integer_of_string("5")))))
                        elif match_arg_526.code == ZoneDHabitation_Code.Zone2:
                            _ = match_arg_526.value
                            if (nombre_personnes_a_charge_8 ==
                                integer_of_string("0")):
                                match_arg_528 = situation_familiale_calcul_apl_7
                                if match_arg_528.code == SituationFamilialeCalculAPL_Code.PersonneSeule:
                                    _ = match_arg_528.value
                                    return money_of_cents_string("25203")
                                elif match_arg_528.code == SituationFamilialeCalculAPL_Code.Couple:
                                    _ = match_arg_528.value
                                    return money_of_cents_string("30895")
                            else:
                                if (nombre_personnes_a_charge_8 ==
                                    integer_of_string("1")):
                                    return money_of_cents_string("33446")
                                else:
                                    if (nombre_personnes_a_charge_8 ==
                                        integer_of_string("2")):
                                        return money_of_cents_string("34604")
                                    else:
                                        if (nombre_personnes_a_charge_8 ==
                                            integer_of_string("3")):
                                            return money_of_cents_string("35796")
                                        else:
                                            if (nombre_personnes_a_charge_8 ==
                                                integer_of_string("4")):
                                                return money_of_cents_string("36972")
                                            else:
                                                if (nombre_personnes_a_charge_8 ==
                                                    integer_of_string("5")):
                                                    return money_of_cents_string("39590")
                                                else:
                                                    return (money_of_cents_string("39590") +
                                                        (money_of_cents_string("3442") *
                                                        decimal_of_integer((nombre_personnes_a_charge_8 -
                                                        integer_of_string("5")))))
                        elif match_arg_526.code == ZoneDHabitation_Code.Zone3:
                            _ = match_arg_526.value
                            if (nombre_personnes_a_charge_8 ==
                                integer_of_string("0")):
                                match_arg_529 = situation_familiale_calcul_apl_7
                                if match_arg_529.code == SituationFamilialeCalculAPL_Code.PersonneSeule:
                                    _ = match_arg_529.value
                                    return money_of_cents_string("23642")
                                elif match_arg_529.code == SituationFamilialeCalculAPL_Code.Couple:
                                    _ = match_arg_529.value
                                    return money_of_cents_string("28676")
                            else:
                                if (nombre_personnes_a_charge_8 ==
                                    integer_of_string("1")):
                                    return money_of_cents_string("31264")
                                else:
                                    if (nombre_personnes_a_charge_8 ==
                                        integer_of_string("2")):
                                        return money_of_cents_string("32556")
                                    else:
                                        if (nombre_personnes_a_charge_8 ==
                                            integer_of_string("3")):
                                            return money_of_cents_string("33866")
                                        else:
                                            if (nombre_personnes_a_charge_8 ==
                                                integer_of_string("4")):
                                                return money_of_cents_string("35158")
                                            else:
                                                if (nombre_personnes_a_charge_8 ==
                                                    integer_of_string("5")):
                                                    return money_of_cents_string("37778")
                                                else:
                                                    return (money_of_cents_string("37778") +
                                                        (money_of_cents_string("3275") *
                                                        decimal_of_integer((nombre_personnes_a_charge_8 -
                                                        integer_of_string("5")))))
                    else:
                        raise EmptyError
                def temp_calcul_plafond_mensualite_d842_6_base_13(_:Unit):
                    if ((date_courante_13 >= date_of_numbers(2020,1,1)) and
                        ((date_calcul >= date_of_numbers(2007,1,1)) and
                        (date_calcul <
                        date_of_numbers(2008,1,1)))):
                        match_arg_530 = zone_5
                        if match_arg_530.code == ZoneDHabitation_Code.Zone1:
                            _ = match_arg_530.value
                            if (nombre_personnes_a_charge_8 ==
                                integer_of_string("0")):
                                match_arg_531 = situation_familiale_calcul_apl_7
                                if match_arg_531.code == SituationFamilialeCalculAPL_Code.PersonneSeule:
                                    _ = match_arg_531.value
                                    return money_of_cents_string("27956")
                                elif match_arg_531.code == SituationFamilialeCalculAPL_Code.Couple:
                                    _ = match_arg_531.value
                                    return money_of_cents_string("33691")
                            else:
                                if (nombre_personnes_a_charge_8 ==
                                    integer_of_string("1")):
                                    return money_of_cents_string("36224")
                                else:
                                    if (nombre_personnes_a_charge_8 ==
                                        integer_of_string("2")):
                                        return money_of_cents_string("37236")
                                    else:
                                        if (nombre_personnes_a_charge_8 ==
                                            integer_of_string("3")):
                                            return money_of_cents_string("38283")
                                        else:
                                            if (nombre_personnes_a_charge_8 ==
                                                integer_of_string("4")):
                                                return money_of_cents_string("39311")
                                            else:
                                                if (nombre_personnes_a_charge_8 ==
                                                    integer_of_string("5")):
                                                    return money_of_cents_string("40144")
                                                else:
                                                    return (money_of_cents_string("40144") +
                                                        (money_of_cents_string("3496") *
                                                        decimal_of_integer((nombre_personnes_a_charge_8 -
                                                        integer_of_string("5")))))
                        elif match_arg_530.code == ZoneDHabitation_Code.Zone2:
                            _ = match_arg_530.value
                            if (nombre_personnes_a_charge_8 ==
                                integer_of_string("0")):
                                match_arg_532 = situation_familiale_calcul_apl_7
                                if match_arg_532.code == SituationFamilialeCalculAPL_Code.PersonneSeule:
                                    _ = match_arg_532.value
                                    return money_of_cents_string("24526")
                                elif match_arg_532.code == SituationFamilialeCalculAPL_Code.Couple:
                                    _ = match_arg_532.value
                                    return money_of_cents_string("30065")
                            else:
                                if (nombre_personnes_a_charge_8 ==
                                    integer_of_string("1")):
                                    return money_of_cents_string("32548")
                                else:
                                    if (nombre_personnes_a_charge_8 ==
                                        integer_of_string("2")):
                                        return money_of_cents_string("33675")
                                    else:
                                        if (nombre_personnes_a_charge_8 ==
                                            integer_of_string("3")):
                                            return money_of_cents_string("34865")
                                        else:
                                            if (nombre_personnes_a_charge_8 ==
                                                integer_of_string("4")):
                                                return money_of_cents_string("35979")
                                            else:
                                                if (nombre_personnes_a_charge_8 ==
                                                    integer_of_string("5")):
                                                    return money_of_cents_string("38527")
                                                else:
                                                    return (money_of_cents_string("38527") +
                                                        (money_of_cents_string("3350") *
                                                        decimal_of_integer((nombre_personnes_a_charge_8 -
                                                        integer_of_string("5")))))
                        elif match_arg_530.code == ZoneDHabitation_Code.Zone3:
                            _ = match_arg_530.value
                            if (nombre_personnes_a_charge_8 ==
                                integer_of_string("0")):
                                match_arg_533 = situation_familiale_calcul_apl_7
                                if match_arg_533.code == SituationFamilialeCalculAPL_Code.PersonneSeule:
                                    _ = match_arg_533.value
                                    return money_of_cents_string("23007")
                                elif match_arg_533.code == SituationFamilialeCalculAPL_Code.Couple:
                                    _ = match_arg_533.value
                                    return money_of_cents_string("27906")
                            else:
                                if (nombre_personnes_a_charge_8 ==
                                    integer_of_string("1")):
                                    return money_of_cents_string("30424")
                                else:
                                    if (nombre_personnes_a_charge_8 ==
                                        integer_of_string("2")):
                                        return money_of_cents_string("31682")
                                    else:
                                        if (nombre_personnes_a_charge_8 ==
                                            integer_of_string("3")):
                                            return money_of_cents_string("32956")
                                        else:
                                            if (nombre_personnes_a_charge_8 ==
                                                integer_of_string("4")):
                                                return money_of_cents_string("34214")
                                            else:
                                                if (nombre_personnes_a_charge_8 ==
                                                    integer_of_string("5")):
                                                    return money_of_cents_string("36733")
                                                else:
                                                    return (money_of_cents_string("36733") +
                                                        (money_of_cents_string("3187") *
                                                        decimal_of_integer((nombre_personnes_a_charge_8 -
                                                        integer_of_string("5")))))
                    else:
                        raise EmptyError
                def temp_calcul_plafond_mensualite_d842_6_base_14(_:Unit):
                    if ((date_courante_13 >= date_of_numbers(2020,1,1)) and
                        ((date_calcul >= date_of_numbers(2005,9,1)) and
                        (date_calcul <
                        date_of_numbers(2007,1,1)))):
                        match_arg_534 = zone_5
                        if match_arg_534.code == ZoneDHabitation_Code.Zone1:
                            _ = match_arg_534.value
                            if (nombre_personnes_a_charge_8 ==
                                integer_of_string("0")):
                                match_arg_535 = situation_familiale_calcul_apl_7
                                if match_arg_535.code == SituationFamilialeCalculAPL_Code.PersonneSeule:
                                    _ = match_arg_535.value
                                    return money_of_cents_string("27195")
                                elif match_arg_535.code == SituationFamilialeCalculAPL_Code.Couple:
                                    _ = match_arg_535.value
                                    return money_of_cents_string("32773")
                            else:
                                if (nombre_personnes_a_charge_8 ==
                                    integer_of_string("1")):
                                    return money_of_cents_string("35237")
                                else:
                                    if (nombre_personnes_a_charge_8 ==
                                        integer_of_string("2")):
                                        return money_of_cents_string("36222")
                                    else:
                                        if (nombre_personnes_a_charge_8 ==
                                            integer_of_string("3")):
                                            return money_of_cents_string("37240")
                                        else:
                                            if (nombre_personnes_a_charge_8 ==
                                                integer_of_string("4")):
                                                return money_of_cents_string("38240")
                                            else:
                                                if (nombre_personnes_a_charge_8 ==
                                                    integer_of_string("5")):
                                                    return money_of_cents_string("39051")
                                                else:
                                                    return (money_of_cents_string("39051") +
                                                        (money_of_cents_string("3401") *
                                                        decimal_of_integer((nombre_personnes_a_charge_8 -
                                                        integer_of_string("5")))))
                        elif match_arg_534.code == ZoneDHabitation_Code.Zone2:
                            _ = match_arg_534.value
                            if (nombre_personnes_a_charge_8 ==
                                integer_of_string("0")):
                                match_arg_536 = situation_familiale_calcul_apl_7
                                if match_arg_536.code == SituationFamilialeCalculAPL_Code.PersonneSeule:
                                    _ = match_arg_536.value
                                    return money_of_cents_string("23858")
                                elif match_arg_536.code == SituationFamilialeCalculAPL_Code.Couple:
                                    _ = match_arg_536.value
                                    return money_of_cents_string("29246")
                            else:
                                if (nombre_personnes_a_charge_8 ==
                                    integer_of_string("1")):
                                    return money_of_cents_string("31661")
                                else:
                                    if (nombre_personnes_a_charge_8 ==
                                        integer_of_string("2")):
                                        return money_of_cents_string("32758")
                                    else:
                                        if (nombre_personnes_a_charge_8 ==
                                            integer_of_string("3")):
                                            return money_of_cents_string("33886")
                                        else:
                                            if (nombre_personnes_a_charge_8 ==
                                                integer_of_string("4")):
                                                return money_of_cents_string("34999")
                                            else:
                                                if (nombre_personnes_a_charge_8 ==
                                                    integer_of_string("5")):
                                                    return money_of_cents_string("37478")
                                                else:
                                                    return (money_of_cents_string("37478") +
                                                        (money_of_cents_string("3259") *
                                                        decimal_of_integer((nombre_personnes_a_charge_8 -
                                                        integer_of_string("5")))))
                        elif match_arg_534.code == ZoneDHabitation_Code.Zone3:
                            _ = match_arg_534.value
                            if (nombre_personnes_a_charge_8 ==
                                integer_of_string("0")):
                                match_arg_537 = situation_familiale_calcul_apl_7
                                if match_arg_537.code == SituationFamilialeCalculAPL_Code.PersonneSeule:
                                    _ = match_arg_537.value
                                    return money_of_cents_string("22380")
                                elif match_arg_537.code == SituationFamilialeCalculAPL_Code.Couple:
                                    _ = match_arg_537.value
                                    return money_of_cents_string("27146")
                            else:
                                if (nombre_personnes_a_charge_8 ==
                                    integer_of_string("1")):
                                    return money_of_cents_string("29595")
                                else:
                                    if (nombre_personnes_a_charge_8 ==
                                        integer_of_string("2")):
                                        return money_of_cents_string("30819")
                                    else:
                                        if (nombre_personnes_a_charge_8 ==
                                            integer_of_string("3")):
                                            return money_of_cents_string("32058")
                                        else:
                                            if (nombre_personnes_a_charge_8 ==
                                                integer_of_string("4")):
                                                return money_of_cents_string("33282")
                                            else:
                                                if (nombre_personnes_a_charge_8 ==
                                                    integer_of_string("5")):
                                                    return money_of_cents_string("35762")
                                                else:
                                                    return (money_of_cents_string("35762") +
                                                        (money_of_cents_string("3100") *
                                                        decimal_of_integer((nombre_personnes_a_charge_8 -
                                                        integer_of_string("5")))))
                    else:
                        raise EmptyError
                def temp_calcul_plafond_mensualite_d842_6_base_15(_:Unit):
                    if ((date_courante_13 >= date_of_numbers(2020,1,1)) and
                        ((date_calcul >= date_of_numbers(2003,7,1)) and
                        (date_calcul <
                        date_of_numbers(2005,9,1)))):
                        match_arg_538 = zone_5
                        if match_arg_538.code == ZoneDHabitation_Code.Zone1:
                            _ = match_arg_538.value
                            if (nombre_personnes_a_charge_8 ==
                                integer_of_string("0")):
                                match_arg_539 = situation_familiale_calcul_apl_7
                                if match_arg_539.code == SituationFamilialeCalculAPL_Code.PersonneSeule:
                                    _ = match_arg_539.value
                                    return money_of_cents_string("26714")
                                elif match_arg_539.code == SituationFamilialeCalculAPL_Code.Couple:
                                    _ = match_arg_539.value
                                    return money_of_cents_string("32194")
                            else:
                                if (nombre_personnes_a_charge_8 ==
                                    integer_of_string("1")):
                                    return money_of_cents_string("34614")
                                else:
                                    if (nombre_personnes_a_charge_8 ==
                                        integer_of_string("2")):
                                        return money_of_cents_string("35582")
                                    else:
                                        if (nombre_personnes_a_charge_8 ==
                                            integer_of_string("3")):
                                            return money_of_cents_string("36582")
                                        else:
                                            if (nombre_personnes_a_charge_8 ==
                                                integer_of_string("4")):
                                                return money_of_cents_string("37564")
                                            else:
                                                if (nombre_personnes_a_charge_8 ==
                                                    integer_of_string("5")):
                                                    return money_of_cents_string("38361")
                                                else:
                                                    return (money_of_cents_string("38361") +
                                                        (money_of_cents_string("3341") *
                                                        decimal_of_integer((nombre_personnes_a_charge_8 -
                                                        integer_of_string("5")))))
                        elif match_arg_538.code == ZoneDHabitation_Code.Zone2:
                            _ = match_arg_538.value
                            if (nombre_personnes_a_charge_8 ==
                                integer_of_string("0")):
                                match_arg_540 = situation_familiale_calcul_apl_7
                                if match_arg_540.code == SituationFamilialeCalculAPL_Code.PersonneSeule:
                                    _ = match_arg_540.value
                                    return money_of_cents_string("23436")
                                elif match_arg_540.code == SituationFamilialeCalculAPL_Code.Couple:
                                    _ = match_arg_540.value
                                    return money_of_cents_string("28729")
                            else:
                                if (nombre_personnes_a_charge_8 ==
                                    integer_of_string("1")):
                                    return money_of_cents_string("31101")
                                else:
                                    if (nombre_personnes_a_charge_8 ==
                                        integer_of_string("2")):
                                        return money_of_cents_string("32179")
                                    else:
                                        if (nombre_personnes_a_charge_8 ==
                                            integer_of_string("3")):
                                            return money_of_cents_string("33287")
                                        else:
                                            if (nombre_personnes_a_charge_8 ==
                                                integer_of_string("4")):
                                                return money_of_cents_string("34380")
                                            else:
                                                if (nombre_personnes_a_charge_8 ==
                                                    integer_of_string("5")):
                                                    return money_of_cents_string("36815")
                                                else:
                                                    return (money_of_cents_string("36815") +
                                                        (money_of_cents_string("3201") *
                                                        decimal_of_integer((nombre_personnes_a_charge_8 -
                                                        integer_of_string("5")))))
                        elif match_arg_538.code == ZoneDHabitation_Code.Zone3:
                            _ = match_arg_538.value
                            if (nombre_personnes_a_charge_8 ==
                                integer_of_string("0")):
                                match_arg_541 = situation_familiale_calcul_apl_7
                                if match_arg_541.code == SituationFamilialeCalculAPL_Code.PersonneSeule:
                                    _ = match_arg_541.value
                                    return money_of_cents_string("21984")
                                elif match_arg_541.code == SituationFamilialeCalculAPL_Code.Couple:
                                    _ = match_arg_541.value
                                    return money_of_cents_string("26666")
                            else:
                                if (nombre_personnes_a_charge_8 ==
                                    integer_of_string("1")):
                                    return money_of_cents_string("29072")
                                else:
                                    if (nombre_personnes_a_charge_8 ==
                                        integer_of_string("2")):
                                        return money_of_cents_string("30274")
                                    else:
                                        if (nombre_personnes_a_charge_8 ==
                                            integer_of_string("3")):
                                            return money_of_cents_string("31491")
                                        else:
                                            if (nombre_personnes_a_charge_8 ==
                                                integer_of_string("4")):
                                                return money_of_cents_string("32694")
                                            else:
                                                if (nombre_personnes_a_charge_8 ==
                                                    integer_of_string("5")):
                                                    return money_of_cents_string("35130")
                                                else:
                                                    return (money_of_cents_string("35130") +
                                                        (money_of_cents_string("3045") *
                                                        decimal_of_integer((nombre_personnes_a_charge_8 -
                                                        integer_of_string("5")))))
                    else:
                        raise EmptyError
                def temp_calcul_plafond_mensualite_d842_6_base_16(_:Unit):
                    if ((date_courante_13 >= date_of_numbers(2020,1,1)) and
                        ((date_calcul >= date_of_numbers(2002,7,1)) and
                        (date_calcul <
                        date_of_numbers(2003,7,1)))):
                        match_arg_542 = zone_5
                        if match_arg_542.code == ZoneDHabitation_Code.Zone1:
                            _ = match_arg_542.value
                            if (nombre_personnes_a_charge_8 ==
                                integer_of_string("0")):
                                match_arg_543 = situation_familiale_calcul_apl_7
                                if match_arg_543.code == SituationFamilialeCalculAPL_Code.PersonneSeule:
                                    _ = match_arg_543.value
                                    return money_of_cents_string("26397")
                                elif match_arg_543.code == SituationFamilialeCalculAPL_Code.Couple:
                                    _ = match_arg_543.value
                                    return money_of_cents_string("31812")
                            else:
                                if (nombre_personnes_a_charge_8 ==
                                    integer_of_string("1")):
                                    return money_of_cents_string("34204")
                                else:
                                    if (nombre_personnes_a_charge_8 ==
                                        integer_of_string("2")):
                                        return money_of_cents_string("35160")
                                    else:
                                        if (nombre_personnes_a_charge_8 ==
                                            integer_of_string("3")):
                                            return money_of_cents_string("36148")
                                        else:
                                            if (nombre_personnes_a_charge_8 ==
                                                integer_of_string("4")):
                                                return money_of_cents_string("37119")
                                            else:
                                                if (nombre_personnes_a_charge_8 ==
                                                    integer_of_string("5")):
                                                    return money_of_cents_string("37906")
                                                else:
                                                    return (money_of_cents_string("37906") +
                                                        (money_of_cents_string("3301") *
                                                        decimal_of_integer((nombre_personnes_a_charge_8 -
                                                        integer_of_string("5")))))
                        elif match_arg_542.code == ZoneDHabitation_Code.Zone2:
                            _ = match_arg_542.value
                            if (nombre_personnes_a_charge_8 ==
                                integer_of_string("0")):
                                match_arg_544 = situation_familiale_calcul_apl_7
                                if match_arg_544.code == SituationFamilialeCalculAPL_Code.PersonneSeule:
                                    _ = match_arg_544.value
                                    return money_of_cents_string("23158")
                                elif match_arg_544.code == SituationFamilialeCalculAPL_Code.Couple:
                                    _ = match_arg_544.value
                                    return money_of_cents_string("28388")
                            else:
                                if (nombre_personnes_a_charge_8 ==
                                    integer_of_string("1")):
                                    return money_of_cents_string("30732")
                                else:
                                    if (nombre_personnes_a_charge_8 ==
                                        integer_of_string("2")):
                                        return money_of_cents_string("31797")
                                    else:
                                        if (nombre_personnes_a_charge_8 ==
                                            integer_of_string("3")):
                                            return money_of_cents_string("32892")
                                        else:
                                            if (nombre_personnes_a_charge_8 ==
                                                integer_of_string("4")):
                                                return money_of_cents_string("33972")
                                            else:
                                                if (nombre_personnes_a_charge_8 ==
                                                    integer_of_string("5")):
                                                    return money_of_cents_string("36378")
                                                else:
                                                    return (money_of_cents_string("36378") +
                                                        (money_of_cents_string("3163") *
                                                        decimal_of_integer((nombre_personnes_a_charge_8 -
                                                        integer_of_string("5")))))
                        elif match_arg_542.code == ZoneDHabitation_Code.Zone3:
                            _ = match_arg_542.value
                            if (nombre_personnes_a_charge_8 ==
                                integer_of_string("0")):
                                match_arg_545 = situation_familiale_calcul_apl_7
                                if match_arg_545.code == SituationFamilialeCalculAPL_Code.PersonneSeule:
                                    _ = match_arg_545.value
                                    return money_of_cents_string("21723")
                                elif match_arg_545.code == SituationFamilialeCalculAPL_Code.Couple:
                                    _ = match_arg_545.value
                                    return money_of_cents_string("26350")
                            else:
                                if (nombre_personnes_a_charge_8 ==
                                    integer_of_string("1")):
                                    return money_of_cents_string("28727")
                                else:
                                    if (nombre_personnes_a_charge_8 ==
                                        integer_of_string("2")):
                                        return money_of_cents_string("29915")
                                    else:
                                        if (nombre_personnes_a_charge_8 ==
                                            integer_of_string("3")):
                                            return money_of_cents_string("31118")
                                        else:
                                            if (nombre_personnes_a_charge_8 ==
                                                integer_of_string("4")):
                                                return money_of_cents_string("32306")
                                            else:
                                                if (nombre_personnes_a_charge_8 ==
                                                    integer_of_string("5")):
                                                    return money_of_cents_string("34713")
                                                else:
                                                    return (money_of_cents_string("34713") +
                                                        (money_of_cents_string("3009") *
                                                        decimal_of_integer((nombre_personnes_a_charge_8 -
                                                        integer_of_string("5")))))
                    else:
                        raise EmptyError
                def temp_calcul_plafond_mensualite_d842_6_base_17(_:Unit):
                    if ((date_courante_13 >= date_of_numbers(2020,1,1)) and
                        ((date_calcul >= date_of_numbers(2002,1,1)) and
                        (date_calcul <
                        date_of_numbers(2002,7,1)))):
                        match_arg_546 = zone_5
                        if match_arg_546.code == ZoneDHabitation_Code.Zone1:
                            _ = match_arg_546.value
                            if (nombre_personnes_a_charge_8 ==
                                integer_of_string("0")):
                                match_arg_547 = situation_familiale_calcul_apl_7
                                if match_arg_547.code == SituationFamilialeCalculAPL_Code.PersonneSeule:
                                    _ = match_arg_547.value
                                    return money_of_cents_string("26084")
                                elif match_arg_547.code == SituationFamilialeCalculAPL_Code.Couple:
                                    _ = match_arg_547.value
                                    return money_of_cents_string("31435")
                            else:
                                if (nombre_personnes_a_charge_8 ==
                                    integer_of_string("1")):
                                    return money_of_cents_string("33798")
                                else:
                                    if (nombre_personnes_a_charge_8 ==
                                        integer_of_string("2")):
                                        return money_of_cents_string("34743")
                                    else:
                                        if (nombre_personnes_a_charge_8 ==
                                            integer_of_string("3")):
                                            return money_of_cents_string("35719")
                                        else:
                                            if (nombre_personnes_a_charge_8 ==
                                                integer_of_string("4")):
                                                return money_of_cents_string("36679")
                                            else:
                                                if (nombre_personnes_a_charge_8 ==
                                                    integer_of_string("5")):
                                                    return money_of_cents_string("37457")
                                                else:
                                                    return (money_of_cents_string("37457") +
                                                        (money_of_cents_string("3262") *
                                                        decimal_of_integer((nombre_personnes_a_charge_8 -
                                                        integer_of_string("5")))))
                        elif match_arg_546.code == ZoneDHabitation_Code.Zone2:
                            _ = match_arg_546.value
                            if (nombre_personnes_a_charge_8 ==
                                integer_of_string("0")):
                                match_arg_548 = situation_familiale_calcul_apl_7
                                if match_arg_548.code == SituationFamilialeCalculAPL_Code.PersonneSeule:
                                    _ = match_arg_548.value
                                    return money_of_cents_string("22883")
                                elif match_arg_548.code == SituationFamilialeCalculAPL_Code.Couple:
                                    _ = match_arg_548.value
                                    return money_of_cents_string("28051")
                            else:
                                if (nombre_personnes_a_charge_8 ==
                                    integer_of_string("1")):
                                    return money_of_cents_string("30368")
                                else:
                                    if (nombre_personnes_a_charge_8 ==
                                        integer_of_string("2")):
                                        return money_of_cents_string("31420")
                                    else:
                                        if (nombre_personnes_a_charge_8 ==
                                            integer_of_string("3")):
                                            return money_of_cents_string("32502")
                                        else:
                                            if (nombre_personnes_a_charge_8 ==
                                                integer_of_string("4")):
                                                return money_of_cents_string("33569")
                                            else:
                                                if (nombre_personnes_a_charge_8 ==
                                                    integer_of_string("5")):
                                                    return money_of_cents_string("35947")
                                                else:
                                                    return (money_of_cents_string("35947") +
                                                        (money_of_cents_string("3125") *
                                                        decimal_of_integer((nombre_personnes_a_charge_8 -
                                                        integer_of_string("5")))))
                        elif match_arg_546.code == ZoneDHabitation_Code.Zone3:
                            _ = match_arg_546.value
                            if (nombre_personnes_a_charge_8 ==
                                integer_of_string("0")):
                                match_arg_549 = situation_familiale_calcul_apl_7
                                if match_arg_549.code == SituationFamilialeCalculAPL_Code.PersonneSeule:
                                    _ = match_arg_549.value
                                    return money_of_cents_string("21465")
                                elif match_arg_549.code == SituationFamilialeCalculAPL_Code.Couple:
                                    _ = match_arg_549.value
                                    return money_of_cents_string("26038")
                            else:
                                if (nombre_personnes_a_charge_8 ==
                                    integer_of_string("1")):
                                    return money_of_cents_string("28386")
                                else:
                                    if (nombre_personnes_a_charge_8 ==
                                        integer_of_string("2")):
                                        return money_of_cents_string("29560")
                                    else:
                                        if (nombre_personnes_a_charge_8 ==
                                            integer_of_string("3")):
                                            return money_of_cents_string("30749")
                                        else:
                                            if (nombre_personnes_a_charge_8 ==
                                                integer_of_string("4")):
                                                return money_of_cents_string("31923")
                                            else:
                                                if (nombre_personnes_a_charge_8 ==
                                                    integer_of_string("5")):
                                                    return money_of_cents_string("34301")
                                                else:
                                                    return (money_of_cents_string("34301") +
                                                        (money_of_cents_string("2973") *
                                                        decimal_of_integer((nombre_personnes_a_charge_8 -
                                                        integer_of_string("5")))))
                    else:
                        raise EmptyError
                def temp_calcul_plafond_mensualite_d842_6_base_18(_:Unit):
                    if ((date_courante_13 >= date_of_numbers(2020,1,1)) and
                        ((date_calcul >= date_of_numbers(2001,7,1)) and
                        (date_calcul <
                        date_of_numbers(2002,1,1)))):
                        match_arg_550 = zone_5
                        if match_arg_550.code == ZoneDHabitation_Code.Zone1:
                            _ = match_arg_550.value
                            if (nombre_personnes_a_charge_8 ==
                                integer_of_string("0")):
                                match_arg_551 = situation_familiale_calcul_apl_7
                                if match_arg_551.code == SituationFamilialeCalculAPL_Code.PersonneSeule:
                                    _ = match_arg_551.value
                                    temp_calcul_plafond_mensualite_d842_6_base_19 = money_of_cents_string("171100")
                                elif match_arg_551.code == SituationFamilialeCalculAPL_Code.Couple:
                                    _ = match_arg_551.value
                                    temp_calcul_plafond_mensualite_d842_6_base_19 = money_of_cents_string("206200")
                            else:
                                if (nombre_personnes_a_charge_8 ==
                                    integer_of_string("1")):
                                    temp_calcul_plafond_mensualite_d842_6_base_19 = money_of_cents_string("221700")
                                else:
                                    if (nombre_personnes_a_charge_8 ==
                                        integer_of_string("2")):
                                        temp_calcul_plafond_mensualite_d842_6_base_19 = money_of_cents_string("227900")
                                    else:
                                        if (nombre_personnes_a_charge_8 ==
                                            integer_of_string("3")):
                                            temp_calcul_plafond_mensualite_d842_6_base_19 = money_of_cents_string("234300")
                                        else:
                                            if (nombre_personnes_a_charge_8 ==
                                                integer_of_string("4")):
                                                temp_calcul_plafond_mensualite_d842_6_base_19 = money_of_cents_string("240600")
                                            else:
                                                if (nombre_personnes_a_charge_8 ==
                                                    integer_of_string("5")):
                                                    temp_calcul_plafond_mensualite_d842_6_base_19 = money_of_cents_string("245700")
                                                else:
                                                    temp_calcul_plafond_mensualite_d842_6_base_19 = (money_of_cents_string("245700") +
                                                        (money_of_cents_string("21400") *
                                                        decimal_of_integer((nombre_personnes_a_charge_8 -
                                                        integer_of_string("5")))))
                        elif match_arg_550.code == ZoneDHabitation_Code.Zone2:
                            _ = match_arg_550.value
                            if (nombre_personnes_a_charge_8 ==
                                integer_of_string("0")):
                                match_arg_552 = situation_familiale_calcul_apl_7
                                if match_arg_552.code == SituationFamilialeCalculAPL_Code.PersonneSeule:
                                    _ = match_arg_552.value
                                    temp_calcul_plafond_mensualite_d842_6_base_19 = money_of_cents_string("150100")
                                elif match_arg_552.code == SituationFamilialeCalculAPL_Code.Couple:
                                    _ = match_arg_552.value
                                    temp_calcul_plafond_mensualite_d842_6_base_19 = money_of_cents_string("184000")
                            else:
                                if (nombre_personnes_a_charge_8 ==
                                    integer_of_string("1")):
                                    temp_calcul_plafond_mensualite_d842_6_base_19 = money_of_cents_string("199200")
                                else:
                                    if (nombre_personnes_a_charge_8 ==
                                        integer_of_string("2")):
                                        temp_calcul_plafond_mensualite_d842_6_base_19 = money_of_cents_string("206100")
                                    else:
                                        if (nombre_personnes_a_charge_8 ==
                                            integer_of_string("3")):
                                            temp_calcul_plafond_mensualite_d842_6_base_19 = money_of_cents_string("213200")
                                        else:
                                            if (nombre_personnes_a_charge_8 ==
                                                integer_of_string("4")):
                                                temp_calcul_plafond_mensualite_d842_6_base_19 = money_of_cents_string("220200")
                                            else:
                                                if (nombre_personnes_a_charge_8 ==
                                                    integer_of_string("5")):
                                                    temp_calcul_plafond_mensualite_d842_6_base_19 = money_of_cents_string("235800")
                                                else:
                                                    temp_calcul_plafond_mensualite_d842_6_base_19 = (money_of_cents_string("235800") +
                                                        (money_of_cents_string("20500") *
                                                        decimal_of_integer((nombre_personnes_a_charge_8 -
                                                        integer_of_string("5")))))
                        elif match_arg_550.code == ZoneDHabitation_Code.Zone3:
                            _ = match_arg_550.value
                            if (nombre_personnes_a_charge_8 ==
                                integer_of_string("0")):
                                match_arg_553 = situation_familiale_calcul_apl_7
                                if match_arg_553.code == SituationFamilialeCalculAPL_Code.PersonneSeule:
                                    _ = match_arg_553.value
                                    temp_calcul_plafond_mensualite_d842_6_base_19 = money_of_cents_string("140800")
                                elif match_arg_553.code == SituationFamilialeCalculAPL_Code.Couple:
                                    _ = match_arg_553.value
                                    temp_calcul_plafond_mensualite_d842_6_base_19 = money_of_cents_string("170800")
                            else:
                                if (nombre_personnes_a_charge_8 ==
                                    integer_of_string("1")):
                                    temp_calcul_plafond_mensualite_d842_6_base_19 = money_of_cents_string("186200")
                                else:
                                    if (nombre_personnes_a_charge_8 ==
                                        integer_of_string("2")):
                                        temp_calcul_plafond_mensualite_d842_6_base_19 = money_of_cents_string("193900")
                                    else:
                                        if (nombre_personnes_a_charge_8 ==
                                            integer_of_string("3")):
                                            temp_calcul_plafond_mensualite_d842_6_base_19 = money_of_cents_string("201700")
                                        else:
                                            if (nombre_personnes_a_charge_8 ==
                                                integer_of_string("4")):
                                                temp_calcul_plafond_mensualite_d842_6_base_19 = money_of_cents_string("209400")
                                            else:
                                                if (nombre_personnes_a_charge_8 ==
                                                    integer_of_string("5")):
                                                    temp_calcul_plafond_mensualite_d842_6_base_19 = money_of_cents_string("225000")
                                                else:
                                                    temp_calcul_plafond_mensualite_d842_6_base_19 = (money_of_cents_string("225000") +
                                                        (money_of_cents_string("19500") *
                                                        decimal_of_integer((nombre_personnes_a_charge_8 -
                                                        integer_of_string("5")))))
                        return (temp_calcul_plafond_mensualite_d842_6_base_19 *
                            taux_francs_vers_euros_1)
                    else:
                        raise EmptyError
                def temp_calcul_plafond_mensualite_d842_6_base_20(_:Unit):
                    if ((date_courante_13 >= date_of_numbers(2020,1,1)) and
                        ((date_calcul >= date_of_numbers(2000,7,1)) and
                        (date_calcul <
                        date_of_numbers(2001,7,1)))):
                        match_arg_554 = zone_5
                        if match_arg_554.code == ZoneDHabitation_Code.Zone1:
                            _ = match_arg_554.value
                            if (nombre_personnes_a_charge_8 ==
                                integer_of_string("0")):
                                match_arg_555 = situation_familiale_calcul_apl_7
                                if match_arg_555.code == SituationFamilialeCalculAPL_Code.PersonneSeule:
                                    _ = match_arg_555.value
                                    temp_calcul_plafond_mensualite_d842_6_base_21 = money_of_cents_string("169100")
                                elif match_arg_555.code == SituationFamilialeCalculAPL_Code.Couple:
                                    _ = match_arg_555.value
                                    temp_calcul_plafond_mensualite_d842_6_base_21 = money_of_cents_string("203800")
                            else:
                                if (nombre_personnes_a_charge_8 ==
                                    integer_of_string("1")):
                                    temp_calcul_plafond_mensualite_d842_6_base_21 = money_of_cents_string("219100")
                                else:
                                    if (nombre_personnes_a_charge_8 ==
                                        integer_of_string("2")):
                                        temp_calcul_plafond_mensualite_d842_6_base_21 = money_of_cents_string("225200")
                                    else:
                                        if (nombre_personnes_a_charge_8 ==
                                            integer_of_string("3")):
                                            temp_calcul_plafond_mensualite_d842_6_base_21 = money_of_cents_string("231500")
                                        else:
                                            if (nombre_personnes_a_charge_8 ==
                                                integer_of_string("4")):
                                                temp_calcul_plafond_mensualite_d842_6_base_21 = money_of_cents_string("237700")
                                            else:
                                                if (nombre_personnes_a_charge_8 ==
                                                    integer_of_string("5")):
                                                    temp_calcul_plafond_mensualite_d842_6_base_21 = money_of_cents_string("242800")
                                                else:
                                                    temp_calcul_plafond_mensualite_d842_6_base_21 = (money_of_cents_string("242800") +
                                                        (money_of_cents_string("21100") *
                                                        decimal_of_integer((nombre_personnes_a_charge_8 -
                                                        integer_of_string("5")))))
                        elif match_arg_554.code == ZoneDHabitation_Code.Zone2:
                            _ = match_arg_554.value
                            if (nombre_personnes_a_charge_8 ==
                                integer_of_string("0")):
                                match_arg_556 = situation_familiale_calcul_apl_7
                                if match_arg_556.code == SituationFamilialeCalculAPL_Code.PersonneSeule:
                                    _ = match_arg_556.value
                                    temp_calcul_plafond_mensualite_d842_6_base_21 = money_of_cents_string("148300")
                                elif match_arg_556.code == SituationFamilialeCalculAPL_Code.Couple:
                                    _ = match_arg_556.value
                                    temp_calcul_plafond_mensualite_d842_6_base_21 = money_of_cents_string("181800")
                            else:
                                if (nombre_personnes_a_charge_8 ==
                                    integer_of_string("1")):
                                    temp_calcul_plafond_mensualite_d842_6_base_21 = money_of_cents_string("196800")
                                else:
                                    if (nombre_personnes_a_charge_8 ==
                                        integer_of_string("2")):
                                        temp_calcul_plafond_mensualite_d842_6_base_21 = money_of_cents_string("203700")
                                    else:
                                        if (nombre_personnes_a_charge_8 ==
                                            integer_of_string("3")):
                                            temp_calcul_plafond_mensualite_d842_6_base_21 = money_of_cents_string("210700")
                                        else:
                                            if (nombre_personnes_a_charge_8 ==
                                                integer_of_string("4")):
                                                temp_calcul_plafond_mensualite_d842_6_base_21 = money_of_cents_string("217600")
                                            else:
                                                if (nombre_personnes_a_charge_8 ==
                                                    integer_of_string("5")):
                                                    temp_calcul_plafond_mensualite_d842_6_base_21 = money_of_cents_string("233000")
                                                else:
                                                    temp_calcul_plafond_mensualite_d842_6_base_21 = (money_of_cents_string("233000") +
                                                        (money_of_cents_string("20300") *
                                                        decimal_of_integer((nombre_personnes_a_charge_8 -
                                                        integer_of_string("5")))))
                        elif match_arg_554.code == ZoneDHabitation_Code.Zone3:
                            _ = match_arg_554.value
                            if (nombre_personnes_a_charge_8 ==
                                integer_of_string("0")):
                                match_arg_557 = situation_familiale_calcul_apl_7
                                if match_arg_557.code == SituationFamilialeCalculAPL_Code.PersonneSeule:
                                    _ = match_arg_557.value
                                    temp_calcul_plafond_mensualite_d842_6_base_21 = money_of_cents_string("139100")
                                elif match_arg_557.code == SituationFamilialeCalculAPL_Code.Couple:
                                    _ = match_arg_557.value
                                    temp_calcul_plafond_mensualite_d842_6_base_21 = money_of_cents_string("168800")
                            else:
                                if (nombre_personnes_a_charge_8 ==
                                    integer_of_string("1")):
                                    temp_calcul_plafond_mensualite_d842_6_base_21 = money_of_cents_string("184000")
                                else:
                                    if (nombre_personnes_a_charge_8 ==
                                        integer_of_string("2")):
                                        temp_calcul_plafond_mensualite_d842_6_base_21 = money_of_cents_string("191600")
                                    else:
                                        if (nombre_personnes_a_charge_8 ==
                                            integer_of_string("3")):
                                            temp_calcul_plafond_mensualite_d842_6_base_21 = money_of_cents_string("199300")
                                        else:
                                            if (nombre_personnes_a_charge_8 ==
                                                integer_of_string("4")):
                                                temp_calcul_plafond_mensualite_d842_6_base_21 = money_of_cents_string("206900")
                                            else:
                                                if (nombre_personnes_a_charge_8 ==
                                                    integer_of_string("5")):
                                                    temp_calcul_plafond_mensualite_d842_6_base_21 = money_of_cents_string("222300")
                                                else:
                                                    temp_calcul_plafond_mensualite_d842_6_base_21 = (money_of_cents_string("222300") +
                                                        (money_of_cents_string("19300") *
                                                        decimal_of_integer((nombre_personnes_a_charge_8 -
                                                        integer_of_string("5")))))
                        return (temp_calcul_plafond_mensualite_d842_6_base_21 *
                            taux_francs_vers_euros_1)
                    else:
                        raise EmptyError
                def temp_calcul_plafond_mensualite_d842_6_base_22(_:Unit):
                    if ((date_courante_13 >= date_of_numbers(2020,1,1)) and
                        ((date_calcul >= date_of_numbers(1999,7,1)) and
                        (date_calcul <
                        date_of_numbers(2000,7,1)))):
                        match_arg_558 = zone_5
                        if match_arg_558.code == ZoneDHabitation_Code.Zone1:
                            _ = match_arg_558.value
                            if (nombre_personnes_a_charge_8 ==
                                integer_of_string("0")):
                                match_arg_559 = situation_familiale_calcul_apl_7
                                if match_arg_559.code == SituationFamilialeCalculAPL_Code.PersonneSeule:
                                    _ = match_arg_559.value
                                    temp_calcul_plafond_mensualite_d842_6_base_23 = money_of_cents_string("167400")
                                elif match_arg_559.code == SituationFamilialeCalculAPL_Code.Couple:
                                    _ = match_arg_559.value
                                    temp_calcul_plafond_mensualite_d842_6_base_23 = money_of_cents_string("201800")
                            else:
                                if (nombre_personnes_a_charge_8 ==
                                    integer_of_string("1")):
                                    temp_calcul_plafond_mensualite_d842_6_base_23 = money_of_cents_string("216900")
                                else:
                                    if (nombre_personnes_a_charge_8 ==
                                        integer_of_string("2")):
                                        temp_calcul_plafond_mensualite_d842_6_base_23 = money_of_cents_string("223000")
                                    else:
                                        if (nombre_personnes_a_charge_8 ==
                                            integer_of_string("3")):
                                            temp_calcul_plafond_mensualite_d842_6_base_23 = money_of_cents_string("229200")
                                        else:
                                            if (nombre_personnes_a_charge_8 ==
                                                integer_of_string("4")):
                                                temp_calcul_plafond_mensualite_d842_6_base_23 = money_of_cents_string("235300")
                                            else:
                                                if (nombre_personnes_a_charge_8 ==
                                                    integer_of_string("5")):
                                                    temp_calcul_plafond_mensualite_d842_6_base_23 = money_of_cents_string("240400")
                                                else:
                                                    temp_calcul_plafond_mensualite_d842_6_base_23 = (money_of_cents_string("240400") +
                                                        (money_of_cents_string("20900") *
                                                        decimal_of_integer((nombre_personnes_a_charge_8 -
                                                        integer_of_string("5")))))
                        elif match_arg_558.code == ZoneDHabitation_Code.Zone2:
                            _ = match_arg_558.value
                            if (nombre_personnes_a_charge_8 ==
                                integer_of_string("0")):
                                match_arg_560 = situation_familiale_calcul_apl_7
                                if match_arg_560.code == SituationFamilialeCalculAPL_Code.PersonneSeule:
                                    _ = match_arg_560.value
                                    temp_calcul_plafond_mensualite_d842_6_base_23 = money_of_cents_string("146800")
                                elif match_arg_560.code == SituationFamilialeCalculAPL_Code.Couple:
                                    _ = match_arg_560.value
                                    temp_calcul_plafond_mensualite_d842_6_base_23 = money_of_cents_string("180000")
                            else:
                                if (nombre_personnes_a_charge_8 ==
                                    integer_of_string("1")):
                                    temp_calcul_plafond_mensualite_d842_6_base_23 = money_of_cents_string("194900")
                                else:
                                    if (nombre_personnes_a_charge_8 ==
                                        integer_of_string("2")):
                                        temp_calcul_plafond_mensualite_d842_6_base_23 = money_of_cents_string("201700")
                                    else:
                                        if (nombre_personnes_a_charge_8 ==
                                            integer_of_string("3")):
                                            temp_calcul_plafond_mensualite_d842_6_base_23 = money_of_cents_string("208600")
                                        else:
                                            if (nombre_personnes_a_charge_8 ==
                                                integer_of_string("4")):
                                                temp_calcul_plafond_mensualite_d842_6_base_23 = money_of_cents_string("215400")
                                            else:
                                                if (nombre_personnes_a_charge_8 ==
                                                    integer_of_string("5")):
                                                    temp_calcul_plafond_mensualite_d842_6_base_23 = money_of_cents_string("230700")
                                                else:
                                                    temp_calcul_plafond_mensualite_d842_6_base_23 = (money_of_cents_string("230700") +
                                                        (money_of_cents_string("20100") *
                                                        decimal_of_integer((nombre_personnes_a_charge_8 -
                                                        integer_of_string("5")))))
                        elif match_arg_558.code == ZoneDHabitation_Code.Zone3:
                            _ = match_arg_558.value
                            if (nombre_personnes_a_charge_8 ==
                                integer_of_string("0")):
                                match_arg_561 = situation_familiale_calcul_apl_7
                                if match_arg_561.code == SituationFamilialeCalculAPL_Code.PersonneSeule:
                                    _ = match_arg_561.value
                                    temp_calcul_plafond_mensualite_d842_6_base_23 = money_of_cents_string("137700")
                                elif match_arg_561.code == SituationFamilialeCalculAPL_Code.Couple:
                                    _ = match_arg_561.value
                                    temp_calcul_plafond_mensualite_d842_6_base_23 = money_of_cents_string("167100")
                            else:
                                if (nombre_personnes_a_charge_8 ==
                                    integer_of_string("1")):
                                    temp_calcul_plafond_mensualite_d842_6_base_23 = money_of_cents_string("182200")
                                else:
                                    if (nombre_personnes_a_charge_8 ==
                                        integer_of_string("2")):
                                        temp_calcul_plafond_mensualite_d842_6_base_23 = money_of_cents_string("189700")
                                    else:
                                        if (nombre_personnes_a_charge_8 ==
                                            integer_of_string("3")):
                                            temp_calcul_plafond_mensualite_d842_6_base_23 = money_of_cents_string("197300")
                                        else:
                                            if (nombre_personnes_a_charge_8 ==
                                                integer_of_string("4")):
                                                temp_calcul_plafond_mensualite_d842_6_base_23 = money_of_cents_string("204900")
                                            else:
                                                if (nombre_personnes_a_charge_8 ==
                                                    integer_of_string("5")):
                                                    temp_calcul_plafond_mensualite_d842_6_base_23 = money_of_cents_string("220100")
                                                else:
                                                    temp_calcul_plafond_mensualite_d842_6_base_23 = (money_of_cents_string("220100") +
                                                        (money_of_cents_string("19100") *
                                                        decimal_of_integer((nombre_personnes_a_charge_8 -
                                                        integer_of_string("5")))))
                        return (temp_calcul_plafond_mensualite_d842_6_base_23 *
                            taux_francs_vers_euros_1)
                    else:
                        raise EmptyError
                def temp_calcul_plafond_mensualite_d842_6_base_24(_:Unit):
                    if ((date_courante_13 >= date_of_numbers(2020,1,1)) and
                        ((date_calcul >= date_of_numbers(1998,7,1)) and
                        (date_calcul <
                        date_of_numbers(1999,7,1)))):
                        match_arg_562 = zone_5
                        if match_arg_562.code == ZoneDHabitation_Code.Zone1:
                            _ = match_arg_562.value
                            if (nombre_personnes_a_charge_8 ==
                                integer_of_string("0")):
                                match_arg_563 = situation_familiale_calcul_apl_7
                                if match_arg_563.code == SituationFamilialeCalculAPL_Code.PersonneSeule:
                                    _ = match_arg_563.value
                                    temp_calcul_plafond_mensualite_d842_6_base_25 = money_of_cents_string("167200")
                                elif match_arg_563.code == SituationFamilialeCalculAPL_Code.Couple:
                                    _ = match_arg_563.value
                                    temp_calcul_plafond_mensualite_d842_6_base_25 = money_of_cents_string("201600")
                            else:
                                if (nombre_personnes_a_charge_8 ==
                                    integer_of_string("1")):
                                    temp_calcul_plafond_mensualite_d842_6_base_25 = money_of_cents_string("216700")
                                else:
                                    if (nombre_personnes_a_charge_8 ==
                                        integer_of_string("2")):
                                        temp_calcul_plafond_mensualite_d842_6_base_25 = money_of_cents_string("222800")
                                    else:
                                        if (nombre_personnes_a_charge_8 ==
                                            integer_of_string("3")):
                                            temp_calcul_plafond_mensualite_d842_6_base_25 = money_of_cents_string("229000")
                                        else:
                                            if (nombre_personnes_a_charge_8 ==
                                                integer_of_string("4")):
                                                temp_calcul_plafond_mensualite_d842_6_base_25 = money_of_cents_string("235100")
                                            else:
                                                if (nombre_personnes_a_charge_8 ==
                                                    integer_of_string("5")):
                                                    temp_calcul_plafond_mensualite_d842_6_base_25 = money_of_cents_string("240200")
                                                else:
                                                    temp_calcul_plafond_mensualite_d842_6_base_25 = (money_of_cents_string("240200") +
                                                        (money_of_cents_string("20900") *
                                                        decimal_of_integer((nombre_personnes_a_charge_8 -
                                                        integer_of_string("5")))))
                        elif match_arg_562.code == ZoneDHabitation_Code.Zone2:
                            _ = match_arg_562.value
                            if (nombre_personnes_a_charge_8 ==
                                integer_of_string("0")):
                                match_arg_564 = situation_familiale_calcul_apl_7
                                if match_arg_564.code == SituationFamilialeCalculAPL_Code.PersonneSeule:
                                    _ = match_arg_564.value
                                    temp_calcul_plafond_mensualite_d842_6_base_25 = money_of_cents_string("146700")
                                elif match_arg_564.code == SituationFamilialeCalculAPL_Code.Couple:
                                    _ = match_arg_564.value
                                    temp_calcul_plafond_mensualite_d842_6_base_25 = money_of_cents_string("179800")
                            else:
                                if (nombre_personnes_a_charge_8 ==
                                    integer_of_string("1")):
                                    temp_calcul_plafond_mensualite_d842_6_base_25 = money_of_cents_string("194700")
                                else:
                                    if (nombre_personnes_a_charge_8 ==
                                        integer_of_string("2")):
                                        temp_calcul_plafond_mensualite_d842_6_base_25 = money_of_cents_string("201500")
                                    else:
                                        if (nombre_personnes_a_charge_8 ==
                                            integer_of_string("3")):
                                            temp_calcul_plafond_mensualite_d842_6_base_25 = money_of_cents_string("208400")
                                        else:
                                            if (nombre_personnes_a_charge_8 ==
                                                integer_of_string("4")):
                                                temp_calcul_plafond_mensualite_d842_6_base_25 = money_of_cents_string("215200")
                                            else:
                                                if (nombre_personnes_a_charge_8 ==
                                                    integer_of_string("5")):
                                                    temp_calcul_plafond_mensualite_d842_6_base_25 = money_of_cents_string("230500")
                                                else:
                                                    temp_calcul_plafond_mensualite_d842_6_base_25 = (money_of_cents_string("230500") +
                                                        (money_of_cents_string("20100") *
                                                        decimal_of_integer((nombre_personnes_a_charge_8 -
                                                        integer_of_string("5")))))
                        elif match_arg_562.code == ZoneDHabitation_Code.Zone3:
                            _ = match_arg_562.value
                            if (nombre_personnes_a_charge_8 ==
                                integer_of_string("0")):
                                match_arg_565 = situation_familiale_calcul_apl_7
                                if match_arg_565.code == SituationFamilialeCalculAPL_Code.PersonneSeule:
                                    _ = match_arg_565.value
                                    temp_calcul_plafond_mensualite_d842_6_base_25 = money_of_cents_string("137600")
                                elif match_arg_565.code == SituationFamilialeCalculAPL_Code.Couple:
                                    _ = match_arg_565.value
                                    temp_calcul_plafond_mensualite_d842_6_base_25 = money_of_cents_string("166900")
                            else:
                                if (nombre_personnes_a_charge_8 ==
                                    integer_of_string("1")):
                                    temp_calcul_plafond_mensualite_d842_6_base_25 = money_of_cents_string("182000")
                                else:
                                    if (nombre_personnes_a_charge_8 ==
                                        integer_of_string("2")):
                                        temp_calcul_plafond_mensualite_d842_6_base_25 = money_of_cents_string("189500")
                                    else:
                                        if (nombre_personnes_a_charge_8 ==
                                            integer_of_string("3")):
                                            temp_calcul_plafond_mensualite_d842_6_base_25 = money_of_cents_string("197100")
                                        else:
                                            if (nombre_personnes_a_charge_8 ==
                                                integer_of_string("4")):
                                                temp_calcul_plafond_mensualite_d842_6_base_25 = money_of_cents_string("204700")
                                            else:
                                                if (nombre_personnes_a_charge_8 ==
                                                    integer_of_string("5")):
                                                    temp_calcul_plafond_mensualite_d842_6_base_25 = money_of_cents_string("219900")
                                                else:
                                                    temp_calcul_plafond_mensualite_d842_6_base_25 = (money_of_cents_string("219900") +
                                                        (money_of_cents_string("19100") *
                                                        decimal_of_integer((nombre_personnes_a_charge_8 -
                                                        integer_of_string("5")))))
                        return (temp_calcul_plafond_mensualite_d842_6_base_25 *
                            taux_francs_vers_euros_1)
                    else:
                        raise EmptyError
                def temp_calcul_plafond_mensualite_d842_6_base_26(_:Unit):
                    if ((date_courante_13 >= date_of_numbers(2020,1,1)) and
                        ((date_calcul >= date_of_numbers(1997,7,1)) and
                        (date_calcul <
                        date_of_numbers(1998,7,1)))):
                        match_arg_566 = zone_5
                        if match_arg_566.code == ZoneDHabitation_Code.Zone1:
                            _ = match_arg_566.value
                            if (nombre_personnes_a_charge_8 ==
                                integer_of_string("0")):
                                match_arg_567 = situation_familiale_calcul_apl_7
                                if match_arg_567.code == SituationFamilialeCalculAPL_Code.PersonneSeule:
                                    _ = match_arg_567.value
                                    temp_calcul_plafond_mensualite_d842_6_base_27 = money_of_cents_string("163300")
                                elif match_arg_567.code == SituationFamilialeCalculAPL_Code.Couple:
                                    _ = match_arg_567.value
                                    temp_calcul_plafond_mensualite_d842_6_base_27 = money_of_cents_string("196900")
                            else:
                                if (nombre_personnes_a_charge_8 ==
                                    integer_of_string("1")):
                                    temp_calcul_plafond_mensualite_d842_6_base_27 = money_of_cents_string("211600")
                                else:
                                    if (nombre_personnes_a_charge_8 ==
                                        integer_of_string("2")):
                                        temp_calcul_plafond_mensualite_d842_6_base_27 = money_of_cents_string("217600")
                                    else:
                                        if (nombre_personnes_a_charge_8 ==
                                            integer_of_string("3")):
                                            temp_calcul_plafond_mensualite_d842_6_base_27 = money_of_cents_string("223600")
                                        else:
                                            if (nombre_personnes_a_charge_8 ==
                                                integer_of_string("4")):
                                                temp_calcul_plafond_mensualite_d842_6_base_27 = money_of_cents_string("229600")
                                            else:
                                                if (nombre_personnes_a_charge_8 ==
                                                    integer_of_string("5")):
                                                    temp_calcul_plafond_mensualite_d842_6_base_27 = money_of_cents_string("234600")
                                                else:
                                                    temp_calcul_plafond_mensualite_d842_6_base_27 = (money_of_cents_string("234600") +
                                                        (money_of_cents_string("20400") *
                                                        decimal_of_integer((nombre_personnes_a_charge_8 -
                                                        integer_of_string("5")))))
                        elif match_arg_566.code == ZoneDHabitation_Code.Zone2:
                            _ = match_arg_566.value
                            if (nombre_personnes_a_charge_8 ==
                                integer_of_string("0")):
                                match_arg_568 = situation_familiale_calcul_apl_7
                                if match_arg_568.code == SituationFamilialeCalculAPL_Code.PersonneSeule:
                                    _ = match_arg_568.value
                                    temp_calcul_plafond_mensualite_d842_6_base_27 = money_of_cents_string("143300")
                                elif match_arg_568.code == SituationFamilialeCalculAPL_Code.Couple:
                                    _ = match_arg_568.value
                                    temp_calcul_plafond_mensualite_d842_6_base_27 = money_of_cents_string("175600")
                            else:
                                if (nombre_personnes_a_charge_8 ==
                                    integer_of_string("1")):
                                    temp_calcul_plafond_mensualite_d842_6_base_27 = money_of_cents_string("190100")
                                else:
                                    if (nombre_personnes_a_charge_8 ==
                                        integer_of_string("2")):
                                        temp_calcul_plafond_mensualite_d842_6_base_27 = money_of_cents_string("196600")
                                    else:
                                        if (nombre_personnes_a_charge_8 ==
                                            integer_of_string("3")):
                                            temp_calcul_plafond_mensualite_d842_6_base_27 = money_of_cents_string("203500")
                                        else:
                                            if (nombre_personnes_a_charge_8 ==
                                                integer_of_string("4")):
                                                temp_calcul_plafond_mensualite_d842_6_base_27 = money_of_cents_string("210200")
                                            else:
                                                if (nombre_personnes_a_charge_8 ==
                                                    integer_of_string("5")):
                                                    temp_calcul_plafond_mensualite_d842_6_base_27 = money_of_cents_string("225100")
                                                else:
                                                    temp_calcul_plafond_mensualite_d842_6_base_27 = (money_of_cents_string("225100") +
                                                        (money_of_cents_string("19600") *
                                                        decimal_of_integer((nombre_personnes_a_charge_8 -
                                                        integer_of_string("5")))))
                        elif match_arg_566.code == ZoneDHabitation_Code.Zone3:
                            _ = match_arg_566.value
                            if (nombre_personnes_a_charge_8 ==
                                integer_of_string("0")):
                                match_arg_569 = situation_familiale_calcul_apl_7
                                if match_arg_569.code == SituationFamilialeCalculAPL_Code.PersonneSeule:
                                    _ = match_arg_569.value
                                    temp_calcul_plafond_mensualite_d842_6_base_27 = money_of_cents_string("134400")
                                elif match_arg_569.code == SituationFamilialeCalculAPL_Code.Couple:
                                    _ = match_arg_569.value
                                    temp_calcul_plafond_mensualite_d842_6_base_27 = money_of_cents_string("163000")
                            else:
                                if (nombre_personnes_a_charge_8 ==
                                    integer_of_string("1")):
                                    temp_calcul_plafond_mensualite_d842_6_base_27 = money_of_cents_string("177700")
                                else:
                                    if (nombre_personnes_a_charge_8 ==
                                        integer_of_string("2")):
                                        temp_calcul_plafond_mensualite_d842_6_base_27 = money_of_cents_string("185100")
                                    else:
                                        if (nombre_personnes_a_charge_8 ==
                                            integer_of_string("3")):
                                            temp_calcul_plafond_mensualite_d842_6_base_27 = money_of_cents_string("192500")
                                        else:
                                            if (nombre_personnes_a_charge_8 ==
                                                integer_of_string("4")):
                                                temp_calcul_plafond_mensualite_d842_6_base_27 = money_of_cents_string("199900")
                                            else:
                                                if (nombre_personnes_a_charge_8 ==
                                                    integer_of_string("5")):
                                                    temp_calcul_plafond_mensualite_d842_6_base_27 = money_of_cents_string("214700")
                                                else:
                                                    temp_calcul_plafond_mensualite_d842_6_base_27 = (money_of_cents_string("214700") +
                                                        (money_of_cents_string("18700") *
                                                        decimal_of_integer((nombre_personnes_a_charge_8 -
                                                        integer_of_string("5")))))
                        return (temp_calcul_plafond_mensualite_d842_6_base_27 *
                            taux_francs_vers_euros_1)
                    else:
                        raise EmptyError
                def temp_calcul_plafond_mensualite_d842_6_base_28(_:Unit):
                    if ((date_courante_13 >= date_of_numbers(2020,1,1)) and
                        ((date_calcul >= date_of_numbers(1994,7,1)) and
                        (date_calcul <
                        date_of_numbers(1997,7,1)))):
                        match_arg_570 = zone_5
                        if match_arg_570.code == ZoneDHabitation_Code.Zone1:
                            _ = match_arg_570.value
                            if (nombre_personnes_a_charge_8 ==
                                integer_of_string("0")):
                                match_arg_571 = situation_familiale_calcul_apl_7
                                if match_arg_571.code == SituationFamilialeCalculAPL_Code.PersonneSeule:
                                    _ = match_arg_571.value
                                    temp_calcul_plafond_mensualite_d842_6_base_29 = money_of_cents_string("160400")
                                elif match_arg_571.code == SituationFamilialeCalculAPL_Code.Couple:
                                    _ = match_arg_571.value
                                    temp_calcul_plafond_mensualite_d842_6_base_29 = money_of_cents_string("193400")
                            else:
                                if (nombre_personnes_a_charge_8 ==
                                    integer_of_string("1")):
                                    temp_calcul_plafond_mensualite_d842_6_base_29 = money_of_cents_string("207800")
                                else:
                                    if (nombre_personnes_a_charge_8 ==
                                        integer_of_string("2")):
                                        temp_calcul_plafond_mensualite_d842_6_base_29 = money_of_cents_string("213700")
                                    else:
                                        if (nombre_personnes_a_charge_8 ==
                                            integer_of_string("3")):
                                            temp_calcul_plafond_mensualite_d842_6_base_29 = money_of_cents_string("219600")
                                        else:
                                            if (nombre_personnes_a_charge_8 ==
                                                integer_of_string("4")):
                                                temp_calcul_plafond_mensualite_d842_6_base_29 = money_of_cents_string("225500")
                                            else:
                                                if (nombre_personnes_a_charge_8 ==
                                                    integer_of_string("5")):
                                                    temp_calcul_plafond_mensualite_d842_6_base_29 = money_of_cents_string("230500")
                                                else:
                                                    temp_calcul_plafond_mensualite_d842_6_base_29 = (money_of_cents_string("230500") +
                                                        (money_of_cents_string("20000") *
                                                        decimal_of_integer((nombre_personnes_a_charge_8 -
                                                        integer_of_string("5")))))
                        elif match_arg_570.code == ZoneDHabitation_Code.Zone2:
                            _ = match_arg_570.value
                            if (nombre_personnes_a_charge_8 ==
                                integer_of_string("0")):
                                match_arg_572 = situation_familiale_calcul_apl_7
                                if match_arg_572.code == SituationFamilialeCalculAPL_Code.PersonneSeule:
                                    _ = match_arg_572.value
                                    temp_calcul_plafond_mensualite_d842_6_base_29 = money_of_cents_string("140800")
                                elif match_arg_572.code == SituationFamilialeCalculAPL_Code.Couple:
                                    _ = match_arg_572.value
                                    temp_calcul_plafond_mensualite_d842_6_base_29 = money_of_cents_string("172500")
                            else:
                                if (nombre_personnes_a_charge_8 ==
                                    integer_of_string("1")):
                                    temp_calcul_plafond_mensualite_d842_6_base_29 = money_of_cents_string("186700")
                                else:
                                    if (nombre_personnes_a_charge_8 ==
                                        integer_of_string("2")):
                                        temp_calcul_plafond_mensualite_d842_6_base_29 = money_of_cents_string("193300")
                                    else:
                                        if (nombre_personnes_a_charge_8 ==
                                            integer_of_string("3")):
                                            temp_calcul_plafond_mensualite_d842_6_base_29 = money_of_cents_string("199900")
                                        else:
                                            if (nombre_personnes_a_charge_8 ==
                                                integer_of_string("4")):
                                                temp_calcul_plafond_mensualite_d842_6_base_29 = money_of_cents_string("206500")
                                            else:
                                                if (nombre_personnes_a_charge_8 ==
                                                    integer_of_string("5")):
                                                    temp_calcul_plafond_mensualite_d842_6_base_29 = money_of_cents_string("221100")
                                                else:
                                                    temp_calcul_plafond_mensualite_d842_6_base_29 = (money_of_cents_string("221100") +
                                                        (money_of_cents_string("19300") *
                                                        decimal_of_integer((nombre_personnes_a_charge_8 -
                                                        integer_of_string("5")))))
                        elif match_arg_570.code == ZoneDHabitation_Code.Zone3:
                            _ = match_arg_570.value
                            if (nombre_personnes_a_charge_8 ==
                                integer_of_string("0")):
                                match_arg_573 = situation_familiale_calcul_apl_7
                                if match_arg_573.code == SituationFamilialeCalculAPL_Code.PersonneSeule:
                                    _ = match_arg_573.value
                                    temp_calcul_plafond_mensualite_d842_6_base_29 = money_of_cents_string("132000")
                                elif match_arg_573.code == SituationFamilialeCalculAPL_Code.Couple:
                                    _ = match_arg_573.value
                                    temp_calcul_plafond_mensualite_d842_6_base_29 = money_of_cents_string("180100")
                            else:
                                if (nombre_personnes_a_charge_8 ==
                                    integer_of_string("1")):
                                    temp_calcul_plafond_mensualite_d842_6_base_29 = money_of_cents_string("174500")
                                else:
                                    if (nombre_personnes_a_charge_8 ==
                                        integer_of_string("2")):
                                        temp_calcul_plafond_mensualite_d842_6_base_29 = money_of_cents_string("181800")
                                    else:
                                        if (nombre_personnes_a_charge_8 ==
                                            integer_of_string("3")):
                                            temp_calcul_plafond_mensualite_d842_6_base_29 = money_of_cents_string("189100")
                                        else:
                                            if (nombre_personnes_a_charge_8 ==
                                                integer_of_string("4")):
                                                temp_calcul_plafond_mensualite_d842_6_base_29 = money_of_cents_string("196400")
                                            else:
                                                if (nombre_personnes_a_charge_8 ==
                                                    integer_of_string("5")):
                                                    temp_calcul_plafond_mensualite_d842_6_base_29 = money_of_cents_string("210900")
                                                else:
                                                    temp_calcul_plafond_mensualite_d842_6_base_29 = (money_of_cents_string("210900") +
                                                        (money_of_cents_string("18400") *
                                                        decimal_of_integer((nombre_personnes_a_charge_8 -
                                                        integer_of_string("5")))))
                        return (temp_calcul_plafond_mensualite_d842_6_base_29 *
                            taux_francs_vers_euros_1)
                    else:
                        raise EmptyError
                def temp_calcul_plafond_mensualite_d842_6_base_30(_:Unit):
                    if ((date_courante_13 >= date_of_numbers(2020,1,1)) and
                        ((date_calcul >= date_of_numbers(1992,7,1)) and
                        (date_calcul <
                        date_of_numbers(1994,7,1)))):
                        match_arg_574 = zone_5
                        if match_arg_574.code == ZoneDHabitation_Code.Zone1:
                            _ = match_arg_574.value
                            if (nombre_personnes_a_charge_8 ==
                                integer_of_string("0")):
                                match_arg_575 = situation_familiale_calcul_apl_7
                                if match_arg_575.code == SituationFamilialeCalculAPL_Code.PersonneSeule:
                                    _ = match_arg_575.value
                                    temp_calcul_plafond_mensualite_d842_6_base_31 = money_of_cents_string("158700")
                                elif match_arg_575.code == SituationFamilialeCalculAPL_Code.Couple:
                                    _ = match_arg_575.value
                                    temp_calcul_plafond_mensualite_d842_6_base_31 = money_of_cents_string("191300")
                            else:
                                if (nombre_personnes_a_charge_8 ==
                                    integer_of_string("1")):
                                    temp_calcul_plafond_mensualite_d842_6_base_31 = money_of_cents_string("205500")
                                else:
                                    if (nombre_personnes_a_charge_8 ==
                                        integer_of_string("2")):
                                        temp_calcul_plafond_mensualite_d842_6_base_31 = money_of_cents_string("211300")
                                    else:
                                        if (nombre_personnes_a_charge_8 ==
                                            integer_of_string("3")):
                                            temp_calcul_plafond_mensualite_d842_6_base_31 = money_of_cents_string("217100")
                                        else:
                                            if (nombre_personnes_a_charge_8 ==
                                                integer_of_string("4")):
                                                temp_calcul_plafond_mensualite_d842_6_base_31 = money_of_cents_string("222900")
                                            else:
                                                if (nombre_personnes_a_charge_8 ==
                                                    integer_of_string("5")):
                                                    temp_calcul_plafond_mensualite_d842_6_base_31 = money_of_cents_string("228000")
                                                else:
                                                    temp_calcul_plafond_mensualite_d842_6_base_31 = (money_of_cents_string("228000") +
                                                        (money_of_cents_string("19800") *
                                                        decimal_of_integer((nombre_personnes_a_charge_8 -
                                                        integer_of_string("5")))))
                        elif match_arg_574.code == ZoneDHabitation_Code.Zone2:
                            _ = match_arg_574.value
                            if (nombre_personnes_a_charge_8 ==
                                integer_of_string("0")):
                                match_arg_576 = situation_familiale_calcul_apl_7
                                if match_arg_576.code == SituationFamilialeCalculAPL_Code.PersonneSeule:
                                    _ = match_arg_576.value
                                    temp_calcul_plafond_mensualite_d842_6_base_31 = money_of_cents_string("139300")
                                elif match_arg_576.code == SituationFamilialeCalculAPL_Code.Couple:
                                    _ = match_arg_576.value
                                    temp_calcul_plafond_mensualite_d842_6_base_31 = money_of_cents_string("170600")
                            else:
                                if (nombre_personnes_a_charge_8 ==
                                    integer_of_string("1")):
                                    temp_calcul_plafond_mensualite_d842_6_base_31 = money_of_cents_string("184700")
                                else:
                                    if (nombre_personnes_a_charge_8 ==
                                        integer_of_string("2")):
                                        temp_calcul_plafond_mensualite_d842_6_base_31 = money_of_cents_string("191200")
                                    else:
                                        if (nombre_personnes_a_charge_8 ==
                                            integer_of_string("3")):
                                            temp_calcul_plafond_mensualite_d842_6_base_31 = money_of_cents_string("197700")
                                        else:
                                            if (nombre_personnes_a_charge_8 ==
                                                integer_of_string("4")):
                                                temp_calcul_plafond_mensualite_d842_6_base_31 = money_of_cents_string("204200")
                                            else:
                                                if (nombre_personnes_a_charge_8 ==
                                                    integer_of_string("5")):
                                                    temp_calcul_plafond_mensualite_d842_6_base_31 = money_of_cents_string("218700")
                                                else:
                                                    temp_calcul_plafond_mensualite_d842_6_base_31 = (money_of_cents_string("218700") +
                                                        (money_of_cents_string("19100") *
                                                        decimal_of_integer((nombre_personnes_a_charge_8 -
                                                        integer_of_string("5")))))
                        elif match_arg_574.code == ZoneDHabitation_Code.Zone3:
                            _ = match_arg_574.value
                            if (nombre_personnes_a_charge_8 ==
                                integer_of_string("0")):
                                match_arg_577 = situation_familiale_calcul_apl_7
                                if match_arg_577.code == SituationFamilialeCalculAPL_Code.PersonneSeule:
                                    _ = match_arg_577.value
                                    temp_calcul_plafond_mensualite_d842_6_base_31 = money_of_cents_string("130600")
                                elif match_arg_577.code == SituationFamilialeCalculAPL_Code.Couple:
                                    _ = match_arg_577.value
                                    temp_calcul_plafond_mensualite_d842_6_base_31 = money_of_cents_string("158400")
                            else:
                                if (nombre_personnes_a_charge_8 ==
                                    integer_of_string("1")):
                                    temp_calcul_plafond_mensualite_d842_6_base_31 = money_of_cents_string("172600")
                                else:
                                    if (nombre_personnes_a_charge_8 ==
                                        integer_of_string("2")):
                                        temp_calcul_plafond_mensualite_d842_6_base_31 = money_of_cents_string("179800")
                                    else:
                                        if (nombre_personnes_a_charge_8 ==
                                            integer_of_string("3")):
                                            temp_calcul_plafond_mensualite_d842_6_base_31 = money_of_cents_string("187000")
                                        else:
                                            if (nombre_personnes_a_charge_8 ==
                                                integer_of_string("4")):
                                                temp_calcul_plafond_mensualite_d842_6_base_31 = money_of_cents_string("194200")
                                            else:
                                                if (nombre_personnes_a_charge_8 ==
                                                    integer_of_string("5")):
                                                    temp_calcul_plafond_mensualite_d842_6_base_31 = money_of_cents_string("208600")
                                                else:
                                                    temp_calcul_plafond_mensualite_d842_6_base_31 = (money_of_cents_string("208600") +
                                                        (money_of_cents_string("18200") *
                                                        decimal_of_integer((nombre_personnes_a_charge_8 -
                                                        integer_of_string("5")))))
                        return (temp_calcul_plafond_mensualite_d842_6_base_31 *
                            taux_francs_vers_euros_1)
                    else:
                        raise EmptyError
                return handle_default(SourcePosition(filename="examples/aides_logement/prologue.catala_fr",
                                      start_line=949, start_column=10,
                                      end_line=949, end_column=14,
                                      law_headings=["Secteur accession à la propriété",
                                      "Calcul du montant de l'allocation logement",
                                      "Prologue : aides au logement"]), [temp_calcul_plafond_mensualite_d842_6_base_30,
                                      temp_calcul_plafond_mensualite_d842_6_base_28,
                                      temp_calcul_plafond_mensualite_d842_6_base_26,
                                      temp_calcul_plafond_mensualite_d842_6_base_24,
                                      temp_calcul_plafond_mensualite_d842_6_base_22,
                                      temp_calcul_plafond_mensualite_d842_6_base_20,
                                      temp_calcul_plafond_mensualite_d842_6_base_18,
                                      temp_calcul_plafond_mensualite_d842_6_base_17,
                                      temp_calcul_plafond_mensualite_d842_6_base_16,
                                      temp_calcul_plafond_mensualite_d842_6_base_15,
                                      temp_calcul_plafond_mensualite_d842_6_base_14,
                                      temp_calcul_plafond_mensualite_d842_6_base_13,
                                      temp_calcul_plafond_mensualite_d842_6_base_12,
                                      temp_calcul_plafond_mensualite_d842_6_base_11,
                                      temp_calcul_plafond_mensualite_d842_6_base_10,
                                      temp_calcul_plafond_mensualite_d842_6_base_9,
                                      temp_calcul_plafond_mensualite_d842_6_base_8,
                                      temp_calcul_plafond_mensualite_d842_6_base_7,
                                      temp_calcul_plafond_mensualite_d842_6_base_6,
                                      temp_calcul_plafond_mensualite_d842_6_base_5,
                                      temp_calcul_plafond_mensualite_d842_6_base_4,
                                      temp_calcul_plafond_mensualite_d842_6_base_3],
                                      temp_calcul_plafond_mensualite_d842_6_base_2,
                                      temp_calcul_plafond_mensualite_d842_6_base_1)
            except EmptyError:
                raise NoValueProvided(SourcePosition(filename="examples/aides_logement/prologue.catala_fr",
                                                     start_line=949,
                                                     start_column=10,
                                                     end_line=949,
                                                     end_column=14,
                                                     law_headings=["Secteur accession à la propriété",
                                                     "Calcul du montant de l'allocation logement",
                                                     "Prologue : aides au logement"]))
    except EmptyError:
        temp_calcul_plafond_mensualite_d842_6_base = dead_value
        raise NoValueProvided(SourcePosition(filename="examples/aides_logement/prologue.catala_fr",
                                             start_line=949, start_column=10,
                                             end_line=949, end_column=14,
                                             law_headings=["Secteur accession à la propriété",
                                             "Calcul du montant de l'allocation logement",
                                             "Prologue : aides au logement"]))
    calcul_plafond_mensualite_d842_6_base = temp_calcul_plafond_mensualite_d842_6_base
    try:
        try:
            try:
                try:
                    def temp_montant_forfaitaire_charges_19(_:Unit):
                        raise EmptyError
                    def temp_montant_forfaitaire_charges_20(_:Unit):
                        return False
                    def temp_montant_forfaitaire_charges_21(_:Unit):
                        match_arg_578 = residence_7
                        if match_arg_578.code == Collectivite_Code.Guadeloupe:
                            _ = match_arg_578.value
                            temp_montant_forfaitaire_charges_22 = True
                        elif match_arg_578.code == Collectivite_Code.Guyane:
                            _ = match_arg_578.value
                            temp_montant_forfaitaire_charges_22 = False
                        elif match_arg_578.code == Collectivite_Code.Martinique:
                            _ = match_arg_578.value
                            temp_montant_forfaitaire_charges_22 = True
                        elif match_arg_578.code == Collectivite_Code.LaReunion:
                            _ = match_arg_578.value
                            temp_montant_forfaitaire_charges_22 = True
                        elif match_arg_578.code == Collectivite_Code.SaintBarthelemy:
                            _ = match_arg_578.value
                            temp_montant_forfaitaire_charges_22 = True
                        elif match_arg_578.code == Collectivite_Code.SaintMartin:
                            _ = match_arg_578.value
                            temp_montant_forfaitaire_charges_22 = True
                        elif match_arg_578.code == Collectivite_Code.Metropole:
                            _ = match_arg_578.value
                            temp_montant_forfaitaire_charges_22 = False
                        elif match_arg_578.code == Collectivite_Code.SaintPierreEtMiquelon:
                            _ = match_arg_578.value
                            temp_montant_forfaitaire_charges_22 = False
                        elif match_arg_578.code == Collectivite_Code.Mayotte:
                            _ = match_arg_578.value
                            temp_montant_forfaitaire_charges_22 = True
                        if (((date_courante_13 >=
                            date_of_numbers(2020,1,1)) and
                            (date_courante_13 <
                            date_of_numbers(2020,10,1))) and
                            temp_montant_forfaitaire_charges_22):
                            match_arg_579 = situation_familiale_calcul_apl_7
                            if match_arg_579.code == SituationFamilialeCalculAPL_Code.PersonneSeule:
                                _ = match_arg_579.value
                                temp_montant_forfaitaire_charges_23 = money_of_cents_string("1858")
                            elif match_arg_579.code == SituationFamilialeCalculAPL_Code.Couple:
                                _ = match_arg_579.value
                                temp_montant_forfaitaire_charges_23 = money_of_cents_string("3614")
                            match_arg_580 = situation_familiale_calcul_apl_7
                            if match_arg_580.code == SituationFamilialeCalculAPL_Code.PersonneSeule:
                                _ = match_arg_580.value
                                temp_montant_forfaitaire_charges_24 = money_of_cents_string("1858")
                            elif match_arg_580.code == SituationFamilialeCalculAPL_Code.Couple:
                                _ = match_arg_580.value
                                temp_montant_forfaitaire_charges_24 = money_of_cents_string("3614")
                            if ((temp_montant_forfaitaire_charges_24 +
                                (money_of_cents_string("929") *
                                decimal_of_integer(nombre_personnes_a_charge_7))) >
                                (temp_montant_forfaitaire_charges_23 +
                                (money_of_cents_string("929") *
                                decimal_of_string("6.")))):
                                match_arg_581 = situation_familiale_calcul_apl_7
                                if match_arg_581.code == SituationFamilialeCalculAPL_Code.PersonneSeule:
                                    _ = match_arg_581.value
                                    temp_montant_forfaitaire_charges_25 = money_of_cents_string("1858")
                                elif match_arg_581.code == SituationFamilialeCalculAPL_Code.Couple:
                                    _ = match_arg_581.value
                                    temp_montant_forfaitaire_charges_25 = money_of_cents_string("3614")
                                return (temp_montant_forfaitaire_charges_25 +
                                    (money_of_cents_string("929") *
                                    decimal_of_string("6.")))
                            else:
                                match_arg_582 = situation_familiale_calcul_apl_7
                                if match_arg_582.code == SituationFamilialeCalculAPL_Code.PersonneSeule:
                                    _ = match_arg_582.value
                                    temp_montant_forfaitaire_charges_26 = money_of_cents_string("1858")
                                elif match_arg_582.code == SituationFamilialeCalculAPL_Code.Couple:
                                    _ = match_arg_582.value
                                    temp_montant_forfaitaire_charges_26 = money_of_cents_string("3614")
                                return (temp_montant_forfaitaire_charges_26 +
                                    (money_of_cents_string("929") *
                                    decimal_of_integer(nombre_personnes_a_charge_7)))
                        else:
                            raise EmptyError
                    def temp_montant_forfaitaire_charges_27(_:Unit):
                        match_arg_583 = residence_7
                        if match_arg_583.code == Collectivite_Code.Guadeloupe:
                            _ = match_arg_583.value
                            temp_montant_forfaitaire_charges_28 = True
                        elif match_arg_583.code == Collectivite_Code.Guyane:
                            _ = match_arg_583.value
                            temp_montant_forfaitaire_charges_28 = False
                        elif match_arg_583.code == Collectivite_Code.Martinique:
                            _ = match_arg_583.value
                            temp_montant_forfaitaire_charges_28 = True
                        elif match_arg_583.code == Collectivite_Code.LaReunion:
                            _ = match_arg_583.value
                            temp_montant_forfaitaire_charges_28 = True
                        elif match_arg_583.code == Collectivite_Code.SaintBarthelemy:
                            _ = match_arg_583.value
                            temp_montant_forfaitaire_charges_28 = True
                        elif match_arg_583.code == Collectivite_Code.SaintMartin:
                            _ = match_arg_583.value
                            temp_montant_forfaitaire_charges_28 = True
                        elif match_arg_583.code == Collectivite_Code.Metropole:
                            _ = match_arg_583.value
                            temp_montant_forfaitaire_charges_28 = False
                        elif match_arg_583.code == Collectivite_Code.SaintPierreEtMiquelon:
                            _ = match_arg_583.value
                            temp_montant_forfaitaire_charges_28 = False
                        elif match_arg_583.code == Collectivite_Code.Mayotte:
                            _ = match_arg_583.value
                            temp_montant_forfaitaire_charges_28 = True
                        if (((date_courante_13 >=
                            date_of_numbers(2020,10,1)) and
                            (date_courante_13 <
                            date_of_numbers(2021,10,1))) and
                            temp_montant_forfaitaire_charges_28):
                            match_arg_584 = situation_familiale_calcul_apl_7
                            if match_arg_584.code == SituationFamilialeCalculAPL_Code.PersonneSeule:
                                _ = match_arg_584.value
                                temp_montant_forfaitaire_charges_29 = money_of_cents_string("1864")
                            elif match_arg_584.code == SituationFamilialeCalculAPL_Code.Couple:
                                _ = match_arg_584.value
                                temp_montant_forfaitaire_charges_29 = money_of_cents_string("3625")
                            match_arg_585 = situation_familiale_calcul_apl_7
                            if match_arg_585.code == SituationFamilialeCalculAPL_Code.PersonneSeule:
                                _ = match_arg_585.value
                                temp_montant_forfaitaire_charges_30 = money_of_cents_string("1864")
                            elif match_arg_585.code == SituationFamilialeCalculAPL_Code.Couple:
                                _ = match_arg_585.value
                                temp_montant_forfaitaire_charges_30 = money_of_cents_string("3625")
                            if ((temp_montant_forfaitaire_charges_30 +
                                (money_of_cents_string("932") *
                                decimal_of_integer(nombre_personnes_a_charge_7))) >
                                (temp_montant_forfaitaire_charges_29 +
                                (money_of_cents_string("932") *
                                decimal_of_string("6.")))):
                                match_arg_586 = situation_familiale_calcul_apl_7
                                if match_arg_586.code == SituationFamilialeCalculAPL_Code.PersonneSeule:
                                    _ = match_arg_586.value
                                    temp_montant_forfaitaire_charges_31 = money_of_cents_string("1864")
                                elif match_arg_586.code == SituationFamilialeCalculAPL_Code.Couple:
                                    _ = match_arg_586.value
                                    temp_montant_forfaitaire_charges_31 = money_of_cents_string("3625")
                                return (temp_montant_forfaitaire_charges_31 +
                                    (money_of_cents_string("932") *
                                    decimal_of_string("6.")))
                            else:
                                match_arg_587 = situation_familiale_calcul_apl_7
                                if match_arg_587.code == SituationFamilialeCalculAPL_Code.PersonneSeule:
                                    _ = match_arg_587.value
                                    temp_montant_forfaitaire_charges_32 = money_of_cents_string("1864")
                                elif match_arg_587.code == SituationFamilialeCalculAPL_Code.Couple:
                                    _ = match_arg_587.value
                                    temp_montant_forfaitaire_charges_32 = money_of_cents_string("3625")
                                return (temp_montant_forfaitaire_charges_32 +
                                    (money_of_cents_string("932") *
                                    decimal_of_integer(nombre_personnes_a_charge_7)))
                        else:
                            raise EmptyError
                    def temp_montant_forfaitaire_charges_33(_:Unit):
                        try:
                            match_arg_588 = residence_7
                            if match_arg_588.code == Collectivite_Code.Guadeloupe:
                                _ = match_arg_588.value
                                temp_montant_forfaitaire_charges_34 = True
                            elif match_arg_588.code == Collectivite_Code.Guyane:
                                _ = match_arg_588.value
                                temp_montant_forfaitaire_charges_34 = False
                            elif match_arg_588.code == Collectivite_Code.Martinique:
                                _ = match_arg_588.value
                                temp_montant_forfaitaire_charges_34 = True
                            elif match_arg_588.code == Collectivite_Code.LaReunion:
                                _ = match_arg_588.value
                                temp_montant_forfaitaire_charges_34 = True
                            elif match_arg_588.code == Collectivite_Code.SaintBarthelemy:
                                _ = match_arg_588.value
                                temp_montant_forfaitaire_charges_34 = True
                            elif match_arg_588.code == Collectivite_Code.SaintMartin:
                                _ = match_arg_588.value
                                temp_montant_forfaitaire_charges_34 = True
                            elif match_arg_588.code == Collectivite_Code.Metropole:
                                _ = match_arg_588.value
                                temp_montant_forfaitaire_charges_34 = False
                            elif match_arg_588.code == Collectivite_Code.SaintPierreEtMiquelon:
                                _ = match_arg_588.value
                                temp_montant_forfaitaire_charges_34 = False
                            elif match_arg_588.code == Collectivite_Code.Mayotte:
                                _ = match_arg_588.value
                                temp_montant_forfaitaire_charges_34 = True
                            if (((date_courante_13 >=
                                date_of_numbers(2021,10,1)) and
                                (date_courante_13 <
                                date_of_numbers(2022,1,1))) and
                                temp_montant_forfaitaire_charges_34):
                                match_arg_589 = situation_familiale_calcul_apl_7
                                if match_arg_589.code == SituationFamilialeCalculAPL_Code.PersonneSeule:
                                    _ = match_arg_589.value
                                    temp_montant_forfaitaire_charges_35 = money_of_cents_string("1872")
                                elif match_arg_589.code == SituationFamilialeCalculAPL_Code.Couple:
                                    _ = match_arg_589.value
                                    temp_montant_forfaitaire_charges_35 = money_of_cents_string("3640")
                                match_arg_590 = situation_familiale_calcul_apl_7
                                if match_arg_590.code == SituationFamilialeCalculAPL_Code.PersonneSeule:
                                    _ = match_arg_590.value
                                    temp_montant_forfaitaire_charges_36 = money_of_cents_string("1872")
                                elif match_arg_590.code == SituationFamilialeCalculAPL_Code.Couple:
                                    _ = match_arg_590.value
                                    temp_montant_forfaitaire_charges_36 = money_of_cents_string("3640")
                                if ((temp_montant_forfaitaire_charges_36 +
                                    (money_of_cents_string("936") *
                                    decimal_of_integer(nombre_personnes_a_charge_7))) >
                                    (temp_montant_forfaitaire_charges_35 +
                                    (money_of_cents_string("936") *
                                    decimal_of_string("6.")))):
                                    match_arg_591 = situation_familiale_calcul_apl_7
                                    if match_arg_591.code == SituationFamilialeCalculAPL_Code.PersonneSeule:
                                        _ = match_arg_591.value
                                        temp_montant_forfaitaire_charges_37 = money_of_cents_string("1872")
                                    elif match_arg_591.code == SituationFamilialeCalculAPL_Code.Couple:
                                        _ = match_arg_591.value
                                        temp_montant_forfaitaire_charges_37 = money_of_cents_string("3640")
                                    return (temp_montant_forfaitaire_charges_37 +
                                        (money_of_cents_string("936") *
                                        decimal_of_string("6.")))
                                else:
                                    match_arg_592 = situation_familiale_calcul_apl_7
                                    if match_arg_592.code == SituationFamilialeCalculAPL_Code.PersonneSeule:
                                        _ = match_arg_592.value
                                        temp_montant_forfaitaire_charges_38 = money_of_cents_string("1872")
                                    elif match_arg_592.code == SituationFamilialeCalculAPL_Code.Couple:
                                        _ = match_arg_592.value
                                        temp_montant_forfaitaire_charges_38 = money_of_cents_string("3640")
                                    return (temp_montant_forfaitaire_charges_38 +
                                        (money_of_cents_string("936") *
                                        decimal_of_integer(nombre_personnes_a_charge_7)))
                            else:
                                raise EmptyError
                        except EmptyError:
                            match_arg_593 = residence_7
                            if match_arg_593.code == Collectivite_Code.Guadeloupe:
                                _ = match_arg_593.value
                                temp_montant_forfaitaire_charges_39 = True
                            elif match_arg_593.code == Collectivite_Code.Guyane:
                                _ = match_arg_593.value
                                temp_montant_forfaitaire_charges_39 = False
                            elif match_arg_593.code == Collectivite_Code.Martinique:
                                _ = match_arg_593.value
                                temp_montant_forfaitaire_charges_39 = True
                            elif match_arg_593.code == Collectivite_Code.LaReunion:
                                _ = match_arg_593.value
                                temp_montant_forfaitaire_charges_39 = True
                            elif match_arg_593.code == Collectivite_Code.SaintBarthelemy:
                                _ = match_arg_593.value
                                temp_montant_forfaitaire_charges_39 = True
                            elif match_arg_593.code == Collectivite_Code.SaintMartin:
                                _ = match_arg_593.value
                                temp_montant_forfaitaire_charges_39 = True
                            elif match_arg_593.code == Collectivite_Code.Metropole:
                                _ = match_arg_593.value
                                temp_montant_forfaitaire_charges_39 = False
                            elif match_arg_593.code == Collectivite_Code.SaintPierreEtMiquelon:
                                _ = match_arg_593.value
                                temp_montant_forfaitaire_charges_39 = False
                            elif match_arg_593.code == Collectivite_Code.Mayotte:
                                _ = match_arg_593.value
                                temp_montant_forfaitaire_charges_39 = True
                            if (((date_courante_13 >=
                                date_of_numbers(2022,1,1)) and
                                (date_courante_13 <
                                date_of_numbers(2022,7,1))) and
                                temp_montant_forfaitaire_charges_39):
                                match_arg_594 = situation_familiale_calcul_apl_7
                                if match_arg_594.code == SituationFamilialeCalculAPL_Code.PersonneSeule:
                                    _ = match_arg_594.value
                                    temp_montant_forfaitaire_charges_40 = money_of_cents_string("1872")
                                elif match_arg_594.code == SituationFamilialeCalculAPL_Code.Couple:
                                    _ = match_arg_594.value
                                    temp_montant_forfaitaire_charges_40 = money_of_cents_string("3640")
                                match_arg_595 = situation_familiale_calcul_apl_7
                                if match_arg_595.code == SituationFamilialeCalculAPL_Code.PersonneSeule:
                                    _ = match_arg_595.value
                                    temp_montant_forfaitaire_charges_41 = money_of_cents_string("1872")
                                elif match_arg_595.code == SituationFamilialeCalculAPL_Code.Couple:
                                    _ = match_arg_595.value
                                    temp_montant_forfaitaire_charges_41 = money_of_cents_string("3640")
                                if ((temp_montant_forfaitaire_charges_41 +
                                    (money_of_cents_string("936") *
                                    decimal_of_integer(nombre_personnes_a_charge_7))) >
                                    (temp_montant_forfaitaire_charges_40 +
                                    (money_of_cents_string("936") *
                                    decimal_of_string("6.")))):
                                    match_arg_596 = situation_familiale_calcul_apl_7
                                    if match_arg_596.code == SituationFamilialeCalculAPL_Code.PersonneSeule:
                                        _ = match_arg_596.value
                                        temp_montant_forfaitaire_charges_42 = money_of_cents_string("1872")
                                    elif match_arg_596.code == SituationFamilialeCalculAPL_Code.Couple:
                                        _ = match_arg_596.value
                                        temp_montant_forfaitaire_charges_42 = money_of_cents_string("3640")
                                    return (temp_montant_forfaitaire_charges_42 +
                                        (money_of_cents_string("936") *
                                        decimal_of_string("6.")))
                                else:
                                    match_arg_597 = situation_familiale_calcul_apl_7
                                    if match_arg_597.code == SituationFamilialeCalculAPL_Code.PersonneSeule:
                                        _ = match_arg_597.value
                                        temp_montant_forfaitaire_charges_43 = money_of_cents_string("1872")
                                    elif match_arg_597.code == SituationFamilialeCalculAPL_Code.Couple:
                                        _ = match_arg_597.value
                                        temp_montant_forfaitaire_charges_43 = money_of_cents_string("3640")
                                    return (temp_montant_forfaitaire_charges_43 +
                                        (money_of_cents_string("936") *
                                        decimal_of_integer(nombre_personnes_a_charge_7)))
                            else:
                                raise EmptyError
                    def temp_montant_forfaitaire_charges_44(_:Unit):
                        match_arg_598 = residence_7
                        if match_arg_598.code == Collectivite_Code.Guadeloupe:
                            _ = match_arg_598.value
                            temp_montant_forfaitaire_charges_45 = True
                        elif match_arg_598.code == Collectivite_Code.Guyane:
                            _ = match_arg_598.value
                            temp_montant_forfaitaire_charges_45 = False
                        elif match_arg_598.code == Collectivite_Code.Martinique:
                            _ = match_arg_598.value
                            temp_montant_forfaitaire_charges_45 = True
                        elif match_arg_598.code == Collectivite_Code.LaReunion:
                            _ = match_arg_598.value
                            temp_montant_forfaitaire_charges_45 = True
                        elif match_arg_598.code == Collectivite_Code.SaintBarthelemy:
                            _ = match_arg_598.value
                            temp_montant_forfaitaire_charges_45 = True
                        elif match_arg_598.code == Collectivite_Code.SaintMartin:
                            _ = match_arg_598.value
                            temp_montant_forfaitaire_charges_45 = True
                        elif match_arg_598.code == Collectivite_Code.Metropole:
                            _ = match_arg_598.value
                            temp_montant_forfaitaire_charges_45 = False
                        elif match_arg_598.code == Collectivite_Code.SaintPierreEtMiquelon:
                            _ = match_arg_598.value
                            temp_montant_forfaitaire_charges_45 = False
                        elif match_arg_598.code == Collectivite_Code.Mayotte:
                            _ = match_arg_598.value
                            temp_montant_forfaitaire_charges_45 = True
                        if (((date_courante_13 >=
                            date_of_numbers(2022,7,1)) and
                            (date_courante_13 <
                            date_of_numbers(2023,1,1))) and
                            temp_montant_forfaitaire_charges_45):
                            match_arg_599 = situation_familiale_calcul_apl_7
                            if match_arg_599.code == SituationFamilialeCalculAPL_Code.PersonneSeule:
                                _ = match_arg_599.value
                                temp_montant_forfaitaire_charges_46 = money_of_cents_string("1938")
                            elif match_arg_599.code == SituationFamilialeCalculAPL_Code.Couple:
                                _ = match_arg_599.value
                                temp_montant_forfaitaire_charges_46 = money_of_cents_string("3767")
                            match_arg_600 = situation_familiale_calcul_apl_7
                            if match_arg_600.code == SituationFamilialeCalculAPL_Code.PersonneSeule:
                                _ = match_arg_600.value
                                temp_montant_forfaitaire_charges_47 = money_of_cents_string("1938")
                            elif match_arg_600.code == SituationFamilialeCalculAPL_Code.Couple:
                                _ = match_arg_600.value
                                temp_montant_forfaitaire_charges_47 = money_of_cents_string("3767")
                            if ((temp_montant_forfaitaire_charges_47 +
                                (money_of_cents_string("969") *
                                decimal_of_integer(nombre_personnes_a_charge_7))) >
                                (temp_montant_forfaitaire_charges_46 +
                                (money_of_cents_string("969") *
                                decimal_of_string("6.")))):
                                match_arg_601 = situation_familiale_calcul_apl_7
                                if match_arg_601.code == SituationFamilialeCalculAPL_Code.PersonneSeule:
                                    _ = match_arg_601.value
                                    temp_montant_forfaitaire_charges_48 = money_of_cents_string("1938")
                                elif match_arg_601.code == SituationFamilialeCalculAPL_Code.Couple:
                                    _ = match_arg_601.value
                                    temp_montant_forfaitaire_charges_48 = money_of_cents_string("3767")
                                return (temp_montant_forfaitaire_charges_48 +
                                    (money_of_cents_string("969") *
                                    decimal_of_string("6.")))
                            else:
                                match_arg_602 = situation_familiale_calcul_apl_7
                                if match_arg_602.code == SituationFamilialeCalculAPL_Code.PersonneSeule:
                                    _ = match_arg_602.value
                                    temp_montant_forfaitaire_charges_49 = money_of_cents_string("1938")
                                elif match_arg_602.code == SituationFamilialeCalculAPL_Code.Couple:
                                    _ = match_arg_602.value
                                    temp_montant_forfaitaire_charges_49 = money_of_cents_string("3767")
                                return (temp_montant_forfaitaire_charges_49 +
                                    (money_of_cents_string("969") *
                                    decimal_of_integer(nombre_personnes_a_charge_7)))
                        else:
                            raise EmptyError
                    def temp_montant_forfaitaire_charges_50(_:Unit):
                        match_arg_603 = residence_7
                        if match_arg_603.code == Collectivite_Code.Guadeloupe:
                            _ = match_arg_603.value
                            temp_montant_forfaitaire_charges_51 = True
                        elif match_arg_603.code == Collectivite_Code.Guyane:
                            _ = match_arg_603.value
                            temp_montant_forfaitaire_charges_51 = False
                        elif match_arg_603.code == Collectivite_Code.Martinique:
                            _ = match_arg_603.value
                            temp_montant_forfaitaire_charges_51 = True
                        elif match_arg_603.code == Collectivite_Code.LaReunion:
                            _ = match_arg_603.value
                            temp_montant_forfaitaire_charges_51 = True
                        elif match_arg_603.code == Collectivite_Code.SaintBarthelemy:
                            _ = match_arg_603.value
                            temp_montant_forfaitaire_charges_51 = True
                        elif match_arg_603.code == Collectivite_Code.SaintMartin:
                            _ = match_arg_603.value
                            temp_montant_forfaitaire_charges_51 = True
                        elif match_arg_603.code == Collectivite_Code.Metropole:
                            _ = match_arg_603.value
                            temp_montant_forfaitaire_charges_51 = False
                        elif match_arg_603.code == Collectivite_Code.SaintPierreEtMiquelon:
                            _ = match_arg_603.value
                            temp_montant_forfaitaire_charges_51 = False
                        elif match_arg_603.code == Collectivite_Code.Mayotte:
                            _ = match_arg_603.value
                            temp_montant_forfaitaire_charges_51 = True
                        if ((date_courante_13 >=
                            date_of_numbers(2023,1,1)) and
                            (temp_montant_forfaitaire_charges_51 and
                            copropriete_1)):
                            match_arg_604 = situation_familiale_calcul_apl_7
                            if match_arg_604.code == SituationFamilialeCalculAPL_Code.PersonneSeule:
                                _ = match_arg_604.value
                                temp_montant_forfaitaire_charges_52 = money_of_cents_string("1938")
                            elif match_arg_604.code == SituationFamilialeCalculAPL_Code.Couple:
                                _ = match_arg_604.value
                                temp_montant_forfaitaire_charges_52 = money_of_cents_string("3767")
                            return (temp_montant_forfaitaire_charges_52 +
                                (money_of_cents_string("969") *
                                multiplicateur_majoration_charges_1))
                        else:
                            raise EmptyError
                    temp_montant_forfaitaire_charges_53 = handle_default(
                        SourcePosition(filename="examples/aides_logement/prologue.catala_fr",
                        start_line=942, start_column=11,
                        end_line=942, end_column=38,
                        law_headings=["Secteur accession à la propriété",
                        "Calcul du montant de l'allocation logement",
                        "Prologue : aides au logement"]), [temp_montant_forfaitaire_charges_50,
                        temp_montant_forfaitaire_charges_44,
                        temp_montant_forfaitaire_charges_33,
                        temp_montant_forfaitaire_charges_27,
                        temp_montant_forfaitaire_charges_21],
                        temp_montant_forfaitaire_charges_20,
                        temp_montant_forfaitaire_charges_19)
                except EmptyError:
                    def temp_montant_forfaitaire_charges_54(_:Unit):
                        raise EmptyError
                    def temp_montant_forfaitaire_charges_55(_:Unit):
                        return False
                    def temp_montant_forfaitaire_charges_56(_:Unit):
                        match_arg_605 = residence_7
                        if match_arg_605.code == Collectivite_Code.Guadeloupe:
                            _ = match_arg_605.value
                            temp_montant_forfaitaire_charges_57 = True
                        elif match_arg_605.code == Collectivite_Code.Guyane:
                            _ = match_arg_605.value
                            temp_montant_forfaitaire_charges_57 = False
                        elif match_arg_605.code == Collectivite_Code.Martinique:
                            _ = match_arg_605.value
                            temp_montant_forfaitaire_charges_57 = True
                        elif match_arg_605.code == Collectivite_Code.LaReunion:
                            _ = match_arg_605.value
                            temp_montant_forfaitaire_charges_57 = True
                        elif match_arg_605.code == Collectivite_Code.SaintBarthelemy:
                            _ = match_arg_605.value
                            temp_montant_forfaitaire_charges_57 = True
                        elif match_arg_605.code == Collectivite_Code.SaintMartin:
                            _ = match_arg_605.value
                            temp_montant_forfaitaire_charges_57 = True
                        elif match_arg_605.code == Collectivite_Code.Metropole:
                            _ = match_arg_605.value
                            temp_montant_forfaitaire_charges_57 = False
                        elif match_arg_605.code == Collectivite_Code.SaintPierreEtMiquelon:
                            _ = match_arg_605.value
                            temp_montant_forfaitaire_charges_57 = False
                        elif match_arg_605.code == Collectivite_Code.Mayotte:
                            _ = match_arg_605.value
                            temp_montant_forfaitaire_charges_57 = True
                        if (((date_courante_13 >=
                            date_of_numbers(2020,1,1)) and
                            (date_courante_13 <
                            date_of_numbers(2020,10,1))) and
                            temp_montant_forfaitaire_charges_57):
                            if ((money_of_cents_string("3614") +
                                (money_of_cents_string("929") *
                                decimal_of_integer(nombre_personnes_a_charge_7))) >
                                (money_of_cents_string("3614") +
                                (money_of_cents_string("929") *
                                decimal_of_string("6.")))):
                                return (money_of_cents_string("3614") +
                                    (money_of_cents_string("929") *
                                    decimal_of_string("6.")))
                            else:
                                return (money_of_cents_string("3614") +
                                    (money_of_cents_string("929") *
                                    decimal_of_integer(nombre_personnes_a_charge_7)))
                        else:
                            raise EmptyError
                    def temp_montant_forfaitaire_charges_58(_:Unit):
                        match_arg_606 = residence_7
                        if match_arg_606.code == Collectivite_Code.Guadeloupe:
                            _ = match_arg_606.value
                            temp_montant_forfaitaire_charges_59 = True
                        elif match_arg_606.code == Collectivite_Code.Guyane:
                            _ = match_arg_606.value
                            temp_montant_forfaitaire_charges_59 = False
                        elif match_arg_606.code == Collectivite_Code.Martinique:
                            _ = match_arg_606.value
                            temp_montant_forfaitaire_charges_59 = True
                        elif match_arg_606.code == Collectivite_Code.LaReunion:
                            _ = match_arg_606.value
                            temp_montant_forfaitaire_charges_59 = True
                        elif match_arg_606.code == Collectivite_Code.SaintBarthelemy:
                            _ = match_arg_606.value
                            temp_montant_forfaitaire_charges_59 = True
                        elif match_arg_606.code == Collectivite_Code.SaintMartin:
                            _ = match_arg_606.value
                            temp_montant_forfaitaire_charges_59 = True
                        elif match_arg_606.code == Collectivite_Code.Metropole:
                            _ = match_arg_606.value
                            temp_montant_forfaitaire_charges_59 = False
                        elif match_arg_606.code == Collectivite_Code.SaintPierreEtMiquelon:
                            _ = match_arg_606.value
                            temp_montant_forfaitaire_charges_59 = False
                        elif match_arg_606.code == Collectivite_Code.Mayotte:
                            _ = match_arg_606.value
                            temp_montant_forfaitaire_charges_59 = True
                        if (((date_courante_13 >=
                            date_of_numbers(2020,10,1)) and
                            (date_courante_13 <
                            date_of_numbers(2021,10,1))) and
                            temp_montant_forfaitaire_charges_59):
                            if ((money_of_cents_string("3625") +
                                (money_of_cents_string("932") *
                                decimal_of_integer(nombre_personnes_a_charge_7))) >
                                (money_of_cents_string("3625") +
                                (money_of_cents_string("932") *
                                decimal_of_string("6.")))):
                                return (money_of_cents_string("3625") +
                                    (money_of_cents_string("932") *
                                    decimal_of_string("6.")))
                            else:
                                return (money_of_cents_string("3625") +
                                    (money_of_cents_string("932") *
                                    decimal_of_integer(nombre_personnes_a_charge_7)))
                        else:
                            raise EmptyError
                    def temp_montant_forfaitaire_charges_60(_:Unit):
                        try:
                            match_arg_607 = residence_7
                            if match_arg_607.code == Collectivite_Code.Guadeloupe:
                                _ = match_arg_607.value
                                temp_montant_forfaitaire_charges_61 = True
                            elif match_arg_607.code == Collectivite_Code.Guyane:
                                _ = match_arg_607.value
                                temp_montant_forfaitaire_charges_61 = False
                            elif match_arg_607.code == Collectivite_Code.Martinique:
                                _ = match_arg_607.value
                                temp_montant_forfaitaire_charges_61 = True
                            elif match_arg_607.code == Collectivite_Code.LaReunion:
                                _ = match_arg_607.value
                                temp_montant_forfaitaire_charges_61 = True
                            elif match_arg_607.code == Collectivite_Code.SaintBarthelemy:
                                _ = match_arg_607.value
                                temp_montant_forfaitaire_charges_61 = True
                            elif match_arg_607.code == Collectivite_Code.SaintMartin:
                                _ = match_arg_607.value
                                temp_montant_forfaitaire_charges_61 = True
                            elif match_arg_607.code == Collectivite_Code.Metropole:
                                _ = match_arg_607.value
                                temp_montant_forfaitaire_charges_61 = False
                            elif match_arg_607.code == Collectivite_Code.SaintPierreEtMiquelon:
                                _ = match_arg_607.value
                                temp_montant_forfaitaire_charges_61 = False
                            elif match_arg_607.code == Collectivite_Code.Mayotte:
                                _ = match_arg_607.value
                                temp_montant_forfaitaire_charges_61 = True
                            if (((date_courante_13 >=
                                date_of_numbers(2021,10,1)) and
                                (date_courante_13 <
                                date_of_numbers(2022,1,1))) and
                                temp_montant_forfaitaire_charges_61):
                                if ((money_of_cents_string("3640") +
                                    (money_of_cents_string("936") *
                                    decimal_of_integer(nombre_personnes_a_charge_7))) >
                                    (money_of_cents_string("3640") +
                                    (money_of_cents_string("936") *
                                    decimal_of_string("6.")))):
                                    return (money_of_cents_string("3640") +
                                        (money_of_cents_string("936") *
                                        decimal_of_string("6.")))
                                else:
                                    return (money_of_cents_string("3640") +
                                        (money_of_cents_string("936") *
                                        decimal_of_integer(nombre_personnes_a_charge_7)))
                            else:
                                raise EmptyError
                        except EmptyError:
                            match_arg_608 = residence_7
                            if match_arg_608.code == Collectivite_Code.Guadeloupe:
                                _ = match_arg_608.value
                                temp_montant_forfaitaire_charges_62 = True
                            elif match_arg_608.code == Collectivite_Code.Guyane:
                                _ = match_arg_608.value
                                temp_montant_forfaitaire_charges_62 = False
                            elif match_arg_608.code == Collectivite_Code.Martinique:
                                _ = match_arg_608.value
                                temp_montant_forfaitaire_charges_62 = True
                            elif match_arg_608.code == Collectivite_Code.LaReunion:
                                _ = match_arg_608.value
                                temp_montant_forfaitaire_charges_62 = True
                            elif match_arg_608.code == Collectivite_Code.SaintBarthelemy:
                                _ = match_arg_608.value
                                temp_montant_forfaitaire_charges_62 = True
                            elif match_arg_608.code == Collectivite_Code.SaintMartin:
                                _ = match_arg_608.value
                                temp_montant_forfaitaire_charges_62 = True
                            elif match_arg_608.code == Collectivite_Code.Metropole:
                                _ = match_arg_608.value
                                temp_montant_forfaitaire_charges_62 = False
                            elif match_arg_608.code == Collectivite_Code.SaintPierreEtMiquelon:
                                _ = match_arg_608.value
                                temp_montant_forfaitaire_charges_62 = False
                            elif match_arg_608.code == Collectivite_Code.Mayotte:
                                _ = match_arg_608.value
                                temp_montant_forfaitaire_charges_62 = True
                            if (((date_courante_13 >=
                                date_of_numbers(2022,1,1)) and
                                (date_courante_13 <
                                date_of_numbers(2022,7,1))) and
                                temp_montant_forfaitaire_charges_62):
                                if ((money_of_cents_string("3640") +
                                    (money_of_cents_string("936") *
                                    decimal_of_integer(nombre_personnes_a_charge_7))) >
                                    (money_of_cents_string("3640") +
                                    (money_of_cents_string("936") *
                                    decimal_of_string("6.")))):
                                    return (money_of_cents_string("3640") +
                                        (money_of_cents_string("936") *
                                        decimal_of_string("6.")))
                                else:
                                    return (money_of_cents_string("3640") +
                                        (money_of_cents_string("936") *
                                        decimal_of_integer(nombre_personnes_a_charge_7)))
                            else:
                                raise EmptyError
                    def temp_montant_forfaitaire_charges_63(_:Unit):
                        match_arg_609 = residence_7
                        if match_arg_609.code == Collectivite_Code.Guadeloupe:
                            _ = match_arg_609.value
                            temp_montant_forfaitaire_charges_64 = True
                        elif match_arg_609.code == Collectivite_Code.Guyane:
                            _ = match_arg_609.value
                            temp_montant_forfaitaire_charges_64 = False
                        elif match_arg_609.code == Collectivite_Code.Martinique:
                            _ = match_arg_609.value
                            temp_montant_forfaitaire_charges_64 = True
                        elif match_arg_609.code == Collectivite_Code.LaReunion:
                            _ = match_arg_609.value
                            temp_montant_forfaitaire_charges_64 = True
                        elif match_arg_609.code == Collectivite_Code.SaintBarthelemy:
                            _ = match_arg_609.value
                            temp_montant_forfaitaire_charges_64 = True
                        elif match_arg_609.code == Collectivite_Code.SaintMartin:
                            _ = match_arg_609.value
                            temp_montant_forfaitaire_charges_64 = True
                        elif match_arg_609.code == Collectivite_Code.Metropole:
                            _ = match_arg_609.value
                            temp_montant_forfaitaire_charges_64 = False
                        elif match_arg_609.code == Collectivite_Code.SaintPierreEtMiquelon:
                            _ = match_arg_609.value
                            temp_montant_forfaitaire_charges_64 = False
                        elif match_arg_609.code == Collectivite_Code.Mayotte:
                            _ = match_arg_609.value
                            temp_montant_forfaitaire_charges_64 = True
                        if (((date_courante_13 >=
                            date_of_numbers(2022,7,1)) and
                            (date_courante_13 <
                            date_of_numbers(2023,1,1))) and
                            temp_montant_forfaitaire_charges_64):
                            if ((money_of_cents_string("3767") +
                                (money_of_cents_string("969") *
                                decimal_of_integer(nombre_personnes_a_charge_7))) >
                                (money_of_cents_string("3767") +
                                (money_of_cents_string("969") *
                                decimal_of_string("6.")))):
                                return (money_of_cents_string("3767") +
                                    (money_of_cents_string("969") *
                                    decimal_of_string("6.")))
                            else:
                                return (money_of_cents_string("3767") +
                                    (money_of_cents_string("969") *
                                    decimal_of_integer(nombre_personnes_a_charge_7)))
                        else:
                            raise EmptyError
                    def temp_montant_forfaitaire_charges_65(_:Unit):
                        match_arg_610 = residence_7
                        if match_arg_610.code == Collectivite_Code.Guadeloupe:
                            _ = match_arg_610.value
                            temp_montant_forfaitaire_charges_66 = True
                        elif match_arg_610.code == Collectivite_Code.Guyane:
                            _ = match_arg_610.value
                            temp_montant_forfaitaire_charges_66 = False
                        elif match_arg_610.code == Collectivite_Code.Martinique:
                            _ = match_arg_610.value
                            temp_montant_forfaitaire_charges_66 = True
                        elif match_arg_610.code == Collectivite_Code.LaReunion:
                            _ = match_arg_610.value
                            temp_montant_forfaitaire_charges_66 = True
                        elif match_arg_610.code == Collectivite_Code.SaintBarthelemy:
                            _ = match_arg_610.value
                            temp_montant_forfaitaire_charges_66 = True
                        elif match_arg_610.code == Collectivite_Code.SaintMartin:
                            _ = match_arg_610.value
                            temp_montant_forfaitaire_charges_66 = True
                        elif match_arg_610.code == Collectivite_Code.Metropole:
                            _ = match_arg_610.value
                            temp_montant_forfaitaire_charges_66 = False
                        elif match_arg_610.code == Collectivite_Code.SaintPierreEtMiquelon:
                            _ = match_arg_610.value
                            temp_montant_forfaitaire_charges_66 = False
                        elif match_arg_610.code == Collectivite_Code.Mayotte:
                            _ = match_arg_610.value
                            temp_montant_forfaitaire_charges_66 = True
                        if ((date_courante_13 >=
                            date_of_numbers(2023,1,1)) and
                            temp_montant_forfaitaire_charges_66):
                            return (money_of_cents_string("3767") +
                                (money_of_cents_string("969") *
                                multiplicateur_majoration_charges_1))
                        else:
                            raise EmptyError
                    temp_montant_forfaitaire_charges_53 = handle_default(
                        SourcePosition(filename="examples/aides_logement/prologue.catala_fr",
                        start_line=942, start_column=11,
                        end_line=942, end_column=38,
                        law_headings=["Secteur accession à la propriété",
                        "Calcul du montant de l'allocation logement",
                        "Prologue : aides au logement"]), [temp_montant_forfaitaire_charges_65,
                        temp_montant_forfaitaire_charges_63,
                        temp_montant_forfaitaire_charges_60,
                        temp_montant_forfaitaire_charges_58,
                        temp_montant_forfaitaire_charges_56],
                        temp_montant_forfaitaire_charges_55,
                        temp_montant_forfaitaire_charges_54)
            except EmptyError:
                def temp_montant_forfaitaire_charges_67(_:Unit):
                    raise EmptyError
                def temp_montant_forfaitaire_charges_68(_:Unit):
                    return False
                def temp_montant_forfaitaire_charges_69(_:Unit):
                    if (((date_courante_13 >= date_of_numbers(2020,10,1)) and
                        (date_courante_13 < date_of_numbers(2021,10,1))) and
                        copropriete_1):
                        match_arg_611 = situation_familiale_calcul_apl_7
                        if match_arg_611.code == SituationFamilialeCalculAPL_Code.PersonneSeule:
                            _ = match_arg_611.value
                            temp_montant_forfaitaire_charges_70 = money_of_cents_string("2699")
                        elif match_arg_611.code == SituationFamilialeCalculAPL_Code.Couple:
                            _ = match_arg_611.value
                            temp_montant_forfaitaire_charges_70 = money_of_cents_string("5399")
                        return (temp_montant_forfaitaire_charges_70 +
                            (money_of_cents_string("1224") *
                            decimal_of_integer(nombre_personnes_a_charge_7)))
                    else:
                        raise EmptyError
                def temp_montant_forfaitaire_charges_71(_:Unit):
                    if (((date_courante_13 >= date_of_numbers(2021,10,1)) and
                        (date_courante_13 < date_of_numbers(2022,7,1))) and
                        copropriete_1):
                        match_arg_612 = situation_familiale_calcul_apl_7
                        if match_arg_612.code == SituationFamilialeCalculAPL_Code.PersonneSeule:
                            _ = match_arg_612.value
                            temp_montant_forfaitaire_charges_72 = money_of_cents_string("2710")
                        elif match_arg_612.code == SituationFamilialeCalculAPL_Code.Couple:
                            _ = match_arg_612.value
                            temp_montant_forfaitaire_charges_72 = money_of_cents_string("5422")
                        return (temp_montant_forfaitaire_charges_72 +
                            (money_of_cents_string("1229") *
                            decimal_of_integer(nombre_personnes_a_charge_7)))
                    else:
                        raise EmptyError
                def temp_montant_forfaitaire_charges_73(_:Unit):
                    if ((date_courante_13 >= date_of_numbers(2022,7,1)) and
                        copropriete_1):
                        match_arg_613 = situation_familiale_calcul_apl_7
                        if match_arg_613.code == SituationFamilialeCalculAPL_Code.PersonneSeule:
                            _ = match_arg_613.value
                            temp_montant_forfaitaire_charges_74 = money_of_cents_string("2805")
                        elif match_arg_613.code == SituationFamilialeCalculAPL_Code.Couple:
                            _ = match_arg_613.value
                            temp_montant_forfaitaire_charges_74 = money_of_cents_string("5612")
                        return (temp_montant_forfaitaire_charges_74 +
                            (money_of_cents_string("1272") *
                            multiplicateur_majoration_charges_1))
                    else:
                        raise EmptyError
                temp_montant_forfaitaire_charges_53 = handle_default(
                    SourcePosition(filename="examples/aides_logement/prologue.catala_fr",
                    start_line=942, start_column=11,
                    end_line=942, end_column=38,
                    law_headings=["Secteur accession à la propriété",
                    "Calcul du montant de l'allocation logement",
                    "Prologue : aides au logement"]), [temp_montant_forfaitaire_charges_73,
                    temp_montant_forfaitaire_charges_71,
                    temp_montant_forfaitaire_charges_69],
                    temp_montant_forfaitaire_charges_68,
                    temp_montant_forfaitaire_charges_67)
        except EmptyError:
            def temp_montant_forfaitaire_charges_75(_:Unit):
                raise EmptyError
            def temp_montant_forfaitaire_charges_76(_:Unit):
                return False
            def temp_montant_forfaitaire_charges_77(_:Unit):
                if ((date_courante_13 >= date_of_numbers(2020,10,1)) and
                    (date_courante_13 <
                    date_of_numbers(2021,10,1))):
                    if (nombre_personnes_a_charge_7 ==
                        integer_of_string("0")):
                        return money_of_cents_string("5399")
                    else:
                        return (money_of_cents_string("5399") +
                            (money_of_cents_string("1224") *
                            decimal_of_integer(nombre_personnes_a_charge_7)))
                else:
                    raise EmptyError
            def temp_montant_forfaitaire_charges_78(_:Unit):
                if ((date_courante_13 >= date_of_numbers(2021,10,1)) and
                    (date_courante_13 <
                    date_of_numbers(2022,7,1))):
                    if (nombre_personnes_a_charge_7 ==
                        integer_of_string("0")):
                        return money_of_cents_string("5422")
                    else:
                        return (money_of_cents_string("5422") +
                            (money_of_cents_string("1229") *
                            multiplicateur_majoration_charges_1))
                else:
                    raise EmptyError
            def temp_montant_forfaitaire_charges_79(_:Unit):
                if (date_courante_13 >=
                    date_of_numbers(2022,7,1)):
                    if (nombre_personnes_a_charge_7 ==
                        integer_of_string("0")):
                        return money_of_cents_string("5612")
                    else:
                        return (money_of_cents_string("5612") +
                            (money_of_cents_string("1272") *
                            multiplicateur_majoration_charges_1))
                else:
                    raise EmptyError
            temp_montant_forfaitaire_charges_53 = handle_default(SourcePosition(filename="examples/aides_logement/prologue.catala_fr",
                                                                 start_line=942,
                                                                 start_column=11,
                                                                 end_line=942, end_column=38,
                                                                 law_headings=["Secteur accession à la propriété",
                                                                 "Calcul du montant de l'allocation logement",
                                                                 "Prologue : aides au logement"]), [temp_montant_forfaitaire_charges_79,
                                                                 temp_montant_forfaitaire_charges_78,
                                                                 temp_montant_forfaitaire_charges_77],
                                                                 temp_montant_forfaitaire_charges_76,
                                                                 temp_montant_forfaitaire_charges_75)
    except EmptyError:
        temp_montant_forfaitaire_charges_53 = dead_value
        raise NoValueProvided(SourcePosition(filename="examples/aides_logement/prologue.catala_fr",
                                             start_line=942, start_column=11,
                                             end_line=942, end_column=38,
                                             law_headings=["Secteur accession à la propriété",
                                             "Calcul du montant de l'allocation logement",
                                             "Prologue : aides au logement"]))
    montant_forfaitaire_charges_1 = temp_montant_forfaitaire_charges_53
    try:
        def temp_seuil_minimal_ressources_menage(_:Unit):
            raise EmptyError
        def temp_seuil_minimal_ressources_menage_1(_:Unit):
            return False
        def temp_seuil_minimal_ressources_menage_2(_:Unit):
            match_arg_614 = type_travaux_logement_1
            if match_arg_614.code == TypeTravauxLogementR8425_Code.ObjectifDecenceLogement:
                _ = match_arg_614.value
                temp_seuil_minimal_ressources_menage_3 = False
            elif match_arg_614.code == TypeTravauxLogementR8425_Code.PrevuDansListeR321_15:
                _ = match_arg_614.value
                temp_seuil_minimal_ressources_menage_3 = True
            elif match_arg_614.code == TypeTravauxLogementR8425_Code.AgrandirOuRendreHabitableD331_63:
                _ = match_arg_614.value
                temp_seuil_minimal_ressources_menage_3 = False
            elif match_arg_614.code == TypeTravauxLogementR8425_Code.PasDeTravaux:
                _ = match_arg_614.value
                temp_seuil_minimal_ressources_menage_3 = False
            if ((date_signature_pret_2 > date_of_numbers(1994,9,30)) and
                temp_seuil_minimal_ressources_menage_3):
                return montant_forfaitaire_d842_12
            else:
                raise EmptyError
        def temp_seuil_minimal_ressources_menage_4(_:Unit):
            match_arg_615 = type_travaux_logement_1
            if match_arg_615.code == TypeTravauxLogementR8425_Code.ObjectifDecenceLogement:
                _ = match_arg_615.value
                temp_seuil_minimal_ressources_menage_5 = False
            elif match_arg_615.code == TypeTravauxLogementR8425_Code.PrevuDansListeR321_15:
                _ = match_arg_615.value
                temp_seuil_minimal_ressources_menage_5 = False
            elif match_arg_615.code == TypeTravauxLogementR8425_Code.AgrandirOuRendreHabitableD331_63:
                _ = match_arg_615.value
                temp_seuil_minimal_ressources_menage_5 = True
            elif match_arg_615.code == TypeTravauxLogementR8425_Code.PasDeTravaux:
                _ = match_arg_615.value
                temp_seuil_minimal_ressources_menage_5 = False
            match_arg_616 = type_travaux_logement_1
            if match_arg_616.code == TypeTravauxLogementR8425_Code.ObjectifDecenceLogement:
                _ = match_arg_616.value
                temp_seuil_minimal_ressources_menage_6 = True
            elif match_arg_616.code == TypeTravauxLogementR8425_Code.PrevuDansListeR321_15:
                _ = match_arg_616.value
                temp_seuil_minimal_ressources_menage_6 = False
            elif match_arg_616.code == TypeTravauxLogementR8425_Code.AgrandirOuRendreHabitableD331_63:
                _ = match_arg_616.value
                temp_seuil_minimal_ressources_menage_6 = False
            elif match_arg_616.code == TypeTravauxLogementR8425_Code.PasDeTravaux:
                _ = match_arg_616.value
                temp_seuil_minimal_ressources_menage_6 = False
            match_arg_617 = type_travaux_logement_1
            if match_arg_617.code == TypeTravauxLogementR8425_Code.ObjectifDecenceLogement:
                _ = match_arg_617.value
                temp_seuil_minimal_ressources_menage_7 = False
            elif match_arg_617.code == TypeTravauxLogementR8425_Code.PrevuDansListeR321_15:
                _ = match_arg_617.value
                temp_seuil_minimal_ressources_menage_7 = False
            elif match_arg_617.code == TypeTravauxLogementR8425_Code.AgrandirOuRendreHabitableD331_63:
                _ = match_arg_617.value
                temp_seuil_minimal_ressources_menage_7 = False
            elif match_arg_617.code == TypeTravauxLogementR8425_Code.PasDeTravaux:
                _ = match_arg_617.value
                temp_seuil_minimal_ressources_menage_7 = True
            if (((date_signature_pret_2 >= date_of_numbers(1992,9,30)) and
                (date_signature_pret_2 <= date_of_numbers(1994,9,30))) or
                ((date_signature_pret_2 > date_of_numbers(1994,9,30)) and
                (temp_seuil_minimal_ressources_menage_7 or
                (temp_seuil_minimal_ressources_menage_6 or
                temp_seuil_minimal_ressources_menage_5)))):
                return (mensualite_principale_1 * coefficient_d842_12)
            else:
                raise EmptyError
        temp_seuil_minimal_ressources_menage_8 = handle_default(SourcePosition(filename="examples/aides_logement/prologue.catala_fr",
                                                                start_line=954,
                                                                start_column=11,
                                                                end_line=954, end_column=42,
                                                                law_headings=["Secteur accession à la propriété",
                                                                "Calcul du montant de l'allocation logement",
                                                                "Prologue : aides au logement"]), [temp_seuil_minimal_ressources_menage_4,
                                                                temp_seuil_minimal_ressources_menage_2],
                                                                temp_seuil_minimal_ressources_menage_1,
                                                                temp_seuil_minimal_ressources_menage)
    except EmptyError:
        temp_seuil_minimal_ressources_menage_8 = dead_value
        raise NoValueProvided(SourcePosition(filename="examples/aides_logement/prologue.catala_fr",
                                             start_line=954, start_column=11,
                                             end_line=954, end_column=42,
                                             law_headings=["Secteur accession à la propriété",
                                             "Calcul du montant de l'allocation logement",
                                             "Prologue : aides au logement"]))
    seuil_minimal_ressources_menage = temp_seuil_minimal_ressources_menage_8
    try:
        def temp_traitement_aide_finale_minoration_forfaitaire_4(aide_finale_21:Money):
            try:
                if ((aide_finale_21 - montant_forfaitaire_d842_6) <
                    money_of_cents_string("0")):
                    return money_of_cents_string("0")
                else:
                    return (aide_finale_21 - montant_forfaitaire_d842_6)
            except EmptyError:
                raise NoValueProvided(SourcePosition(filename="examples/aides_logement/prologue.catala_fr",
                                                     start_line=980,
                                                     start_column=10,
                                                     end_line=980,
                                                     end_column=32,
                                                     law_headings=["Secteur accession à la propriété",
                                                     "Calcul du montant de l'allocation logement",
                                                     "Prologue : aides au logement"]))
    except EmptyError:
        temp_traitement_aide_finale_minoration_forfaitaire_4 = dead_value
        raise NoValueProvided(SourcePosition(filename="examples/aides_logement/prologue.catala_fr",
                                             start_line=980, start_column=10,
                                             end_line=980, end_column=32,
                                             law_headings=["Secteur accession à la propriété",
                                             "Calcul du montant de l'allocation logement",
                                             "Prologue : aides au logement"]))
    traitement_aide_finale_minoration_forfaitaire_4 = temp_traitement_aide_finale_minoration_forfaitaire_4
    try:
        def temp_calcul_plafond_mensualite_d842_6_avec_copropriete(date_calcul_1:Date, nombre_personnes_a_charge_9:Integer):
            try:
                try:
                    try:
                        try:
                            if (((date_courante_13 >=
                                date_of_numbers(2020,10,1)) and
                                (date_courante_13 <
                                date_of_numbers(2021,10,1))) and
                                copropriete_1):
                                return (calcul_plafond_mensualite_d842_6_base(
                                    date_calcul_1,
                                    nombre_personnes_a_charge_9) *
                                    decimal_of_string("0.75"))
                            else:
                                raise EmptyError
                        except EmptyError:
                            if (((date_courante_13 >=
                                date_of_numbers(2021,10,1)) and
                                (date_courante_13 <
                                date_of_numbers(2022,7,1))) and
                                copropriete_1):
                                return (calcul_plafond_mensualite_d842_6_base(
                                    date_calcul_1,
                                    nombre_personnes_a_charge_9) *
                                    decimal_of_string("0.75"))
                            else:
                                raise EmptyError
                    except EmptyError:
                        if ((date_courante_13 >=
                            date_of_numbers(2022,7,1)) and
                            copropriete_1):
                            return (calcul_plafond_mensualite_d842_6_base(
                                date_calcul_1, nombre_personnes_a_charge_9) *
                                decimal_of_string("0.75"))
                        else:
                            raise EmptyError
                except EmptyError:
                    if (date_courante_13 >=
                        date_of_numbers(2020,1,1)):
                        return calcul_plafond_mensualite_d842_6_base(
                            date_calcul_1, nombre_personnes_a_charge_9)
                    else:
                        raise EmptyError
            except EmptyError:
                raise NoValueProvided(SourcePosition(filename="examples/aides_logement/prologue.catala_fr",
                                                     start_line=950,
                                                     start_column=10,
                                                     end_line=950,
                                                     end_column=26,
                                                     law_headings=["Secteur accession à la propriété",
                                                     "Calcul du montant de l'allocation logement",
                                                     "Prologue : aides au logement"]))
    except EmptyError:
        temp_calcul_plafond_mensualite_d842_6_avec_copropriete = dead_value
        raise NoValueProvided(SourcePosition(filename="examples/aides_logement/prologue.catala_fr",
                                             start_line=950, start_column=10,
                                             end_line=950, end_column=26,
                                             law_headings=["Secteur accession à la propriété",
                                             "Calcul du montant de l'allocation logement",
                                             "Prologue : aides au logement"]))
    calcul_plafond_mensualite_d842_6_avec_copropriete = temp_calcul_plafond_mensualite_d842_6_avec_copropriete
    try:
        def temp_depense_nette_minimale_1(allocation_mensuelle_6:Money):
            try:
                return ((charges_mensuelles_pret +
                    montant_forfaitaire_charges_1) - allocation_mensuelle_6)
            except EmptyError:
                raise NoValueProvided(SourcePosition(filename="examples/aides_logement/prologue.catala_fr",
                                                     start_line=956,
                                                     start_column=11,
                                                     end_line=956,
                                                     end_column=33,
                                                     law_headings=["Secteur accession à la propriété",
                                                     "Calcul du montant de l'allocation logement",
                                                     "Prologue : aides au logement"]))
    except EmptyError:
        temp_depense_nette_minimale_1 = dead_value
        raise NoValueProvided(SourcePosition(filename="examples/aides_logement/prologue.catala_fr",
                                             start_line=956, start_column=11,
                                             end_line=956, end_column=33,
                                             law_headings=["Secteur accession à la propriété",
                                             "Calcul du montant de l'allocation logement",
                                             "Prologue : aides au logement"]))
    depense_nette_minimale_1 = temp_depense_nette_minimale_1
    try:
        try:
            if situation_r822_11_13_17_1:
                temp_ressources_menage_arrondies_seuil = ressources_menage_arrondies_base_1
            else:
                temp_ressources_menage_arrondies_seuil = dead_value
                raise EmptyError
        except EmptyError:
            if (ressources_menage_arrondies_base_1 <=
                seuil_minimal_ressources_menage):
                temp_ressources_menage_arrondies_seuil = (money_round(((seuil_minimal_ressources_menage +
                    money_of_cents_string("4999")) *
                    decimal_of_string("0.01"))) * decimal_of_string("100."))
            else:
                temp_ressources_menage_arrondies_seuil = ressources_menage_arrondies_base_1
    except EmptyError:
        temp_ressources_menage_arrondies_seuil = dead_value
        raise NoValueProvided(SourcePosition(filename="examples/aides_logement/prologue.catala_fr",
                                             start_line=924, start_column=10,
                                             end_line=924, end_column=15,
                                             law_headings=["Secteur accession à la propriété",
                                             "Calcul du montant de l'allocation logement",
                                             "Prologue : aides au logement"]))
    ressources_menage_arrondies_seuil = temp_ressources_menage_arrondies_seuil
    try:
        def temp_calcul_plafond_mensualite_d842_6_avec_limitation_dom_tom(date_calcul_2:Date, nombre_personnes_a_charge_10:Integer):
            try:
                try:
                    try:
                        try:
                            try:
                                try:
                                    match_arg_618 = residence_7
                                    if match_arg_618.code == Collectivite_Code.Guadeloupe:
                                        _ = match_arg_618.value
                                        temp_calcul_plafond_mensualite_d842_6_avec_limitation_dom_tom_1 = True
                                    elif match_arg_618.code == Collectivite_Code.Guyane:
                                        _ = match_arg_618.value
                                        temp_calcul_plafond_mensualite_d842_6_avec_limitation_dom_tom_1 = False
                                    elif match_arg_618.code == Collectivite_Code.Martinique:
                                        _ = match_arg_618.value
                                        temp_calcul_plafond_mensualite_d842_6_avec_limitation_dom_tom_1 = True
                                    elif match_arg_618.code == Collectivite_Code.LaReunion:
                                        _ = match_arg_618.value
                                        temp_calcul_plafond_mensualite_d842_6_avec_limitation_dom_tom_1 = True
                                    elif match_arg_618.code == Collectivite_Code.SaintBarthelemy:
                                        _ = match_arg_618.value
                                        temp_calcul_plafond_mensualite_d842_6_avec_limitation_dom_tom_1 = True
                                    elif match_arg_618.code == Collectivite_Code.SaintMartin:
                                        _ = match_arg_618.value
                                        temp_calcul_plafond_mensualite_d842_6_avec_limitation_dom_tom_1 = True
                                    elif match_arg_618.code == Collectivite_Code.Metropole:
                                        _ = match_arg_618.value
                                        temp_calcul_plafond_mensualite_d842_6_avec_limitation_dom_tom_1 = False
                                    elif match_arg_618.code == Collectivite_Code.SaintPierreEtMiquelon:
                                        _ = match_arg_618.value
                                        temp_calcul_plafond_mensualite_d842_6_avec_limitation_dom_tom_1 = False
                                    elif match_arg_618.code == Collectivite_Code.Mayotte:
                                        _ = match_arg_618.value
                                        temp_calcul_plafond_mensualite_d842_6_avec_limitation_dom_tom_1 = True
                                    if (((date_courante_13 >=
                                        date_of_numbers(2020,1,1)) and
                                        (date_courante_13 <
                                        date_of_numbers(2020,10,1))) and
                                        ((nombre_personnes_a_charge_10 >=
                                        integer_of_string("6")) and
                                        temp_calcul_plafond_mensualite_d842_6_avec_limitation_dom_tom_1)):
                                        return calcul_plafond_mensualite_d842_6_avec_copropriete(
                                            date_calcul_2,
                                            integer_of_string("6"))
                                    else:
                                        raise EmptyError
                                except EmptyError:
                                    match_arg_619 = residence_7
                                    if match_arg_619.code == Collectivite_Code.Guadeloupe:
                                        _ = match_arg_619.value
                                        temp_calcul_plafond_mensualite_d842_6_avec_limitation_dom_tom_2 = True
                                    elif match_arg_619.code == Collectivite_Code.Guyane:
                                        _ = match_arg_619.value
                                        temp_calcul_plafond_mensualite_d842_6_avec_limitation_dom_tom_2 = False
                                    elif match_arg_619.code == Collectivite_Code.Martinique:
                                        _ = match_arg_619.value
                                        temp_calcul_plafond_mensualite_d842_6_avec_limitation_dom_tom_2 = True
                                    elif match_arg_619.code == Collectivite_Code.LaReunion:
                                        _ = match_arg_619.value
                                        temp_calcul_plafond_mensualite_d842_6_avec_limitation_dom_tom_2 = True
                                    elif match_arg_619.code == Collectivite_Code.SaintBarthelemy:
                                        _ = match_arg_619.value
                                        temp_calcul_plafond_mensualite_d842_6_avec_limitation_dom_tom_2 = True
                                    elif match_arg_619.code == Collectivite_Code.SaintMartin:
                                        _ = match_arg_619.value
                                        temp_calcul_plafond_mensualite_d842_6_avec_limitation_dom_tom_2 = True
                                    elif match_arg_619.code == Collectivite_Code.Metropole:
                                        _ = match_arg_619.value
                                        temp_calcul_plafond_mensualite_d842_6_avec_limitation_dom_tom_2 = False
                                    elif match_arg_619.code == Collectivite_Code.SaintPierreEtMiquelon:
                                        _ = match_arg_619.value
                                        temp_calcul_plafond_mensualite_d842_6_avec_limitation_dom_tom_2 = False
                                    elif match_arg_619.code == Collectivite_Code.Mayotte:
                                        _ = match_arg_619.value
                                        temp_calcul_plafond_mensualite_d842_6_avec_limitation_dom_tom_2 = True
                                    if (((date_courante_13 >=
                                        date_of_numbers(2020,10,1)) and
                                        (date_courante_13 <
                                        date_of_numbers(2021,10,1))) and
                                        ((nombre_personnes_a_charge_10 >=
                                        integer_of_string("6")) and
                                        temp_calcul_plafond_mensualite_d842_6_avec_limitation_dom_tom_2)):
                                        return calcul_plafond_mensualite_d842_6_avec_copropriete(
                                            date_calcul_2,
                                            integer_of_string("6"))
                                    else:
                                        raise EmptyError
                            except EmptyError:
                                match_arg_620 = residence_7
                                if match_arg_620.code == Collectivite_Code.Guadeloupe:
                                    _ = match_arg_620.value
                                    temp_calcul_plafond_mensualite_d842_6_avec_limitation_dom_tom_3 = True
                                elif match_arg_620.code == Collectivite_Code.Guyane:
                                    _ = match_arg_620.value
                                    temp_calcul_plafond_mensualite_d842_6_avec_limitation_dom_tom_3 = False
                                elif match_arg_620.code == Collectivite_Code.Martinique:
                                    _ = match_arg_620.value
                                    temp_calcul_plafond_mensualite_d842_6_avec_limitation_dom_tom_3 = True
                                elif match_arg_620.code == Collectivite_Code.LaReunion:
                                    _ = match_arg_620.value
                                    temp_calcul_plafond_mensualite_d842_6_avec_limitation_dom_tom_3 = True
                                elif match_arg_620.code == Collectivite_Code.SaintBarthelemy:
                                    _ = match_arg_620.value
                                    temp_calcul_plafond_mensualite_d842_6_avec_limitation_dom_tom_3 = True
                                elif match_arg_620.code == Collectivite_Code.SaintMartin:
                                    _ = match_arg_620.value
                                    temp_calcul_plafond_mensualite_d842_6_avec_limitation_dom_tom_3 = True
                                elif match_arg_620.code == Collectivite_Code.Metropole:
                                    _ = match_arg_620.value
                                    temp_calcul_plafond_mensualite_d842_6_avec_limitation_dom_tom_3 = False
                                elif match_arg_620.code == Collectivite_Code.SaintPierreEtMiquelon:
                                    _ = match_arg_620.value
                                    temp_calcul_plafond_mensualite_d842_6_avec_limitation_dom_tom_3 = False
                                elif match_arg_620.code == Collectivite_Code.Mayotte:
                                    _ = match_arg_620.value
                                    temp_calcul_plafond_mensualite_d842_6_avec_limitation_dom_tom_3 = True
                                if (((date_courante_13 >=
                                    date_of_numbers(2021,10,1)) and
                                    (date_courante_13 <
                                    date_of_numbers(2022,1,1))) and
                                    ((nombre_personnes_a_charge_10 >=
                                    integer_of_string("6")) and
                                    temp_calcul_plafond_mensualite_d842_6_avec_limitation_dom_tom_3)):
                                    return calcul_plafond_mensualite_d842_6_avec_copropriete(
                                        date_calcul_2,
                                        integer_of_string("6"))
                                else:
                                    raise EmptyError
                        except EmptyError:
                            match_arg_621 = residence_7
                            if match_arg_621.code == Collectivite_Code.Guadeloupe:
                                _ = match_arg_621.value
                                temp_calcul_plafond_mensualite_d842_6_avec_limitation_dom_tom_4 = True
                            elif match_arg_621.code == Collectivite_Code.Guyane:
                                _ = match_arg_621.value
                                temp_calcul_plafond_mensualite_d842_6_avec_limitation_dom_tom_4 = False
                            elif match_arg_621.code == Collectivite_Code.Martinique:
                                _ = match_arg_621.value
                                temp_calcul_plafond_mensualite_d842_6_avec_limitation_dom_tom_4 = True
                            elif match_arg_621.code == Collectivite_Code.LaReunion:
                                _ = match_arg_621.value
                                temp_calcul_plafond_mensualite_d842_6_avec_limitation_dom_tom_4 = True
                            elif match_arg_621.code == Collectivite_Code.SaintBarthelemy:
                                _ = match_arg_621.value
                                temp_calcul_plafond_mensualite_d842_6_avec_limitation_dom_tom_4 = True
                            elif match_arg_621.code == Collectivite_Code.SaintMartin:
                                _ = match_arg_621.value
                                temp_calcul_plafond_mensualite_d842_6_avec_limitation_dom_tom_4 = True
                            elif match_arg_621.code == Collectivite_Code.Metropole:
                                _ = match_arg_621.value
                                temp_calcul_plafond_mensualite_d842_6_avec_limitation_dom_tom_4 = False
                            elif match_arg_621.code == Collectivite_Code.SaintPierreEtMiquelon:
                                _ = match_arg_621.value
                                temp_calcul_plafond_mensualite_d842_6_avec_limitation_dom_tom_4 = False
                            elif match_arg_621.code == Collectivite_Code.Mayotte:
                                _ = match_arg_621.value
                                temp_calcul_plafond_mensualite_d842_6_avec_limitation_dom_tom_4 = True
                            if (((date_courante_13 >=
                                date_of_numbers(2022,1,1)) and
                                (date_courante_13 <
                                date_of_numbers(2022,7,1))) and
                                ((nombre_personnes_a_charge_10 >=
                                integer_of_string("6")) and
                                temp_calcul_plafond_mensualite_d842_6_avec_limitation_dom_tom_4)):
                                return calcul_plafond_mensualite_d842_6_avec_copropriete(
                                    date_calcul_2, integer_of_string("6"))
                            else:
                                raise EmptyError
                    except EmptyError:
                        match_arg_622 = residence_7
                        if match_arg_622.code == Collectivite_Code.Guadeloupe:
                            _ = match_arg_622.value
                            temp_calcul_plafond_mensualite_d842_6_avec_limitation_dom_tom_5 = True
                        elif match_arg_622.code == Collectivite_Code.Guyane:
                            _ = match_arg_622.value
                            temp_calcul_plafond_mensualite_d842_6_avec_limitation_dom_tom_5 = False
                        elif match_arg_622.code == Collectivite_Code.Martinique:
                            _ = match_arg_622.value
                            temp_calcul_plafond_mensualite_d842_6_avec_limitation_dom_tom_5 = True
                        elif match_arg_622.code == Collectivite_Code.LaReunion:
                            _ = match_arg_622.value
                            temp_calcul_plafond_mensualite_d842_6_avec_limitation_dom_tom_5 = True
                        elif match_arg_622.code == Collectivite_Code.SaintBarthelemy:
                            _ = match_arg_622.value
                            temp_calcul_plafond_mensualite_d842_6_avec_limitation_dom_tom_5 = True
                        elif match_arg_622.code == Collectivite_Code.SaintMartin:
                            _ = match_arg_622.value
                            temp_calcul_plafond_mensualite_d842_6_avec_limitation_dom_tom_5 = True
                        elif match_arg_622.code == Collectivite_Code.Metropole:
                            _ = match_arg_622.value
                            temp_calcul_plafond_mensualite_d842_6_avec_limitation_dom_tom_5 = False
                        elif match_arg_622.code == Collectivite_Code.SaintPierreEtMiquelon:
                            _ = match_arg_622.value
                            temp_calcul_plafond_mensualite_d842_6_avec_limitation_dom_tom_5 = False
                        elif match_arg_622.code == Collectivite_Code.Mayotte:
                            _ = match_arg_622.value
                            temp_calcul_plafond_mensualite_d842_6_avec_limitation_dom_tom_5 = True
                        if (((date_courante_13 >=
                            date_of_numbers(2022,7,1)) and
                            (date_courante_13 <
                            date_of_numbers(2023,1,1))) and
                            ((nombre_personnes_a_charge_10 >=
                            integer_of_string("6")) and
                            temp_calcul_plafond_mensualite_d842_6_avec_limitation_dom_tom_5)):
                            return calcul_plafond_mensualite_d842_6_avec_copropriete(
                                date_calcul_2, integer_of_string("6"))
                        else:
                            raise EmptyError
                except EmptyError:
                    if (date_courante_13 >=
                        date_of_numbers(2020,1,1)):
                        return calcul_plafond_mensualite_d842_6_avec_copropriete(
                            date_calcul_2, nombre_personnes_a_charge_10)
                    else:
                        raise EmptyError
            except EmptyError:
                raise NoValueProvided(SourcePosition(filename="examples/aides_logement/prologue.catala_fr",
                                                     start_line=951,
                                                     start_column=10,
                                                     end_line=951,
                                                     end_column=33,
                                                     law_headings=["Secteur accession à la propriété",
                                                     "Calcul du montant de l'allocation logement",
                                                     "Prologue : aides au logement"]))
    except EmptyError:
        temp_calcul_plafond_mensualite_d842_6_avec_limitation_dom_tom = dead_value
        raise NoValueProvided(SourcePosition(filename="examples/aides_logement/prologue.catala_fr",
                                             start_line=951, start_column=10,
                                             end_line=951, end_column=33,
                                             law_headings=["Secteur accession à la propriété",
                                             "Calcul du montant de l'allocation logement",
                                             "Prologue : aides au logement"]))
    calcul_plafond_mensualite_d842_6_avec_limitation_dom_tom = temp_calcul_plafond_mensualite_d842_6_avec_limitation_dom_tom
    try:
        temp_calcul_equivalence_loyer_minimale_dot_date_courante_3 = date_courante_13
    except EmptyError:
        temp_calcul_equivalence_loyer_minimale_dot_date_courante_3 = dead_value
        raise NoValueProvided(SourcePosition(filename="examples/aides_logement/prologue.catala_fr",
                                             start_line=1010,
                                             start_column=14, end_line=1010,
                                             end_column=61,
                                             law_headings=["Secteur accession à la propriété",
                                             "Calcul du montant de l'allocation logement",
                                             "Prologue : aides au logement"]))
    calcul_equivalence_loyer_minimale_dot_date_courante_3 = temp_calcul_equivalence_loyer_minimale_dot_date_courante_3
    try:
        temp_calcul_equivalence_loyer_minimale_dot_ressources_menage_arrondies_3 = ressources_menage_arrondies_seuil
    except EmptyError:
        temp_calcul_equivalence_loyer_minimale_dot_ressources_menage_arrondies_3 = dead_value
        raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                             start_line=4443,
                                             start_column=14, end_line=4443,
                                             end_column=75,
                                             law_headings=["Article D842-6",
                                             "Section 2 : Accession à la propriété",
                                             "Chapitre 2 : Modalités de liquidation et de versement des allocations de logement",
                                             "Titre IV : Allocations de Logement",
                                             "Livre VIII : Aides personnelles au logement",
                                             "Partie réglementaire",
                                             "Code de la construction et de l'habitation"]))
    calcul_equivalence_loyer_minimale_dot_ressources_menage_arrondies_3 = temp_calcul_equivalence_loyer_minimale_dot_ressources_menage_arrondies_3
    try:
        temp_calcul_equivalence_loyer_minimale_dot_condition_2_du_832_25_3 = True
    except EmptyError:
        temp_calcul_equivalence_loyer_minimale_dot_condition_2_du_832_25_3 = dead_value
        raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                             start_line=4442,
                                             start_column=14, end_line=4442,
                                             end_column=69,
                                             law_headings=["Article D842-6",
                                             "Section 2 : Accession à la propriété",
                                             "Chapitre 2 : Modalités de liquidation et de versement des allocations de logement",
                                             "Titre IV : Allocations de Logement",
                                             "Livre VIII : Aides personnelles au logement",
                                             "Partie réglementaire",
                                             "Code de la construction et de l'habitation"]))
    calcul_equivalence_loyer_minimale_dot_condition_2_du_832_25_3 = temp_calcul_equivalence_loyer_minimale_dot_condition_2_du_832_25_3
    try:
        temp_calcul_equivalence_loyer_minimale_dot_n_nombre_parts_d832_25_3 = calcul_nombre_parts_dot_n_nombre_parts_d832_11_1
    except EmptyError:
        temp_calcul_equivalence_loyer_minimale_dot_n_nombre_parts_d832_25_3 = dead_value
        raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                             start_line=4445,
                                             start_column=14, end_line=4445,
                                             end_column=70,
                                             law_headings=["Article D842-6",
                                             "Section 2 : Accession à la propriété",
                                             "Chapitre 2 : Modalités de liquidation et de versement des allocations de logement",
                                             "Titre IV : Allocations de Logement",
                                             "Livre VIII : Aides personnelles au logement",
                                             "Partie réglementaire",
                                             "Code de la construction et de l'habitation"]))
    calcul_equivalence_loyer_minimale_dot_n_nombre_parts_d832_25_3 = temp_calcul_equivalence_loyer_minimale_dot_n_nombre_parts_d832_25_3
    result_16 = calcul_equivalence_loyer_minimale(CalculEquivalenceLoyerMinimaleIn(date_courante_in = calcul_equivalence_loyer_minimale_dot_date_courante_3,
                                                  ressources_menage_arrondies_in = calcul_equivalence_loyer_minimale_dot_ressources_menage_arrondies_3,
                                                  condition_2_du_832_25_in = calcul_equivalence_loyer_minimale_dot_condition_2_du_832_25_3,
                                                  n_nombre_parts_d832_25_in = calcul_equivalence_loyer_minimale_dot_n_nombre_parts_d832_25_3))
    calcul_equivalence_loyer_minimale_dot_montant_3 = result_16.montant
    try:
        temp_calcul_apl_logement_foyer_dot_type_logement_foyer_1 = TypeLogementFoyer(TypeLogementFoyer_Code.Autre,
            Unit())
    except EmptyError:
        temp_calcul_apl_logement_foyer_dot_type_logement_foyer_1 = dead_value
        raise NoValueProvided(SourcePosition(filename="examples/aides_logement/prologue.catala_fr",
                                             start_line=992, start_column=14,
                                             end_line=992, end_column=59,
                                             law_headings=["Secteur accession à la propriété",
                                             "Calcul du montant de l'allocation logement",
                                             "Prologue : aides au logement"]))
    calcul_apl_logement_foyer_dot_type_logement_foyer_1 = temp_calcul_apl_logement_foyer_dot_type_logement_foyer_1
    try:
        temp_calcul_apl_logement_foyer_dot_date_conventionnement_1 = date_of_numbers(1970,1,1)
    except EmptyError:
        temp_calcul_apl_logement_foyer_dot_date_conventionnement_1 = dead_value
        raise NoValueProvided(SourcePosition(filename="examples/aides_logement/prologue.catala_fr",
                                             start_line=994, start_column=14,
                                             end_line=994, end_column=61,
                                             law_headings=["Secteur accession à la propriété",
                                             "Calcul du montant de l'allocation logement",
                                             "Prologue : aides au logement"]))
    calcul_apl_logement_foyer_dot_date_conventionnement_1 = temp_calcul_apl_logement_foyer_dot_date_conventionnement_1
    try:
        temp_calcul_apl_logement_foyer_dot_ressources_menage_arrondies_1 = ressources_menage_arrondies_seuil
    except EmptyError:
        temp_calcul_apl_logement_foyer_dot_ressources_menage_arrondies_1 = dead_value
        raise NoValueProvided(SourcePosition(filename="examples/aides_logement/prologue.catala_fr",
                                             start_line=998, start_column=14,
                                             end_line=998, end_column=67,
                                             law_headings=["Secteur accession à la propriété",
                                             "Calcul du montant de l'allocation logement",
                                             "Prologue : aides au logement"]))
    calcul_apl_logement_foyer_dot_ressources_menage_arrondies_1 = temp_calcul_apl_logement_foyer_dot_ressources_menage_arrondies_1
    try:
        temp_calcul_apl_logement_foyer_dot_nombre_personnes_a_charge_1 = nombre_personnes_a_charge_7
    except EmptyError:
        temp_calcul_apl_logement_foyer_dot_nombre_personnes_a_charge_1 = dead_value
        raise NoValueProvided(SourcePosition(filename="examples/aides_logement/prologue.catala_fr",
                                             start_line=1000,
                                             start_column=14, end_line=1000,
                                             end_column=65,
                                             law_headings=["Secteur accession à la propriété",
                                             "Calcul du montant de l'allocation logement",
                                             "Prologue : aides au logement"]))
    calcul_apl_logement_foyer_dot_nombre_personnes_a_charge_1 = temp_calcul_apl_logement_foyer_dot_nombre_personnes_a_charge_1
    try:
        temp_calcul_apl_logement_foyer_dot_situation_familiale_calcul_apl_1 = situation_familiale_calcul_apl_7
    except EmptyError:
        temp_calcul_apl_logement_foyer_dot_situation_familiale_calcul_apl_1 = dead_value
        raise NoValueProvided(SourcePosition(filename="examples/aides_logement/prologue.catala_fr",
                                             start_line=1002,
                                             start_column=14, end_line=1002,
                                             end_column=70,
                                             law_headings=["Secteur accession à la propriété",
                                             "Calcul du montant de l'allocation logement",
                                             "Prologue : aides au logement"]))
    calcul_apl_logement_foyer_dot_situation_familiale_calcul_apl_1 = temp_calcul_apl_logement_foyer_dot_situation_familiale_calcul_apl_1
    try:
        temp_calcul_apl_logement_foyer_dot_zone_1 = zone_5
    except EmptyError:
        temp_calcul_apl_logement_foyer_dot_zone_1 = dead_value
        raise NoValueProvided(SourcePosition(filename="examples/aides_logement/prologue.catala_fr",
                                             start_line=1004,
                                             start_column=14, end_line=1004,
                                             end_column=44,
                                             law_headings=["Secteur accession à la propriété",
                                             "Calcul du montant de l'allocation logement",
                                             "Prologue : aides au logement"]))
    calcul_apl_logement_foyer_dot_zone_1 = temp_calcul_apl_logement_foyer_dot_zone_1
    try:
        temp_calcul_apl_logement_foyer_dot_date_courante_1 = date_courante_13
    except EmptyError:
        temp_calcul_apl_logement_foyer_dot_date_courante_1 = dead_value
        raise NoValueProvided(SourcePosition(filename="examples/aides_logement/prologue.catala_fr",
                                             start_line=1007,
                                             start_column=14, end_line=1007,
                                             end_column=53,
                                             law_headings=["Secteur accession à la propriété",
                                             "Calcul du montant de l'allocation logement",
                                             "Prologue : aides au logement"]))
    calcul_apl_logement_foyer_dot_date_courante_1 = temp_calcul_apl_logement_foyer_dot_date_courante_1
    try:
        temp_calcul_apl_logement_foyer_dot_redevance_1 = money_of_cents_string("0")
    except EmptyError:
        temp_calcul_apl_logement_foyer_dot_redevance_1 = dead_value
        raise NoValueProvided(SourcePosition(filename="examples/aides_logement/prologue.catala_fr",
                                             start_line=996, start_column=14,
                                             end_line=996, end_column=49,
                                             law_headings=["Secteur accession à la propriété",
                                             "Calcul du montant de l'allocation logement",
                                             "Prologue : aides au logement"]))
    calcul_apl_logement_foyer_dot_redevance_1 = temp_calcul_apl_logement_foyer_dot_redevance_1
    try:
        temp_calcul_apl_logement_foyer_dot_residence_1 = residence_7
    except EmptyError:
        temp_calcul_apl_logement_foyer_dot_residence_1 = dead_value
        raise NoValueProvided(SourcePosition(filename="examples/aides_logement/prologue.catala_fr",
                                             start_line=1006,
                                             start_column=14, end_line=1006,
                                             end_column=49,
                                             law_headings=["Secteur accession à la propriété",
                                             "Calcul du montant de l'allocation logement",
                                             "Prologue : aides au logement"]))
    calcul_apl_logement_foyer_dot_residence_1 = temp_calcul_apl_logement_foyer_dot_residence_1
    def temp_calcul_apl_logement_foyer_dot_condition_2_du_832_25_1(_:Unit):
        return True
    calcul_apl_logement_foyer_dot_condition_2_du_832_25_1 = temp_calcul_apl_logement_foyer_dot_condition_2_du_832_25_1
    def temp_calcul_apl_logement_foyer_dot_limitation_majoration_personnes_a_charge_3(_:Unit):
        try:
            match_arg_623 = residence_7
            if match_arg_623.code == Collectivite_Code.Guadeloupe:
                _ = match_arg_623.value
                temp_calcul_apl_logement_foyer_dot_limitation_majoration_personnes_a_charge_4 = False
            elif match_arg_623.code == Collectivite_Code.Guyane:
                _ = match_arg_623.value
                temp_calcul_apl_logement_foyer_dot_limitation_majoration_personnes_a_charge_4 = False
            elif match_arg_623.code == Collectivite_Code.Martinique:
                _ = match_arg_623.value
                temp_calcul_apl_logement_foyer_dot_limitation_majoration_personnes_a_charge_4 = False
            elif match_arg_623.code == Collectivite_Code.LaReunion:
                _ = match_arg_623.value
                temp_calcul_apl_logement_foyer_dot_limitation_majoration_personnes_a_charge_4 = False
            elif match_arg_623.code == Collectivite_Code.SaintBarthelemy:
                _ = match_arg_623.value
                temp_calcul_apl_logement_foyer_dot_limitation_majoration_personnes_a_charge_4 = True
            elif match_arg_623.code == Collectivite_Code.SaintMartin:
                _ = match_arg_623.value
                temp_calcul_apl_logement_foyer_dot_limitation_majoration_personnes_a_charge_4 = True
            elif match_arg_623.code == Collectivite_Code.Metropole:
                _ = match_arg_623.value
                temp_calcul_apl_logement_foyer_dot_limitation_majoration_personnes_a_charge_4 = False
            elif match_arg_623.code == Collectivite_Code.SaintPierreEtMiquelon:
                _ = match_arg_623.value
                temp_calcul_apl_logement_foyer_dot_limitation_majoration_personnes_a_charge_4 = False
            elif match_arg_623.code == Collectivite_Code.Mayotte:
                _ = match_arg_623.value
                temp_calcul_apl_logement_foyer_dot_limitation_majoration_personnes_a_charge_4 = False
            if temp_calcul_apl_logement_foyer_dot_limitation_majoration_personnes_a_charge_4:
                temp_calcul_apl_logement_foyer_dot_limitation_majoration_personnes_a_charge_5 = True
            else:
                temp_calcul_apl_logement_foyer_dot_limitation_majoration_personnes_a_charge_5 = dead_value
                raise EmptyError
        except EmptyError:
            match_arg_624 = residence_7
            if match_arg_624.code == Collectivite_Code.Guadeloupe:
                _ = match_arg_624.value
                temp_calcul_apl_logement_foyer_dot_limitation_majoration_personnes_a_charge_6 = True
            elif match_arg_624.code == Collectivite_Code.Guyane:
                _ = match_arg_624.value
                temp_calcul_apl_logement_foyer_dot_limitation_majoration_personnes_a_charge_6 = True
            elif match_arg_624.code == Collectivite_Code.Martinique:
                _ = match_arg_624.value
                temp_calcul_apl_logement_foyer_dot_limitation_majoration_personnes_a_charge_6 = True
            elif match_arg_624.code == Collectivite_Code.LaReunion:
                _ = match_arg_624.value
                temp_calcul_apl_logement_foyer_dot_limitation_majoration_personnes_a_charge_6 = True
            elif match_arg_624.code == Collectivite_Code.SaintBarthelemy:
                _ = match_arg_624.value
                temp_calcul_apl_logement_foyer_dot_limitation_majoration_personnes_a_charge_6 = False
            elif match_arg_624.code == Collectivite_Code.SaintMartin:
                _ = match_arg_624.value
                temp_calcul_apl_logement_foyer_dot_limitation_majoration_personnes_a_charge_6 = False
            elif match_arg_624.code == Collectivite_Code.Metropole:
                _ = match_arg_624.value
                temp_calcul_apl_logement_foyer_dot_limitation_majoration_personnes_a_charge_6 = False
            elif match_arg_624.code == Collectivite_Code.SaintPierreEtMiquelon:
                _ = match_arg_624.value
                temp_calcul_apl_logement_foyer_dot_limitation_majoration_personnes_a_charge_6 = False
            elif match_arg_624.code == Collectivite_Code.Mayotte:
                _ = match_arg_624.value
                temp_calcul_apl_logement_foyer_dot_limitation_majoration_personnes_a_charge_6 = True
            if temp_calcul_apl_logement_foyer_dot_limitation_majoration_personnes_a_charge_6:
                temp_calcul_apl_logement_foyer_dot_limitation_majoration_personnes_a_charge_5 = True
            else:
                temp_calcul_apl_logement_foyer_dot_limitation_majoration_personnes_a_charge_5 = dead_value
                raise EmptyError
        return temp_calcul_apl_logement_foyer_dot_limitation_majoration_personnes_a_charge_5
    calcul_apl_logement_foyer_dot_limitation_majoration_personnes_a_charge_1 = temp_calcul_apl_logement_foyer_dot_limitation_majoration_personnes_a_charge_3
    def temp_calcul_apl_logement_foyer_dot_n_nombre_parts_d832_25_2(_:Unit):
        temp_calcul_apl_logement_foyer_dot_n_nombre_parts_d832_25_3 = dead_value
        raise EmptyError
        return temp_calcul_apl_logement_foyer_dot_n_nombre_parts_d832_25_3
    calcul_apl_logement_foyer_dot_n_nombre_parts_d832_25_2 = temp_calcul_apl_logement_foyer_dot_n_nombre_parts_d832_25_2
    result_17 = calcul_aide_personnalisee_logement_foyer(CalculAidePersonnaliseeLogementFoyerIn(type_logement_foyer_in = calcul_apl_logement_foyer_dot_type_logement_foyer_1,
                                                         date_conventionnement_in = calcul_apl_logement_foyer_dot_date_conventionnement_1,
                                                         ressources_menage_arrondies_in = calcul_apl_logement_foyer_dot_ressources_menage_arrondies_1,
                                                         nombre_personnes_a_charge_in = calcul_apl_logement_foyer_dot_nombre_personnes_a_charge_1,
                                                         situation_familiale_calcul_apl_in = calcul_apl_logement_foyer_dot_situation_familiale_calcul_apl_1,
                                                         zone_in = calcul_apl_logement_foyer_dot_zone_1,
                                                         date_courante_in = calcul_apl_logement_foyer_dot_date_courante_1,
                                                         redevance_in = calcul_apl_logement_foyer_dot_redevance_1,
                                                         residence_in = calcul_apl_logement_foyer_dot_residence_1,
                                                         condition_2_du_832_25_in = calcul_apl_logement_foyer_dot_condition_2_du_832_25_1,
                                                         limitation_majoration_personnes_a_charge_in = calcul_apl_logement_foyer_dot_limitation_majoration_personnes_a_charge_1,
                                                         n_nombre_parts_d832_25_in = calcul_apl_logement_foyer_dot_n_nombre_parts_d832_25_2))
    calcul_apl_logement_foyer_dot_coefficient_multiplicateur_d832_25_1 = result_17.coefficient_multiplicateur_d832_25
    calcul_apl_logement_foyer_dot_coefficient_r_d832_25_1 = result_17.coefficient_r_d832_25
    calcul_apl_logement_foyer_dot_n_nombre_parts_d832_25_3 = result_17.n_nombre_parts_d832_25
    calcul_apl_logement_foyer_dot_equivalence_loyer_eligible_1 = result_17.equivalence_loyer_eligible
    calcul_apl_logement_foyer_dot_plafond_equivalence_loyer_eligible_1 = result_17.plafond_equivalence_loyer_eligible
    calcul_apl_logement_foyer_dot_equivalence_loyer_minimale_1 = result_17.equivalence_loyer_minimale
    calcul_apl_logement_foyer_dot_coefficient_prise_en_charge_d832_25_seuil_1 = result_17.coefficient_prise_en_charge_d832_25
    calcul_apl_logement_foyer_dot_aide_finale_formule_1 = result_17.aide_finale_formule
    calcul_apl_logement_foyer_dot_traitement_aide_finale_montant_minimal_1 = result_17.traitement_aide_finale
    try:
        try:
            if condition_d842_11_3:
                temp_seuil_minimal_depense_nette_minimale = (ressources_menage_arrondies_seuil *
                    coefficient_d842_11)
            else:
                temp_seuil_minimal_depense_nette_minimale = dead_value
                raise EmptyError
        except EmptyError:
            temp_seuil_minimal_depense_nette_minimale = montant_forfaitaire_d842_11
    except EmptyError:
        temp_seuil_minimal_depense_nette_minimale = dead_value
        raise NoValueProvided(SourcePosition(filename="examples/aides_logement/prologue.catala_fr",
                                             start_line=953, start_column=11,
                                             end_line=953, end_column=47,
                                             law_headings=["Secteur accession à la propriété",
                                             "Calcul du montant de l'allocation logement",
                                             "Prologue : aides au logement"]))
    seuil_minimal_depense_nette_minimale = temp_seuil_minimal_depense_nette_minimale
    try:
        try:
            if local_habite_premiere_fois_beneficiaire_1:
                if (calcul_plafond_mensualite_d842_6_avec_limitation_dom_tom(
                    date_signature_pret_2, nombre_personnes_a_charge_7) <
                    calcul_plafond_mensualite_d842_6_avec_limitation_dom_tom(
                    date_entree_logement_1, nombre_personnes_a_charge_7)):
                    temp_plafond_mensualite_d842_6 = calcul_plafond_mensualite_d842_6_avec_limitation_dom_tom(
                        date_entree_logement_1, nombre_personnes_a_charge_7)
                else:
                    temp_plafond_mensualite_d842_6 = calcul_plafond_mensualite_d842_6_avec_limitation_dom_tom(
                        date_signature_pret_2, nombre_personnes_a_charge_7)
            else:
                temp_plafond_mensualite_d842_6 = dead_value
                raise EmptyError
        except EmptyError:
            temp_plafond_mensualite_d842_6 = calcul_plafond_mensualite_d842_6_avec_limitation_dom_tom(
                date_signature_pret_2, nombre_personnes_a_charge_7)
    except EmptyError:
        temp_plafond_mensualite_d842_6 = dead_value
        raise NoValueProvided(SourcePosition(filename="examples/aides_logement/prologue.catala_fr",
                                             start_line=945, start_column=11,
                                             end_line=945, end_column=36,
                                             law_headings=["Secteur accession à la propriété",
                                             "Calcul du montant de l'allocation logement",
                                             "Prologue : aides au logement"]))
    plafond_mensualite_d842_6 = temp_plafond_mensualite_d842_6
    try:
        temp_mensualite_minimale_10 = calcul_equivalence_loyer_minimale_dot_montant_3
    except EmptyError:
        temp_mensualite_minimale_10 = dead_value
        raise NoValueProvided(SourcePosition(filename="examples/aides_logement/prologue.catala_fr",
                                             start_line=943, start_column=12,
                                             end_line=943, end_column=31,
                                             law_headings=["Secteur accession à la propriété",
                                             "Calcul du montant de l'allocation logement",
                                             "Prologue : aides au logement"]))
    mensualite_minimale_1 = temp_mensualite_minimale_10
    try:
        temp_coefficient_prise_en_charge_1 = calcul_apl_logement_foyer_dot_coefficient_prise_en_charge_d832_25_seuil_1
    except EmptyError:
        temp_coefficient_prise_en_charge_1 = dead_value
        raise NoValueProvided(SourcePosition(filename="examples/aides_logement/prologue.catala_fr",
                                             start_line=944, start_column=12,
                                             end_line=944, end_column=39,
                                             law_headings=["Secteur accession à la propriété",
                                             "Calcul du montant de l'allocation logement",
                                             "Prologue : aides au logement"]))
    coefficient_prise_en_charge_1 = temp_coefficient_prise_en_charge_1
    try:
        def temp_abattement_depense_nette_minimale_1(allocation_mensuelle_7:Money):
            try:
                if (depense_nette_minimale_1(allocation_mensuelle_7) <
                    seuil_minimal_depense_nette_minimale):
                    return (seuil_minimal_depense_nette_minimale -
                        depense_nette_minimale_1(allocation_mensuelle_7))
                else:
                    return money_of_cents_string("0")
            except EmptyError:
                raise NoValueProvided(SourcePosition(filename="examples/aides_logement/prologue.catala_fr",
                                                     start_line=958,
                                                     start_column=11,
                                                     end_line=958,
                                                     end_column=44,
                                                     law_headings=["Secteur accession à la propriété",
                                                     "Calcul du montant de l'allocation logement",
                                                     "Prologue : aides au logement"]))
    except EmptyError:
        temp_abattement_depense_nette_minimale_1 = dead_value
        raise NoValueProvided(SourcePosition(filename="examples/aides_logement/prologue.catala_fr",
                                             start_line=958, start_column=11,
                                             end_line=958, end_column=44,
                                             law_headings=["Secteur accession à la propriété",
                                             "Calcul du montant de l'allocation logement",
                                             "Prologue : aides au logement"]))
    abattement_depense_nette_minimale_1 = temp_abattement_depense_nette_minimale_1
    try:
        if (mensualite_principale_1 >
            plafond_mensualite_d842_6):
            temp_mensualite_eligible_1 = plafond_mensualite_d842_6
        else:
            temp_mensualite_eligible_1 = mensualite_principale_1
    except EmptyError:
        temp_mensualite_eligible_1 = dead_value
        raise NoValueProvided(SourcePosition(filename="examples/aides_logement/prologue.catala_fr",
                                             start_line=941, start_column=12,
                                             end_line=941, end_column=31,
                                             law_headings=["Secteur accession à la propriété",
                                             "Calcul du montant de l'allocation logement",
                                             "Prologue : aides au logement"]))
    mensualite_eligible_1 = temp_mensualite_eligible_1
    try:
        def temp_traitement_aide_finale_depense_nette_minimale_1(aide_finale_22:Money):
            try:
                if (traitement_aide_finale_minoration_forfaitaire_4(aide_finale_22) <
                    abattement_depense_nette_minimale_1(traitement_aide_finale_minoration_forfaitaire_4(
                                                        aide_finale_22))):
                    return money_of_cents_string("0")
                else:
                    return (traitement_aide_finale_minoration_forfaitaire_4(
                        aide_finale_22) -
                        abattement_depense_nette_minimale_1(traitement_aide_finale_minoration_forfaitaire_4(
                                                            aide_finale_22)))
            except EmptyError:
                raise NoValueProvided(SourcePosition(filename="examples/aides_logement/prologue.catala_fr",
                                                     start_line=981,
                                                     start_column=10,
                                                     end_line=981,
                                                     end_column=32,
                                                     law_headings=["Secteur accession à la propriété",
                                                     "Calcul du montant de l'allocation logement",
                                                     "Prologue : aides au logement"]))
    except EmptyError:
        temp_traitement_aide_finale_depense_nette_minimale_1 = dead_value
        raise NoValueProvided(SourcePosition(filename="examples/aides_logement/prologue.catala_fr",
                                             start_line=981, start_column=10,
                                             end_line=981, end_column=32,
                                             law_headings=["Secteur accession à la propriété",
                                             "Calcul du montant de l'allocation logement",
                                             "Prologue : aides au logement"]))
    traitement_aide_finale_depense_nette_minimale_1 = temp_traitement_aide_finale_depense_nette_minimale_1
    try:
        temp_aide_finale_formule_6 = (((mensualite_eligible_1 +
            montant_forfaitaire_charges_1) - mensualite_minimale_1) *
            coefficient_prise_en_charge_1)
    except EmptyError:
        temp_aide_finale_formule_6 = dead_value
        raise NoValueProvided(SourcePosition(filename="examples/aides_logement/prologue.catala_fr",
                                             start_line=976, start_column=12,
                                             end_line=976, end_column=31,
                                             law_headings=["Secteur accession à la propriété",
                                             "Calcul du montant de l'allocation logement",
                                             "Prologue : aides au logement"]))
    aide_finale_formule_5 = temp_aide_finale_formule_6
    try:
        def temp_traitement_aide_finale_contributions_sociales_arrondi_4(aide_finale_23:Money):
            try:
                if ((money_round(((traitement_aide_finale_depense_nette_minimale_1(
                    aide_finale_23) -
                    contributions_sociales_dot_montant_4(traitement_aide_finale_depense_nette_minimale_1(
                                                         aide_finale_23))) -
                    money_of_cents_string("50"))) +
                    contributions_sociales_dot_montant_4(traitement_aide_finale_depense_nette_minimale_1(
                                                         aide_finale_23))) >=
                    money_of_cents_string("0")):
                    return (money_round(((traitement_aide_finale_depense_nette_minimale_1(
                        aide_finale_23) -
                        contributions_sociales_dot_montant_4(traitement_aide_finale_depense_nette_minimale_1(
                                                             aide_finale_23))) -
                        money_of_cents_string("50"))) +
                        contributions_sociales_dot_montant_4(traitement_aide_finale_depense_nette_minimale_1(
                                                             aide_finale_23)))
                else:
                    return money_of_cents_string("0")
            except EmptyError:
                raise NoValueProvided(SourcePosition(filename="examples/aides_logement/prologue.catala_fr",
                                                     start_line=982,
                                                     start_column=10,
                                                     end_line=982,
                                                     end_column=40,
                                                     law_headings=["Secteur accession à la propriété",
                                                     "Calcul du montant de l'allocation logement",
                                                     "Prologue : aides au logement"]))
    except EmptyError:
        temp_traitement_aide_finale_contributions_sociales_arrondi_4 = dead_value
        raise NoValueProvided(SourcePosition(filename="examples/aides_logement/prologue.catala_fr",
                                             start_line=982, start_column=10,
                                             end_line=982, end_column=40,
                                             law_headings=["Secteur accession à la propriété",
                                             "Calcul du montant de l'allocation logement",
                                             "Prologue : aides au logement"]))
    traitement_aide_finale_contributions_sociales_arrondi_4 = temp_traitement_aide_finale_contributions_sociales_arrondi_4
    try:
        def temp_traitement_aide_finale_montant_minimal_4(aide_finale_24:Money):
            try:
                if (traitement_aide_finale_contributions_sociales_arrondi_4(
                    aide_finale_24) <
                    montant_minimal_aide_d842_6):
                    return money_of_cents_string("0")
                else:
                    return traitement_aide_finale_contributions_sociales_arrondi_4(
                        aide_finale_24)
            except EmptyError:
                raise NoValueProvided(SourcePosition(filename="examples/aides_logement/prologue.catala_fr",
                                                     start_line=983,
                                                     start_column=10,
                                                     end_line=983,
                                                     end_column=25,
                                                     law_headings=["Secteur accession à la propriété",
                                                     "Calcul du montant de l'allocation logement",
                                                     "Prologue : aides au logement"]))
    except EmptyError:
        temp_traitement_aide_finale_montant_minimal_4 = dead_value
        raise NoValueProvided(SourcePosition(filename="examples/aides_logement/prologue.catala_fr",
                                             start_line=983, start_column=10,
                                             end_line=983, end_column=25,
                                             law_headings=["Secteur accession à la propriété",
                                             "Calcul du montant de l'allocation logement",
                                             "Prologue : aides au logement"]))
    traitement_aide_finale_montant_minimal_4 = temp_traitement_aide_finale_montant_minimal_4
    try:
        temp___14 = (date_signature_pret_2 >= date_of_numbers(1992,9,30))
    except EmptyError:
        temp___14 = dead_value
        raise NoValueProvided(SourcePosition(filename="examples/aides_logement/prologue.catala_fr",
                                             start_line=1015,
                                             start_column=13, end_line=1015,
                                             end_column=48,
                                             law_headings=["Secteur accession à la propriété",
                                             "Calcul du montant de l'allocation logement",
                                             "Prologue : aides au logement"]))
    if not (temp___14):
        raise AssertionFailure(SourcePosition(filename="examples/aides_logement/prologue.catala_fr",
                                              start_line=1015,
                                              start_column=13, end_line=1015,
                                              end_column=48,
                                              law_headings=["Secteur accession à la propriété",
                                                           "Calcul du montant de l'allocation logement",
                                                           "Prologue : aides au logement"]))
    try:
        temp___15 = (date_courante_13 >= date_of_numbers(2021,10,1))
    except EmptyError:
        temp___15 = dead_value
        raise NoValueProvided(SourcePosition(filename="examples/aides_logement/prologue.catala_fr",
                                             start_line=1014,
                                             start_column=13, end_line=1014,
                                             end_column=42,
                                             law_headings=["Secteur accession à la propriété",
                                             "Calcul du montant de l'allocation logement",
                                             "Prologue : aides au logement"]))
    if not (temp___15):
        raise AssertionFailure(SourcePosition(filename="examples/aides_logement/prologue.catala_fr",
                                              start_line=1014,
                                              start_column=13, end_line=1014,
                                              end_column=42,
                                              law_headings=["Secteur accession à la propriété",
                                                           "Calcul du montant de l'allocation logement",
                                                           "Prologue : aides au logement"]))
    return CalculAllocationLogementAccessionPropriete(mensualite_eligible = mensualite_eligible_1,
        mensualite_minimale = mensualite_minimale_1,
        coefficient_prise_en_charge = coefficient_prise_en_charge_1,
        aide_finale_formule = aide_finale_formule_5,
        traitement_aide_finale = traitement_aide_finale_montant_minimal_4)

def calcul_aide_personnalisee_logement(calcul_aide_personnalisee_logement_in:CalculAidePersonnaliseeLogementIn):
    mode_occupation_2 = calcul_aide_personnalisee_logement_in.mode_occupation_in
    type_aide_2 = calcul_aide_personnalisee_logement_in.type_aide_in
    ressources_menage_sans_arrondi = calcul_aide_personnalisee_logement_in.ressources_menage_sans_arrondi_in
    situation_familiale_1 = calcul_aide_personnalisee_logement_in.situation_familiale_in
    nombre_personnes_a_charge_11 = calcul_aide_personnalisee_logement_in.nombre_personnes_a_charge_in
    zone_6 = calcul_aide_personnalisee_logement_in.zone_in
    date_courante_14 = calcul_aide_personnalisee_logement_in.date_courante_in
    residence_8 = calcul_aide_personnalisee_logement_in.residence_in
    try:
        match_arg_625 = mode_occupation_2
        if match_arg_625.code == ModeOccupation_Code.Locataire:
            location = match_arg_625.value
            temp_categorie_calcul_apl = CategorieCalculAPL(CategorieCalculAPL_Code.Location,
                location)
        elif match_arg_625.code == ModeOccupation_Code.ResidentLogementFoyer:
            logementfoyer = match_arg_625.value
            temp_categorie_calcul_apl = CategorieCalculAPL(CategorieCalculAPL_Code.LogementFoyer,
                logementfoyer)
        elif match_arg_625.code == ModeOccupation_Code.AccessionProprieteLocalUsageExclusifHabitation:
            proprietaire = match_arg_625.value
            temp_categorie_calcul_apl = CategorieCalculAPL(CategorieCalculAPL_Code.AccessionPropriete,
                proprietaire)
        elif match_arg_625.code == ModeOccupation_Code.SousLocataire:
            location_1 = match_arg_625.value
            temp_categorie_calcul_apl = CategorieCalculAPL(CategorieCalculAPL_Code.Location,
                location_1)
        elif match_arg_625.code == ModeOccupation_Code.LocationAccession:
            proprietaire_1 = match_arg_625.value
            temp_categorie_calcul_apl = CategorieCalculAPL(CategorieCalculAPL_Code.AccessionPropriete,
                proprietaire_1)
    except EmptyError:
        temp_categorie_calcul_apl = dead_value
        raise NoValueProvided(SourcePosition(filename="examples/aides_logement/prologue.catala_fr",
                                             start_line=826, start_column=11,
                                             end_line=826, end_column=31,
                                             law_headings=["Tous secteurs",
                                             "Calcul du montant de l'aide personnalisée au logement",
                                             "Déclarations des champs d'application",
                                             "Prologue : aides au logement"]))
    categorie_calcul_apl = temp_categorie_calcul_apl
    try:
        temp_ressources_menage_avec_arrondi = arrondi_centaine_superieure(
            ressources_menage_sans_arrondi)
    except EmptyError:
        temp_ressources_menage_avec_arrondi = dead_value
        raise NoValueProvided(SourcePosition(filename="examples/aides_logement/prologue.catala_fr",
                                             start_line=819, start_column=10,
                                             end_line=819, end_column=22,
                                             law_headings=["Tous secteurs",
                                             "Calcul du montant de l'aide personnalisée au logement",
                                             "Déclarations des champs d'application",
                                             "Prologue : aides au logement"]))
    ressources_menage_avec_arrondi = temp_ressources_menage_avec_arrondi
    try:
        match_arg_626 = situation_familiale_1
        if match_arg_626.code == SituationFamiliale_Code.Celibataire:
            _ = match_arg_626.value
            temp_situation_familiale_calcul_apl = SituationFamilialeCalculAPL(SituationFamilialeCalculAPL_Code.PersonneSeule,
                Unit())
        elif match_arg_626.code == SituationFamiliale_Code.Maries:
            _ = match_arg_626.value
            temp_situation_familiale_calcul_apl = SituationFamilialeCalculAPL(SituationFamilialeCalculAPL_Code.Couple,
                Unit())
        elif match_arg_626.code == SituationFamiliale_Code.Pacses:
            _ = match_arg_626.value
            temp_situation_familiale_calcul_apl = SituationFamilialeCalculAPL(SituationFamilialeCalculAPL_Code.Couple,
                Unit())
        elif match_arg_626.code == SituationFamiliale_Code.Concubins:
            _ = match_arg_626.value
            temp_situation_familiale_calcul_apl = SituationFamilialeCalculAPL(SituationFamilialeCalculAPL_Code.Couple,
                Unit())
        elif match_arg_626.code == SituationFamiliale_Code.CelibataireSepareDeFait:
            _ = match_arg_626.value
            temp_situation_familiale_calcul_apl = SituationFamilialeCalculAPL(SituationFamilialeCalculAPL_Code.PersonneSeule,
                Unit())
        elif match_arg_626.code == SituationFamiliale_Code.ConcubinageDontSepareDeFait:
            _ = match_arg_626.value
            temp_situation_familiale_calcul_apl = SituationFamilialeCalculAPL(SituationFamilialeCalculAPL_Code.Couple,
                Unit())
    except EmptyError:
        temp_situation_familiale_calcul_apl = dead_value
        raise NoValueProvided(SourcePosition(filename="examples/aides_logement/prologue.catala_fr",
                                             start_line=827, start_column=11,
                                             end_line=827, end_column=41,
                                             law_headings=["Tous secteurs",
                                             "Calcul du montant de l'aide personnalisée au logement",
                                             "Déclarations des champs d'application",
                                             "Prologue : aides au logement"]))
    situation_familiale_calcul_apl_8 = temp_situation_familiale_calcul_apl
    try:
        try:
            match_arg_627 = categorie_calcul_apl
            if match_arg_627.code == CategorieCalculAPL_Code.Location:
                _ = match_arg_627.value
                temp_sous_calcul_traitement = False
            elif match_arg_627.code == CategorieCalculAPL_Code.AccessionPropriete:
                _ = match_arg_627.value
                temp_sous_calcul_traitement = False
            elif match_arg_627.code == CategorieCalculAPL_Code.LogementFoyer:
                _ = match_arg_627.value
                temp_sous_calcul_traitement = True
            match_arg_628 = residence_8
            if match_arg_628.code == Collectivite_Code.Guadeloupe:
                _ = match_arg_628.value
                temp_sous_calcul_traitement_1 = False
            elif match_arg_628.code == Collectivite_Code.Guyane:
                _ = match_arg_628.value
                temp_sous_calcul_traitement_1 = False
            elif match_arg_628.code == Collectivite_Code.Martinique:
                _ = match_arg_628.value
                temp_sous_calcul_traitement_1 = False
            elif match_arg_628.code == Collectivite_Code.LaReunion:
                _ = match_arg_628.value
                temp_sous_calcul_traitement_1 = False
            elif match_arg_628.code == Collectivite_Code.SaintBarthelemy:
                _ = match_arg_628.value
                temp_sous_calcul_traitement_1 = False
            elif match_arg_628.code == Collectivite_Code.SaintMartin:
                _ = match_arg_628.value
                temp_sous_calcul_traitement_1 = False
            elif match_arg_628.code == Collectivite_Code.Metropole:
                _ = match_arg_628.value
                temp_sous_calcul_traitement_1 = False
            elif match_arg_628.code == Collectivite_Code.SaintPierreEtMiquelon:
                _ = match_arg_628.value
                temp_sous_calcul_traitement_1 = True
            elif match_arg_628.code == Collectivite_Code.Mayotte:
                _ = match_arg_628.value
                temp_sous_calcul_traitement_1 = False
            if (temp_sous_calcul_traitement_1 and
                temp_sous_calcul_traitement):
                match_arg_629 = categorie_calcul_apl
                if match_arg_629.code == CategorieCalculAPL_Code.Location:
                    _ = match_arg_629.value
                    temp_sous_calcul_traitement_2 = TraitementFormuleAideFinale(aide_finale_formule = money_of_cents_string("0"),
                        traitement_aide_finale = traitement_nul_tout_le_temps)
                elif match_arg_629.code == CategorieCalculAPL_Code.AccessionPropriete:
                    _ = match_arg_629.value
                    temp_sous_calcul_traitement_2 = TraitementFormuleAideFinale(aide_finale_formule = money_of_cents_string("0"),
                        traitement_aide_finale = traitement_nul_tout_le_temps)
                elif match_arg_629.code == CategorieCalculAPL_Code.LogementFoyer:
                    logement_foyer_ = match_arg_629.value
                    def temp_sous_calcul_traitement_3(param0:Money):
                        try:
                            temp_sous_calcul_traitement_4 = logement_foyer_.redevance
                        except EmptyError:
                            temp_sous_calcul_traitement_4 = dead_value
                            raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                                 start_line=6378,
                                                                 start_column=31,
                                                                 end_line=6378,
                                                                 end_column=56,
                                                                 law_headings=["Article D863-7",
                                                                 "Sous-section III : Modalités de liquidation et de versement",
                                                                 "Section II : Dispositions communes aux aides personnelles au logement",
                                                                 "Chapitre III : Saint-Pierre-et-Miquelon",
                                                                 "Livre VIII : Aides personnelles au logement",
                                                                 "Partie réglementaire",
                                                                 "Code de la construction et de l'habitation"]))
                        try:
                            temp_sous_calcul_traitement_5 = ressources_menage_avec_arrondi
                        except EmptyError:
                            temp_sous_calcul_traitement_5 = dead_value
                            raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                                 start_line=6372,
                                                                 start_column=43,
                                                                 end_line=6372,
                                                                 end_column=60,
                                                                 law_headings=["Article D863-7",
                                                                 "Sous-section III : Modalités de liquidation et de versement",
                                                                 "Section II : Dispositions communes aux aides personnelles au logement",
                                                                 "Chapitre III : Saint-Pierre-et-Miquelon",
                                                                 "Livre VIII : Aides personnelles au logement",
                                                                 "Partie réglementaire",
                                                                 "Code de la construction et de l'habitation"]))
                        try:
                            temp_sous_calcul_traitement_6 = logement_foyer_.beneficiaire_aide_adulte_ou_enfant_handicapes
                        except EmptyError:
                            temp_sous_calcul_traitement_6 = dead_value
                            raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                                 start_line=6380,
                                                                 start_column=15,
                                                                 end_line=6380,
                                                                 end_column=76,
                                                                 law_headings=["Article D863-7",
                                                                 "Sous-section III : Modalités de liquidation et de versement",
                                                                 "Section II : Dispositions communes aux aides personnelles au logement",
                                                                 "Chapitre III : Saint-Pierre-et-Miquelon",
                                                                 "Livre VIII : Aides personnelles au logement",
                                                                 "Partie réglementaire",
                                                                 "Code de la construction et de l'habitation"]))
                        try:
                            temp_sous_calcul_traitement_7 = date_courante_14
                        except EmptyError:
                            temp_sous_calcul_traitement_7 = dead_value
                            raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                                 start_line=6375,
                                                                 start_column=29,
                                                                 end_line=6375,
                                                                 end_column=42,
                                                                 law_headings=["Article D863-7",
                                                                 "Sous-section III : Modalités de liquidation et de versement",
                                                                 "Section II : Dispositions communes aux aides personnelles au logement",
                                                                 "Chapitre III : Saint-Pierre-et-Miquelon",
                                                                 "Livre VIII : Aides personnelles au logement",
                                                                 "Partie réglementaire",
                                                                 "Code de la construction et de l'habitation"]))
                        try:
                            temp_sous_calcul_traitement_8 = nombre_personnes_a_charge_11
                        except EmptyError:
                            temp_sous_calcul_traitement_8 = dead_value
                            raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                                 start_line=6373,
                                                                 start_column=41,
                                                                 end_line=6373,
                                                                 end_column=66,
                                                                 law_headings=["Article D863-7",
                                                                 "Sous-section III : Modalités de liquidation et de versement",
                                                                 "Section II : Dispositions communes aux aides personnelles au logement",
                                                                 "Chapitre III : Saint-Pierre-et-Miquelon",
                                                                 "Livre VIII : Aides personnelles au logement",
                                                                 "Partie réglementaire",
                                                                 "Code de la construction et de l'habitation"]))
                        try:
                            temp_sous_calcul_traitement_9 = situation_familiale_calcul_apl_8
                        except EmptyError:
                            temp_sous_calcul_traitement_9 = dead_value
                            raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                                 start_line=6376,
                                                                 start_column=46,
                                                                 end_line=6376,
                                                                 end_column=76,
                                                                 law_headings=["Article D863-7",
                                                                 "Sous-section III : Modalités de liquidation et de versement",
                                                                 "Section II : Dispositions communes aux aides personnelles au logement",
                                                                 "Chapitre III : Saint-Pierre-et-Miquelon",
                                                                 "Livre VIII : Aides personnelles au logement",
                                                                 "Partie réglementaire",
                                                                 "Code de la construction et de l'habitation"]))
                        try:
                            temp_sous_calcul_traitement_10 = zone_6
                        except EmptyError:
                            temp_sous_calcul_traitement_10 = dead_value
                            raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                                 start_line=6374,
                                                                 start_column=20,
                                                                 end_line=6374,
                                                                 end_column=24,
                                                                 law_headings=["Article D863-7",
                                                                 "Sous-section III : Modalités de liquidation et de versement",
                                                                 "Section II : Dispositions communes aux aides personnelles au logement",
                                                                 "Chapitre III : Saint-Pierre-et-Miquelon",
                                                                 "Livre VIII : Aides personnelles au logement",
                                                                 "Partie réglementaire",
                                                                 "Code de la construction et de l'habitation"]))
                        try:
                            temp_sous_calcul_traitement_11 = True
                        except EmptyError:
                            temp_sous_calcul_traitement_11 = dead_value
                            raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                                 start_line=6384,
                                                                 start_column=36,
                                                                 end_line=6384,
                                                                 end_column=40,
                                                                 law_headings=["Article D863-7",
                                                                 "Sous-section III : Modalités de liquidation et de versement",
                                                                 "Section II : Dispositions communes aux aides personnelles au logement",
                                                                 "Chapitre III : Saint-Pierre-et-Miquelon",
                                                                 "Livre VIII : Aides personnelles au logement",
                                                                 "Partie réglementaire",
                                                                 "Code de la construction et de l'habitation"]))
                        try:
                            temp_sous_calcul_traitement_12 = False
                        except EmptyError:
                            temp_sous_calcul_traitement_12 = dead_value
                            raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                                 start_line=6391,
                                                                 start_column=72,
                                                                 end_line=6391,
                                                                 end_column=76,
                                                                 law_headings=["Article D863-7",
                                                                 "Sous-section III : Modalités de liquidation et de versement",
                                                                 "Section II : Dispositions communes aux aides personnelles au logement",
                                                                 "Chapitre III : Saint-Pierre-et-Miquelon",
                                                                 "Livre VIII : Aides personnelles au logement",
                                                                 "Partie réglementaire",
                                                                 "Code de la construction et de l'habitation"]))
                        try:
                            temp_sous_calcul_traitement_13 = type_aide_2
                        except EmptyError:
                            temp_sous_calcul_traitement_13 = dead_value
                            raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                                 start_line=6392,
                                                                 start_column=25,
                                                                 end_line=6392,
                                                                 end_column=34,
                                                                 law_headings=["Article D863-7",
                                                                 "Sous-section III : Modalités de liquidation et de versement",
                                                                 "Section II : Dispositions communes aux aides personnelles au logement",
                                                                 "Chapitre III : Saint-Pierre-et-Miquelon",
                                                                 "Livre VIII : Aides personnelles au logement",
                                                                 "Partie réglementaire",
                                                                 "Code de la construction et de l'habitation"]))
                        try:
                            temp_sous_calcul_traitement_14 = False
                        except EmptyError:
                            temp_sous_calcul_traitement_14 = dead_value
                            raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                                 start_line=6388,
                                                                 start_column=26,
                                                                 end_line=6388,
                                                                 end_column=30,
                                                                 law_headings=["Article D863-7",
                                                                 "Sous-section III : Modalités de liquidation et de versement",
                                                                 "Section II : Dispositions communes aux aides personnelles au logement",
                                                                 "Chapitre III : Saint-Pierre-et-Miquelon",
                                                                 "Livre VIII : Aides personnelles au logement",
                                                                 "Partie réglementaire",
                                                                 "Code de la construction et de l'habitation"]))
                        try:
                            temp_sous_calcul_traitement_15 = money_of_cents_string("0")
                        except EmptyError:
                            temp_sous_calcul_traitement_15 = dead_value
                            raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                                 start_line=6395,
                                                                 start_column=42,
                                                                 end_line=6395,
                                                                 end_column=45,
                                                                 law_headings=["Article D863-7",
                                                                 "Sous-section III : Modalités de liquidation et de versement",
                                                                 "Section II : Dispositions communes aux aides personnelles au logement",
                                                                 "Chapitre III : Saint-Pierre-et-Miquelon",
                                                                 "Livre VIII : Aides personnelles au logement",
                                                                 "Partie réglementaire",
                                                                 "Code de la construction et de l'habitation"]))
                        try:
                            temp_sous_calcul_traitement_16 = logement_foyer_.logement_meuble_d842_2
                        except EmptyError:
                            temp_sous_calcul_traitement_16 = dead_value
                            raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                                 start_line=6396,
                                                                 start_column=38,
                                                                 end_line=6396,
                                                                 end_column=76,
                                                                 law_headings=["Article D863-7",
                                                                 "Sous-section III : Modalités de liquidation et de versement",
                                                                 "Section II : Dispositions communes aux aides personnelles au logement",
                                                                 "Chapitre III : Saint-Pierre-et-Miquelon",
                                                                 "Livre VIII : Aides personnelles au logement",
                                                                 "Partie réglementaire",
                                                                 "Code de la construction et de l'habitation"]))
                        try:
                            temp_sous_calcul_traitement_17 = residence_8
                        except EmptyError:
                            temp_sous_calcul_traitement_17 = dead_value
                            raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                                 start_line=6397,
                                                                 start_column=25,
                                                                 end_line=6397,
                                                                 end_column=34,
                                                                 law_headings=["Article D863-7",
                                                                 "Sous-section III : Modalités de liquidation et de versement",
                                                                 "Section II : Dispositions communes aux aides personnelles au logement",
                                                                 "Chapitre III : Saint-Pierre-et-Miquelon",
                                                                 "Livre VIII : Aides personnelles au logement",
                                                                 "Partie réglementaire",
                                                                 "Code de la construction et de l'habitation"]))
                        return calcul_aide_personnalisee_logement_locatif(
                            CalculAidePersonnaliseeLogementLocatifIn(loyer_principal_base_in = temp_sous_calcul_traitement_4,
                            ressources_menage_arrondies_in = temp_sous_calcul_traitement_5,
                            beneficiaire_aide_adulte_ou_enfant_handicapes_in = temp_sous_calcul_traitement_6,
                            date_courante_in = temp_sous_calcul_traitement_7,
                            nombre_personnes_a_charge_in = temp_sous_calcul_traitement_8,
                            situation_familiale_calcul_apl_in = temp_sous_calcul_traitement_9,
                            zone_in = temp_sous_calcul_traitement_10,
                            logement_est_chambre_in = temp_sous_calcul_traitement_11,
                            agees_ou_handicap_adultes_hebergees_onereux_particuliers_in = temp_sous_calcul_traitement_12,
                            type_aide_in = temp_sous_calcul_traitement_13,
                            colocation_in = temp_sous_calcul_traitement_14,
                            reduction_loyer_solidarite_in = temp_sous_calcul_traitement_15,
                            logement_meuble_d842_2_in = temp_sous_calcul_traitement_16,
                            residence_in = temp_sous_calcul_traitement_17)).traitement_aide_finale(
                            param0)
                    try:
                        temp_sous_calcul_traitement_18 = logement_foyer_.redevance
                    except EmptyError:
                        temp_sous_calcul_traitement_18 = dead_value
                        raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                             start_line=6378,
                                                             start_column=31,
                                                             end_line=6378,
                                                             end_column=56,
                                                             law_headings=["Article D863-7",
                                                             "Sous-section III : Modalités de liquidation et de versement",
                                                             "Section II : Dispositions communes aux aides personnelles au logement",
                                                             "Chapitre III : Saint-Pierre-et-Miquelon",
                                                             "Livre VIII : Aides personnelles au logement",
                                                             "Partie réglementaire",
                                                             "Code de la construction et de l'habitation"]))
                    try:
                        temp_sous_calcul_traitement_19 = ressources_menage_avec_arrondi
                    except EmptyError:
                        temp_sous_calcul_traitement_19 = dead_value
                        raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                             start_line=6372,
                                                             start_column=43,
                                                             end_line=6372,
                                                             end_column=60,
                                                             law_headings=["Article D863-7",
                                                             "Sous-section III : Modalités de liquidation et de versement",
                                                             "Section II : Dispositions communes aux aides personnelles au logement",
                                                             "Chapitre III : Saint-Pierre-et-Miquelon",
                                                             "Livre VIII : Aides personnelles au logement",
                                                             "Partie réglementaire",
                                                             "Code de la construction et de l'habitation"]))
                    try:
                        temp_sous_calcul_traitement_20 = logement_foyer_.beneficiaire_aide_adulte_ou_enfant_handicapes
                    except EmptyError:
                        temp_sous_calcul_traitement_20 = dead_value
                        raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                             start_line=6380,
                                                             start_column=15,
                                                             end_line=6380,
                                                             end_column=76,
                                                             law_headings=["Article D863-7",
                                                             "Sous-section III : Modalités de liquidation et de versement",
                                                             "Section II : Dispositions communes aux aides personnelles au logement",
                                                             "Chapitre III : Saint-Pierre-et-Miquelon",
                                                             "Livre VIII : Aides personnelles au logement",
                                                             "Partie réglementaire",
                                                             "Code de la construction et de l'habitation"]))
                    try:
                        temp_sous_calcul_traitement_21 = date_courante_14
                    except EmptyError:
                        temp_sous_calcul_traitement_21 = dead_value
                        raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                             start_line=6375,
                                                             start_column=29,
                                                             end_line=6375,
                                                             end_column=42,
                                                             law_headings=["Article D863-7",
                                                             "Sous-section III : Modalités de liquidation et de versement",
                                                             "Section II : Dispositions communes aux aides personnelles au logement",
                                                             "Chapitre III : Saint-Pierre-et-Miquelon",
                                                             "Livre VIII : Aides personnelles au logement",
                                                             "Partie réglementaire",
                                                             "Code de la construction et de l'habitation"]))
                    try:
                        temp_sous_calcul_traitement_22 = nombre_personnes_a_charge_11
                    except EmptyError:
                        temp_sous_calcul_traitement_22 = dead_value
                        raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                             start_line=6373,
                                                             start_column=41,
                                                             end_line=6373,
                                                             end_column=66,
                                                             law_headings=["Article D863-7",
                                                             "Sous-section III : Modalités de liquidation et de versement",
                                                             "Section II : Dispositions communes aux aides personnelles au logement",
                                                             "Chapitre III : Saint-Pierre-et-Miquelon",
                                                             "Livre VIII : Aides personnelles au logement",
                                                             "Partie réglementaire",
                                                             "Code de la construction et de l'habitation"]))
                    try:
                        temp_sous_calcul_traitement_23 = situation_familiale_calcul_apl_8
                    except EmptyError:
                        temp_sous_calcul_traitement_23 = dead_value
                        raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                             start_line=6376,
                                                             start_column=46,
                                                             end_line=6376,
                                                             end_column=76,
                                                             law_headings=["Article D863-7",
                                                             "Sous-section III : Modalités de liquidation et de versement",
                                                             "Section II : Dispositions communes aux aides personnelles au logement",
                                                             "Chapitre III : Saint-Pierre-et-Miquelon",
                                                             "Livre VIII : Aides personnelles au logement",
                                                             "Partie réglementaire",
                                                             "Code de la construction et de l'habitation"]))
                    try:
                        temp_sous_calcul_traitement_24 = zone_6
                    except EmptyError:
                        temp_sous_calcul_traitement_24 = dead_value
                        raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                             start_line=6374,
                                                             start_column=20,
                                                             end_line=6374,
                                                             end_column=24,
                                                             law_headings=["Article D863-7",
                                                             "Sous-section III : Modalités de liquidation et de versement",
                                                             "Section II : Dispositions communes aux aides personnelles au logement",
                                                             "Chapitre III : Saint-Pierre-et-Miquelon",
                                                             "Livre VIII : Aides personnelles au logement",
                                                             "Partie réglementaire",
                                                             "Code de la construction et de l'habitation"]))
                    try:
                        temp_sous_calcul_traitement_25 = True
                    except EmptyError:
                        temp_sous_calcul_traitement_25 = dead_value
                        raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                             start_line=6384,
                                                             start_column=36,
                                                             end_line=6384,
                                                             end_column=40,
                                                             law_headings=["Article D863-7",
                                                             "Sous-section III : Modalités de liquidation et de versement",
                                                             "Section II : Dispositions communes aux aides personnelles au logement",
                                                             "Chapitre III : Saint-Pierre-et-Miquelon",
                                                             "Livre VIII : Aides personnelles au logement",
                                                             "Partie réglementaire",
                                                             "Code de la construction et de l'habitation"]))
                    try:
                        temp_sous_calcul_traitement_26 = False
                    except EmptyError:
                        temp_sous_calcul_traitement_26 = dead_value
                        raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                             start_line=6391,
                                                             start_column=72,
                                                             end_line=6391,
                                                             end_column=76,
                                                             law_headings=["Article D863-7",
                                                             "Sous-section III : Modalités de liquidation et de versement",
                                                             "Section II : Dispositions communes aux aides personnelles au logement",
                                                             "Chapitre III : Saint-Pierre-et-Miquelon",
                                                             "Livre VIII : Aides personnelles au logement",
                                                             "Partie réglementaire",
                                                             "Code de la construction et de l'habitation"]))
                    try:
                        temp_sous_calcul_traitement_27 = type_aide_2
                    except EmptyError:
                        temp_sous_calcul_traitement_27 = dead_value
                        raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                             start_line=6392,
                                                             start_column=25,
                                                             end_line=6392,
                                                             end_column=34,
                                                             law_headings=["Article D863-7",
                                                             "Sous-section III : Modalités de liquidation et de versement",
                                                             "Section II : Dispositions communes aux aides personnelles au logement",
                                                             "Chapitre III : Saint-Pierre-et-Miquelon",
                                                             "Livre VIII : Aides personnelles au logement",
                                                             "Partie réglementaire",
                                                             "Code de la construction et de l'habitation"]))
                    try:
                        temp_sous_calcul_traitement_28 = False
                    except EmptyError:
                        temp_sous_calcul_traitement_28 = dead_value
                        raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                             start_line=6388,
                                                             start_column=26,
                                                             end_line=6388,
                                                             end_column=30,
                                                             law_headings=["Article D863-7",
                                                             "Sous-section III : Modalités de liquidation et de versement",
                                                             "Section II : Dispositions communes aux aides personnelles au logement",
                                                             "Chapitre III : Saint-Pierre-et-Miquelon",
                                                             "Livre VIII : Aides personnelles au logement",
                                                             "Partie réglementaire",
                                                             "Code de la construction et de l'habitation"]))
                    try:
                        temp_sous_calcul_traitement_29 = money_of_cents_string("0")
                    except EmptyError:
                        temp_sous_calcul_traitement_29 = dead_value
                        raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                             start_line=6395,
                                                             start_column=42,
                                                             end_line=6395,
                                                             end_column=45,
                                                             law_headings=["Article D863-7",
                                                             "Sous-section III : Modalités de liquidation et de versement",
                                                             "Section II : Dispositions communes aux aides personnelles au logement",
                                                             "Chapitre III : Saint-Pierre-et-Miquelon",
                                                             "Livre VIII : Aides personnelles au logement",
                                                             "Partie réglementaire",
                                                             "Code de la construction et de l'habitation"]))
                    try:
                        temp_sous_calcul_traitement_30 = logement_foyer_.logement_meuble_d842_2
                    except EmptyError:
                        temp_sous_calcul_traitement_30 = dead_value
                        raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                             start_line=6396,
                                                             start_column=38,
                                                             end_line=6396,
                                                             end_column=76,
                                                             law_headings=["Article D863-7",
                                                             "Sous-section III : Modalités de liquidation et de versement",
                                                             "Section II : Dispositions communes aux aides personnelles au logement",
                                                             "Chapitre III : Saint-Pierre-et-Miquelon",
                                                             "Livre VIII : Aides personnelles au logement",
                                                             "Partie réglementaire",
                                                             "Code de la construction et de l'habitation"]))
                    try:
                        temp_sous_calcul_traitement_31 = residence_8
                    except EmptyError:
                        temp_sous_calcul_traitement_31 = dead_value
                        raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                             start_line=6397,
                                                             start_column=25,
                                                             end_line=6397,
                                                             end_column=34,
                                                             law_headings=["Article D863-7",
                                                             "Sous-section III : Modalités de liquidation et de versement",
                                                             "Section II : Dispositions communes aux aides personnelles au logement",
                                                             "Chapitre III : Saint-Pierre-et-Miquelon",
                                                             "Livre VIII : Aides personnelles au logement",
                                                             "Partie réglementaire",
                                                             "Code de la construction et de l'habitation"]))
                    try:
                        temp_sous_calcul_traitement_32 = logement_foyer_.redevance
                    except EmptyError:
                        temp_sous_calcul_traitement_32 = dead_value
                        raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                             start_line=6378,
                                                             start_column=31,
                                                             end_line=6378,
                                                             end_column=56,
                                                             law_headings=["Article D863-7",
                                                             "Sous-section III : Modalités de liquidation et de versement",
                                                             "Section II : Dispositions communes aux aides personnelles au logement",
                                                             "Chapitre III : Saint-Pierre-et-Miquelon",
                                                             "Livre VIII : Aides personnelles au logement",
                                                             "Partie réglementaire",
                                                             "Code de la construction et de l'habitation"]))
                    try:
                        temp_sous_calcul_traitement_33 = ressources_menage_avec_arrondi
                    except EmptyError:
                        temp_sous_calcul_traitement_33 = dead_value
                        raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                             start_line=6372,
                                                             start_column=43,
                                                             end_line=6372,
                                                             end_column=60,
                                                             law_headings=["Article D863-7",
                                                             "Sous-section III : Modalités de liquidation et de versement",
                                                             "Section II : Dispositions communes aux aides personnelles au logement",
                                                             "Chapitre III : Saint-Pierre-et-Miquelon",
                                                             "Livre VIII : Aides personnelles au logement",
                                                             "Partie réglementaire",
                                                             "Code de la construction et de l'habitation"]))
                    try:
                        temp_sous_calcul_traitement_34 = logement_foyer_.beneficiaire_aide_adulte_ou_enfant_handicapes
                    except EmptyError:
                        temp_sous_calcul_traitement_34 = dead_value
                        raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                             start_line=6380,
                                                             start_column=15,
                                                             end_line=6380,
                                                             end_column=76,
                                                             law_headings=["Article D863-7",
                                                             "Sous-section III : Modalités de liquidation et de versement",
                                                             "Section II : Dispositions communes aux aides personnelles au logement",
                                                             "Chapitre III : Saint-Pierre-et-Miquelon",
                                                             "Livre VIII : Aides personnelles au logement",
                                                             "Partie réglementaire",
                                                             "Code de la construction et de l'habitation"]))
                    try:
                        temp_sous_calcul_traitement_35 = date_courante_14
                    except EmptyError:
                        temp_sous_calcul_traitement_35 = dead_value
                        raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                             start_line=6375,
                                                             start_column=29,
                                                             end_line=6375,
                                                             end_column=42,
                                                             law_headings=["Article D863-7",
                                                             "Sous-section III : Modalités de liquidation et de versement",
                                                             "Section II : Dispositions communes aux aides personnelles au logement",
                                                             "Chapitre III : Saint-Pierre-et-Miquelon",
                                                             "Livre VIII : Aides personnelles au logement",
                                                             "Partie réglementaire",
                                                             "Code de la construction et de l'habitation"]))
                    try:
                        temp_sous_calcul_traitement_36 = nombre_personnes_a_charge_11
                    except EmptyError:
                        temp_sous_calcul_traitement_36 = dead_value
                        raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                             start_line=6373,
                                                             start_column=41,
                                                             end_line=6373,
                                                             end_column=66,
                                                             law_headings=["Article D863-7",
                                                             "Sous-section III : Modalités de liquidation et de versement",
                                                             "Section II : Dispositions communes aux aides personnelles au logement",
                                                             "Chapitre III : Saint-Pierre-et-Miquelon",
                                                             "Livre VIII : Aides personnelles au logement",
                                                             "Partie réglementaire",
                                                             "Code de la construction et de l'habitation"]))
                    try:
                        temp_sous_calcul_traitement_37 = situation_familiale_calcul_apl_8
                    except EmptyError:
                        temp_sous_calcul_traitement_37 = dead_value
                        raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                             start_line=6376,
                                                             start_column=46,
                                                             end_line=6376,
                                                             end_column=76,
                                                             law_headings=["Article D863-7",
                                                             "Sous-section III : Modalités de liquidation et de versement",
                                                             "Section II : Dispositions communes aux aides personnelles au logement",
                                                             "Chapitre III : Saint-Pierre-et-Miquelon",
                                                             "Livre VIII : Aides personnelles au logement",
                                                             "Partie réglementaire",
                                                             "Code de la construction et de l'habitation"]))
                    try:
                        temp_sous_calcul_traitement_38 = zone_6
                    except EmptyError:
                        temp_sous_calcul_traitement_38 = dead_value
                        raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                             start_line=6374,
                                                             start_column=20,
                                                             end_line=6374,
                                                             end_column=24,
                                                             law_headings=["Article D863-7",
                                                             "Sous-section III : Modalités de liquidation et de versement",
                                                             "Section II : Dispositions communes aux aides personnelles au logement",
                                                             "Chapitre III : Saint-Pierre-et-Miquelon",
                                                             "Livre VIII : Aides personnelles au logement",
                                                             "Partie réglementaire",
                                                             "Code de la construction et de l'habitation"]))
                    try:
                        temp_sous_calcul_traitement_39 = True
                    except EmptyError:
                        temp_sous_calcul_traitement_39 = dead_value
                        raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                             start_line=6384,
                                                             start_column=36,
                                                             end_line=6384,
                                                             end_column=40,
                                                             law_headings=["Article D863-7",
                                                             "Sous-section III : Modalités de liquidation et de versement",
                                                             "Section II : Dispositions communes aux aides personnelles au logement",
                                                             "Chapitre III : Saint-Pierre-et-Miquelon",
                                                             "Livre VIII : Aides personnelles au logement",
                                                             "Partie réglementaire",
                                                             "Code de la construction et de l'habitation"]))
                    try:
                        temp_sous_calcul_traitement_40 = False
                    except EmptyError:
                        temp_sous_calcul_traitement_40 = dead_value
                        raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                             start_line=6391,
                                                             start_column=72,
                                                             end_line=6391,
                                                             end_column=76,
                                                             law_headings=["Article D863-7",
                                                             "Sous-section III : Modalités de liquidation et de versement",
                                                             "Section II : Dispositions communes aux aides personnelles au logement",
                                                             "Chapitre III : Saint-Pierre-et-Miquelon",
                                                             "Livre VIII : Aides personnelles au logement",
                                                             "Partie réglementaire",
                                                             "Code de la construction et de l'habitation"]))
                    try:
                        temp_sous_calcul_traitement_41 = type_aide_2
                    except EmptyError:
                        temp_sous_calcul_traitement_41 = dead_value
                        raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                             start_line=6392,
                                                             start_column=25,
                                                             end_line=6392,
                                                             end_column=34,
                                                             law_headings=["Article D863-7",
                                                             "Sous-section III : Modalités de liquidation et de versement",
                                                             "Section II : Dispositions communes aux aides personnelles au logement",
                                                             "Chapitre III : Saint-Pierre-et-Miquelon",
                                                             "Livre VIII : Aides personnelles au logement",
                                                             "Partie réglementaire",
                                                             "Code de la construction et de l'habitation"]))
                    try:
                        temp_sous_calcul_traitement_42 = False
                    except EmptyError:
                        temp_sous_calcul_traitement_42 = dead_value
                        raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                             start_line=6388,
                                                             start_column=26,
                                                             end_line=6388,
                                                             end_column=30,
                                                             law_headings=["Article D863-7",
                                                             "Sous-section III : Modalités de liquidation et de versement",
                                                             "Section II : Dispositions communes aux aides personnelles au logement",
                                                             "Chapitre III : Saint-Pierre-et-Miquelon",
                                                             "Livre VIII : Aides personnelles au logement",
                                                             "Partie réglementaire",
                                                             "Code de la construction et de l'habitation"]))
                    try:
                        temp_sous_calcul_traitement_43 = money_of_cents_string("0")
                    except EmptyError:
                        temp_sous_calcul_traitement_43 = dead_value
                        raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                             start_line=6395,
                                                             start_column=42,
                                                             end_line=6395,
                                                             end_column=45,
                                                             law_headings=["Article D863-7",
                                                             "Sous-section III : Modalités de liquidation et de versement",
                                                             "Section II : Dispositions communes aux aides personnelles au logement",
                                                             "Chapitre III : Saint-Pierre-et-Miquelon",
                                                             "Livre VIII : Aides personnelles au logement",
                                                             "Partie réglementaire",
                                                             "Code de la construction et de l'habitation"]))
                    try:
                        temp_sous_calcul_traitement_44 = logement_foyer_.logement_meuble_d842_2
                    except EmptyError:
                        temp_sous_calcul_traitement_44 = dead_value
                        raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                             start_line=6396,
                                                             start_column=38,
                                                             end_line=6396,
                                                             end_column=76,
                                                             law_headings=["Article D863-7",
                                                             "Sous-section III : Modalités de liquidation et de versement",
                                                             "Section II : Dispositions communes aux aides personnelles au logement",
                                                             "Chapitre III : Saint-Pierre-et-Miquelon",
                                                             "Livre VIII : Aides personnelles au logement",
                                                             "Partie réglementaire",
                                                             "Code de la construction et de l'habitation"]))
                    try:
                        temp_sous_calcul_traitement_45 = residence_8
                    except EmptyError:
                        temp_sous_calcul_traitement_45 = dead_value
                        raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                             start_line=6397,
                                                             start_column=25,
                                                             end_line=6397,
                                                             end_column=34,
                                                             law_headings=["Article D863-7",
                                                             "Sous-section III : Modalités de liquidation et de versement",
                                                             "Section II : Dispositions communes aux aides personnelles au logement",
                                                             "Chapitre III : Saint-Pierre-et-Miquelon",
                                                             "Livre VIII : Aides personnelles au logement",
                                                             "Partie réglementaire",
                                                             "Code de la construction et de l'habitation"]))
                    try:
                        temp_sous_calcul_traitement_46 = logement_foyer_.redevance
                    except EmptyError:
                        temp_sous_calcul_traitement_46 = dead_value
                        raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                             start_line=6378,
                                                             start_column=31,
                                                             end_line=6378,
                                                             end_column=56,
                                                             law_headings=["Article D863-7",
                                                             "Sous-section III : Modalités de liquidation et de versement",
                                                             "Section II : Dispositions communes aux aides personnelles au logement",
                                                             "Chapitre III : Saint-Pierre-et-Miquelon",
                                                             "Livre VIII : Aides personnelles au logement",
                                                             "Partie réglementaire",
                                                             "Code de la construction et de l'habitation"]))
                    try:
                        temp_sous_calcul_traitement_47 = ressources_menage_avec_arrondi
                    except EmptyError:
                        temp_sous_calcul_traitement_47 = dead_value
                        raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                             start_line=6372,
                                                             start_column=43,
                                                             end_line=6372,
                                                             end_column=60,
                                                             law_headings=["Article D863-7",
                                                             "Sous-section III : Modalités de liquidation et de versement",
                                                             "Section II : Dispositions communes aux aides personnelles au logement",
                                                             "Chapitre III : Saint-Pierre-et-Miquelon",
                                                             "Livre VIII : Aides personnelles au logement",
                                                             "Partie réglementaire",
                                                             "Code de la construction et de l'habitation"]))
                    try:
                        temp_sous_calcul_traitement_48 = logement_foyer_.beneficiaire_aide_adulte_ou_enfant_handicapes
                    except EmptyError:
                        temp_sous_calcul_traitement_48 = dead_value
                        raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                             start_line=6380,
                                                             start_column=15,
                                                             end_line=6380,
                                                             end_column=76,
                                                             law_headings=["Article D863-7",
                                                             "Sous-section III : Modalités de liquidation et de versement",
                                                             "Section II : Dispositions communes aux aides personnelles au logement",
                                                             "Chapitre III : Saint-Pierre-et-Miquelon",
                                                             "Livre VIII : Aides personnelles au logement",
                                                             "Partie réglementaire",
                                                             "Code de la construction et de l'habitation"]))
                    try:
                        temp_sous_calcul_traitement_49 = date_courante_14
                    except EmptyError:
                        temp_sous_calcul_traitement_49 = dead_value
                        raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                             start_line=6375,
                                                             start_column=29,
                                                             end_line=6375,
                                                             end_column=42,
                                                             law_headings=["Article D863-7",
                                                             "Sous-section III : Modalités de liquidation et de versement",
                                                             "Section II : Dispositions communes aux aides personnelles au logement",
                                                             "Chapitre III : Saint-Pierre-et-Miquelon",
                                                             "Livre VIII : Aides personnelles au logement",
                                                             "Partie réglementaire",
                                                             "Code de la construction et de l'habitation"]))
                    try:
                        temp_sous_calcul_traitement_50 = nombre_personnes_a_charge_11
                    except EmptyError:
                        temp_sous_calcul_traitement_50 = dead_value
                        raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                             start_line=6373,
                                                             start_column=41,
                                                             end_line=6373,
                                                             end_column=66,
                                                             law_headings=["Article D863-7",
                                                             "Sous-section III : Modalités de liquidation et de versement",
                                                             "Section II : Dispositions communes aux aides personnelles au logement",
                                                             "Chapitre III : Saint-Pierre-et-Miquelon",
                                                             "Livre VIII : Aides personnelles au logement",
                                                             "Partie réglementaire",
                                                             "Code de la construction et de l'habitation"]))
                    try:
                        temp_sous_calcul_traitement_51 = situation_familiale_calcul_apl_8
                    except EmptyError:
                        temp_sous_calcul_traitement_51 = dead_value
                        raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                             start_line=6376,
                                                             start_column=46,
                                                             end_line=6376,
                                                             end_column=76,
                                                             law_headings=["Article D863-7",
                                                             "Sous-section III : Modalités de liquidation et de versement",
                                                             "Section II : Dispositions communes aux aides personnelles au logement",
                                                             "Chapitre III : Saint-Pierre-et-Miquelon",
                                                             "Livre VIII : Aides personnelles au logement",
                                                             "Partie réglementaire",
                                                             "Code de la construction et de l'habitation"]))
                    try:
                        temp_sous_calcul_traitement_52 = zone_6
                    except EmptyError:
                        temp_sous_calcul_traitement_52 = dead_value
                        raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                             start_line=6374,
                                                             start_column=20,
                                                             end_line=6374,
                                                             end_column=24,
                                                             law_headings=["Article D863-7",
                                                             "Sous-section III : Modalités de liquidation et de versement",
                                                             "Section II : Dispositions communes aux aides personnelles au logement",
                                                             "Chapitre III : Saint-Pierre-et-Miquelon",
                                                             "Livre VIII : Aides personnelles au logement",
                                                             "Partie réglementaire",
                                                             "Code de la construction et de l'habitation"]))
                    try:
                        temp_sous_calcul_traitement_53 = True
                    except EmptyError:
                        temp_sous_calcul_traitement_53 = dead_value
                        raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                             start_line=6384,
                                                             start_column=36,
                                                             end_line=6384,
                                                             end_column=40,
                                                             law_headings=["Article D863-7",
                                                             "Sous-section III : Modalités de liquidation et de versement",
                                                             "Section II : Dispositions communes aux aides personnelles au logement",
                                                             "Chapitre III : Saint-Pierre-et-Miquelon",
                                                             "Livre VIII : Aides personnelles au logement",
                                                             "Partie réglementaire",
                                                             "Code de la construction et de l'habitation"]))
                    try:
                        temp_sous_calcul_traitement_54 = False
                    except EmptyError:
                        temp_sous_calcul_traitement_54 = dead_value
                        raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                             start_line=6391,
                                                             start_column=72,
                                                             end_line=6391,
                                                             end_column=76,
                                                             law_headings=["Article D863-7",
                                                             "Sous-section III : Modalités de liquidation et de versement",
                                                             "Section II : Dispositions communes aux aides personnelles au logement",
                                                             "Chapitre III : Saint-Pierre-et-Miquelon",
                                                             "Livre VIII : Aides personnelles au logement",
                                                             "Partie réglementaire",
                                                             "Code de la construction et de l'habitation"]))
                    try:
                        temp_sous_calcul_traitement_55 = type_aide_2
                    except EmptyError:
                        temp_sous_calcul_traitement_55 = dead_value
                        raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                             start_line=6392,
                                                             start_column=25,
                                                             end_line=6392,
                                                             end_column=34,
                                                             law_headings=["Article D863-7",
                                                             "Sous-section III : Modalités de liquidation et de versement",
                                                             "Section II : Dispositions communes aux aides personnelles au logement",
                                                             "Chapitre III : Saint-Pierre-et-Miquelon",
                                                             "Livre VIII : Aides personnelles au logement",
                                                             "Partie réglementaire",
                                                             "Code de la construction et de l'habitation"]))
                    try:
                        temp_sous_calcul_traitement_56 = False
                    except EmptyError:
                        temp_sous_calcul_traitement_56 = dead_value
                        raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                             start_line=6388,
                                                             start_column=26,
                                                             end_line=6388,
                                                             end_column=30,
                                                             law_headings=["Article D863-7",
                                                             "Sous-section III : Modalités de liquidation et de versement",
                                                             "Section II : Dispositions communes aux aides personnelles au logement",
                                                             "Chapitre III : Saint-Pierre-et-Miquelon",
                                                             "Livre VIII : Aides personnelles au logement",
                                                             "Partie réglementaire",
                                                             "Code de la construction et de l'habitation"]))
                    try:
                        temp_sous_calcul_traitement_57 = money_of_cents_string("0")
                    except EmptyError:
                        temp_sous_calcul_traitement_57 = dead_value
                        raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                             start_line=6395,
                                                             start_column=42,
                                                             end_line=6395,
                                                             end_column=45,
                                                             law_headings=["Article D863-7",
                                                             "Sous-section III : Modalités de liquidation et de versement",
                                                             "Section II : Dispositions communes aux aides personnelles au logement",
                                                             "Chapitre III : Saint-Pierre-et-Miquelon",
                                                             "Livre VIII : Aides personnelles au logement",
                                                             "Partie réglementaire",
                                                             "Code de la construction et de l'habitation"]))
                    try:
                        temp_sous_calcul_traitement_58 = logement_foyer_.logement_meuble_d842_2
                    except EmptyError:
                        temp_sous_calcul_traitement_58 = dead_value
                        raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                             start_line=6396,
                                                             start_column=38,
                                                             end_line=6396,
                                                             end_column=76,
                                                             law_headings=["Article D863-7",
                                                             "Sous-section III : Modalités de liquidation et de versement",
                                                             "Section II : Dispositions communes aux aides personnelles au logement",
                                                             "Chapitre III : Saint-Pierre-et-Miquelon",
                                                             "Livre VIII : Aides personnelles au logement",
                                                             "Partie réglementaire",
                                                             "Code de la construction et de l'habitation"]))
                    try:
                        temp_sous_calcul_traitement_59 = residence_8
                    except EmptyError:
                        temp_sous_calcul_traitement_59 = dead_value
                        raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                             start_line=6397,
                                                             start_column=25,
                                                             end_line=6397,
                                                             end_column=34,
                                                             law_headings=["Article D863-7",
                                                             "Sous-section III : Modalités de liquidation et de versement",
                                                             "Section II : Dispositions communes aux aides personnelles au logement",
                                                             "Chapitre III : Saint-Pierre-et-Miquelon",
                                                             "Livre VIII : Aides personnelles au logement",
                                                             "Partie réglementaire",
                                                             "Code de la construction et de l'habitation"]))
                    try:
                        temp_sous_calcul_traitement_60 = logement_foyer_.redevance
                    except EmptyError:
                        temp_sous_calcul_traitement_60 = dead_value
                        raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                             start_line=6378,
                                                             start_column=31,
                                                             end_line=6378,
                                                             end_column=56,
                                                             law_headings=["Article D863-7",
                                                             "Sous-section III : Modalités de liquidation et de versement",
                                                             "Section II : Dispositions communes aux aides personnelles au logement",
                                                             "Chapitre III : Saint-Pierre-et-Miquelon",
                                                             "Livre VIII : Aides personnelles au logement",
                                                             "Partie réglementaire",
                                                             "Code de la construction et de l'habitation"]))
                    try:
                        temp_sous_calcul_traitement_61 = ressources_menage_avec_arrondi
                    except EmptyError:
                        temp_sous_calcul_traitement_61 = dead_value
                        raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                             start_line=6372,
                                                             start_column=43,
                                                             end_line=6372,
                                                             end_column=60,
                                                             law_headings=["Article D863-7",
                                                             "Sous-section III : Modalités de liquidation et de versement",
                                                             "Section II : Dispositions communes aux aides personnelles au logement",
                                                             "Chapitre III : Saint-Pierre-et-Miquelon",
                                                             "Livre VIII : Aides personnelles au logement",
                                                             "Partie réglementaire",
                                                             "Code de la construction et de l'habitation"]))
                    try:
                        temp_sous_calcul_traitement_62 = logement_foyer_.beneficiaire_aide_adulte_ou_enfant_handicapes
                    except EmptyError:
                        temp_sous_calcul_traitement_62 = dead_value
                        raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                             start_line=6380,
                                                             start_column=15,
                                                             end_line=6380,
                                                             end_column=76,
                                                             law_headings=["Article D863-7",
                                                             "Sous-section III : Modalités de liquidation et de versement",
                                                             "Section II : Dispositions communes aux aides personnelles au logement",
                                                             "Chapitre III : Saint-Pierre-et-Miquelon",
                                                             "Livre VIII : Aides personnelles au logement",
                                                             "Partie réglementaire",
                                                             "Code de la construction et de l'habitation"]))
                    try:
                        temp_sous_calcul_traitement_63 = date_courante_14
                    except EmptyError:
                        temp_sous_calcul_traitement_63 = dead_value
                        raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                             start_line=6375,
                                                             start_column=29,
                                                             end_line=6375,
                                                             end_column=42,
                                                             law_headings=["Article D863-7",
                                                             "Sous-section III : Modalités de liquidation et de versement",
                                                             "Section II : Dispositions communes aux aides personnelles au logement",
                                                             "Chapitre III : Saint-Pierre-et-Miquelon",
                                                             "Livre VIII : Aides personnelles au logement",
                                                             "Partie réglementaire",
                                                             "Code de la construction et de l'habitation"]))
                    try:
                        temp_sous_calcul_traitement_64 = nombre_personnes_a_charge_11
                    except EmptyError:
                        temp_sous_calcul_traitement_64 = dead_value
                        raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                             start_line=6373,
                                                             start_column=41,
                                                             end_line=6373,
                                                             end_column=66,
                                                             law_headings=["Article D863-7",
                                                             "Sous-section III : Modalités de liquidation et de versement",
                                                             "Section II : Dispositions communes aux aides personnelles au logement",
                                                             "Chapitre III : Saint-Pierre-et-Miquelon",
                                                             "Livre VIII : Aides personnelles au logement",
                                                             "Partie réglementaire",
                                                             "Code de la construction et de l'habitation"]))
                    try:
                        temp_sous_calcul_traitement_65 = situation_familiale_calcul_apl_8
                    except EmptyError:
                        temp_sous_calcul_traitement_65 = dead_value
                        raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                             start_line=6376,
                                                             start_column=46,
                                                             end_line=6376,
                                                             end_column=76,
                                                             law_headings=["Article D863-7",
                                                             "Sous-section III : Modalités de liquidation et de versement",
                                                             "Section II : Dispositions communes aux aides personnelles au logement",
                                                             "Chapitre III : Saint-Pierre-et-Miquelon",
                                                             "Livre VIII : Aides personnelles au logement",
                                                             "Partie réglementaire",
                                                             "Code de la construction et de l'habitation"]))
                    try:
                        temp_sous_calcul_traitement_66 = zone_6
                    except EmptyError:
                        temp_sous_calcul_traitement_66 = dead_value
                        raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                             start_line=6374,
                                                             start_column=20,
                                                             end_line=6374,
                                                             end_column=24,
                                                             law_headings=["Article D863-7",
                                                             "Sous-section III : Modalités de liquidation et de versement",
                                                             "Section II : Dispositions communes aux aides personnelles au logement",
                                                             "Chapitre III : Saint-Pierre-et-Miquelon",
                                                             "Livre VIII : Aides personnelles au logement",
                                                             "Partie réglementaire",
                                                             "Code de la construction et de l'habitation"]))
                    try:
                        temp_sous_calcul_traitement_67 = True
                    except EmptyError:
                        temp_sous_calcul_traitement_67 = dead_value
                        raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                             start_line=6384,
                                                             start_column=36,
                                                             end_line=6384,
                                                             end_column=40,
                                                             law_headings=["Article D863-7",
                                                             "Sous-section III : Modalités de liquidation et de versement",
                                                             "Section II : Dispositions communes aux aides personnelles au logement",
                                                             "Chapitre III : Saint-Pierre-et-Miquelon",
                                                             "Livre VIII : Aides personnelles au logement",
                                                             "Partie réglementaire",
                                                             "Code de la construction et de l'habitation"]))
                    try:
                        temp_sous_calcul_traitement_68 = False
                    except EmptyError:
                        temp_sous_calcul_traitement_68 = dead_value
                        raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                             start_line=6391,
                                                             start_column=72,
                                                             end_line=6391,
                                                             end_column=76,
                                                             law_headings=["Article D863-7",
                                                             "Sous-section III : Modalités de liquidation et de versement",
                                                             "Section II : Dispositions communes aux aides personnelles au logement",
                                                             "Chapitre III : Saint-Pierre-et-Miquelon",
                                                             "Livre VIII : Aides personnelles au logement",
                                                             "Partie réglementaire",
                                                             "Code de la construction et de l'habitation"]))
                    try:
                        temp_sous_calcul_traitement_69 = type_aide_2
                    except EmptyError:
                        temp_sous_calcul_traitement_69 = dead_value
                        raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                             start_line=6392,
                                                             start_column=25,
                                                             end_line=6392,
                                                             end_column=34,
                                                             law_headings=["Article D863-7",
                                                             "Sous-section III : Modalités de liquidation et de versement",
                                                             "Section II : Dispositions communes aux aides personnelles au logement",
                                                             "Chapitre III : Saint-Pierre-et-Miquelon",
                                                             "Livre VIII : Aides personnelles au logement",
                                                             "Partie réglementaire",
                                                             "Code de la construction et de l'habitation"]))
                    try:
                        temp_sous_calcul_traitement_70 = False
                    except EmptyError:
                        temp_sous_calcul_traitement_70 = dead_value
                        raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                             start_line=6388,
                                                             start_column=26,
                                                             end_line=6388,
                                                             end_column=30,
                                                             law_headings=["Article D863-7",
                                                             "Sous-section III : Modalités de liquidation et de versement",
                                                             "Section II : Dispositions communes aux aides personnelles au logement",
                                                             "Chapitre III : Saint-Pierre-et-Miquelon",
                                                             "Livre VIII : Aides personnelles au logement",
                                                             "Partie réglementaire",
                                                             "Code de la construction et de l'habitation"]))
                    try:
                        temp_sous_calcul_traitement_71 = money_of_cents_string("0")
                    except EmptyError:
                        temp_sous_calcul_traitement_71 = dead_value
                        raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                             start_line=6395,
                                                             start_column=42,
                                                             end_line=6395,
                                                             end_column=45,
                                                             law_headings=["Article D863-7",
                                                             "Sous-section III : Modalités de liquidation et de versement",
                                                             "Section II : Dispositions communes aux aides personnelles au logement",
                                                             "Chapitre III : Saint-Pierre-et-Miquelon",
                                                             "Livre VIII : Aides personnelles au logement",
                                                             "Partie réglementaire",
                                                             "Code de la construction et de l'habitation"]))
                    try:
                        temp_sous_calcul_traitement_72 = logement_foyer_.logement_meuble_d842_2
                    except EmptyError:
                        temp_sous_calcul_traitement_72 = dead_value
                        raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                             start_line=6396,
                                                             start_column=38,
                                                             end_line=6396,
                                                             end_column=76,
                                                             law_headings=["Article D863-7",
                                                             "Sous-section III : Modalités de liquidation et de versement",
                                                             "Section II : Dispositions communes aux aides personnelles au logement",
                                                             "Chapitre III : Saint-Pierre-et-Miquelon",
                                                             "Livre VIII : Aides personnelles au logement",
                                                             "Partie réglementaire",
                                                             "Code de la construction et de l'habitation"]))
                    try:
                        temp_sous_calcul_traitement_73 = residence_8
                    except EmptyError:
                        temp_sous_calcul_traitement_73 = dead_value
                        raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                             start_line=6397,
                                                             start_column=25,
                                                             end_line=6397,
                                                             end_column=34,
                                                             law_headings=["Article D863-7",
                                                             "Sous-section III : Modalités de liquidation et de versement",
                                                             "Section II : Dispositions communes aux aides personnelles au logement",
                                                             "Chapitre III : Saint-Pierre-et-Miquelon",
                                                             "Livre VIII : Aides personnelles au logement",
                                                             "Partie réglementaire",
                                                             "Code de la construction et de l'habitation"]))
                    try:
                        temp_sous_calcul_traitement_74 = logement_foyer_.redevance
                    except EmptyError:
                        temp_sous_calcul_traitement_74 = dead_value
                        raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                             start_line=6378,
                                                             start_column=31,
                                                             end_line=6378,
                                                             end_column=56,
                                                             law_headings=["Article D863-7",
                                                             "Sous-section III : Modalités de liquidation et de versement",
                                                             "Section II : Dispositions communes aux aides personnelles au logement",
                                                             "Chapitre III : Saint-Pierre-et-Miquelon",
                                                             "Livre VIII : Aides personnelles au logement",
                                                             "Partie réglementaire",
                                                             "Code de la construction et de l'habitation"]))
                    try:
                        temp_sous_calcul_traitement_75 = ressources_menage_avec_arrondi
                    except EmptyError:
                        temp_sous_calcul_traitement_75 = dead_value
                        raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                             start_line=6372,
                                                             start_column=43,
                                                             end_line=6372,
                                                             end_column=60,
                                                             law_headings=["Article D863-7",
                                                             "Sous-section III : Modalités de liquidation et de versement",
                                                             "Section II : Dispositions communes aux aides personnelles au logement",
                                                             "Chapitre III : Saint-Pierre-et-Miquelon",
                                                             "Livre VIII : Aides personnelles au logement",
                                                             "Partie réglementaire",
                                                             "Code de la construction et de l'habitation"]))
                    try:
                        temp_sous_calcul_traitement_76 = logement_foyer_.beneficiaire_aide_adulte_ou_enfant_handicapes
                    except EmptyError:
                        temp_sous_calcul_traitement_76 = dead_value
                        raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                             start_line=6380,
                                                             start_column=15,
                                                             end_line=6380,
                                                             end_column=76,
                                                             law_headings=["Article D863-7",
                                                             "Sous-section III : Modalités de liquidation et de versement",
                                                             "Section II : Dispositions communes aux aides personnelles au logement",
                                                             "Chapitre III : Saint-Pierre-et-Miquelon",
                                                             "Livre VIII : Aides personnelles au logement",
                                                             "Partie réglementaire",
                                                             "Code de la construction et de l'habitation"]))
                    try:
                        temp_sous_calcul_traitement_77 = date_courante_14
                    except EmptyError:
                        temp_sous_calcul_traitement_77 = dead_value
                        raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                             start_line=6375,
                                                             start_column=29,
                                                             end_line=6375,
                                                             end_column=42,
                                                             law_headings=["Article D863-7",
                                                             "Sous-section III : Modalités de liquidation et de versement",
                                                             "Section II : Dispositions communes aux aides personnelles au logement",
                                                             "Chapitre III : Saint-Pierre-et-Miquelon",
                                                             "Livre VIII : Aides personnelles au logement",
                                                             "Partie réglementaire",
                                                             "Code de la construction et de l'habitation"]))
                    try:
                        temp_sous_calcul_traitement_78 = nombre_personnes_a_charge_11
                    except EmptyError:
                        temp_sous_calcul_traitement_78 = dead_value
                        raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                             start_line=6373,
                                                             start_column=41,
                                                             end_line=6373,
                                                             end_column=66,
                                                             law_headings=["Article D863-7",
                                                             "Sous-section III : Modalités de liquidation et de versement",
                                                             "Section II : Dispositions communes aux aides personnelles au logement",
                                                             "Chapitre III : Saint-Pierre-et-Miquelon",
                                                             "Livre VIII : Aides personnelles au logement",
                                                             "Partie réglementaire",
                                                             "Code de la construction et de l'habitation"]))
                    try:
                        temp_sous_calcul_traitement_79 = situation_familiale_calcul_apl_8
                    except EmptyError:
                        temp_sous_calcul_traitement_79 = dead_value
                        raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                             start_line=6376,
                                                             start_column=46,
                                                             end_line=6376,
                                                             end_column=76,
                                                             law_headings=["Article D863-7",
                                                             "Sous-section III : Modalités de liquidation et de versement",
                                                             "Section II : Dispositions communes aux aides personnelles au logement",
                                                             "Chapitre III : Saint-Pierre-et-Miquelon",
                                                             "Livre VIII : Aides personnelles au logement",
                                                             "Partie réglementaire",
                                                             "Code de la construction et de l'habitation"]))
                    try:
                        temp_sous_calcul_traitement_80 = zone_6
                    except EmptyError:
                        temp_sous_calcul_traitement_80 = dead_value
                        raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                             start_line=6374,
                                                             start_column=20,
                                                             end_line=6374,
                                                             end_column=24,
                                                             law_headings=["Article D863-7",
                                                             "Sous-section III : Modalités de liquidation et de versement",
                                                             "Section II : Dispositions communes aux aides personnelles au logement",
                                                             "Chapitre III : Saint-Pierre-et-Miquelon",
                                                             "Livre VIII : Aides personnelles au logement",
                                                             "Partie réglementaire",
                                                             "Code de la construction et de l'habitation"]))
                    try:
                        temp_sous_calcul_traitement_81 = True
                    except EmptyError:
                        temp_sous_calcul_traitement_81 = dead_value
                        raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                             start_line=6384,
                                                             start_column=36,
                                                             end_line=6384,
                                                             end_column=40,
                                                             law_headings=["Article D863-7",
                                                             "Sous-section III : Modalités de liquidation et de versement",
                                                             "Section II : Dispositions communes aux aides personnelles au logement",
                                                             "Chapitre III : Saint-Pierre-et-Miquelon",
                                                             "Livre VIII : Aides personnelles au logement",
                                                             "Partie réglementaire",
                                                             "Code de la construction et de l'habitation"]))
                    try:
                        temp_sous_calcul_traitement_82 = False
                    except EmptyError:
                        temp_sous_calcul_traitement_82 = dead_value
                        raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                             start_line=6391,
                                                             start_column=72,
                                                             end_line=6391,
                                                             end_column=76,
                                                             law_headings=["Article D863-7",
                                                             "Sous-section III : Modalités de liquidation et de versement",
                                                             "Section II : Dispositions communes aux aides personnelles au logement",
                                                             "Chapitre III : Saint-Pierre-et-Miquelon",
                                                             "Livre VIII : Aides personnelles au logement",
                                                             "Partie réglementaire",
                                                             "Code de la construction et de l'habitation"]))
                    try:
                        temp_sous_calcul_traitement_83 = type_aide_2
                    except EmptyError:
                        temp_sous_calcul_traitement_83 = dead_value
                        raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                             start_line=6392,
                                                             start_column=25,
                                                             end_line=6392,
                                                             end_column=34,
                                                             law_headings=["Article D863-7",
                                                             "Sous-section III : Modalités de liquidation et de versement",
                                                             "Section II : Dispositions communes aux aides personnelles au logement",
                                                             "Chapitre III : Saint-Pierre-et-Miquelon",
                                                             "Livre VIII : Aides personnelles au logement",
                                                             "Partie réglementaire",
                                                             "Code de la construction et de l'habitation"]))
                    try:
                        temp_sous_calcul_traitement_84 = False
                    except EmptyError:
                        temp_sous_calcul_traitement_84 = dead_value
                        raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                             start_line=6388,
                                                             start_column=26,
                                                             end_line=6388,
                                                             end_column=30,
                                                             law_headings=["Article D863-7",
                                                             "Sous-section III : Modalités de liquidation et de versement",
                                                             "Section II : Dispositions communes aux aides personnelles au logement",
                                                             "Chapitre III : Saint-Pierre-et-Miquelon",
                                                             "Livre VIII : Aides personnelles au logement",
                                                             "Partie réglementaire",
                                                             "Code de la construction et de l'habitation"]))
                    try:
                        temp_sous_calcul_traitement_85 = money_of_cents_string("0")
                    except EmptyError:
                        temp_sous_calcul_traitement_85 = dead_value
                        raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                             start_line=6395,
                                                             start_column=42,
                                                             end_line=6395,
                                                             end_column=45,
                                                             law_headings=["Article D863-7",
                                                             "Sous-section III : Modalités de liquidation et de versement",
                                                             "Section II : Dispositions communes aux aides personnelles au logement",
                                                             "Chapitre III : Saint-Pierre-et-Miquelon",
                                                             "Livre VIII : Aides personnelles au logement",
                                                             "Partie réglementaire",
                                                             "Code de la construction et de l'habitation"]))
                    try:
                        temp_sous_calcul_traitement_86 = logement_foyer_.logement_meuble_d842_2
                    except EmptyError:
                        temp_sous_calcul_traitement_86 = dead_value
                        raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                             start_line=6396,
                                                             start_column=38,
                                                             end_line=6396,
                                                             end_column=76,
                                                             law_headings=["Article D863-7",
                                                             "Sous-section III : Modalités de liquidation et de versement",
                                                             "Section II : Dispositions communes aux aides personnelles au logement",
                                                             "Chapitre III : Saint-Pierre-et-Miquelon",
                                                             "Livre VIII : Aides personnelles au logement",
                                                             "Partie réglementaire",
                                                             "Code de la construction et de l'habitation"]))
                    try:
                        temp_sous_calcul_traitement_87 = residence_8
                    except EmptyError:
                        temp_sous_calcul_traitement_87 = dead_value
                        raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                             start_line=6397,
                                                             start_column=25,
                                                             end_line=6397,
                                                             end_column=34,
                                                             law_headings=["Article D863-7",
                                                             "Sous-section III : Modalités de liquidation et de versement",
                                                             "Section II : Dispositions communes aux aides personnelles au logement",
                                                             "Chapitre III : Saint-Pierre-et-Miquelon",
                                                             "Livre VIII : Aides personnelles au logement",
                                                             "Partie réglementaire",
                                                             "Code de la construction et de l'habitation"]))
                    try:
                        temp_sous_calcul_traitement_88 = logement_foyer_.redevance
                    except EmptyError:
                        temp_sous_calcul_traitement_88 = dead_value
                        raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                             start_line=6378,
                                                             start_column=31,
                                                             end_line=6378,
                                                             end_column=56,
                                                             law_headings=["Article D863-7",
                                                             "Sous-section III : Modalités de liquidation et de versement",
                                                             "Section II : Dispositions communes aux aides personnelles au logement",
                                                             "Chapitre III : Saint-Pierre-et-Miquelon",
                                                             "Livre VIII : Aides personnelles au logement",
                                                             "Partie réglementaire",
                                                             "Code de la construction et de l'habitation"]))
                    try:
                        temp_sous_calcul_traitement_89 = ressources_menage_avec_arrondi
                    except EmptyError:
                        temp_sous_calcul_traitement_89 = dead_value
                        raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                             start_line=6372,
                                                             start_column=43,
                                                             end_line=6372,
                                                             end_column=60,
                                                             law_headings=["Article D863-7",
                                                             "Sous-section III : Modalités de liquidation et de versement",
                                                             "Section II : Dispositions communes aux aides personnelles au logement",
                                                             "Chapitre III : Saint-Pierre-et-Miquelon",
                                                             "Livre VIII : Aides personnelles au logement",
                                                             "Partie réglementaire",
                                                             "Code de la construction et de l'habitation"]))
                    try:
                        temp_sous_calcul_traitement_90 = logement_foyer_.beneficiaire_aide_adulte_ou_enfant_handicapes
                    except EmptyError:
                        temp_sous_calcul_traitement_90 = dead_value
                        raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                             start_line=6380,
                                                             start_column=15,
                                                             end_line=6380,
                                                             end_column=76,
                                                             law_headings=["Article D863-7",
                                                             "Sous-section III : Modalités de liquidation et de versement",
                                                             "Section II : Dispositions communes aux aides personnelles au logement",
                                                             "Chapitre III : Saint-Pierre-et-Miquelon",
                                                             "Livre VIII : Aides personnelles au logement",
                                                             "Partie réglementaire",
                                                             "Code de la construction et de l'habitation"]))
                    try:
                        temp_sous_calcul_traitement_91 = date_courante_14
                    except EmptyError:
                        temp_sous_calcul_traitement_91 = dead_value
                        raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                             start_line=6375,
                                                             start_column=29,
                                                             end_line=6375,
                                                             end_column=42,
                                                             law_headings=["Article D863-7",
                                                             "Sous-section III : Modalités de liquidation et de versement",
                                                             "Section II : Dispositions communes aux aides personnelles au logement",
                                                             "Chapitre III : Saint-Pierre-et-Miquelon",
                                                             "Livre VIII : Aides personnelles au logement",
                                                             "Partie réglementaire",
                                                             "Code de la construction et de l'habitation"]))
                    try:
                        temp_sous_calcul_traitement_92 = nombre_personnes_a_charge_11
                    except EmptyError:
                        temp_sous_calcul_traitement_92 = dead_value
                        raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                             start_line=6373,
                                                             start_column=41,
                                                             end_line=6373,
                                                             end_column=66,
                                                             law_headings=["Article D863-7",
                                                             "Sous-section III : Modalités de liquidation et de versement",
                                                             "Section II : Dispositions communes aux aides personnelles au logement",
                                                             "Chapitre III : Saint-Pierre-et-Miquelon",
                                                             "Livre VIII : Aides personnelles au logement",
                                                             "Partie réglementaire",
                                                             "Code de la construction et de l'habitation"]))
                    try:
                        temp_sous_calcul_traitement_93 = situation_familiale_calcul_apl_8
                    except EmptyError:
                        temp_sous_calcul_traitement_93 = dead_value
                        raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                             start_line=6376,
                                                             start_column=46,
                                                             end_line=6376,
                                                             end_column=76,
                                                             law_headings=["Article D863-7",
                                                             "Sous-section III : Modalités de liquidation et de versement",
                                                             "Section II : Dispositions communes aux aides personnelles au logement",
                                                             "Chapitre III : Saint-Pierre-et-Miquelon",
                                                             "Livre VIII : Aides personnelles au logement",
                                                             "Partie réglementaire",
                                                             "Code de la construction et de l'habitation"]))
                    try:
                        temp_sous_calcul_traitement_94 = zone_6
                    except EmptyError:
                        temp_sous_calcul_traitement_94 = dead_value
                        raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                             start_line=6374,
                                                             start_column=20,
                                                             end_line=6374,
                                                             end_column=24,
                                                             law_headings=["Article D863-7",
                                                             "Sous-section III : Modalités de liquidation et de versement",
                                                             "Section II : Dispositions communes aux aides personnelles au logement",
                                                             "Chapitre III : Saint-Pierre-et-Miquelon",
                                                             "Livre VIII : Aides personnelles au logement",
                                                             "Partie réglementaire",
                                                             "Code de la construction et de l'habitation"]))
                    try:
                        temp_sous_calcul_traitement_95 = True
                    except EmptyError:
                        temp_sous_calcul_traitement_95 = dead_value
                        raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                             start_line=6384,
                                                             start_column=36,
                                                             end_line=6384,
                                                             end_column=40,
                                                             law_headings=["Article D863-7",
                                                             "Sous-section III : Modalités de liquidation et de versement",
                                                             "Section II : Dispositions communes aux aides personnelles au logement",
                                                             "Chapitre III : Saint-Pierre-et-Miquelon",
                                                             "Livre VIII : Aides personnelles au logement",
                                                             "Partie réglementaire",
                                                             "Code de la construction et de l'habitation"]))
                    try:
                        temp_sous_calcul_traitement_96 = False
                    except EmptyError:
                        temp_sous_calcul_traitement_96 = dead_value
                        raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                             start_line=6391,
                                                             start_column=72,
                                                             end_line=6391,
                                                             end_column=76,
                                                             law_headings=["Article D863-7",
                                                             "Sous-section III : Modalités de liquidation et de versement",
                                                             "Section II : Dispositions communes aux aides personnelles au logement",
                                                             "Chapitre III : Saint-Pierre-et-Miquelon",
                                                             "Livre VIII : Aides personnelles au logement",
                                                             "Partie réglementaire",
                                                             "Code de la construction et de l'habitation"]))
                    try:
                        temp_sous_calcul_traitement_97 = type_aide_2
                    except EmptyError:
                        temp_sous_calcul_traitement_97 = dead_value
                        raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                             start_line=6392,
                                                             start_column=25,
                                                             end_line=6392,
                                                             end_column=34,
                                                             law_headings=["Article D863-7",
                                                             "Sous-section III : Modalités de liquidation et de versement",
                                                             "Section II : Dispositions communes aux aides personnelles au logement",
                                                             "Chapitre III : Saint-Pierre-et-Miquelon",
                                                             "Livre VIII : Aides personnelles au logement",
                                                             "Partie réglementaire",
                                                             "Code de la construction et de l'habitation"]))
                    try:
                        temp_sous_calcul_traitement_98 = False
                    except EmptyError:
                        temp_sous_calcul_traitement_98 = dead_value
                        raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                             start_line=6388,
                                                             start_column=26,
                                                             end_line=6388,
                                                             end_column=30,
                                                             law_headings=["Article D863-7",
                                                             "Sous-section III : Modalités de liquidation et de versement",
                                                             "Section II : Dispositions communes aux aides personnelles au logement",
                                                             "Chapitre III : Saint-Pierre-et-Miquelon",
                                                             "Livre VIII : Aides personnelles au logement",
                                                             "Partie réglementaire",
                                                             "Code de la construction et de l'habitation"]))
                    try:
                        temp_sous_calcul_traitement_99 = money_of_cents_string("0")
                    except EmptyError:
                        temp_sous_calcul_traitement_99 = dead_value
                        raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                             start_line=6395,
                                                             start_column=42,
                                                             end_line=6395,
                                                             end_column=45,
                                                             law_headings=["Article D863-7",
                                                             "Sous-section III : Modalités de liquidation et de versement",
                                                             "Section II : Dispositions communes aux aides personnelles au logement",
                                                             "Chapitre III : Saint-Pierre-et-Miquelon",
                                                             "Livre VIII : Aides personnelles au logement",
                                                             "Partie réglementaire",
                                                             "Code de la construction et de l'habitation"]))
                    try:
                        temp_sous_calcul_traitement_100 = logement_foyer_.logement_meuble_d842_2
                    except EmptyError:
                        temp_sous_calcul_traitement_100 = dead_value
                        raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                             start_line=6396,
                                                             start_column=38,
                                                             end_line=6396,
                                                             end_column=76,
                                                             law_headings=["Article D863-7",
                                                             "Sous-section III : Modalités de liquidation et de versement",
                                                             "Section II : Dispositions communes aux aides personnelles au logement",
                                                             "Chapitre III : Saint-Pierre-et-Miquelon",
                                                             "Livre VIII : Aides personnelles au logement",
                                                             "Partie réglementaire",
                                                             "Code de la construction et de l'habitation"]))
                    try:
                        temp_sous_calcul_traitement_101 = residence_8
                    except EmptyError:
                        temp_sous_calcul_traitement_101 = dead_value
                        raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                             start_line=6397,
                                                             start_column=25,
                                                             end_line=6397,
                                                             end_column=34,
                                                             law_headings=["Article D863-7",
                                                             "Sous-section III : Modalités de liquidation et de versement",
                                                             "Section II : Dispositions communes aux aides personnelles au logement",
                                                             "Chapitre III : Saint-Pierre-et-Miquelon",
                                                             "Livre VIII : Aides personnelles au logement",
                                                             "Partie réglementaire",
                                                             "Code de la construction et de l'habitation"]))
                    def temp_sous_calcul_traitement_102(param0_1:Money):
                        try:
                            temp_sous_calcul_traitement_103 = logement_foyer_.redevance
                        except EmptyError:
                            temp_sous_calcul_traitement_103 = dead_value
                            raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                                 start_line=6378,
                                                                 start_column=31,
                                                                 end_line=6378,
                                                                 end_column=56,
                                                                 law_headings=["Article D863-7",
                                                                 "Sous-section III : Modalités de liquidation et de versement",
                                                                 "Section II : Dispositions communes aux aides personnelles au logement",
                                                                 "Chapitre III : Saint-Pierre-et-Miquelon",
                                                                 "Livre VIII : Aides personnelles au logement",
                                                                 "Partie réglementaire",
                                                                 "Code de la construction et de l'habitation"]))
                        try:
                            temp_sous_calcul_traitement_104 = ressources_menage_avec_arrondi
                        except EmptyError:
                            temp_sous_calcul_traitement_104 = dead_value
                            raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                                 start_line=6372,
                                                                 start_column=43,
                                                                 end_line=6372,
                                                                 end_column=60,
                                                                 law_headings=["Article D863-7",
                                                                 "Sous-section III : Modalités de liquidation et de versement",
                                                                 "Section II : Dispositions communes aux aides personnelles au logement",
                                                                 "Chapitre III : Saint-Pierre-et-Miquelon",
                                                                 "Livre VIII : Aides personnelles au logement",
                                                                 "Partie réglementaire",
                                                                 "Code de la construction et de l'habitation"]))
                        try:
                            temp_sous_calcul_traitement_105 = logement_foyer_.beneficiaire_aide_adulte_ou_enfant_handicapes
                        except EmptyError:
                            temp_sous_calcul_traitement_105 = dead_value
                            raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                                 start_line=6380,
                                                                 start_column=15,
                                                                 end_line=6380,
                                                                 end_column=76,
                                                                 law_headings=["Article D863-7",
                                                                 "Sous-section III : Modalités de liquidation et de versement",
                                                                 "Section II : Dispositions communes aux aides personnelles au logement",
                                                                 "Chapitre III : Saint-Pierre-et-Miquelon",
                                                                 "Livre VIII : Aides personnelles au logement",
                                                                 "Partie réglementaire",
                                                                 "Code de la construction et de l'habitation"]))
                        try:
                            temp_sous_calcul_traitement_106 = date_courante_14
                        except EmptyError:
                            temp_sous_calcul_traitement_106 = dead_value
                            raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                                 start_line=6375,
                                                                 start_column=29,
                                                                 end_line=6375,
                                                                 end_column=42,
                                                                 law_headings=["Article D863-7",
                                                                 "Sous-section III : Modalités de liquidation et de versement",
                                                                 "Section II : Dispositions communes aux aides personnelles au logement",
                                                                 "Chapitre III : Saint-Pierre-et-Miquelon",
                                                                 "Livre VIII : Aides personnelles au logement",
                                                                 "Partie réglementaire",
                                                                 "Code de la construction et de l'habitation"]))
                        try:
                            temp_sous_calcul_traitement_107 = nombre_personnes_a_charge_11
                        except EmptyError:
                            temp_sous_calcul_traitement_107 = dead_value
                            raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                                 start_line=6373,
                                                                 start_column=41,
                                                                 end_line=6373,
                                                                 end_column=66,
                                                                 law_headings=["Article D863-7",
                                                                 "Sous-section III : Modalités de liquidation et de versement",
                                                                 "Section II : Dispositions communes aux aides personnelles au logement",
                                                                 "Chapitre III : Saint-Pierre-et-Miquelon",
                                                                 "Livre VIII : Aides personnelles au logement",
                                                                 "Partie réglementaire",
                                                                 "Code de la construction et de l'habitation"]))
                        try:
                            temp_sous_calcul_traitement_108 = situation_familiale_calcul_apl_8
                        except EmptyError:
                            temp_sous_calcul_traitement_108 = dead_value
                            raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                                 start_line=6376,
                                                                 start_column=46,
                                                                 end_line=6376,
                                                                 end_column=76,
                                                                 law_headings=["Article D863-7",
                                                                 "Sous-section III : Modalités de liquidation et de versement",
                                                                 "Section II : Dispositions communes aux aides personnelles au logement",
                                                                 "Chapitre III : Saint-Pierre-et-Miquelon",
                                                                 "Livre VIII : Aides personnelles au logement",
                                                                 "Partie réglementaire",
                                                                 "Code de la construction et de l'habitation"]))
                        try:
                            temp_sous_calcul_traitement_109 = zone_6
                        except EmptyError:
                            temp_sous_calcul_traitement_109 = dead_value
                            raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                                 start_line=6374,
                                                                 start_column=20,
                                                                 end_line=6374,
                                                                 end_column=24,
                                                                 law_headings=["Article D863-7",
                                                                 "Sous-section III : Modalités de liquidation et de versement",
                                                                 "Section II : Dispositions communes aux aides personnelles au logement",
                                                                 "Chapitre III : Saint-Pierre-et-Miquelon",
                                                                 "Livre VIII : Aides personnelles au logement",
                                                                 "Partie réglementaire",
                                                                 "Code de la construction et de l'habitation"]))
                        try:
                            temp_sous_calcul_traitement_110 = True
                        except EmptyError:
                            temp_sous_calcul_traitement_110 = dead_value
                            raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                                 start_line=6384,
                                                                 start_column=36,
                                                                 end_line=6384,
                                                                 end_column=40,
                                                                 law_headings=["Article D863-7",
                                                                 "Sous-section III : Modalités de liquidation et de versement",
                                                                 "Section II : Dispositions communes aux aides personnelles au logement",
                                                                 "Chapitre III : Saint-Pierre-et-Miquelon",
                                                                 "Livre VIII : Aides personnelles au logement",
                                                                 "Partie réglementaire",
                                                                 "Code de la construction et de l'habitation"]))
                        try:
                            temp_sous_calcul_traitement_111 = False
                        except EmptyError:
                            temp_sous_calcul_traitement_111 = dead_value
                            raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                                 start_line=6391,
                                                                 start_column=72,
                                                                 end_line=6391,
                                                                 end_column=76,
                                                                 law_headings=["Article D863-7",
                                                                 "Sous-section III : Modalités de liquidation et de versement",
                                                                 "Section II : Dispositions communes aux aides personnelles au logement",
                                                                 "Chapitre III : Saint-Pierre-et-Miquelon",
                                                                 "Livre VIII : Aides personnelles au logement",
                                                                 "Partie réglementaire",
                                                                 "Code de la construction et de l'habitation"]))
                        try:
                            temp_sous_calcul_traitement_112 = type_aide_2
                        except EmptyError:
                            temp_sous_calcul_traitement_112 = dead_value
                            raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                                 start_line=6392,
                                                                 start_column=25,
                                                                 end_line=6392,
                                                                 end_column=34,
                                                                 law_headings=["Article D863-7",
                                                                 "Sous-section III : Modalités de liquidation et de versement",
                                                                 "Section II : Dispositions communes aux aides personnelles au logement",
                                                                 "Chapitre III : Saint-Pierre-et-Miquelon",
                                                                 "Livre VIII : Aides personnelles au logement",
                                                                 "Partie réglementaire",
                                                                 "Code de la construction et de l'habitation"]))
                        try:
                            temp_sous_calcul_traitement_113 = False
                        except EmptyError:
                            temp_sous_calcul_traitement_113 = dead_value
                            raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                                 start_line=6388,
                                                                 start_column=26,
                                                                 end_line=6388,
                                                                 end_column=30,
                                                                 law_headings=["Article D863-7",
                                                                 "Sous-section III : Modalités de liquidation et de versement",
                                                                 "Section II : Dispositions communes aux aides personnelles au logement",
                                                                 "Chapitre III : Saint-Pierre-et-Miquelon",
                                                                 "Livre VIII : Aides personnelles au logement",
                                                                 "Partie réglementaire",
                                                                 "Code de la construction et de l'habitation"]))
                        try:
                            temp_sous_calcul_traitement_114 = money_of_cents_string("0")
                        except EmptyError:
                            temp_sous_calcul_traitement_114 = dead_value
                            raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                                 start_line=6395,
                                                                 start_column=42,
                                                                 end_line=6395,
                                                                 end_column=45,
                                                                 law_headings=["Article D863-7",
                                                                 "Sous-section III : Modalités de liquidation et de versement",
                                                                 "Section II : Dispositions communes aux aides personnelles au logement",
                                                                 "Chapitre III : Saint-Pierre-et-Miquelon",
                                                                 "Livre VIII : Aides personnelles au logement",
                                                                 "Partie réglementaire",
                                                                 "Code de la construction et de l'habitation"]))
                        try:
                            temp_sous_calcul_traitement_115 = logement_foyer_.logement_meuble_d842_2
                        except EmptyError:
                            temp_sous_calcul_traitement_115 = dead_value
                            raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                                 start_line=6396,
                                                                 start_column=38,
                                                                 end_line=6396,
                                                                 end_column=76,
                                                                 law_headings=["Article D863-7",
                                                                 "Sous-section III : Modalités de liquidation et de versement",
                                                                 "Section II : Dispositions communes aux aides personnelles au logement",
                                                                 "Chapitre III : Saint-Pierre-et-Miquelon",
                                                                 "Livre VIII : Aides personnelles au logement",
                                                                 "Partie réglementaire",
                                                                 "Code de la construction et de l'habitation"]))
                        try:
                            temp_sous_calcul_traitement_116 = residence_8
                        except EmptyError:
                            temp_sous_calcul_traitement_116 = dead_value
                            raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                                 start_line=6397,
                                                                 start_column=25,
                                                                 end_line=6397,
                                                                 end_column=34,
                                                                 law_headings=["Article D863-7",
                                                                 "Sous-section III : Modalités de liquidation et de versement",
                                                                 "Section II : Dispositions communes aux aides personnelles au logement",
                                                                 "Chapitre III : Saint-Pierre-et-Miquelon",
                                                                 "Livre VIII : Aides personnelles au logement",
                                                                 "Partie réglementaire",
                                                                 "Code de la construction et de l'habitation"]))
                        return calcul_aide_personnalisee_logement_locatif(
                            CalculAidePersonnaliseeLogementLocatifIn(loyer_principal_base_in = temp_sous_calcul_traitement_103,
                            ressources_menage_arrondies_in = temp_sous_calcul_traitement_104,
                            beneficiaire_aide_adulte_ou_enfant_handicapes_in = temp_sous_calcul_traitement_105,
                            date_courante_in = temp_sous_calcul_traitement_106,
                            nombre_personnes_a_charge_in = temp_sous_calcul_traitement_107,
                            situation_familiale_calcul_apl_in = temp_sous_calcul_traitement_108,
                            zone_in = temp_sous_calcul_traitement_109,
                            logement_est_chambre_in = temp_sous_calcul_traitement_110,
                            agees_ou_handicap_adultes_hebergees_onereux_particuliers_in = temp_sous_calcul_traitement_111,
                            type_aide_in = temp_sous_calcul_traitement_112,
                            colocation_in = temp_sous_calcul_traitement_113,
                            reduction_loyer_solidarite_in = temp_sous_calcul_traitement_114,
                            logement_meuble_d842_2_in = temp_sous_calcul_traitement_115,
                            residence_in = temp_sous_calcul_traitement_116)).traitement_aide_finale(
                            param0_1)
                    try:
                        temp_sous_calcul_traitement_117 = logement_foyer_.redevance
                    except EmptyError:
                        temp_sous_calcul_traitement_117 = dead_value
                        raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                             start_line=6378,
                                                             start_column=31,
                                                             end_line=6378,
                                                             end_column=56,
                                                             law_headings=["Article D863-7",
                                                             "Sous-section III : Modalités de liquidation et de versement",
                                                             "Section II : Dispositions communes aux aides personnelles au logement",
                                                             "Chapitre III : Saint-Pierre-et-Miquelon",
                                                             "Livre VIII : Aides personnelles au logement",
                                                             "Partie réglementaire",
                                                             "Code de la construction et de l'habitation"]))
                    try:
                        temp_sous_calcul_traitement_118 = ressources_menage_avec_arrondi
                    except EmptyError:
                        temp_sous_calcul_traitement_118 = dead_value
                        raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                             start_line=6372,
                                                             start_column=43,
                                                             end_line=6372,
                                                             end_column=60,
                                                             law_headings=["Article D863-7",
                                                             "Sous-section III : Modalités de liquidation et de versement",
                                                             "Section II : Dispositions communes aux aides personnelles au logement",
                                                             "Chapitre III : Saint-Pierre-et-Miquelon",
                                                             "Livre VIII : Aides personnelles au logement",
                                                             "Partie réglementaire",
                                                             "Code de la construction et de l'habitation"]))
                    try:
                        temp_sous_calcul_traitement_119 = logement_foyer_.beneficiaire_aide_adulte_ou_enfant_handicapes
                    except EmptyError:
                        temp_sous_calcul_traitement_119 = dead_value
                        raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                             start_line=6380,
                                                             start_column=15,
                                                             end_line=6380,
                                                             end_column=76,
                                                             law_headings=["Article D863-7",
                                                             "Sous-section III : Modalités de liquidation et de versement",
                                                             "Section II : Dispositions communes aux aides personnelles au logement",
                                                             "Chapitre III : Saint-Pierre-et-Miquelon",
                                                             "Livre VIII : Aides personnelles au logement",
                                                             "Partie réglementaire",
                                                             "Code de la construction et de l'habitation"]))
                    try:
                        temp_sous_calcul_traitement_120 = date_courante_14
                    except EmptyError:
                        temp_sous_calcul_traitement_120 = dead_value
                        raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                             start_line=6375,
                                                             start_column=29,
                                                             end_line=6375,
                                                             end_column=42,
                                                             law_headings=["Article D863-7",
                                                             "Sous-section III : Modalités de liquidation et de versement",
                                                             "Section II : Dispositions communes aux aides personnelles au logement",
                                                             "Chapitre III : Saint-Pierre-et-Miquelon",
                                                             "Livre VIII : Aides personnelles au logement",
                                                             "Partie réglementaire",
                                                             "Code de la construction et de l'habitation"]))
                    try:
                        temp_sous_calcul_traitement_121 = nombre_personnes_a_charge_11
                    except EmptyError:
                        temp_sous_calcul_traitement_121 = dead_value
                        raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                             start_line=6373,
                                                             start_column=41,
                                                             end_line=6373,
                                                             end_column=66,
                                                             law_headings=["Article D863-7",
                                                             "Sous-section III : Modalités de liquidation et de versement",
                                                             "Section II : Dispositions communes aux aides personnelles au logement",
                                                             "Chapitre III : Saint-Pierre-et-Miquelon",
                                                             "Livre VIII : Aides personnelles au logement",
                                                             "Partie réglementaire",
                                                             "Code de la construction et de l'habitation"]))
                    try:
                        temp_sous_calcul_traitement_122 = situation_familiale_calcul_apl_8
                    except EmptyError:
                        temp_sous_calcul_traitement_122 = dead_value
                        raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                             start_line=6376,
                                                             start_column=46,
                                                             end_line=6376,
                                                             end_column=76,
                                                             law_headings=["Article D863-7",
                                                             "Sous-section III : Modalités de liquidation et de versement",
                                                             "Section II : Dispositions communes aux aides personnelles au logement",
                                                             "Chapitre III : Saint-Pierre-et-Miquelon",
                                                             "Livre VIII : Aides personnelles au logement",
                                                             "Partie réglementaire",
                                                             "Code de la construction et de l'habitation"]))
                    try:
                        temp_sous_calcul_traitement_123 = zone_6
                    except EmptyError:
                        temp_sous_calcul_traitement_123 = dead_value
                        raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                             start_line=6374,
                                                             start_column=20,
                                                             end_line=6374,
                                                             end_column=24,
                                                             law_headings=["Article D863-7",
                                                             "Sous-section III : Modalités de liquidation et de versement",
                                                             "Section II : Dispositions communes aux aides personnelles au logement",
                                                             "Chapitre III : Saint-Pierre-et-Miquelon",
                                                             "Livre VIII : Aides personnelles au logement",
                                                             "Partie réglementaire",
                                                             "Code de la construction et de l'habitation"]))
                    try:
                        temp_sous_calcul_traitement_124 = True
                    except EmptyError:
                        temp_sous_calcul_traitement_124 = dead_value
                        raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                             start_line=6384,
                                                             start_column=36,
                                                             end_line=6384,
                                                             end_column=40,
                                                             law_headings=["Article D863-7",
                                                             "Sous-section III : Modalités de liquidation et de versement",
                                                             "Section II : Dispositions communes aux aides personnelles au logement",
                                                             "Chapitre III : Saint-Pierre-et-Miquelon",
                                                             "Livre VIII : Aides personnelles au logement",
                                                             "Partie réglementaire",
                                                             "Code de la construction et de l'habitation"]))
                    try:
                        temp_sous_calcul_traitement_125 = False
                    except EmptyError:
                        temp_sous_calcul_traitement_125 = dead_value
                        raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                             start_line=6391,
                                                             start_column=72,
                                                             end_line=6391,
                                                             end_column=76,
                                                             law_headings=["Article D863-7",
                                                             "Sous-section III : Modalités de liquidation et de versement",
                                                             "Section II : Dispositions communes aux aides personnelles au logement",
                                                             "Chapitre III : Saint-Pierre-et-Miquelon",
                                                             "Livre VIII : Aides personnelles au logement",
                                                             "Partie réglementaire",
                                                             "Code de la construction et de l'habitation"]))
                    try:
                        temp_sous_calcul_traitement_126 = type_aide_2
                    except EmptyError:
                        temp_sous_calcul_traitement_126 = dead_value
                        raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                             start_line=6392,
                                                             start_column=25,
                                                             end_line=6392,
                                                             end_column=34,
                                                             law_headings=["Article D863-7",
                                                             "Sous-section III : Modalités de liquidation et de versement",
                                                             "Section II : Dispositions communes aux aides personnelles au logement",
                                                             "Chapitre III : Saint-Pierre-et-Miquelon",
                                                             "Livre VIII : Aides personnelles au logement",
                                                             "Partie réglementaire",
                                                             "Code de la construction et de l'habitation"]))
                    try:
                        temp_sous_calcul_traitement_127 = False
                    except EmptyError:
                        temp_sous_calcul_traitement_127 = dead_value
                        raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                             start_line=6388,
                                                             start_column=26,
                                                             end_line=6388,
                                                             end_column=30,
                                                             law_headings=["Article D863-7",
                                                             "Sous-section III : Modalités de liquidation et de versement",
                                                             "Section II : Dispositions communes aux aides personnelles au logement",
                                                             "Chapitre III : Saint-Pierre-et-Miquelon",
                                                             "Livre VIII : Aides personnelles au logement",
                                                             "Partie réglementaire",
                                                             "Code de la construction et de l'habitation"]))
                    try:
                        temp_sous_calcul_traitement_128 = money_of_cents_string("0")
                    except EmptyError:
                        temp_sous_calcul_traitement_128 = dead_value
                        raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                             start_line=6395,
                                                             start_column=42,
                                                             end_line=6395,
                                                             end_column=45,
                                                             law_headings=["Article D863-7",
                                                             "Sous-section III : Modalités de liquidation et de versement",
                                                             "Section II : Dispositions communes aux aides personnelles au logement",
                                                             "Chapitre III : Saint-Pierre-et-Miquelon",
                                                             "Livre VIII : Aides personnelles au logement",
                                                             "Partie réglementaire",
                                                             "Code de la construction et de l'habitation"]))
                    try:
                        temp_sous_calcul_traitement_129 = logement_foyer_.logement_meuble_d842_2
                    except EmptyError:
                        temp_sous_calcul_traitement_129 = dead_value
                        raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                             start_line=6396,
                                                             start_column=38,
                                                             end_line=6396,
                                                             end_column=76,
                                                             law_headings=["Article D863-7",
                                                             "Sous-section III : Modalités de liquidation et de versement",
                                                             "Section II : Dispositions communes aux aides personnelles au logement",
                                                             "Chapitre III : Saint-Pierre-et-Miquelon",
                                                             "Livre VIII : Aides personnelles au logement",
                                                             "Partie réglementaire",
                                                             "Code de la construction et de l'habitation"]))
                    try:
                        temp_sous_calcul_traitement_130 = residence_8
                    except EmptyError:
                        temp_sous_calcul_traitement_130 = dead_value
                        raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                             start_line=6397,
                                                             start_column=25,
                                                             end_line=6397,
                                                             end_column=34,
                                                             law_headings=["Article D863-7",
                                                             "Sous-section III : Modalités de liquidation et de versement",
                                                             "Section II : Dispositions communes aux aides personnelles au logement",
                                                             "Chapitre III : Saint-Pierre-et-Miquelon",
                                                             "Livre VIII : Aides personnelles au logement",
                                                             "Partie réglementaire",
                                                             "Code de la construction et de l'habitation"]))
                    try:
                        temp_sous_calcul_traitement_131 = logement_foyer_.redevance
                    except EmptyError:
                        temp_sous_calcul_traitement_131 = dead_value
                        raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                             start_line=6378,
                                                             start_column=31,
                                                             end_line=6378,
                                                             end_column=56,
                                                             law_headings=["Article D863-7",
                                                             "Sous-section III : Modalités de liquidation et de versement",
                                                             "Section II : Dispositions communes aux aides personnelles au logement",
                                                             "Chapitre III : Saint-Pierre-et-Miquelon",
                                                             "Livre VIII : Aides personnelles au logement",
                                                             "Partie réglementaire",
                                                             "Code de la construction et de l'habitation"]))
                    try:
                        temp_sous_calcul_traitement_132 = ressources_menage_avec_arrondi
                    except EmptyError:
                        temp_sous_calcul_traitement_132 = dead_value
                        raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                             start_line=6372,
                                                             start_column=43,
                                                             end_line=6372,
                                                             end_column=60,
                                                             law_headings=["Article D863-7",
                                                             "Sous-section III : Modalités de liquidation et de versement",
                                                             "Section II : Dispositions communes aux aides personnelles au logement",
                                                             "Chapitre III : Saint-Pierre-et-Miquelon",
                                                             "Livre VIII : Aides personnelles au logement",
                                                             "Partie réglementaire",
                                                             "Code de la construction et de l'habitation"]))
                    try:
                        temp_sous_calcul_traitement_133 = logement_foyer_.beneficiaire_aide_adulte_ou_enfant_handicapes
                    except EmptyError:
                        temp_sous_calcul_traitement_133 = dead_value
                        raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                             start_line=6380,
                                                             start_column=15,
                                                             end_line=6380,
                                                             end_column=76,
                                                             law_headings=["Article D863-7",
                                                             "Sous-section III : Modalités de liquidation et de versement",
                                                             "Section II : Dispositions communes aux aides personnelles au logement",
                                                             "Chapitre III : Saint-Pierre-et-Miquelon",
                                                             "Livre VIII : Aides personnelles au logement",
                                                             "Partie réglementaire",
                                                             "Code de la construction et de l'habitation"]))
                    try:
                        temp_sous_calcul_traitement_134 = date_courante_14
                    except EmptyError:
                        temp_sous_calcul_traitement_134 = dead_value
                        raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                             start_line=6375,
                                                             start_column=29,
                                                             end_line=6375,
                                                             end_column=42,
                                                             law_headings=["Article D863-7",
                                                             "Sous-section III : Modalités de liquidation et de versement",
                                                             "Section II : Dispositions communes aux aides personnelles au logement",
                                                             "Chapitre III : Saint-Pierre-et-Miquelon",
                                                             "Livre VIII : Aides personnelles au logement",
                                                             "Partie réglementaire",
                                                             "Code de la construction et de l'habitation"]))
                    try:
                        temp_sous_calcul_traitement_135 = nombre_personnes_a_charge_11
                    except EmptyError:
                        temp_sous_calcul_traitement_135 = dead_value
                        raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                             start_line=6373,
                                                             start_column=41,
                                                             end_line=6373,
                                                             end_column=66,
                                                             law_headings=["Article D863-7",
                                                             "Sous-section III : Modalités de liquidation et de versement",
                                                             "Section II : Dispositions communes aux aides personnelles au logement",
                                                             "Chapitre III : Saint-Pierre-et-Miquelon",
                                                             "Livre VIII : Aides personnelles au logement",
                                                             "Partie réglementaire",
                                                             "Code de la construction et de l'habitation"]))
                    try:
                        temp_sous_calcul_traitement_136 = situation_familiale_calcul_apl_8
                    except EmptyError:
                        temp_sous_calcul_traitement_136 = dead_value
                        raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                             start_line=6376,
                                                             start_column=46,
                                                             end_line=6376,
                                                             end_column=76,
                                                             law_headings=["Article D863-7",
                                                             "Sous-section III : Modalités de liquidation et de versement",
                                                             "Section II : Dispositions communes aux aides personnelles au logement",
                                                             "Chapitre III : Saint-Pierre-et-Miquelon",
                                                             "Livre VIII : Aides personnelles au logement",
                                                             "Partie réglementaire",
                                                             "Code de la construction et de l'habitation"]))
                    try:
                        temp_sous_calcul_traitement_137 = zone_6
                    except EmptyError:
                        temp_sous_calcul_traitement_137 = dead_value
                        raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                             start_line=6374,
                                                             start_column=20,
                                                             end_line=6374,
                                                             end_column=24,
                                                             law_headings=["Article D863-7",
                                                             "Sous-section III : Modalités de liquidation et de versement",
                                                             "Section II : Dispositions communes aux aides personnelles au logement",
                                                             "Chapitre III : Saint-Pierre-et-Miquelon",
                                                             "Livre VIII : Aides personnelles au logement",
                                                             "Partie réglementaire",
                                                             "Code de la construction et de l'habitation"]))
                    try:
                        temp_sous_calcul_traitement_138 = True
                    except EmptyError:
                        temp_sous_calcul_traitement_138 = dead_value
                        raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                             start_line=6384,
                                                             start_column=36,
                                                             end_line=6384,
                                                             end_column=40,
                                                             law_headings=["Article D863-7",
                                                             "Sous-section III : Modalités de liquidation et de versement",
                                                             "Section II : Dispositions communes aux aides personnelles au logement",
                                                             "Chapitre III : Saint-Pierre-et-Miquelon",
                                                             "Livre VIII : Aides personnelles au logement",
                                                             "Partie réglementaire",
                                                             "Code de la construction et de l'habitation"]))
                    try:
                        temp_sous_calcul_traitement_139 = False
                    except EmptyError:
                        temp_sous_calcul_traitement_139 = dead_value
                        raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                             start_line=6391,
                                                             start_column=72,
                                                             end_line=6391,
                                                             end_column=76,
                                                             law_headings=["Article D863-7",
                                                             "Sous-section III : Modalités de liquidation et de versement",
                                                             "Section II : Dispositions communes aux aides personnelles au logement",
                                                             "Chapitre III : Saint-Pierre-et-Miquelon",
                                                             "Livre VIII : Aides personnelles au logement",
                                                             "Partie réglementaire",
                                                             "Code de la construction et de l'habitation"]))
                    try:
                        temp_sous_calcul_traitement_140 = type_aide_2
                    except EmptyError:
                        temp_sous_calcul_traitement_140 = dead_value
                        raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                             start_line=6392,
                                                             start_column=25,
                                                             end_line=6392,
                                                             end_column=34,
                                                             law_headings=["Article D863-7",
                                                             "Sous-section III : Modalités de liquidation et de versement",
                                                             "Section II : Dispositions communes aux aides personnelles au logement",
                                                             "Chapitre III : Saint-Pierre-et-Miquelon",
                                                             "Livre VIII : Aides personnelles au logement",
                                                             "Partie réglementaire",
                                                             "Code de la construction et de l'habitation"]))
                    try:
                        temp_sous_calcul_traitement_141 = False
                    except EmptyError:
                        temp_sous_calcul_traitement_141 = dead_value
                        raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                             start_line=6388,
                                                             start_column=26,
                                                             end_line=6388,
                                                             end_column=30,
                                                             law_headings=["Article D863-7",
                                                             "Sous-section III : Modalités de liquidation et de versement",
                                                             "Section II : Dispositions communes aux aides personnelles au logement",
                                                             "Chapitre III : Saint-Pierre-et-Miquelon",
                                                             "Livre VIII : Aides personnelles au logement",
                                                             "Partie réglementaire",
                                                             "Code de la construction et de l'habitation"]))
                    try:
                        temp_sous_calcul_traitement_142 = money_of_cents_string("0")
                    except EmptyError:
                        temp_sous_calcul_traitement_142 = dead_value
                        raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                             start_line=6395,
                                                             start_column=42,
                                                             end_line=6395,
                                                             end_column=45,
                                                             law_headings=["Article D863-7",
                                                             "Sous-section III : Modalités de liquidation et de versement",
                                                             "Section II : Dispositions communes aux aides personnelles au logement",
                                                             "Chapitre III : Saint-Pierre-et-Miquelon",
                                                             "Livre VIII : Aides personnelles au logement",
                                                             "Partie réglementaire",
                                                             "Code de la construction et de l'habitation"]))
                    try:
                        temp_sous_calcul_traitement_143 = logement_foyer_.logement_meuble_d842_2
                    except EmptyError:
                        temp_sous_calcul_traitement_143 = dead_value
                        raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                             start_line=6396,
                                                             start_column=38,
                                                             end_line=6396,
                                                             end_column=76,
                                                             law_headings=["Article D863-7",
                                                             "Sous-section III : Modalités de liquidation et de versement",
                                                             "Section II : Dispositions communes aux aides personnelles au logement",
                                                             "Chapitre III : Saint-Pierre-et-Miquelon",
                                                             "Livre VIII : Aides personnelles au logement",
                                                             "Partie réglementaire",
                                                             "Code de la construction et de l'habitation"]))
                    try:
                        temp_sous_calcul_traitement_144 = residence_8
                    except EmptyError:
                        temp_sous_calcul_traitement_144 = dead_value
                        raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                             start_line=6397,
                                                             start_column=25,
                                                             end_line=6397,
                                                             end_column=34,
                                                             law_headings=["Article D863-7",
                                                             "Sous-section III : Modalités de liquidation et de versement",
                                                             "Section II : Dispositions communes aux aides personnelles au logement",
                                                             "Chapitre III : Saint-Pierre-et-Miquelon",
                                                             "Livre VIII : Aides personnelles au logement",
                                                             "Partie réglementaire",
                                                             "Code de la construction et de l'habitation"]))
                    try:
                        temp_sous_calcul_traitement_145 = logement_foyer_.redevance
                    except EmptyError:
                        temp_sous_calcul_traitement_145 = dead_value
                        raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                             start_line=6378,
                                                             start_column=31,
                                                             end_line=6378,
                                                             end_column=56,
                                                             law_headings=["Article D863-7",
                                                             "Sous-section III : Modalités de liquidation et de versement",
                                                             "Section II : Dispositions communes aux aides personnelles au logement",
                                                             "Chapitre III : Saint-Pierre-et-Miquelon",
                                                             "Livre VIII : Aides personnelles au logement",
                                                             "Partie réglementaire",
                                                             "Code de la construction et de l'habitation"]))
                    try:
                        temp_sous_calcul_traitement_146 = ressources_menage_avec_arrondi
                    except EmptyError:
                        temp_sous_calcul_traitement_146 = dead_value
                        raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                             start_line=6372,
                                                             start_column=43,
                                                             end_line=6372,
                                                             end_column=60,
                                                             law_headings=["Article D863-7",
                                                             "Sous-section III : Modalités de liquidation et de versement",
                                                             "Section II : Dispositions communes aux aides personnelles au logement",
                                                             "Chapitre III : Saint-Pierre-et-Miquelon",
                                                             "Livre VIII : Aides personnelles au logement",
                                                             "Partie réglementaire",
                                                             "Code de la construction et de l'habitation"]))
                    try:
                        temp_sous_calcul_traitement_147 = logement_foyer_.beneficiaire_aide_adulte_ou_enfant_handicapes
                    except EmptyError:
                        temp_sous_calcul_traitement_147 = dead_value
                        raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                             start_line=6380,
                                                             start_column=15,
                                                             end_line=6380,
                                                             end_column=76,
                                                             law_headings=["Article D863-7",
                                                             "Sous-section III : Modalités de liquidation et de versement",
                                                             "Section II : Dispositions communes aux aides personnelles au logement",
                                                             "Chapitre III : Saint-Pierre-et-Miquelon",
                                                             "Livre VIII : Aides personnelles au logement",
                                                             "Partie réglementaire",
                                                             "Code de la construction et de l'habitation"]))
                    try:
                        temp_sous_calcul_traitement_148 = date_courante_14
                    except EmptyError:
                        temp_sous_calcul_traitement_148 = dead_value
                        raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                             start_line=6375,
                                                             start_column=29,
                                                             end_line=6375,
                                                             end_column=42,
                                                             law_headings=["Article D863-7",
                                                             "Sous-section III : Modalités de liquidation et de versement",
                                                             "Section II : Dispositions communes aux aides personnelles au logement",
                                                             "Chapitre III : Saint-Pierre-et-Miquelon",
                                                             "Livre VIII : Aides personnelles au logement",
                                                             "Partie réglementaire",
                                                             "Code de la construction et de l'habitation"]))
                    try:
                        temp_sous_calcul_traitement_149 = nombre_personnes_a_charge_11
                    except EmptyError:
                        temp_sous_calcul_traitement_149 = dead_value
                        raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                             start_line=6373,
                                                             start_column=41,
                                                             end_line=6373,
                                                             end_column=66,
                                                             law_headings=["Article D863-7",
                                                             "Sous-section III : Modalités de liquidation et de versement",
                                                             "Section II : Dispositions communes aux aides personnelles au logement",
                                                             "Chapitre III : Saint-Pierre-et-Miquelon",
                                                             "Livre VIII : Aides personnelles au logement",
                                                             "Partie réglementaire",
                                                             "Code de la construction et de l'habitation"]))
                    try:
                        temp_sous_calcul_traitement_150 = situation_familiale_calcul_apl_8
                    except EmptyError:
                        temp_sous_calcul_traitement_150 = dead_value
                        raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                             start_line=6376,
                                                             start_column=46,
                                                             end_line=6376,
                                                             end_column=76,
                                                             law_headings=["Article D863-7",
                                                             "Sous-section III : Modalités de liquidation et de versement",
                                                             "Section II : Dispositions communes aux aides personnelles au logement",
                                                             "Chapitre III : Saint-Pierre-et-Miquelon",
                                                             "Livre VIII : Aides personnelles au logement",
                                                             "Partie réglementaire",
                                                             "Code de la construction et de l'habitation"]))
                    try:
                        temp_sous_calcul_traitement_151 = zone_6
                    except EmptyError:
                        temp_sous_calcul_traitement_151 = dead_value
                        raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                             start_line=6374,
                                                             start_column=20,
                                                             end_line=6374,
                                                             end_column=24,
                                                             law_headings=["Article D863-7",
                                                             "Sous-section III : Modalités de liquidation et de versement",
                                                             "Section II : Dispositions communes aux aides personnelles au logement",
                                                             "Chapitre III : Saint-Pierre-et-Miquelon",
                                                             "Livre VIII : Aides personnelles au logement",
                                                             "Partie réglementaire",
                                                             "Code de la construction et de l'habitation"]))
                    try:
                        temp_sous_calcul_traitement_152 = True
                    except EmptyError:
                        temp_sous_calcul_traitement_152 = dead_value
                        raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                             start_line=6384,
                                                             start_column=36,
                                                             end_line=6384,
                                                             end_column=40,
                                                             law_headings=["Article D863-7",
                                                             "Sous-section III : Modalités de liquidation et de versement",
                                                             "Section II : Dispositions communes aux aides personnelles au logement",
                                                             "Chapitre III : Saint-Pierre-et-Miquelon",
                                                             "Livre VIII : Aides personnelles au logement",
                                                             "Partie réglementaire",
                                                             "Code de la construction et de l'habitation"]))
                    try:
                        temp_sous_calcul_traitement_153 = False
                    except EmptyError:
                        temp_sous_calcul_traitement_153 = dead_value
                        raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                             start_line=6391,
                                                             start_column=72,
                                                             end_line=6391,
                                                             end_column=76,
                                                             law_headings=["Article D863-7",
                                                             "Sous-section III : Modalités de liquidation et de versement",
                                                             "Section II : Dispositions communes aux aides personnelles au logement",
                                                             "Chapitre III : Saint-Pierre-et-Miquelon",
                                                             "Livre VIII : Aides personnelles au logement",
                                                             "Partie réglementaire",
                                                             "Code de la construction et de l'habitation"]))
                    try:
                        temp_sous_calcul_traitement_154 = type_aide_2
                    except EmptyError:
                        temp_sous_calcul_traitement_154 = dead_value
                        raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                             start_line=6392,
                                                             start_column=25,
                                                             end_line=6392,
                                                             end_column=34,
                                                             law_headings=["Article D863-7",
                                                             "Sous-section III : Modalités de liquidation et de versement",
                                                             "Section II : Dispositions communes aux aides personnelles au logement",
                                                             "Chapitre III : Saint-Pierre-et-Miquelon",
                                                             "Livre VIII : Aides personnelles au logement",
                                                             "Partie réglementaire",
                                                             "Code de la construction et de l'habitation"]))
                    try:
                        temp_sous_calcul_traitement_155 = False
                    except EmptyError:
                        temp_sous_calcul_traitement_155 = dead_value
                        raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                             start_line=6388,
                                                             start_column=26,
                                                             end_line=6388,
                                                             end_column=30,
                                                             law_headings=["Article D863-7",
                                                             "Sous-section III : Modalités de liquidation et de versement",
                                                             "Section II : Dispositions communes aux aides personnelles au logement",
                                                             "Chapitre III : Saint-Pierre-et-Miquelon",
                                                             "Livre VIII : Aides personnelles au logement",
                                                             "Partie réglementaire",
                                                             "Code de la construction et de l'habitation"]))
                    try:
                        temp_sous_calcul_traitement_156 = money_of_cents_string("0")
                    except EmptyError:
                        temp_sous_calcul_traitement_156 = dead_value
                        raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                             start_line=6395,
                                                             start_column=42,
                                                             end_line=6395,
                                                             end_column=45,
                                                             law_headings=["Article D863-7",
                                                             "Sous-section III : Modalités de liquidation et de versement",
                                                             "Section II : Dispositions communes aux aides personnelles au logement",
                                                             "Chapitre III : Saint-Pierre-et-Miquelon",
                                                             "Livre VIII : Aides personnelles au logement",
                                                             "Partie réglementaire",
                                                             "Code de la construction et de l'habitation"]))
                    try:
                        temp_sous_calcul_traitement_157 = logement_foyer_.logement_meuble_d842_2
                    except EmptyError:
                        temp_sous_calcul_traitement_157 = dead_value
                        raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                             start_line=6396,
                                                             start_column=38,
                                                             end_line=6396,
                                                             end_column=76,
                                                             law_headings=["Article D863-7",
                                                             "Sous-section III : Modalités de liquidation et de versement",
                                                             "Section II : Dispositions communes aux aides personnelles au logement",
                                                             "Chapitre III : Saint-Pierre-et-Miquelon",
                                                             "Livre VIII : Aides personnelles au logement",
                                                             "Partie réglementaire",
                                                             "Code de la construction et de l'habitation"]))
                    try:
                        temp_sous_calcul_traitement_158 = residence_8
                    except EmptyError:
                        temp_sous_calcul_traitement_158 = dead_value
                        raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                             start_line=6397,
                                                             start_column=25,
                                                             end_line=6397,
                                                             end_column=34,
                                                             law_headings=["Article D863-7",
                                                             "Sous-section III : Modalités de liquidation et de versement",
                                                             "Section II : Dispositions communes aux aides personnelles au logement",
                                                             "Chapitre III : Saint-Pierre-et-Miquelon",
                                                             "Livre VIII : Aides personnelles au logement",
                                                             "Partie réglementaire",
                                                             "Code de la construction et de l'habitation"]))
                    try:
                        temp_sous_calcul_traitement_159 = logement_foyer_.redevance
                    except EmptyError:
                        temp_sous_calcul_traitement_159 = dead_value
                        raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                             start_line=6378,
                                                             start_column=31,
                                                             end_line=6378,
                                                             end_column=56,
                                                             law_headings=["Article D863-7",
                                                             "Sous-section III : Modalités de liquidation et de versement",
                                                             "Section II : Dispositions communes aux aides personnelles au logement",
                                                             "Chapitre III : Saint-Pierre-et-Miquelon",
                                                             "Livre VIII : Aides personnelles au logement",
                                                             "Partie réglementaire",
                                                             "Code de la construction et de l'habitation"]))
                    try:
                        temp_sous_calcul_traitement_160 = ressources_menage_avec_arrondi
                    except EmptyError:
                        temp_sous_calcul_traitement_160 = dead_value
                        raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                             start_line=6372,
                                                             start_column=43,
                                                             end_line=6372,
                                                             end_column=60,
                                                             law_headings=["Article D863-7",
                                                             "Sous-section III : Modalités de liquidation et de versement",
                                                             "Section II : Dispositions communes aux aides personnelles au logement",
                                                             "Chapitre III : Saint-Pierre-et-Miquelon",
                                                             "Livre VIII : Aides personnelles au logement",
                                                             "Partie réglementaire",
                                                             "Code de la construction et de l'habitation"]))
                    try:
                        temp_sous_calcul_traitement_161 = logement_foyer_.beneficiaire_aide_adulte_ou_enfant_handicapes
                    except EmptyError:
                        temp_sous_calcul_traitement_161 = dead_value
                        raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                             start_line=6380,
                                                             start_column=15,
                                                             end_line=6380,
                                                             end_column=76,
                                                             law_headings=["Article D863-7",
                                                             "Sous-section III : Modalités de liquidation et de versement",
                                                             "Section II : Dispositions communes aux aides personnelles au logement",
                                                             "Chapitre III : Saint-Pierre-et-Miquelon",
                                                             "Livre VIII : Aides personnelles au logement",
                                                             "Partie réglementaire",
                                                             "Code de la construction et de l'habitation"]))
                    try:
                        temp_sous_calcul_traitement_162 = date_courante_14
                    except EmptyError:
                        temp_sous_calcul_traitement_162 = dead_value
                        raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                             start_line=6375,
                                                             start_column=29,
                                                             end_line=6375,
                                                             end_column=42,
                                                             law_headings=["Article D863-7",
                                                             "Sous-section III : Modalités de liquidation et de versement",
                                                             "Section II : Dispositions communes aux aides personnelles au logement",
                                                             "Chapitre III : Saint-Pierre-et-Miquelon",
                                                             "Livre VIII : Aides personnelles au logement",
                                                             "Partie réglementaire",
                                                             "Code de la construction et de l'habitation"]))
                    try:
                        temp_sous_calcul_traitement_163 = nombre_personnes_a_charge_11
                    except EmptyError:
                        temp_sous_calcul_traitement_163 = dead_value
                        raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                             start_line=6373,
                                                             start_column=41,
                                                             end_line=6373,
                                                             end_column=66,
                                                             law_headings=["Article D863-7",
                                                             "Sous-section III : Modalités de liquidation et de versement",
                                                             "Section II : Dispositions communes aux aides personnelles au logement",
                                                             "Chapitre III : Saint-Pierre-et-Miquelon",
                                                             "Livre VIII : Aides personnelles au logement",
                                                             "Partie réglementaire",
                                                             "Code de la construction et de l'habitation"]))
                    try:
                        temp_sous_calcul_traitement_164 = situation_familiale_calcul_apl_8
                    except EmptyError:
                        temp_sous_calcul_traitement_164 = dead_value
                        raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                             start_line=6376,
                                                             start_column=46,
                                                             end_line=6376,
                                                             end_column=76,
                                                             law_headings=["Article D863-7",
                                                             "Sous-section III : Modalités de liquidation et de versement",
                                                             "Section II : Dispositions communes aux aides personnelles au logement",
                                                             "Chapitre III : Saint-Pierre-et-Miquelon",
                                                             "Livre VIII : Aides personnelles au logement",
                                                             "Partie réglementaire",
                                                             "Code de la construction et de l'habitation"]))
                    try:
                        temp_sous_calcul_traitement_165 = zone_6
                    except EmptyError:
                        temp_sous_calcul_traitement_165 = dead_value
                        raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                             start_line=6374,
                                                             start_column=20,
                                                             end_line=6374,
                                                             end_column=24,
                                                             law_headings=["Article D863-7",
                                                             "Sous-section III : Modalités de liquidation et de versement",
                                                             "Section II : Dispositions communes aux aides personnelles au logement",
                                                             "Chapitre III : Saint-Pierre-et-Miquelon",
                                                             "Livre VIII : Aides personnelles au logement",
                                                             "Partie réglementaire",
                                                             "Code de la construction et de l'habitation"]))
                    try:
                        temp_sous_calcul_traitement_166 = True
                    except EmptyError:
                        temp_sous_calcul_traitement_166 = dead_value
                        raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                             start_line=6384,
                                                             start_column=36,
                                                             end_line=6384,
                                                             end_column=40,
                                                             law_headings=["Article D863-7",
                                                             "Sous-section III : Modalités de liquidation et de versement",
                                                             "Section II : Dispositions communes aux aides personnelles au logement",
                                                             "Chapitre III : Saint-Pierre-et-Miquelon",
                                                             "Livre VIII : Aides personnelles au logement",
                                                             "Partie réglementaire",
                                                             "Code de la construction et de l'habitation"]))
                    try:
                        temp_sous_calcul_traitement_167 = False
                    except EmptyError:
                        temp_sous_calcul_traitement_167 = dead_value
                        raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                             start_line=6391,
                                                             start_column=72,
                                                             end_line=6391,
                                                             end_column=76,
                                                             law_headings=["Article D863-7",
                                                             "Sous-section III : Modalités de liquidation et de versement",
                                                             "Section II : Dispositions communes aux aides personnelles au logement",
                                                             "Chapitre III : Saint-Pierre-et-Miquelon",
                                                             "Livre VIII : Aides personnelles au logement",
                                                             "Partie réglementaire",
                                                             "Code de la construction et de l'habitation"]))
                    try:
                        temp_sous_calcul_traitement_168 = type_aide_2
                    except EmptyError:
                        temp_sous_calcul_traitement_168 = dead_value
                        raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                             start_line=6392,
                                                             start_column=25,
                                                             end_line=6392,
                                                             end_column=34,
                                                             law_headings=["Article D863-7",
                                                             "Sous-section III : Modalités de liquidation et de versement",
                                                             "Section II : Dispositions communes aux aides personnelles au logement",
                                                             "Chapitre III : Saint-Pierre-et-Miquelon",
                                                             "Livre VIII : Aides personnelles au logement",
                                                             "Partie réglementaire",
                                                             "Code de la construction et de l'habitation"]))
                    try:
                        temp_sous_calcul_traitement_169 = False
                    except EmptyError:
                        temp_sous_calcul_traitement_169 = dead_value
                        raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                             start_line=6388,
                                                             start_column=26,
                                                             end_line=6388,
                                                             end_column=30,
                                                             law_headings=["Article D863-7",
                                                             "Sous-section III : Modalités de liquidation et de versement",
                                                             "Section II : Dispositions communes aux aides personnelles au logement",
                                                             "Chapitre III : Saint-Pierre-et-Miquelon",
                                                             "Livre VIII : Aides personnelles au logement",
                                                             "Partie réglementaire",
                                                             "Code de la construction et de l'habitation"]))
                    try:
                        temp_sous_calcul_traitement_170 = money_of_cents_string("0")
                    except EmptyError:
                        temp_sous_calcul_traitement_170 = dead_value
                        raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                             start_line=6395,
                                                             start_column=42,
                                                             end_line=6395,
                                                             end_column=45,
                                                             law_headings=["Article D863-7",
                                                             "Sous-section III : Modalités de liquidation et de versement",
                                                             "Section II : Dispositions communes aux aides personnelles au logement",
                                                             "Chapitre III : Saint-Pierre-et-Miquelon",
                                                             "Livre VIII : Aides personnelles au logement",
                                                             "Partie réglementaire",
                                                             "Code de la construction et de l'habitation"]))
                    try:
                        temp_sous_calcul_traitement_171 = logement_foyer_.logement_meuble_d842_2
                    except EmptyError:
                        temp_sous_calcul_traitement_171 = dead_value
                        raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                             start_line=6396,
                                                             start_column=38,
                                                             end_line=6396,
                                                             end_column=76,
                                                             law_headings=["Article D863-7",
                                                             "Sous-section III : Modalités de liquidation et de versement",
                                                             "Section II : Dispositions communes aux aides personnelles au logement",
                                                             "Chapitre III : Saint-Pierre-et-Miquelon",
                                                             "Livre VIII : Aides personnelles au logement",
                                                             "Partie réglementaire",
                                                             "Code de la construction et de l'habitation"]))
                    try:
                        temp_sous_calcul_traitement_172 = residence_8
                    except EmptyError:
                        temp_sous_calcul_traitement_172 = dead_value
                        raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                             start_line=6397,
                                                             start_column=25,
                                                             end_line=6397,
                                                             end_column=34,
                                                             law_headings=["Article D863-7",
                                                             "Sous-section III : Modalités de liquidation et de versement",
                                                             "Section II : Dispositions communes aux aides personnelles au logement",
                                                             "Chapitre III : Saint-Pierre-et-Miquelon",
                                                             "Livre VIII : Aides personnelles au logement",
                                                             "Partie réglementaire",
                                                             "Code de la construction et de l'habitation"]))
                    try:
                        temp_sous_calcul_traitement_173 = logement_foyer_.redevance
                    except EmptyError:
                        temp_sous_calcul_traitement_173 = dead_value
                        raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                             start_line=6378,
                                                             start_column=31,
                                                             end_line=6378,
                                                             end_column=56,
                                                             law_headings=["Article D863-7",
                                                             "Sous-section III : Modalités de liquidation et de versement",
                                                             "Section II : Dispositions communes aux aides personnelles au logement",
                                                             "Chapitre III : Saint-Pierre-et-Miquelon",
                                                             "Livre VIII : Aides personnelles au logement",
                                                             "Partie réglementaire",
                                                             "Code de la construction et de l'habitation"]))
                    try:
                        temp_sous_calcul_traitement_174 = ressources_menage_avec_arrondi
                    except EmptyError:
                        temp_sous_calcul_traitement_174 = dead_value
                        raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                             start_line=6372,
                                                             start_column=43,
                                                             end_line=6372,
                                                             end_column=60,
                                                             law_headings=["Article D863-7",
                                                             "Sous-section III : Modalités de liquidation et de versement",
                                                             "Section II : Dispositions communes aux aides personnelles au logement",
                                                             "Chapitre III : Saint-Pierre-et-Miquelon",
                                                             "Livre VIII : Aides personnelles au logement",
                                                             "Partie réglementaire",
                                                             "Code de la construction et de l'habitation"]))
                    try:
                        temp_sous_calcul_traitement_175 = logement_foyer_.beneficiaire_aide_adulte_ou_enfant_handicapes
                    except EmptyError:
                        temp_sous_calcul_traitement_175 = dead_value
                        raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                             start_line=6380,
                                                             start_column=15,
                                                             end_line=6380,
                                                             end_column=76,
                                                             law_headings=["Article D863-7",
                                                             "Sous-section III : Modalités de liquidation et de versement",
                                                             "Section II : Dispositions communes aux aides personnelles au logement",
                                                             "Chapitre III : Saint-Pierre-et-Miquelon",
                                                             "Livre VIII : Aides personnelles au logement",
                                                             "Partie réglementaire",
                                                             "Code de la construction et de l'habitation"]))
                    try:
                        temp_sous_calcul_traitement_176 = date_courante_14
                    except EmptyError:
                        temp_sous_calcul_traitement_176 = dead_value
                        raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                             start_line=6375,
                                                             start_column=29,
                                                             end_line=6375,
                                                             end_column=42,
                                                             law_headings=["Article D863-7",
                                                             "Sous-section III : Modalités de liquidation et de versement",
                                                             "Section II : Dispositions communes aux aides personnelles au logement",
                                                             "Chapitre III : Saint-Pierre-et-Miquelon",
                                                             "Livre VIII : Aides personnelles au logement",
                                                             "Partie réglementaire",
                                                             "Code de la construction et de l'habitation"]))
                    try:
                        temp_sous_calcul_traitement_177 = nombre_personnes_a_charge_11
                    except EmptyError:
                        temp_sous_calcul_traitement_177 = dead_value
                        raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                             start_line=6373,
                                                             start_column=41,
                                                             end_line=6373,
                                                             end_column=66,
                                                             law_headings=["Article D863-7",
                                                             "Sous-section III : Modalités de liquidation et de versement",
                                                             "Section II : Dispositions communes aux aides personnelles au logement",
                                                             "Chapitre III : Saint-Pierre-et-Miquelon",
                                                             "Livre VIII : Aides personnelles au logement",
                                                             "Partie réglementaire",
                                                             "Code de la construction et de l'habitation"]))
                    try:
                        temp_sous_calcul_traitement_178 = situation_familiale_calcul_apl_8
                    except EmptyError:
                        temp_sous_calcul_traitement_178 = dead_value
                        raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                             start_line=6376,
                                                             start_column=46,
                                                             end_line=6376,
                                                             end_column=76,
                                                             law_headings=["Article D863-7",
                                                             "Sous-section III : Modalités de liquidation et de versement",
                                                             "Section II : Dispositions communes aux aides personnelles au logement",
                                                             "Chapitre III : Saint-Pierre-et-Miquelon",
                                                             "Livre VIII : Aides personnelles au logement",
                                                             "Partie réglementaire",
                                                             "Code de la construction et de l'habitation"]))
                    try:
                        temp_sous_calcul_traitement_179 = zone_6
                    except EmptyError:
                        temp_sous_calcul_traitement_179 = dead_value
                        raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                             start_line=6374,
                                                             start_column=20,
                                                             end_line=6374,
                                                             end_column=24,
                                                             law_headings=["Article D863-7",
                                                             "Sous-section III : Modalités de liquidation et de versement",
                                                             "Section II : Dispositions communes aux aides personnelles au logement",
                                                             "Chapitre III : Saint-Pierre-et-Miquelon",
                                                             "Livre VIII : Aides personnelles au logement",
                                                             "Partie réglementaire",
                                                             "Code de la construction et de l'habitation"]))
                    try:
                        temp_sous_calcul_traitement_180 = True
                    except EmptyError:
                        temp_sous_calcul_traitement_180 = dead_value
                        raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                             start_line=6384,
                                                             start_column=36,
                                                             end_line=6384,
                                                             end_column=40,
                                                             law_headings=["Article D863-7",
                                                             "Sous-section III : Modalités de liquidation et de versement",
                                                             "Section II : Dispositions communes aux aides personnelles au logement",
                                                             "Chapitre III : Saint-Pierre-et-Miquelon",
                                                             "Livre VIII : Aides personnelles au logement",
                                                             "Partie réglementaire",
                                                             "Code de la construction et de l'habitation"]))
                    try:
                        temp_sous_calcul_traitement_181 = False
                    except EmptyError:
                        temp_sous_calcul_traitement_181 = dead_value
                        raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                             start_line=6391,
                                                             start_column=72,
                                                             end_line=6391,
                                                             end_column=76,
                                                             law_headings=["Article D863-7",
                                                             "Sous-section III : Modalités de liquidation et de versement",
                                                             "Section II : Dispositions communes aux aides personnelles au logement",
                                                             "Chapitre III : Saint-Pierre-et-Miquelon",
                                                             "Livre VIII : Aides personnelles au logement",
                                                             "Partie réglementaire",
                                                             "Code de la construction et de l'habitation"]))
                    try:
                        temp_sous_calcul_traitement_182 = type_aide_2
                    except EmptyError:
                        temp_sous_calcul_traitement_182 = dead_value
                        raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                             start_line=6392,
                                                             start_column=25,
                                                             end_line=6392,
                                                             end_column=34,
                                                             law_headings=["Article D863-7",
                                                             "Sous-section III : Modalités de liquidation et de versement",
                                                             "Section II : Dispositions communes aux aides personnelles au logement",
                                                             "Chapitre III : Saint-Pierre-et-Miquelon",
                                                             "Livre VIII : Aides personnelles au logement",
                                                             "Partie réglementaire",
                                                             "Code de la construction et de l'habitation"]))
                    try:
                        temp_sous_calcul_traitement_183 = False
                    except EmptyError:
                        temp_sous_calcul_traitement_183 = dead_value
                        raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                             start_line=6388,
                                                             start_column=26,
                                                             end_line=6388,
                                                             end_column=30,
                                                             law_headings=["Article D863-7",
                                                             "Sous-section III : Modalités de liquidation et de versement",
                                                             "Section II : Dispositions communes aux aides personnelles au logement",
                                                             "Chapitre III : Saint-Pierre-et-Miquelon",
                                                             "Livre VIII : Aides personnelles au logement",
                                                             "Partie réglementaire",
                                                             "Code de la construction et de l'habitation"]))
                    try:
                        temp_sous_calcul_traitement_184 = money_of_cents_string("0")
                    except EmptyError:
                        temp_sous_calcul_traitement_184 = dead_value
                        raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                             start_line=6395,
                                                             start_column=42,
                                                             end_line=6395,
                                                             end_column=45,
                                                             law_headings=["Article D863-7",
                                                             "Sous-section III : Modalités de liquidation et de versement",
                                                             "Section II : Dispositions communes aux aides personnelles au logement",
                                                             "Chapitre III : Saint-Pierre-et-Miquelon",
                                                             "Livre VIII : Aides personnelles au logement",
                                                             "Partie réglementaire",
                                                             "Code de la construction et de l'habitation"]))
                    try:
                        temp_sous_calcul_traitement_185 = logement_foyer_.logement_meuble_d842_2
                    except EmptyError:
                        temp_sous_calcul_traitement_185 = dead_value
                        raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                             start_line=6396,
                                                             start_column=38,
                                                             end_line=6396,
                                                             end_column=76,
                                                             law_headings=["Article D863-7",
                                                             "Sous-section III : Modalités de liquidation et de versement",
                                                             "Section II : Dispositions communes aux aides personnelles au logement",
                                                             "Chapitre III : Saint-Pierre-et-Miquelon",
                                                             "Livre VIII : Aides personnelles au logement",
                                                             "Partie réglementaire",
                                                             "Code de la construction et de l'habitation"]))
                    try:
                        temp_sous_calcul_traitement_186 = residence_8
                    except EmptyError:
                        temp_sous_calcul_traitement_186 = dead_value
                        raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                             start_line=6397,
                                                             start_column=25,
                                                             end_line=6397,
                                                             end_column=34,
                                                             law_headings=["Article D863-7",
                                                             "Sous-section III : Modalités de liquidation et de versement",
                                                             "Section II : Dispositions communes aux aides personnelles au logement",
                                                             "Chapitre III : Saint-Pierre-et-Miquelon",
                                                             "Livre VIII : Aides personnelles au logement",
                                                             "Partie réglementaire",
                                                             "Code de la construction et de l'habitation"]))
                    try:
                        temp_sous_calcul_traitement_187 = logement_foyer_.redevance
                    except EmptyError:
                        temp_sous_calcul_traitement_187 = dead_value
                        raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                             start_line=6378,
                                                             start_column=31,
                                                             end_line=6378,
                                                             end_column=56,
                                                             law_headings=["Article D863-7",
                                                             "Sous-section III : Modalités de liquidation et de versement",
                                                             "Section II : Dispositions communes aux aides personnelles au logement",
                                                             "Chapitre III : Saint-Pierre-et-Miquelon",
                                                             "Livre VIII : Aides personnelles au logement",
                                                             "Partie réglementaire",
                                                             "Code de la construction et de l'habitation"]))
                    try:
                        temp_sous_calcul_traitement_188 = ressources_menage_avec_arrondi
                    except EmptyError:
                        temp_sous_calcul_traitement_188 = dead_value
                        raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                             start_line=6372,
                                                             start_column=43,
                                                             end_line=6372,
                                                             end_column=60,
                                                             law_headings=["Article D863-7",
                                                             "Sous-section III : Modalités de liquidation et de versement",
                                                             "Section II : Dispositions communes aux aides personnelles au logement",
                                                             "Chapitre III : Saint-Pierre-et-Miquelon",
                                                             "Livre VIII : Aides personnelles au logement",
                                                             "Partie réglementaire",
                                                             "Code de la construction et de l'habitation"]))
                    try:
                        temp_sous_calcul_traitement_189 = logement_foyer_.beneficiaire_aide_adulte_ou_enfant_handicapes
                    except EmptyError:
                        temp_sous_calcul_traitement_189 = dead_value
                        raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                             start_line=6380,
                                                             start_column=15,
                                                             end_line=6380,
                                                             end_column=76,
                                                             law_headings=["Article D863-7",
                                                             "Sous-section III : Modalités de liquidation et de versement",
                                                             "Section II : Dispositions communes aux aides personnelles au logement",
                                                             "Chapitre III : Saint-Pierre-et-Miquelon",
                                                             "Livre VIII : Aides personnelles au logement",
                                                             "Partie réglementaire",
                                                             "Code de la construction et de l'habitation"]))
                    try:
                        temp_sous_calcul_traitement_190 = date_courante_14
                    except EmptyError:
                        temp_sous_calcul_traitement_190 = dead_value
                        raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                             start_line=6375,
                                                             start_column=29,
                                                             end_line=6375,
                                                             end_column=42,
                                                             law_headings=["Article D863-7",
                                                             "Sous-section III : Modalités de liquidation et de versement",
                                                             "Section II : Dispositions communes aux aides personnelles au logement",
                                                             "Chapitre III : Saint-Pierre-et-Miquelon",
                                                             "Livre VIII : Aides personnelles au logement",
                                                             "Partie réglementaire",
                                                             "Code de la construction et de l'habitation"]))
                    try:
                        temp_sous_calcul_traitement_191 = nombre_personnes_a_charge_11
                    except EmptyError:
                        temp_sous_calcul_traitement_191 = dead_value
                        raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                             start_line=6373,
                                                             start_column=41,
                                                             end_line=6373,
                                                             end_column=66,
                                                             law_headings=["Article D863-7",
                                                             "Sous-section III : Modalités de liquidation et de versement",
                                                             "Section II : Dispositions communes aux aides personnelles au logement",
                                                             "Chapitre III : Saint-Pierre-et-Miquelon",
                                                             "Livre VIII : Aides personnelles au logement",
                                                             "Partie réglementaire",
                                                             "Code de la construction et de l'habitation"]))
                    try:
                        temp_sous_calcul_traitement_192 = situation_familiale_calcul_apl_8
                    except EmptyError:
                        temp_sous_calcul_traitement_192 = dead_value
                        raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                             start_line=6376,
                                                             start_column=46,
                                                             end_line=6376,
                                                             end_column=76,
                                                             law_headings=["Article D863-7",
                                                             "Sous-section III : Modalités de liquidation et de versement",
                                                             "Section II : Dispositions communes aux aides personnelles au logement",
                                                             "Chapitre III : Saint-Pierre-et-Miquelon",
                                                             "Livre VIII : Aides personnelles au logement",
                                                             "Partie réglementaire",
                                                             "Code de la construction et de l'habitation"]))
                    try:
                        temp_sous_calcul_traitement_193 = zone_6
                    except EmptyError:
                        temp_sous_calcul_traitement_193 = dead_value
                        raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                             start_line=6374,
                                                             start_column=20,
                                                             end_line=6374,
                                                             end_column=24,
                                                             law_headings=["Article D863-7",
                                                             "Sous-section III : Modalités de liquidation et de versement",
                                                             "Section II : Dispositions communes aux aides personnelles au logement",
                                                             "Chapitre III : Saint-Pierre-et-Miquelon",
                                                             "Livre VIII : Aides personnelles au logement",
                                                             "Partie réglementaire",
                                                             "Code de la construction et de l'habitation"]))
                    try:
                        temp_sous_calcul_traitement_194 = True
                    except EmptyError:
                        temp_sous_calcul_traitement_194 = dead_value
                        raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                             start_line=6384,
                                                             start_column=36,
                                                             end_line=6384,
                                                             end_column=40,
                                                             law_headings=["Article D863-7",
                                                             "Sous-section III : Modalités de liquidation et de versement",
                                                             "Section II : Dispositions communes aux aides personnelles au logement",
                                                             "Chapitre III : Saint-Pierre-et-Miquelon",
                                                             "Livre VIII : Aides personnelles au logement",
                                                             "Partie réglementaire",
                                                             "Code de la construction et de l'habitation"]))
                    try:
                        temp_sous_calcul_traitement_195 = False
                    except EmptyError:
                        temp_sous_calcul_traitement_195 = dead_value
                        raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                             start_line=6391,
                                                             start_column=72,
                                                             end_line=6391,
                                                             end_column=76,
                                                             law_headings=["Article D863-7",
                                                             "Sous-section III : Modalités de liquidation et de versement",
                                                             "Section II : Dispositions communes aux aides personnelles au logement",
                                                             "Chapitre III : Saint-Pierre-et-Miquelon",
                                                             "Livre VIII : Aides personnelles au logement",
                                                             "Partie réglementaire",
                                                             "Code de la construction et de l'habitation"]))
                    try:
                        temp_sous_calcul_traitement_196 = type_aide_2
                    except EmptyError:
                        temp_sous_calcul_traitement_196 = dead_value
                        raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                             start_line=6392,
                                                             start_column=25,
                                                             end_line=6392,
                                                             end_column=34,
                                                             law_headings=["Article D863-7",
                                                             "Sous-section III : Modalités de liquidation et de versement",
                                                             "Section II : Dispositions communes aux aides personnelles au logement",
                                                             "Chapitre III : Saint-Pierre-et-Miquelon",
                                                             "Livre VIII : Aides personnelles au logement",
                                                             "Partie réglementaire",
                                                             "Code de la construction et de l'habitation"]))
                    try:
                        temp_sous_calcul_traitement_197 = False
                    except EmptyError:
                        temp_sous_calcul_traitement_197 = dead_value
                        raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                             start_line=6388,
                                                             start_column=26,
                                                             end_line=6388,
                                                             end_column=30,
                                                             law_headings=["Article D863-7",
                                                             "Sous-section III : Modalités de liquidation et de versement",
                                                             "Section II : Dispositions communes aux aides personnelles au logement",
                                                             "Chapitre III : Saint-Pierre-et-Miquelon",
                                                             "Livre VIII : Aides personnelles au logement",
                                                             "Partie réglementaire",
                                                             "Code de la construction et de l'habitation"]))
                    try:
                        temp_sous_calcul_traitement_198 = money_of_cents_string("0")
                    except EmptyError:
                        temp_sous_calcul_traitement_198 = dead_value
                        raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                             start_line=6395,
                                                             start_column=42,
                                                             end_line=6395,
                                                             end_column=45,
                                                             law_headings=["Article D863-7",
                                                             "Sous-section III : Modalités de liquidation et de versement",
                                                             "Section II : Dispositions communes aux aides personnelles au logement",
                                                             "Chapitre III : Saint-Pierre-et-Miquelon",
                                                             "Livre VIII : Aides personnelles au logement",
                                                             "Partie réglementaire",
                                                             "Code de la construction et de l'habitation"]))
                    try:
                        temp_sous_calcul_traitement_199 = logement_foyer_.logement_meuble_d842_2
                    except EmptyError:
                        temp_sous_calcul_traitement_199 = dead_value
                        raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                             start_line=6396,
                                                             start_column=38,
                                                             end_line=6396,
                                                             end_column=76,
                                                             law_headings=["Article D863-7",
                                                             "Sous-section III : Modalités de liquidation et de versement",
                                                             "Section II : Dispositions communes aux aides personnelles au logement",
                                                             "Chapitre III : Saint-Pierre-et-Miquelon",
                                                             "Livre VIII : Aides personnelles au logement",
                                                             "Partie réglementaire",
                                                             "Code de la construction et de l'habitation"]))
                    try:
                        temp_sous_calcul_traitement_200 = residence_8
                    except EmptyError:
                        temp_sous_calcul_traitement_200 = dead_value
                        raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                             start_line=6397,
                                                             start_column=25,
                                                             end_line=6397,
                                                             end_column=34,
                                                             law_headings=["Article D863-7",
                                                             "Sous-section III : Modalités de liquidation et de versement",
                                                             "Section II : Dispositions communes aux aides personnelles au logement",
                                                             "Chapitre III : Saint-Pierre-et-Miquelon",
                                                             "Livre VIII : Aides personnelles au logement",
                                                             "Partie réglementaire",
                                                             "Code de la construction et de l'habitation"]))
                    temp_sous_calcul_traitement_2 = TraitementFormuleAideFinale(aide_finale_formule = CalculAidePersonnaliseeLogementLocatif(montant_forfaitaire_charges_d823_16 = calcul_aide_personnalisee_logement_locatif(
                        CalculAidePersonnaliseeLogementLocatifIn(loyer_principal_base_in = temp_sous_calcul_traitement_88,
                        ressources_menage_arrondies_in = temp_sous_calcul_traitement_89,
                        beneficiaire_aide_adulte_ou_enfant_handicapes_in = temp_sous_calcul_traitement_90,
                        date_courante_in = temp_sous_calcul_traitement_91,
                        nombre_personnes_a_charge_in = temp_sous_calcul_traitement_92,
                        situation_familiale_calcul_apl_in = temp_sous_calcul_traitement_93,
                        zone_in = temp_sous_calcul_traitement_94,
                        logement_est_chambre_in = temp_sous_calcul_traitement_95,
                        agees_ou_handicap_adultes_hebergees_onereux_particuliers_in = temp_sous_calcul_traitement_96,
                        type_aide_in = temp_sous_calcul_traitement_97,
                        colocation_in = temp_sous_calcul_traitement_98,
                        reduction_loyer_solidarite_in = temp_sous_calcul_traitement_99,
                        logement_meuble_d842_2_in = temp_sous_calcul_traitement_100,
                        residence_in = temp_sous_calcul_traitement_101)).montant_forfaitaire_charges_d823_16,
                        plafond_loyer_d823_16_2 = calcul_aide_personnalisee_logement_locatif(
                        CalculAidePersonnaliseeLogementLocatifIn(loyer_principal_base_in = temp_sous_calcul_traitement_74,
                        ressources_menage_arrondies_in = temp_sous_calcul_traitement_75,
                        beneficiaire_aide_adulte_ou_enfant_handicapes_in = temp_sous_calcul_traitement_76,
                        date_courante_in = temp_sous_calcul_traitement_77,
                        nombre_personnes_a_charge_in = temp_sous_calcul_traitement_78,
                        situation_familiale_calcul_apl_in = temp_sous_calcul_traitement_79,
                        zone_in = temp_sous_calcul_traitement_80,
                        logement_est_chambre_in = temp_sous_calcul_traitement_81,
                        agees_ou_handicap_adultes_hebergees_onereux_particuliers_in = temp_sous_calcul_traitement_82,
                        type_aide_in = temp_sous_calcul_traitement_83,
                        colocation_in = temp_sous_calcul_traitement_84,
                        reduction_loyer_solidarite_in = temp_sous_calcul_traitement_85,
                        logement_meuble_d842_2_in = temp_sous_calcul_traitement_86,
                        residence_in = temp_sous_calcul_traitement_87)).plafond_loyer_d823_16_2,
                        participation_minimale = calcul_aide_personnalisee_logement_locatif(
                        CalculAidePersonnaliseeLogementLocatifIn(loyer_principal_base_in = temp_sous_calcul_traitement_60,
                        ressources_menage_arrondies_in = temp_sous_calcul_traitement_61,
                        beneficiaire_aide_adulte_ou_enfant_handicapes_in = temp_sous_calcul_traitement_62,
                        date_courante_in = temp_sous_calcul_traitement_63,
                        nombre_personnes_a_charge_in = temp_sous_calcul_traitement_64,
                        situation_familiale_calcul_apl_in = temp_sous_calcul_traitement_65,
                        zone_in = temp_sous_calcul_traitement_66,
                        logement_est_chambre_in = temp_sous_calcul_traitement_67,
                        agees_ou_handicap_adultes_hebergees_onereux_particuliers_in = temp_sous_calcul_traitement_68,
                        type_aide_in = temp_sous_calcul_traitement_69,
                        colocation_in = temp_sous_calcul_traitement_70,
                        reduction_loyer_solidarite_in = temp_sous_calcul_traitement_71,
                        logement_meuble_d842_2_in = temp_sous_calcul_traitement_72,
                        residence_in = temp_sous_calcul_traitement_73)).participation_minimale,
                        taux_composition_familiale = calcul_aide_personnalisee_logement_locatif(
                        CalculAidePersonnaliseeLogementLocatifIn(loyer_principal_base_in = temp_sous_calcul_traitement_46,
                        ressources_menage_arrondies_in = temp_sous_calcul_traitement_47,
                        beneficiaire_aide_adulte_ou_enfant_handicapes_in = temp_sous_calcul_traitement_48,
                        date_courante_in = temp_sous_calcul_traitement_49,
                        nombre_personnes_a_charge_in = temp_sous_calcul_traitement_50,
                        situation_familiale_calcul_apl_in = temp_sous_calcul_traitement_51,
                        zone_in = temp_sous_calcul_traitement_52,
                        logement_est_chambre_in = temp_sous_calcul_traitement_53,
                        agees_ou_handicap_adultes_hebergees_onereux_particuliers_in = temp_sous_calcul_traitement_54,
                        type_aide_in = temp_sous_calcul_traitement_55,
                        colocation_in = temp_sous_calcul_traitement_56,
                        reduction_loyer_solidarite_in = temp_sous_calcul_traitement_57,
                        logement_meuble_d842_2_in = temp_sous_calcul_traitement_58,
                        residence_in = temp_sous_calcul_traitement_59)).taux_composition_familiale,
                        participation_personnelle = calcul_aide_personnalisee_logement_locatif(
                        CalculAidePersonnaliseeLogementLocatifIn(loyer_principal_base_in = temp_sous_calcul_traitement_32,
                        ressources_menage_arrondies_in = temp_sous_calcul_traitement_33,
                        beneficiaire_aide_adulte_ou_enfant_handicapes_in = temp_sous_calcul_traitement_34,
                        date_courante_in = temp_sous_calcul_traitement_35,
                        nombre_personnes_a_charge_in = temp_sous_calcul_traitement_36,
                        situation_familiale_calcul_apl_in = temp_sous_calcul_traitement_37,
                        zone_in = temp_sous_calcul_traitement_38,
                        logement_est_chambre_in = temp_sous_calcul_traitement_39,
                        agees_ou_handicap_adultes_hebergees_onereux_particuliers_in = temp_sous_calcul_traitement_40,
                        type_aide_in = temp_sous_calcul_traitement_41,
                        colocation_in = temp_sous_calcul_traitement_42,
                        reduction_loyer_solidarite_in = temp_sous_calcul_traitement_43,
                        logement_meuble_d842_2_in = temp_sous_calcul_traitement_44,
                        residence_in = temp_sous_calcul_traitement_45)).participation_personnelle,
                        aide_finale_formule = calcul_aide_personnalisee_logement_locatif(
                        CalculAidePersonnaliseeLogementLocatifIn(loyer_principal_base_in = temp_sous_calcul_traitement_18,
                        ressources_menage_arrondies_in = temp_sous_calcul_traitement_19,
                        beneficiaire_aide_adulte_ou_enfant_handicapes_in = temp_sous_calcul_traitement_20,
                        date_courante_in = temp_sous_calcul_traitement_21,
                        nombre_personnes_a_charge_in = temp_sous_calcul_traitement_22,
                        situation_familiale_calcul_apl_in = temp_sous_calcul_traitement_23,
                        zone_in = temp_sous_calcul_traitement_24,
                        logement_est_chambre_in = temp_sous_calcul_traitement_25,
                        agees_ou_handicap_adultes_hebergees_onereux_particuliers_in = temp_sous_calcul_traitement_26,
                        type_aide_in = temp_sous_calcul_traitement_27,
                        colocation_in = temp_sous_calcul_traitement_28,
                        reduction_loyer_solidarite_in = temp_sous_calcul_traitement_29,
                        logement_meuble_d842_2_in = temp_sous_calcul_traitement_30,
                        residence_in = temp_sous_calcul_traitement_31)).aide_finale_formule,
                        traitement_aide_finale = temp_sous_calcul_traitement_3).aide_finale_formule,
                        traitement_aide_finale = CalculAidePersonnaliseeLogementLocatif(montant_forfaitaire_charges_d823_16 = calcul_aide_personnalisee_logement_locatif(
                        CalculAidePersonnaliseeLogementLocatifIn(loyer_principal_base_in = temp_sous_calcul_traitement_187,
                        ressources_menage_arrondies_in = temp_sous_calcul_traitement_188,
                        beneficiaire_aide_adulte_ou_enfant_handicapes_in = temp_sous_calcul_traitement_189,
                        date_courante_in = temp_sous_calcul_traitement_190,
                        nombre_personnes_a_charge_in = temp_sous_calcul_traitement_191,
                        situation_familiale_calcul_apl_in = temp_sous_calcul_traitement_192,
                        zone_in = temp_sous_calcul_traitement_193,
                        logement_est_chambre_in = temp_sous_calcul_traitement_194,
                        agees_ou_handicap_adultes_hebergees_onereux_particuliers_in = temp_sous_calcul_traitement_195,
                        type_aide_in = temp_sous_calcul_traitement_196,
                        colocation_in = temp_sous_calcul_traitement_197,
                        reduction_loyer_solidarite_in = temp_sous_calcul_traitement_198,
                        logement_meuble_d842_2_in = temp_sous_calcul_traitement_199,
                        residence_in = temp_sous_calcul_traitement_200)).montant_forfaitaire_charges_d823_16,
                        plafond_loyer_d823_16_2 = calcul_aide_personnalisee_logement_locatif(
                        CalculAidePersonnaliseeLogementLocatifIn(loyer_principal_base_in = temp_sous_calcul_traitement_173,
                        ressources_menage_arrondies_in = temp_sous_calcul_traitement_174,
                        beneficiaire_aide_adulte_ou_enfant_handicapes_in = temp_sous_calcul_traitement_175,
                        date_courante_in = temp_sous_calcul_traitement_176,
                        nombre_personnes_a_charge_in = temp_sous_calcul_traitement_177,
                        situation_familiale_calcul_apl_in = temp_sous_calcul_traitement_178,
                        zone_in = temp_sous_calcul_traitement_179,
                        logement_est_chambre_in = temp_sous_calcul_traitement_180,
                        agees_ou_handicap_adultes_hebergees_onereux_particuliers_in = temp_sous_calcul_traitement_181,
                        type_aide_in = temp_sous_calcul_traitement_182,
                        colocation_in = temp_sous_calcul_traitement_183,
                        reduction_loyer_solidarite_in = temp_sous_calcul_traitement_184,
                        logement_meuble_d842_2_in = temp_sous_calcul_traitement_185,
                        residence_in = temp_sous_calcul_traitement_186)).plafond_loyer_d823_16_2,
                        participation_minimale = calcul_aide_personnalisee_logement_locatif(
                        CalculAidePersonnaliseeLogementLocatifIn(loyer_principal_base_in = temp_sous_calcul_traitement_159,
                        ressources_menage_arrondies_in = temp_sous_calcul_traitement_160,
                        beneficiaire_aide_adulte_ou_enfant_handicapes_in = temp_sous_calcul_traitement_161,
                        date_courante_in = temp_sous_calcul_traitement_162,
                        nombre_personnes_a_charge_in = temp_sous_calcul_traitement_163,
                        situation_familiale_calcul_apl_in = temp_sous_calcul_traitement_164,
                        zone_in = temp_sous_calcul_traitement_165,
                        logement_est_chambre_in = temp_sous_calcul_traitement_166,
                        agees_ou_handicap_adultes_hebergees_onereux_particuliers_in = temp_sous_calcul_traitement_167,
                        type_aide_in = temp_sous_calcul_traitement_168,
                        colocation_in = temp_sous_calcul_traitement_169,
                        reduction_loyer_solidarite_in = temp_sous_calcul_traitement_170,
                        logement_meuble_d842_2_in = temp_sous_calcul_traitement_171,
                        residence_in = temp_sous_calcul_traitement_172)).participation_minimale,
                        taux_composition_familiale = calcul_aide_personnalisee_logement_locatif(
                        CalculAidePersonnaliseeLogementLocatifIn(loyer_principal_base_in = temp_sous_calcul_traitement_145,
                        ressources_menage_arrondies_in = temp_sous_calcul_traitement_146,
                        beneficiaire_aide_adulte_ou_enfant_handicapes_in = temp_sous_calcul_traitement_147,
                        date_courante_in = temp_sous_calcul_traitement_148,
                        nombre_personnes_a_charge_in = temp_sous_calcul_traitement_149,
                        situation_familiale_calcul_apl_in = temp_sous_calcul_traitement_150,
                        zone_in = temp_sous_calcul_traitement_151,
                        logement_est_chambre_in = temp_sous_calcul_traitement_152,
                        agees_ou_handicap_adultes_hebergees_onereux_particuliers_in = temp_sous_calcul_traitement_153,
                        type_aide_in = temp_sous_calcul_traitement_154,
                        colocation_in = temp_sous_calcul_traitement_155,
                        reduction_loyer_solidarite_in = temp_sous_calcul_traitement_156,
                        logement_meuble_d842_2_in = temp_sous_calcul_traitement_157,
                        residence_in = temp_sous_calcul_traitement_158)).taux_composition_familiale,
                        participation_personnelle = calcul_aide_personnalisee_logement_locatif(
                        CalculAidePersonnaliseeLogementLocatifIn(loyer_principal_base_in = temp_sous_calcul_traitement_131,
                        ressources_menage_arrondies_in = temp_sous_calcul_traitement_132,
                        beneficiaire_aide_adulte_ou_enfant_handicapes_in = temp_sous_calcul_traitement_133,
                        date_courante_in = temp_sous_calcul_traitement_134,
                        nombre_personnes_a_charge_in = temp_sous_calcul_traitement_135,
                        situation_familiale_calcul_apl_in = temp_sous_calcul_traitement_136,
                        zone_in = temp_sous_calcul_traitement_137,
                        logement_est_chambre_in = temp_sous_calcul_traitement_138,
                        agees_ou_handicap_adultes_hebergees_onereux_particuliers_in = temp_sous_calcul_traitement_139,
                        type_aide_in = temp_sous_calcul_traitement_140,
                        colocation_in = temp_sous_calcul_traitement_141,
                        reduction_loyer_solidarite_in = temp_sous_calcul_traitement_142,
                        logement_meuble_d842_2_in = temp_sous_calcul_traitement_143,
                        residence_in = temp_sous_calcul_traitement_144)).participation_personnelle,
                        aide_finale_formule = calcul_aide_personnalisee_logement_locatif(
                        CalculAidePersonnaliseeLogementLocatifIn(loyer_principal_base_in = temp_sous_calcul_traitement_117,
                        ressources_menage_arrondies_in = temp_sous_calcul_traitement_118,
                        beneficiaire_aide_adulte_ou_enfant_handicapes_in = temp_sous_calcul_traitement_119,
                        date_courante_in = temp_sous_calcul_traitement_120,
                        nombre_personnes_a_charge_in = temp_sous_calcul_traitement_121,
                        situation_familiale_calcul_apl_in = temp_sous_calcul_traitement_122,
                        zone_in = temp_sous_calcul_traitement_123,
                        logement_est_chambre_in = temp_sous_calcul_traitement_124,
                        agees_ou_handicap_adultes_hebergees_onereux_particuliers_in = temp_sous_calcul_traitement_125,
                        type_aide_in = temp_sous_calcul_traitement_126,
                        colocation_in = temp_sous_calcul_traitement_127,
                        reduction_loyer_solidarite_in = temp_sous_calcul_traitement_128,
                        logement_meuble_d842_2_in = temp_sous_calcul_traitement_129,
                        residence_in = temp_sous_calcul_traitement_130)).aide_finale_formule,
                        traitement_aide_finale = temp_sous_calcul_traitement_102).traitement_aide_finale)
            else:
                temp_sous_calcul_traitement_2 = dead_value
                raise EmptyError
        except EmptyError:
            match_arg_630 = categorie_calcul_apl
            if match_arg_630.code == CategorieCalculAPL_Code.Location:
                location_2 = match_arg_630.value
                def temp_sous_calcul_traitement_201(param0_2:Money):
                    try:
                        temp_sous_calcul_traitement_202 = location_2.loyer_principal
                    except EmptyError:
                        temp_sous_calcul_traitement_202 = dead_value
                        raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                             start_line=1479,
                                                             start_column=31,
                                                             end_line=1479,
                                                             end_column=55,
                                                             law_headings=["Article D823-9",
                                                             "Section 1 : Calcul, liquidation et versement des aides",
                                                             "Chapitre III : Modalités de liquidation et de versement",
                                                             "Titre II : Dispositions communes aux aides personnelles au logement",
                                                             "Livre VIII : Aides personnelles au logement",
                                                             "Partie réglementaire",
                                                             "Code de la construction et de l'habitation"]))
                    try:
                        temp_sous_calcul_traitement_203 = ressources_menage_avec_arrondi
                    except EmptyError:
                        temp_sous_calcul_traitement_203 = dead_value
                        raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                             start_line=1474,
                                                             start_column=43,
                                                             end_line=1474,
                                                             end_column=60,
                                                             law_headings=["Article D823-9",
                                                             "Section 1 : Calcul, liquidation et versement des aides",
                                                             "Chapitre III : Modalités de liquidation et de versement",
                                                             "Titre II : Dispositions communes aux aides personnelles au logement",
                                                             "Livre VIII : Aides personnelles au logement",
                                                             "Partie réglementaire",
                                                             "Code de la construction et de l'habitation"]))
                    try:
                        temp_sous_calcul_traitement_204 = location_2.beneficiaire_aide_adulte_ou_enfant_handicapes
                    except EmptyError:
                        temp_sous_calcul_traitement_204 = dead_value
                        raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                             start_line=1481,
                                                             start_column=15,
                                                             end_line=1481,
                                                             end_column=69,
                                                             law_headings=["Article D823-9",
                                                             "Section 1 : Calcul, liquidation et versement des aides",
                                                             "Chapitre III : Modalités de liquidation et de versement",
                                                             "Titre II : Dispositions communes aux aides personnelles au logement",
                                                             "Livre VIII : Aides personnelles au logement",
                                                             "Partie réglementaire",
                                                             "Code de la construction et de l'habitation"]))
                    try:
                        temp_sous_calcul_traitement_205 = date_courante_14
                    except EmptyError:
                        temp_sous_calcul_traitement_205 = dead_value
                        raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                             start_line=1477,
                                                             start_column=29,
                                                             end_line=1477,
                                                             end_column=42,
                                                             law_headings=["Article D823-9",
                                                             "Section 1 : Calcul, liquidation et versement des aides",
                                                             "Chapitre III : Modalités de liquidation et de versement",
                                                             "Titre II : Dispositions communes aux aides personnelles au logement",
                                                             "Livre VIII : Aides personnelles au logement",
                                                             "Partie réglementaire",
                                                             "Code de la construction et de l'habitation"]))
                    try:
                        temp_sous_calcul_traitement_206 = nombre_personnes_a_charge_11
                    except EmptyError:
                        temp_sous_calcul_traitement_206 = dead_value
                        raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                             start_line=1475,
                                                             start_column=41,
                                                             end_line=1475,
                                                             end_column=66,
                                                             law_headings=["Article D823-9",
                                                             "Section 1 : Calcul, liquidation et versement des aides",
                                                             "Chapitre III : Modalités de liquidation et de versement",
                                                             "Titre II : Dispositions communes aux aides personnelles au logement",
                                                             "Livre VIII : Aides personnelles au logement",
                                                             "Partie réglementaire",
                                                             "Code de la construction et de l'habitation"]))
                    try:
                        temp_sous_calcul_traitement_207 = situation_familiale_calcul_apl_8
                    except EmptyError:
                        temp_sous_calcul_traitement_207 = dead_value
                        raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                             start_line=1478,
                                                             start_column=46,
                                                             end_line=1478,
                                                             end_column=76,
                                                             law_headings=["Article D823-9",
                                                             "Section 1 : Calcul, liquidation et versement des aides",
                                                             "Chapitre III : Modalités de liquidation et de versement",
                                                             "Titre II : Dispositions communes aux aides personnelles au logement",
                                                             "Livre VIII : Aides personnelles au logement",
                                                             "Partie réglementaire",
                                                             "Code de la construction et de l'habitation"]))
                    try:
                        temp_sous_calcul_traitement_208 = zone_6
                    except EmptyError:
                        temp_sous_calcul_traitement_208 = dead_value
                        raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                             start_line=1476,
                                                             start_column=20,
                                                             end_line=1476,
                                                             end_column=24,
                                                             law_headings=["Article D823-9",
                                                             "Section 1 : Calcul, liquidation et versement des aides",
                                                             "Chapitre III : Modalités de liquidation et de versement",
                                                             "Titre II : Dispositions communes aux aides personnelles au logement",
                                                             "Livre VIII : Aides personnelles au logement",
                                                             "Partie réglementaire",
                                                             "Code de la construction et de l'habitation"]))
                    try:
                        temp_sous_calcul_traitement_209 = location_2.logement_est_chambre
                    except EmptyError:
                        temp_sous_calcul_traitement_209 = dead_value
                        raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                             start_line=1482,
                                                             start_column=36,
                                                             end_line=1482,
                                                             end_column=65,
                                                             law_headings=["Article D823-9",
                                                             "Section 1 : Calcul, liquidation et versement des aides",
                                                             "Chapitre III : Modalités de liquidation et de versement",
                                                             "Titre II : Dispositions communes aux aides personnelles au logement",
                                                             "Livre VIII : Aides personnelles au logement",
                                                             "Partie réglementaire",
                                                             "Code de la construction et de l'habitation"]))
                    try:
                        temp_sous_calcul_traitement_210 = location_2.agees_ou_handicap_adultes_hebergees_onereux_particuliers
                    except EmptyError:
                        temp_sous_calcul_traitement_210 = dead_value
                        raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                             start_line=1485,
                                                             start_column=15,
                                                             end_line=1485,
                                                             end_column=80,
                                                             law_headings=["Article D823-9",
                                                             "Section 1 : Calcul, liquidation et versement des aides",
                                                             "Chapitre III : Modalités de liquidation et de versement",
                                                             "Titre II : Dispositions communes aux aides personnelles au logement",
                                                             "Livre VIII : Aides personnelles au logement",
                                                             "Partie réglementaire",
                                                             "Code de la construction et de l'habitation"]))
                    try:
                        temp_sous_calcul_traitement_211 = type_aide_2
                    except EmptyError:
                        temp_sous_calcul_traitement_211 = dead_value
                        raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                             start_line=1486,
                                                             start_column=25,
                                                             end_line=1486,
                                                             end_column=34,
                                                             law_headings=["Article D823-9",
                                                             "Section 1 : Calcul, liquidation et versement des aides",
                                                             "Chapitre III : Modalités de liquidation et de versement",
                                                             "Titre II : Dispositions communes aux aides personnelles au logement",
                                                             "Livre VIII : Aides personnelles au logement",
                                                             "Partie réglementaire",
                                                             "Code de la construction et de l'habitation"]))
                    try:
                        temp_sous_calcul_traitement_212 = location_2.colocation
                    except EmptyError:
                        temp_sous_calcul_traitement_212 = dead_value
                        raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                             start_line=1483,
                                                             start_column=26,
                                                             end_line=1483,
                                                             end_column=45,
                                                             law_headings=["Article D823-9",
                                                             "Section 1 : Calcul, liquidation et versement des aides",
                                                             "Chapitre III : Modalités de liquidation et de versement",
                                                             "Titre II : Dispositions communes aux aides personnelles au logement",
                                                             "Livre VIII : Aides personnelles au logement",
                                                             "Partie réglementaire",
                                                             "Code de la construction et de l'habitation"]))
                    try:
                        match_arg_631 = location_2.bailleur
                        if match_arg_631.code == TypeBailleur_Code.BailleurSocial:
                            bailleur = match_arg_631.value
                            temp_sous_calcul_traitement_213 = bailleur.reduction_loyer_solidarite_percue
                        elif match_arg_631.code == TypeBailleur_Code.BailleurPriveAvecConventionnementSocial:
                            _ = match_arg_631.value
                            temp_sous_calcul_traitement_213 = money_of_cents_string("0")
                        elif match_arg_631.code == TypeBailleur_Code.BailleurPrive:
                            _ = match_arg_631.value
                            temp_sous_calcul_traitement_213 = money_of_cents_string("0")
                    except EmptyError:
                        temp_sous_calcul_traitement_213 = dead_value
                        raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                             start_line=1488,
                                                             start_column=16,
                                                             end_line=1491,
                                                             end_column=39,
                                                             law_headings=["Article D823-9",
                                                             "Section 1 : Calcul, liquidation et versement des aides",
                                                             "Chapitre III : Modalités de liquidation et de versement",
                                                             "Titre II : Dispositions communes aux aides personnelles au logement",
                                                             "Livre VIII : Aides personnelles au logement",
                                                             "Partie réglementaire",
                                                             "Code de la construction et de l'habitation"]))
                    try:
                        temp_sous_calcul_traitement_214 = location_2.logement_meuble_d842_2
                    except EmptyError:
                        temp_sous_calcul_traitement_214 = dead_value
                        raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                             start_line=1492,
                                                             start_column=38,
                                                             end_line=1492,
                                                             end_column=69,
                                                             law_headings=["Article D823-9",
                                                             "Section 1 : Calcul, liquidation et versement des aides",
                                                             "Chapitre III : Modalités de liquidation et de versement",
                                                             "Titre II : Dispositions communes aux aides personnelles au logement",
                                                             "Livre VIII : Aides personnelles au logement",
                                                             "Partie réglementaire",
                                                             "Code de la construction et de l'habitation"]))
                    try:
                        temp_sous_calcul_traitement_215 = residence_8
                    except EmptyError:
                        temp_sous_calcul_traitement_215 = dead_value
                        raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                             start_line=1493,
                                                             start_column=25,
                                                             end_line=1493,
                                                             end_column=34,
                                                             law_headings=["Article D823-9",
                                                             "Section 1 : Calcul, liquidation et versement des aides",
                                                             "Chapitre III : Modalités de liquidation et de versement",
                                                             "Titre II : Dispositions communes aux aides personnelles au logement",
                                                             "Livre VIII : Aides personnelles au logement",
                                                             "Partie réglementaire",
                                                             "Code de la construction et de l'habitation"]))
                    return calcul_aide_personnalisee_logement_locatif(
                        CalculAidePersonnaliseeLogementLocatifIn(loyer_principal_base_in = temp_sous_calcul_traitement_202,
                        ressources_menage_arrondies_in = temp_sous_calcul_traitement_203,
                        beneficiaire_aide_adulte_ou_enfant_handicapes_in = temp_sous_calcul_traitement_204,
                        date_courante_in = temp_sous_calcul_traitement_205,
                        nombre_personnes_a_charge_in = temp_sous_calcul_traitement_206,
                        situation_familiale_calcul_apl_in = temp_sous_calcul_traitement_207,
                        zone_in = temp_sous_calcul_traitement_208,
                        logement_est_chambre_in = temp_sous_calcul_traitement_209,
                        agees_ou_handicap_adultes_hebergees_onereux_particuliers_in = temp_sous_calcul_traitement_210,
                        type_aide_in = temp_sous_calcul_traitement_211,
                        colocation_in = temp_sous_calcul_traitement_212,
                        reduction_loyer_solidarite_in = temp_sous_calcul_traitement_213,
                        logement_meuble_d842_2_in = temp_sous_calcul_traitement_214,
                        residence_in = temp_sous_calcul_traitement_215)).traitement_aide_finale(
                        param0_2)
                try:
                    temp_sous_calcul_traitement_216 = location_2.loyer_principal
                except EmptyError:
                    temp_sous_calcul_traitement_216 = dead_value
                    raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                         start_line=1479,
                                                         start_column=31,
                                                         end_line=1479,
                                                         end_column=55,
                                                         law_headings=["Article D823-9",
                                                         "Section 1 : Calcul, liquidation et versement des aides",
                                                         "Chapitre III : Modalités de liquidation et de versement",
                                                         "Titre II : Dispositions communes aux aides personnelles au logement",
                                                         "Livre VIII : Aides personnelles au logement",
                                                         "Partie réglementaire",
                                                         "Code de la construction et de l'habitation"]))
                try:
                    temp_sous_calcul_traitement_217 = ressources_menage_avec_arrondi
                except EmptyError:
                    temp_sous_calcul_traitement_217 = dead_value
                    raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                         start_line=1474,
                                                         start_column=43,
                                                         end_line=1474,
                                                         end_column=60,
                                                         law_headings=["Article D823-9",
                                                         "Section 1 : Calcul, liquidation et versement des aides",
                                                         "Chapitre III : Modalités de liquidation et de versement",
                                                         "Titre II : Dispositions communes aux aides personnelles au logement",
                                                         "Livre VIII : Aides personnelles au logement",
                                                         "Partie réglementaire",
                                                         "Code de la construction et de l'habitation"]))
                try:
                    temp_sous_calcul_traitement_218 = location_2.beneficiaire_aide_adulte_ou_enfant_handicapes
                except EmptyError:
                    temp_sous_calcul_traitement_218 = dead_value
                    raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                         start_line=1481,
                                                         start_column=15,
                                                         end_line=1481,
                                                         end_column=69,
                                                         law_headings=["Article D823-9",
                                                         "Section 1 : Calcul, liquidation et versement des aides",
                                                         "Chapitre III : Modalités de liquidation et de versement",
                                                         "Titre II : Dispositions communes aux aides personnelles au logement",
                                                         "Livre VIII : Aides personnelles au logement",
                                                         "Partie réglementaire",
                                                         "Code de la construction et de l'habitation"]))
                try:
                    temp_sous_calcul_traitement_219 = date_courante_14
                except EmptyError:
                    temp_sous_calcul_traitement_219 = dead_value
                    raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                         start_line=1477,
                                                         start_column=29,
                                                         end_line=1477,
                                                         end_column=42,
                                                         law_headings=["Article D823-9",
                                                         "Section 1 : Calcul, liquidation et versement des aides",
                                                         "Chapitre III : Modalités de liquidation et de versement",
                                                         "Titre II : Dispositions communes aux aides personnelles au logement",
                                                         "Livre VIII : Aides personnelles au logement",
                                                         "Partie réglementaire",
                                                         "Code de la construction et de l'habitation"]))
                try:
                    temp_sous_calcul_traitement_220 = nombre_personnes_a_charge_11
                except EmptyError:
                    temp_sous_calcul_traitement_220 = dead_value
                    raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                         start_line=1475,
                                                         start_column=41,
                                                         end_line=1475,
                                                         end_column=66,
                                                         law_headings=["Article D823-9",
                                                         "Section 1 : Calcul, liquidation et versement des aides",
                                                         "Chapitre III : Modalités de liquidation et de versement",
                                                         "Titre II : Dispositions communes aux aides personnelles au logement",
                                                         "Livre VIII : Aides personnelles au logement",
                                                         "Partie réglementaire",
                                                         "Code de la construction et de l'habitation"]))
                try:
                    temp_sous_calcul_traitement_221 = situation_familiale_calcul_apl_8
                except EmptyError:
                    temp_sous_calcul_traitement_221 = dead_value
                    raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                         start_line=1478,
                                                         start_column=46,
                                                         end_line=1478,
                                                         end_column=76,
                                                         law_headings=["Article D823-9",
                                                         "Section 1 : Calcul, liquidation et versement des aides",
                                                         "Chapitre III : Modalités de liquidation et de versement",
                                                         "Titre II : Dispositions communes aux aides personnelles au logement",
                                                         "Livre VIII : Aides personnelles au logement",
                                                         "Partie réglementaire",
                                                         "Code de la construction et de l'habitation"]))
                try:
                    temp_sous_calcul_traitement_222 = zone_6
                except EmptyError:
                    temp_sous_calcul_traitement_222 = dead_value
                    raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                         start_line=1476,
                                                         start_column=20,
                                                         end_line=1476,
                                                         end_column=24,
                                                         law_headings=["Article D823-9",
                                                         "Section 1 : Calcul, liquidation et versement des aides",
                                                         "Chapitre III : Modalités de liquidation et de versement",
                                                         "Titre II : Dispositions communes aux aides personnelles au logement",
                                                         "Livre VIII : Aides personnelles au logement",
                                                         "Partie réglementaire",
                                                         "Code de la construction et de l'habitation"]))
                try:
                    temp_sous_calcul_traitement_223 = location_2.logement_est_chambre
                except EmptyError:
                    temp_sous_calcul_traitement_223 = dead_value
                    raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                         start_line=1482,
                                                         start_column=36,
                                                         end_line=1482,
                                                         end_column=65,
                                                         law_headings=["Article D823-9",
                                                         "Section 1 : Calcul, liquidation et versement des aides",
                                                         "Chapitre III : Modalités de liquidation et de versement",
                                                         "Titre II : Dispositions communes aux aides personnelles au logement",
                                                         "Livre VIII : Aides personnelles au logement",
                                                         "Partie réglementaire",
                                                         "Code de la construction et de l'habitation"]))
                try:
                    temp_sous_calcul_traitement_224 = location_2.agees_ou_handicap_adultes_hebergees_onereux_particuliers
                except EmptyError:
                    temp_sous_calcul_traitement_224 = dead_value
                    raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                         start_line=1485,
                                                         start_column=15,
                                                         end_line=1485,
                                                         end_column=80,
                                                         law_headings=["Article D823-9",
                                                         "Section 1 : Calcul, liquidation et versement des aides",
                                                         "Chapitre III : Modalités de liquidation et de versement",
                                                         "Titre II : Dispositions communes aux aides personnelles au logement",
                                                         "Livre VIII : Aides personnelles au logement",
                                                         "Partie réglementaire",
                                                         "Code de la construction et de l'habitation"]))
                try:
                    temp_sous_calcul_traitement_225 = type_aide_2
                except EmptyError:
                    temp_sous_calcul_traitement_225 = dead_value
                    raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                         start_line=1486,
                                                         start_column=25,
                                                         end_line=1486,
                                                         end_column=34,
                                                         law_headings=["Article D823-9",
                                                         "Section 1 : Calcul, liquidation et versement des aides",
                                                         "Chapitre III : Modalités de liquidation et de versement",
                                                         "Titre II : Dispositions communes aux aides personnelles au logement",
                                                         "Livre VIII : Aides personnelles au logement",
                                                         "Partie réglementaire",
                                                         "Code de la construction et de l'habitation"]))
                try:
                    temp_sous_calcul_traitement_226 = location_2.colocation
                except EmptyError:
                    temp_sous_calcul_traitement_226 = dead_value
                    raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                         start_line=1483,
                                                         start_column=26,
                                                         end_line=1483,
                                                         end_column=45,
                                                         law_headings=["Article D823-9",
                                                         "Section 1 : Calcul, liquidation et versement des aides",
                                                         "Chapitre III : Modalités de liquidation et de versement",
                                                         "Titre II : Dispositions communes aux aides personnelles au logement",
                                                         "Livre VIII : Aides personnelles au logement",
                                                         "Partie réglementaire",
                                                         "Code de la construction et de l'habitation"]))
                try:
                    match_arg_632 = location_2.bailleur
                    if match_arg_632.code == TypeBailleur_Code.BailleurSocial:
                        bailleur_1 = match_arg_632.value
                        temp_sous_calcul_traitement_227 = bailleur_1.reduction_loyer_solidarite_percue
                    elif match_arg_632.code == TypeBailleur_Code.BailleurPriveAvecConventionnementSocial:
                        _ = match_arg_632.value
                        temp_sous_calcul_traitement_227 = money_of_cents_string("0")
                    elif match_arg_632.code == TypeBailleur_Code.BailleurPrive:
                        _ = match_arg_632.value
                        temp_sous_calcul_traitement_227 = money_of_cents_string("0")
                except EmptyError:
                    temp_sous_calcul_traitement_227 = dead_value
                    raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                         start_line=1488,
                                                         start_column=16,
                                                         end_line=1491,
                                                         end_column=39,
                                                         law_headings=["Article D823-9",
                                                         "Section 1 : Calcul, liquidation et versement des aides",
                                                         "Chapitre III : Modalités de liquidation et de versement",
                                                         "Titre II : Dispositions communes aux aides personnelles au logement",
                                                         "Livre VIII : Aides personnelles au logement",
                                                         "Partie réglementaire",
                                                         "Code de la construction et de l'habitation"]))
                try:
                    temp_sous_calcul_traitement_228 = location_2.logement_meuble_d842_2
                except EmptyError:
                    temp_sous_calcul_traitement_228 = dead_value
                    raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                         start_line=1492,
                                                         start_column=38,
                                                         end_line=1492,
                                                         end_column=69,
                                                         law_headings=["Article D823-9",
                                                         "Section 1 : Calcul, liquidation et versement des aides",
                                                         "Chapitre III : Modalités de liquidation et de versement",
                                                         "Titre II : Dispositions communes aux aides personnelles au logement",
                                                         "Livre VIII : Aides personnelles au logement",
                                                         "Partie réglementaire",
                                                         "Code de la construction et de l'habitation"]))
                try:
                    temp_sous_calcul_traitement_229 = residence_8
                except EmptyError:
                    temp_sous_calcul_traitement_229 = dead_value
                    raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                         start_line=1493,
                                                         start_column=25,
                                                         end_line=1493,
                                                         end_column=34,
                                                         law_headings=["Article D823-9",
                                                         "Section 1 : Calcul, liquidation et versement des aides",
                                                         "Chapitre III : Modalités de liquidation et de versement",
                                                         "Titre II : Dispositions communes aux aides personnelles au logement",
                                                         "Livre VIII : Aides personnelles au logement",
                                                         "Partie réglementaire",
                                                         "Code de la construction et de l'habitation"]))
                try:
                    temp_sous_calcul_traitement_230 = location_2.loyer_principal
                except EmptyError:
                    temp_sous_calcul_traitement_230 = dead_value
                    raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                         start_line=1479,
                                                         start_column=31,
                                                         end_line=1479,
                                                         end_column=55,
                                                         law_headings=["Article D823-9",
                                                         "Section 1 : Calcul, liquidation et versement des aides",
                                                         "Chapitre III : Modalités de liquidation et de versement",
                                                         "Titre II : Dispositions communes aux aides personnelles au logement",
                                                         "Livre VIII : Aides personnelles au logement",
                                                         "Partie réglementaire",
                                                         "Code de la construction et de l'habitation"]))
                try:
                    temp_sous_calcul_traitement_231 = ressources_menage_avec_arrondi
                except EmptyError:
                    temp_sous_calcul_traitement_231 = dead_value
                    raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                         start_line=1474,
                                                         start_column=43,
                                                         end_line=1474,
                                                         end_column=60,
                                                         law_headings=["Article D823-9",
                                                         "Section 1 : Calcul, liquidation et versement des aides",
                                                         "Chapitre III : Modalités de liquidation et de versement",
                                                         "Titre II : Dispositions communes aux aides personnelles au logement",
                                                         "Livre VIII : Aides personnelles au logement",
                                                         "Partie réglementaire",
                                                         "Code de la construction et de l'habitation"]))
                try:
                    temp_sous_calcul_traitement_232 = location_2.beneficiaire_aide_adulte_ou_enfant_handicapes
                except EmptyError:
                    temp_sous_calcul_traitement_232 = dead_value
                    raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                         start_line=1481,
                                                         start_column=15,
                                                         end_line=1481,
                                                         end_column=69,
                                                         law_headings=["Article D823-9",
                                                         "Section 1 : Calcul, liquidation et versement des aides",
                                                         "Chapitre III : Modalités de liquidation et de versement",
                                                         "Titre II : Dispositions communes aux aides personnelles au logement",
                                                         "Livre VIII : Aides personnelles au logement",
                                                         "Partie réglementaire",
                                                         "Code de la construction et de l'habitation"]))
                try:
                    temp_sous_calcul_traitement_233 = date_courante_14
                except EmptyError:
                    temp_sous_calcul_traitement_233 = dead_value
                    raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                         start_line=1477,
                                                         start_column=29,
                                                         end_line=1477,
                                                         end_column=42,
                                                         law_headings=["Article D823-9",
                                                         "Section 1 : Calcul, liquidation et versement des aides",
                                                         "Chapitre III : Modalités de liquidation et de versement",
                                                         "Titre II : Dispositions communes aux aides personnelles au logement",
                                                         "Livre VIII : Aides personnelles au logement",
                                                         "Partie réglementaire",
                                                         "Code de la construction et de l'habitation"]))
                try:
                    temp_sous_calcul_traitement_234 = nombre_personnes_a_charge_11
                except EmptyError:
                    temp_sous_calcul_traitement_234 = dead_value
                    raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                         start_line=1475,
                                                         start_column=41,
                                                         end_line=1475,
                                                         end_column=66,
                                                         law_headings=["Article D823-9",
                                                         "Section 1 : Calcul, liquidation et versement des aides",
                                                         "Chapitre III : Modalités de liquidation et de versement",
                                                         "Titre II : Dispositions communes aux aides personnelles au logement",
                                                         "Livre VIII : Aides personnelles au logement",
                                                         "Partie réglementaire",
                                                         "Code de la construction et de l'habitation"]))
                try:
                    temp_sous_calcul_traitement_235 = situation_familiale_calcul_apl_8
                except EmptyError:
                    temp_sous_calcul_traitement_235 = dead_value
                    raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                         start_line=1478,
                                                         start_column=46,
                                                         end_line=1478,
                                                         end_column=76,
                                                         law_headings=["Article D823-9",
                                                         "Section 1 : Calcul, liquidation et versement des aides",
                                                         "Chapitre III : Modalités de liquidation et de versement",
                                                         "Titre II : Dispositions communes aux aides personnelles au logement",
                                                         "Livre VIII : Aides personnelles au logement",
                                                         "Partie réglementaire",
                                                         "Code de la construction et de l'habitation"]))
                try:
                    temp_sous_calcul_traitement_236 = zone_6
                except EmptyError:
                    temp_sous_calcul_traitement_236 = dead_value
                    raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                         start_line=1476,
                                                         start_column=20,
                                                         end_line=1476,
                                                         end_column=24,
                                                         law_headings=["Article D823-9",
                                                         "Section 1 : Calcul, liquidation et versement des aides",
                                                         "Chapitre III : Modalités de liquidation et de versement",
                                                         "Titre II : Dispositions communes aux aides personnelles au logement",
                                                         "Livre VIII : Aides personnelles au logement",
                                                         "Partie réglementaire",
                                                         "Code de la construction et de l'habitation"]))
                try:
                    temp_sous_calcul_traitement_237 = location_2.logement_est_chambre
                except EmptyError:
                    temp_sous_calcul_traitement_237 = dead_value
                    raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                         start_line=1482,
                                                         start_column=36,
                                                         end_line=1482,
                                                         end_column=65,
                                                         law_headings=["Article D823-9",
                                                         "Section 1 : Calcul, liquidation et versement des aides",
                                                         "Chapitre III : Modalités de liquidation et de versement",
                                                         "Titre II : Dispositions communes aux aides personnelles au logement",
                                                         "Livre VIII : Aides personnelles au logement",
                                                         "Partie réglementaire",
                                                         "Code de la construction et de l'habitation"]))
                try:
                    temp_sous_calcul_traitement_238 = location_2.agees_ou_handicap_adultes_hebergees_onereux_particuliers
                except EmptyError:
                    temp_sous_calcul_traitement_238 = dead_value
                    raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                         start_line=1485,
                                                         start_column=15,
                                                         end_line=1485,
                                                         end_column=80,
                                                         law_headings=["Article D823-9",
                                                         "Section 1 : Calcul, liquidation et versement des aides",
                                                         "Chapitre III : Modalités de liquidation et de versement",
                                                         "Titre II : Dispositions communes aux aides personnelles au logement",
                                                         "Livre VIII : Aides personnelles au logement",
                                                         "Partie réglementaire",
                                                         "Code de la construction et de l'habitation"]))
                try:
                    temp_sous_calcul_traitement_239 = type_aide_2
                except EmptyError:
                    temp_sous_calcul_traitement_239 = dead_value
                    raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                         start_line=1486,
                                                         start_column=25,
                                                         end_line=1486,
                                                         end_column=34,
                                                         law_headings=["Article D823-9",
                                                         "Section 1 : Calcul, liquidation et versement des aides",
                                                         "Chapitre III : Modalités de liquidation et de versement",
                                                         "Titre II : Dispositions communes aux aides personnelles au logement",
                                                         "Livre VIII : Aides personnelles au logement",
                                                         "Partie réglementaire",
                                                         "Code de la construction et de l'habitation"]))
                try:
                    temp_sous_calcul_traitement_240 = location_2.colocation
                except EmptyError:
                    temp_sous_calcul_traitement_240 = dead_value
                    raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                         start_line=1483,
                                                         start_column=26,
                                                         end_line=1483,
                                                         end_column=45,
                                                         law_headings=["Article D823-9",
                                                         "Section 1 : Calcul, liquidation et versement des aides",
                                                         "Chapitre III : Modalités de liquidation et de versement",
                                                         "Titre II : Dispositions communes aux aides personnelles au logement",
                                                         "Livre VIII : Aides personnelles au logement",
                                                         "Partie réglementaire",
                                                         "Code de la construction et de l'habitation"]))
                try:
                    match_arg_633 = location_2.bailleur
                    if match_arg_633.code == TypeBailleur_Code.BailleurSocial:
                        bailleur_2 = match_arg_633.value
                        temp_sous_calcul_traitement_241 = bailleur_2.reduction_loyer_solidarite_percue
                    elif match_arg_633.code == TypeBailleur_Code.BailleurPriveAvecConventionnementSocial:
                        _ = match_arg_633.value
                        temp_sous_calcul_traitement_241 = money_of_cents_string("0")
                    elif match_arg_633.code == TypeBailleur_Code.BailleurPrive:
                        _ = match_arg_633.value
                        temp_sous_calcul_traitement_241 = money_of_cents_string("0")
                except EmptyError:
                    temp_sous_calcul_traitement_241 = dead_value
                    raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                         start_line=1488,
                                                         start_column=16,
                                                         end_line=1491,
                                                         end_column=39,
                                                         law_headings=["Article D823-9",
                                                         "Section 1 : Calcul, liquidation et versement des aides",
                                                         "Chapitre III : Modalités de liquidation et de versement",
                                                         "Titre II : Dispositions communes aux aides personnelles au logement",
                                                         "Livre VIII : Aides personnelles au logement",
                                                         "Partie réglementaire",
                                                         "Code de la construction et de l'habitation"]))
                try:
                    temp_sous_calcul_traitement_242 = location_2.logement_meuble_d842_2
                except EmptyError:
                    temp_sous_calcul_traitement_242 = dead_value
                    raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                         start_line=1492,
                                                         start_column=38,
                                                         end_line=1492,
                                                         end_column=69,
                                                         law_headings=["Article D823-9",
                                                         "Section 1 : Calcul, liquidation et versement des aides",
                                                         "Chapitre III : Modalités de liquidation et de versement",
                                                         "Titre II : Dispositions communes aux aides personnelles au logement",
                                                         "Livre VIII : Aides personnelles au logement",
                                                         "Partie réglementaire",
                                                         "Code de la construction et de l'habitation"]))
                try:
                    temp_sous_calcul_traitement_243 = residence_8
                except EmptyError:
                    temp_sous_calcul_traitement_243 = dead_value
                    raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                         start_line=1493,
                                                         start_column=25,
                                                         end_line=1493,
                                                         end_column=34,
                                                         law_headings=["Article D823-9",
                                                         "Section 1 : Calcul, liquidation et versement des aides",
                                                         "Chapitre III : Modalités de liquidation et de versement",
                                                         "Titre II : Dispositions communes aux aides personnelles au logement",
                                                         "Livre VIII : Aides personnelles au logement",
                                                         "Partie réglementaire",
                                                         "Code de la construction et de l'habitation"]))
                try:
                    temp_sous_calcul_traitement_244 = location_2.loyer_principal
                except EmptyError:
                    temp_sous_calcul_traitement_244 = dead_value
                    raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                         start_line=1479,
                                                         start_column=31,
                                                         end_line=1479,
                                                         end_column=55,
                                                         law_headings=["Article D823-9",
                                                         "Section 1 : Calcul, liquidation et versement des aides",
                                                         "Chapitre III : Modalités de liquidation et de versement",
                                                         "Titre II : Dispositions communes aux aides personnelles au logement",
                                                         "Livre VIII : Aides personnelles au logement",
                                                         "Partie réglementaire",
                                                         "Code de la construction et de l'habitation"]))
                try:
                    temp_sous_calcul_traitement_245 = ressources_menage_avec_arrondi
                except EmptyError:
                    temp_sous_calcul_traitement_245 = dead_value
                    raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                         start_line=1474,
                                                         start_column=43,
                                                         end_line=1474,
                                                         end_column=60,
                                                         law_headings=["Article D823-9",
                                                         "Section 1 : Calcul, liquidation et versement des aides",
                                                         "Chapitre III : Modalités de liquidation et de versement",
                                                         "Titre II : Dispositions communes aux aides personnelles au logement",
                                                         "Livre VIII : Aides personnelles au logement",
                                                         "Partie réglementaire",
                                                         "Code de la construction et de l'habitation"]))
                try:
                    temp_sous_calcul_traitement_246 = location_2.beneficiaire_aide_adulte_ou_enfant_handicapes
                except EmptyError:
                    temp_sous_calcul_traitement_246 = dead_value
                    raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                         start_line=1481,
                                                         start_column=15,
                                                         end_line=1481,
                                                         end_column=69,
                                                         law_headings=["Article D823-9",
                                                         "Section 1 : Calcul, liquidation et versement des aides",
                                                         "Chapitre III : Modalités de liquidation et de versement",
                                                         "Titre II : Dispositions communes aux aides personnelles au logement",
                                                         "Livre VIII : Aides personnelles au logement",
                                                         "Partie réglementaire",
                                                         "Code de la construction et de l'habitation"]))
                try:
                    temp_sous_calcul_traitement_247 = date_courante_14
                except EmptyError:
                    temp_sous_calcul_traitement_247 = dead_value
                    raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                         start_line=1477,
                                                         start_column=29,
                                                         end_line=1477,
                                                         end_column=42,
                                                         law_headings=["Article D823-9",
                                                         "Section 1 : Calcul, liquidation et versement des aides",
                                                         "Chapitre III : Modalités de liquidation et de versement",
                                                         "Titre II : Dispositions communes aux aides personnelles au logement",
                                                         "Livre VIII : Aides personnelles au logement",
                                                         "Partie réglementaire",
                                                         "Code de la construction et de l'habitation"]))
                try:
                    temp_sous_calcul_traitement_248 = nombre_personnes_a_charge_11
                except EmptyError:
                    temp_sous_calcul_traitement_248 = dead_value
                    raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                         start_line=1475,
                                                         start_column=41,
                                                         end_line=1475,
                                                         end_column=66,
                                                         law_headings=["Article D823-9",
                                                         "Section 1 : Calcul, liquidation et versement des aides",
                                                         "Chapitre III : Modalités de liquidation et de versement",
                                                         "Titre II : Dispositions communes aux aides personnelles au logement",
                                                         "Livre VIII : Aides personnelles au logement",
                                                         "Partie réglementaire",
                                                         "Code de la construction et de l'habitation"]))
                try:
                    temp_sous_calcul_traitement_249 = situation_familiale_calcul_apl_8
                except EmptyError:
                    temp_sous_calcul_traitement_249 = dead_value
                    raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                         start_line=1478,
                                                         start_column=46,
                                                         end_line=1478,
                                                         end_column=76,
                                                         law_headings=["Article D823-9",
                                                         "Section 1 : Calcul, liquidation et versement des aides",
                                                         "Chapitre III : Modalités de liquidation et de versement",
                                                         "Titre II : Dispositions communes aux aides personnelles au logement",
                                                         "Livre VIII : Aides personnelles au logement",
                                                         "Partie réglementaire",
                                                         "Code de la construction et de l'habitation"]))
                try:
                    temp_sous_calcul_traitement_250 = zone_6
                except EmptyError:
                    temp_sous_calcul_traitement_250 = dead_value
                    raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                         start_line=1476,
                                                         start_column=20,
                                                         end_line=1476,
                                                         end_column=24,
                                                         law_headings=["Article D823-9",
                                                         "Section 1 : Calcul, liquidation et versement des aides",
                                                         "Chapitre III : Modalités de liquidation et de versement",
                                                         "Titre II : Dispositions communes aux aides personnelles au logement",
                                                         "Livre VIII : Aides personnelles au logement",
                                                         "Partie réglementaire",
                                                         "Code de la construction et de l'habitation"]))
                try:
                    temp_sous_calcul_traitement_251 = location_2.logement_est_chambre
                except EmptyError:
                    temp_sous_calcul_traitement_251 = dead_value
                    raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                         start_line=1482,
                                                         start_column=36,
                                                         end_line=1482,
                                                         end_column=65,
                                                         law_headings=["Article D823-9",
                                                         "Section 1 : Calcul, liquidation et versement des aides",
                                                         "Chapitre III : Modalités de liquidation et de versement",
                                                         "Titre II : Dispositions communes aux aides personnelles au logement",
                                                         "Livre VIII : Aides personnelles au logement",
                                                         "Partie réglementaire",
                                                         "Code de la construction et de l'habitation"]))
                try:
                    temp_sous_calcul_traitement_252 = location_2.agees_ou_handicap_adultes_hebergees_onereux_particuliers
                except EmptyError:
                    temp_sous_calcul_traitement_252 = dead_value
                    raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                         start_line=1485,
                                                         start_column=15,
                                                         end_line=1485,
                                                         end_column=80,
                                                         law_headings=["Article D823-9",
                                                         "Section 1 : Calcul, liquidation et versement des aides",
                                                         "Chapitre III : Modalités de liquidation et de versement",
                                                         "Titre II : Dispositions communes aux aides personnelles au logement",
                                                         "Livre VIII : Aides personnelles au logement",
                                                         "Partie réglementaire",
                                                         "Code de la construction et de l'habitation"]))
                try:
                    temp_sous_calcul_traitement_253 = type_aide_2
                except EmptyError:
                    temp_sous_calcul_traitement_253 = dead_value
                    raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                         start_line=1486,
                                                         start_column=25,
                                                         end_line=1486,
                                                         end_column=34,
                                                         law_headings=["Article D823-9",
                                                         "Section 1 : Calcul, liquidation et versement des aides",
                                                         "Chapitre III : Modalités de liquidation et de versement",
                                                         "Titre II : Dispositions communes aux aides personnelles au logement",
                                                         "Livre VIII : Aides personnelles au logement",
                                                         "Partie réglementaire",
                                                         "Code de la construction et de l'habitation"]))
                try:
                    temp_sous_calcul_traitement_254 = location_2.colocation
                except EmptyError:
                    temp_sous_calcul_traitement_254 = dead_value
                    raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                         start_line=1483,
                                                         start_column=26,
                                                         end_line=1483,
                                                         end_column=45,
                                                         law_headings=["Article D823-9",
                                                         "Section 1 : Calcul, liquidation et versement des aides",
                                                         "Chapitre III : Modalités de liquidation et de versement",
                                                         "Titre II : Dispositions communes aux aides personnelles au logement",
                                                         "Livre VIII : Aides personnelles au logement",
                                                         "Partie réglementaire",
                                                         "Code de la construction et de l'habitation"]))
                try:
                    match_arg_634 = location_2.bailleur
                    if match_arg_634.code == TypeBailleur_Code.BailleurSocial:
                        bailleur_3 = match_arg_634.value
                        temp_sous_calcul_traitement_255 = bailleur_3.reduction_loyer_solidarite_percue
                    elif match_arg_634.code == TypeBailleur_Code.BailleurPriveAvecConventionnementSocial:
                        _ = match_arg_634.value
                        temp_sous_calcul_traitement_255 = money_of_cents_string("0")
                    elif match_arg_634.code == TypeBailleur_Code.BailleurPrive:
                        _ = match_arg_634.value
                        temp_sous_calcul_traitement_255 = money_of_cents_string("0")
                except EmptyError:
                    temp_sous_calcul_traitement_255 = dead_value
                    raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                         start_line=1488,
                                                         start_column=16,
                                                         end_line=1491,
                                                         end_column=39,
                                                         law_headings=["Article D823-9",
                                                         "Section 1 : Calcul, liquidation et versement des aides",
                                                         "Chapitre III : Modalités de liquidation et de versement",
                                                         "Titre II : Dispositions communes aux aides personnelles au logement",
                                                         "Livre VIII : Aides personnelles au logement",
                                                         "Partie réglementaire",
                                                         "Code de la construction et de l'habitation"]))
                try:
                    temp_sous_calcul_traitement_256 = location_2.logement_meuble_d842_2
                except EmptyError:
                    temp_sous_calcul_traitement_256 = dead_value
                    raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                         start_line=1492,
                                                         start_column=38,
                                                         end_line=1492,
                                                         end_column=69,
                                                         law_headings=["Article D823-9",
                                                         "Section 1 : Calcul, liquidation et versement des aides",
                                                         "Chapitre III : Modalités de liquidation et de versement",
                                                         "Titre II : Dispositions communes aux aides personnelles au logement",
                                                         "Livre VIII : Aides personnelles au logement",
                                                         "Partie réglementaire",
                                                         "Code de la construction et de l'habitation"]))
                try:
                    temp_sous_calcul_traitement_257 = residence_8
                except EmptyError:
                    temp_sous_calcul_traitement_257 = dead_value
                    raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                         start_line=1493,
                                                         start_column=25,
                                                         end_line=1493,
                                                         end_column=34,
                                                         law_headings=["Article D823-9",
                                                         "Section 1 : Calcul, liquidation et versement des aides",
                                                         "Chapitre III : Modalités de liquidation et de versement",
                                                         "Titre II : Dispositions communes aux aides personnelles au logement",
                                                         "Livre VIII : Aides personnelles au logement",
                                                         "Partie réglementaire",
                                                         "Code de la construction et de l'habitation"]))
                try:
                    temp_sous_calcul_traitement_258 = location_2.loyer_principal
                except EmptyError:
                    temp_sous_calcul_traitement_258 = dead_value
                    raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                         start_line=1479,
                                                         start_column=31,
                                                         end_line=1479,
                                                         end_column=55,
                                                         law_headings=["Article D823-9",
                                                         "Section 1 : Calcul, liquidation et versement des aides",
                                                         "Chapitre III : Modalités de liquidation et de versement",
                                                         "Titre II : Dispositions communes aux aides personnelles au logement",
                                                         "Livre VIII : Aides personnelles au logement",
                                                         "Partie réglementaire",
                                                         "Code de la construction et de l'habitation"]))
                try:
                    temp_sous_calcul_traitement_259 = ressources_menage_avec_arrondi
                except EmptyError:
                    temp_sous_calcul_traitement_259 = dead_value
                    raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                         start_line=1474,
                                                         start_column=43,
                                                         end_line=1474,
                                                         end_column=60,
                                                         law_headings=["Article D823-9",
                                                         "Section 1 : Calcul, liquidation et versement des aides",
                                                         "Chapitre III : Modalités de liquidation et de versement",
                                                         "Titre II : Dispositions communes aux aides personnelles au logement",
                                                         "Livre VIII : Aides personnelles au logement",
                                                         "Partie réglementaire",
                                                         "Code de la construction et de l'habitation"]))
                try:
                    temp_sous_calcul_traitement_260 = location_2.beneficiaire_aide_adulte_ou_enfant_handicapes
                except EmptyError:
                    temp_sous_calcul_traitement_260 = dead_value
                    raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                         start_line=1481,
                                                         start_column=15,
                                                         end_line=1481,
                                                         end_column=69,
                                                         law_headings=["Article D823-9",
                                                         "Section 1 : Calcul, liquidation et versement des aides",
                                                         "Chapitre III : Modalités de liquidation et de versement",
                                                         "Titre II : Dispositions communes aux aides personnelles au logement",
                                                         "Livre VIII : Aides personnelles au logement",
                                                         "Partie réglementaire",
                                                         "Code de la construction et de l'habitation"]))
                try:
                    temp_sous_calcul_traitement_261 = date_courante_14
                except EmptyError:
                    temp_sous_calcul_traitement_261 = dead_value
                    raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                         start_line=1477,
                                                         start_column=29,
                                                         end_line=1477,
                                                         end_column=42,
                                                         law_headings=["Article D823-9",
                                                         "Section 1 : Calcul, liquidation et versement des aides",
                                                         "Chapitre III : Modalités de liquidation et de versement",
                                                         "Titre II : Dispositions communes aux aides personnelles au logement",
                                                         "Livre VIII : Aides personnelles au logement",
                                                         "Partie réglementaire",
                                                         "Code de la construction et de l'habitation"]))
                try:
                    temp_sous_calcul_traitement_262 = nombre_personnes_a_charge_11
                except EmptyError:
                    temp_sous_calcul_traitement_262 = dead_value
                    raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                         start_line=1475,
                                                         start_column=41,
                                                         end_line=1475,
                                                         end_column=66,
                                                         law_headings=["Article D823-9",
                                                         "Section 1 : Calcul, liquidation et versement des aides",
                                                         "Chapitre III : Modalités de liquidation et de versement",
                                                         "Titre II : Dispositions communes aux aides personnelles au logement",
                                                         "Livre VIII : Aides personnelles au logement",
                                                         "Partie réglementaire",
                                                         "Code de la construction et de l'habitation"]))
                try:
                    temp_sous_calcul_traitement_263 = situation_familiale_calcul_apl_8
                except EmptyError:
                    temp_sous_calcul_traitement_263 = dead_value
                    raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                         start_line=1478,
                                                         start_column=46,
                                                         end_line=1478,
                                                         end_column=76,
                                                         law_headings=["Article D823-9",
                                                         "Section 1 : Calcul, liquidation et versement des aides",
                                                         "Chapitre III : Modalités de liquidation et de versement",
                                                         "Titre II : Dispositions communes aux aides personnelles au logement",
                                                         "Livre VIII : Aides personnelles au logement",
                                                         "Partie réglementaire",
                                                         "Code de la construction et de l'habitation"]))
                try:
                    temp_sous_calcul_traitement_264 = zone_6
                except EmptyError:
                    temp_sous_calcul_traitement_264 = dead_value
                    raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                         start_line=1476,
                                                         start_column=20,
                                                         end_line=1476,
                                                         end_column=24,
                                                         law_headings=["Article D823-9",
                                                         "Section 1 : Calcul, liquidation et versement des aides",
                                                         "Chapitre III : Modalités de liquidation et de versement",
                                                         "Titre II : Dispositions communes aux aides personnelles au logement",
                                                         "Livre VIII : Aides personnelles au logement",
                                                         "Partie réglementaire",
                                                         "Code de la construction et de l'habitation"]))
                try:
                    temp_sous_calcul_traitement_265 = location_2.logement_est_chambre
                except EmptyError:
                    temp_sous_calcul_traitement_265 = dead_value
                    raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                         start_line=1482,
                                                         start_column=36,
                                                         end_line=1482,
                                                         end_column=65,
                                                         law_headings=["Article D823-9",
                                                         "Section 1 : Calcul, liquidation et versement des aides",
                                                         "Chapitre III : Modalités de liquidation et de versement",
                                                         "Titre II : Dispositions communes aux aides personnelles au logement",
                                                         "Livre VIII : Aides personnelles au logement",
                                                         "Partie réglementaire",
                                                         "Code de la construction et de l'habitation"]))
                try:
                    temp_sous_calcul_traitement_266 = location_2.agees_ou_handicap_adultes_hebergees_onereux_particuliers
                except EmptyError:
                    temp_sous_calcul_traitement_266 = dead_value
                    raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                         start_line=1485,
                                                         start_column=15,
                                                         end_line=1485,
                                                         end_column=80,
                                                         law_headings=["Article D823-9",
                                                         "Section 1 : Calcul, liquidation et versement des aides",
                                                         "Chapitre III : Modalités de liquidation et de versement",
                                                         "Titre II : Dispositions communes aux aides personnelles au logement",
                                                         "Livre VIII : Aides personnelles au logement",
                                                         "Partie réglementaire",
                                                         "Code de la construction et de l'habitation"]))
                try:
                    temp_sous_calcul_traitement_267 = type_aide_2
                except EmptyError:
                    temp_sous_calcul_traitement_267 = dead_value
                    raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                         start_line=1486,
                                                         start_column=25,
                                                         end_line=1486,
                                                         end_column=34,
                                                         law_headings=["Article D823-9",
                                                         "Section 1 : Calcul, liquidation et versement des aides",
                                                         "Chapitre III : Modalités de liquidation et de versement",
                                                         "Titre II : Dispositions communes aux aides personnelles au logement",
                                                         "Livre VIII : Aides personnelles au logement",
                                                         "Partie réglementaire",
                                                         "Code de la construction et de l'habitation"]))
                try:
                    temp_sous_calcul_traitement_268 = location_2.colocation
                except EmptyError:
                    temp_sous_calcul_traitement_268 = dead_value
                    raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                         start_line=1483,
                                                         start_column=26,
                                                         end_line=1483,
                                                         end_column=45,
                                                         law_headings=["Article D823-9",
                                                         "Section 1 : Calcul, liquidation et versement des aides",
                                                         "Chapitre III : Modalités de liquidation et de versement",
                                                         "Titre II : Dispositions communes aux aides personnelles au logement",
                                                         "Livre VIII : Aides personnelles au logement",
                                                         "Partie réglementaire",
                                                         "Code de la construction et de l'habitation"]))
                try:
                    match_arg_635 = location_2.bailleur
                    if match_arg_635.code == TypeBailleur_Code.BailleurSocial:
                        bailleur_4 = match_arg_635.value
                        temp_sous_calcul_traitement_269 = bailleur_4.reduction_loyer_solidarite_percue
                    elif match_arg_635.code == TypeBailleur_Code.BailleurPriveAvecConventionnementSocial:
                        _ = match_arg_635.value
                        temp_sous_calcul_traitement_269 = money_of_cents_string("0")
                    elif match_arg_635.code == TypeBailleur_Code.BailleurPrive:
                        _ = match_arg_635.value
                        temp_sous_calcul_traitement_269 = money_of_cents_string("0")
                except EmptyError:
                    temp_sous_calcul_traitement_269 = dead_value
                    raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                         start_line=1488,
                                                         start_column=16,
                                                         end_line=1491,
                                                         end_column=39,
                                                         law_headings=["Article D823-9",
                                                         "Section 1 : Calcul, liquidation et versement des aides",
                                                         "Chapitre III : Modalités de liquidation et de versement",
                                                         "Titre II : Dispositions communes aux aides personnelles au logement",
                                                         "Livre VIII : Aides personnelles au logement",
                                                         "Partie réglementaire",
                                                         "Code de la construction et de l'habitation"]))
                try:
                    temp_sous_calcul_traitement_270 = location_2.logement_meuble_d842_2
                except EmptyError:
                    temp_sous_calcul_traitement_270 = dead_value
                    raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                         start_line=1492,
                                                         start_column=38,
                                                         end_line=1492,
                                                         end_column=69,
                                                         law_headings=["Article D823-9",
                                                         "Section 1 : Calcul, liquidation et versement des aides",
                                                         "Chapitre III : Modalités de liquidation et de versement",
                                                         "Titre II : Dispositions communes aux aides personnelles au logement",
                                                         "Livre VIII : Aides personnelles au logement",
                                                         "Partie réglementaire",
                                                         "Code de la construction et de l'habitation"]))
                try:
                    temp_sous_calcul_traitement_271 = residence_8
                except EmptyError:
                    temp_sous_calcul_traitement_271 = dead_value
                    raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                         start_line=1493,
                                                         start_column=25,
                                                         end_line=1493,
                                                         end_column=34,
                                                         law_headings=["Article D823-9",
                                                         "Section 1 : Calcul, liquidation et versement des aides",
                                                         "Chapitre III : Modalités de liquidation et de versement",
                                                         "Titre II : Dispositions communes aux aides personnelles au logement",
                                                         "Livre VIII : Aides personnelles au logement",
                                                         "Partie réglementaire",
                                                         "Code de la construction et de l'habitation"]))
                try:
                    temp_sous_calcul_traitement_272 = location_2.loyer_principal
                except EmptyError:
                    temp_sous_calcul_traitement_272 = dead_value
                    raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                         start_line=1479,
                                                         start_column=31,
                                                         end_line=1479,
                                                         end_column=55,
                                                         law_headings=["Article D823-9",
                                                         "Section 1 : Calcul, liquidation et versement des aides",
                                                         "Chapitre III : Modalités de liquidation et de versement",
                                                         "Titre II : Dispositions communes aux aides personnelles au logement",
                                                         "Livre VIII : Aides personnelles au logement",
                                                         "Partie réglementaire",
                                                         "Code de la construction et de l'habitation"]))
                try:
                    temp_sous_calcul_traitement_273 = ressources_menage_avec_arrondi
                except EmptyError:
                    temp_sous_calcul_traitement_273 = dead_value
                    raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                         start_line=1474,
                                                         start_column=43,
                                                         end_line=1474,
                                                         end_column=60,
                                                         law_headings=["Article D823-9",
                                                         "Section 1 : Calcul, liquidation et versement des aides",
                                                         "Chapitre III : Modalités de liquidation et de versement",
                                                         "Titre II : Dispositions communes aux aides personnelles au logement",
                                                         "Livre VIII : Aides personnelles au logement",
                                                         "Partie réglementaire",
                                                         "Code de la construction et de l'habitation"]))
                try:
                    temp_sous_calcul_traitement_274 = location_2.beneficiaire_aide_adulte_ou_enfant_handicapes
                except EmptyError:
                    temp_sous_calcul_traitement_274 = dead_value
                    raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                         start_line=1481,
                                                         start_column=15,
                                                         end_line=1481,
                                                         end_column=69,
                                                         law_headings=["Article D823-9",
                                                         "Section 1 : Calcul, liquidation et versement des aides",
                                                         "Chapitre III : Modalités de liquidation et de versement",
                                                         "Titre II : Dispositions communes aux aides personnelles au logement",
                                                         "Livre VIII : Aides personnelles au logement",
                                                         "Partie réglementaire",
                                                         "Code de la construction et de l'habitation"]))
                try:
                    temp_sous_calcul_traitement_275 = date_courante_14
                except EmptyError:
                    temp_sous_calcul_traitement_275 = dead_value
                    raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                         start_line=1477,
                                                         start_column=29,
                                                         end_line=1477,
                                                         end_column=42,
                                                         law_headings=["Article D823-9",
                                                         "Section 1 : Calcul, liquidation et versement des aides",
                                                         "Chapitre III : Modalités de liquidation et de versement",
                                                         "Titre II : Dispositions communes aux aides personnelles au logement",
                                                         "Livre VIII : Aides personnelles au logement",
                                                         "Partie réglementaire",
                                                         "Code de la construction et de l'habitation"]))
                try:
                    temp_sous_calcul_traitement_276 = nombre_personnes_a_charge_11
                except EmptyError:
                    temp_sous_calcul_traitement_276 = dead_value
                    raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                         start_line=1475,
                                                         start_column=41,
                                                         end_line=1475,
                                                         end_column=66,
                                                         law_headings=["Article D823-9",
                                                         "Section 1 : Calcul, liquidation et versement des aides",
                                                         "Chapitre III : Modalités de liquidation et de versement",
                                                         "Titre II : Dispositions communes aux aides personnelles au logement",
                                                         "Livre VIII : Aides personnelles au logement",
                                                         "Partie réglementaire",
                                                         "Code de la construction et de l'habitation"]))
                try:
                    temp_sous_calcul_traitement_277 = situation_familiale_calcul_apl_8
                except EmptyError:
                    temp_sous_calcul_traitement_277 = dead_value
                    raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                         start_line=1478,
                                                         start_column=46,
                                                         end_line=1478,
                                                         end_column=76,
                                                         law_headings=["Article D823-9",
                                                         "Section 1 : Calcul, liquidation et versement des aides",
                                                         "Chapitre III : Modalités de liquidation et de versement",
                                                         "Titre II : Dispositions communes aux aides personnelles au logement",
                                                         "Livre VIII : Aides personnelles au logement",
                                                         "Partie réglementaire",
                                                         "Code de la construction et de l'habitation"]))
                try:
                    temp_sous_calcul_traitement_278 = zone_6
                except EmptyError:
                    temp_sous_calcul_traitement_278 = dead_value
                    raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                         start_line=1476,
                                                         start_column=20,
                                                         end_line=1476,
                                                         end_column=24,
                                                         law_headings=["Article D823-9",
                                                         "Section 1 : Calcul, liquidation et versement des aides",
                                                         "Chapitre III : Modalités de liquidation et de versement",
                                                         "Titre II : Dispositions communes aux aides personnelles au logement",
                                                         "Livre VIII : Aides personnelles au logement",
                                                         "Partie réglementaire",
                                                         "Code de la construction et de l'habitation"]))
                try:
                    temp_sous_calcul_traitement_279 = location_2.logement_est_chambre
                except EmptyError:
                    temp_sous_calcul_traitement_279 = dead_value
                    raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                         start_line=1482,
                                                         start_column=36,
                                                         end_line=1482,
                                                         end_column=65,
                                                         law_headings=["Article D823-9",
                                                         "Section 1 : Calcul, liquidation et versement des aides",
                                                         "Chapitre III : Modalités de liquidation et de versement",
                                                         "Titre II : Dispositions communes aux aides personnelles au logement",
                                                         "Livre VIII : Aides personnelles au logement",
                                                         "Partie réglementaire",
                                                         "Code de la construction et de l'habitation"]))
                try:
                    temp_sous_calcul_traitement_280 = location_2.agees_ou_handicap_adultes_hebergees_onereux_particuliers
                except EmptyError:
                    temp_sous_calcul_traitement_280 = dead_value
                    raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                         start_line=1485,
                                                         start_column=15,
                                                         end_line=1485,
                                                         end_column=80,
                                                         law_headings=["Article D823-9",
                                                         "Section 1 : Calcul, liquidation et versement des aides",
                                                         "Chapitre III : Modalités de liquidation et de versement",
                                                         "Titre II : Dispositions communes aux aides personnelles au logement",
                                                         "Livre VIII : Aides personnelles au logement",
                                                         "Partie réglementaire",
                                                         "Code de la construction et de l'habitation"]))
                try:
                    temp_sous_calcul_traitement_281 = type_aide_2
                except EmptyError:
                    temp_sous_calcul_traitement_281 = dead_value
                    raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                         start_line=1486,
                                                         start_column=25,
                                                         end_line=1486,
                                                         end_column=34,
                                                         law_headings=["Article D823-9",
                                                         "Section 1 : Calcul, liquidation et versement des aides",
                                                         "Chapitre III : Modalités de liquidation et de versement",
                                                         "Titre II : Dispositions communes aux aides personnelles au logement",
                                                         "Livre VIII : Aides personnelles au logement",
                                                         "Partie réglementaire",
                                                         "Code de la construction et de l'habitation"]))
                try:
                    temp_sous_calcul_traitement_282 = location_2.colocation
                except EmptyError:
                    temp_sous_calcul_traitement_282 = dead_value
                    raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                         start_line=1483,
                                                         start_column=26,
                                                         end_line=1483,
                                                         end_column=45,
                                                         law_headings=["Article D823-9",
                                                         "Section 1 : Calcul, liquidation et versement des aides",
                                                         "Chapitre III : Modalités de liquidation et de versement",
                                                         "Titre II : Dispositions communes aux aides personnelles au logement",
                                                         "Livre VIII : Aides personnelles au logement",
                                                         "Partie réglementaire",
                                                         "Code de la construction et de l'habitation"]))
                try:
                    match_arg_636 = location_2.bailleur
                    if match_arg_636.code == TypeBailleur_Code.BailleurSocial:
                        bailleur_5 = match_arg_636.value
                        temp_sous_calcul_traitement_283 = bailleur_5.reduction_loyer_solidarite_percue
                    elif match_arg_636.code == TypeBailleur_Code.BailleurPriveAvecConventionnementSocial:
                        _ = match_arg_636.value
                        temp_sous_calcul_traitement_283 = money_of_cents_string("0")
                    elif match_arg_636.code == TypeBailleur_Code.BailleurPrive:
                        _ = match_arg_636.value
                        temp_sous_calcul_traitement_283 = money_of_cents_string("0")
                except EmptyError:
                    temp_sous_calcul_traitement_283 = dead_value
                    raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                         start_line=1488,
                                                         start_column=16,
                                                         end_line=1491,
                                                         end_column=39,
                                                         law_headings=["Article D823-9",
                                                         "Section 1 : Calcul, liquidation et versement des aides",
                                                         "Chapitre III : Modalités de liquidation et de versement",
                                                         "Titre II : Dispositions communes aux aides personnelles au logement",
                                                         "Livre VIII : Aides personnelles au logement",
                                                         "Partie réglementaire",
                                                         "Code de la construction et de l'habitation"]))
                try:
                    temp_sous_calcul_traitement_284 = location_2.logement_meuble_d842_2
                except EmptyError:
                    temp_sous_calcul_traitement_284 = dead_value
                    raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                         start_line=1492,
                                                         start_column=38,
                                                         end_line=1492,
                                                         end_column=69,
                                                         law_headings=["Article D823-9",
                                                         "Section 1 : Calcul, liquidation et versement des aides",
                                                         "Chapitre III : Modalités de liquidation et de versement",
                                                         "Titre II : Dispositions communes aux aides personnelles au logement",
                                                         "Livre VIII : Aides personnelles au logement",
                                                         "Partie réglementaire",
                                                         "Code de la construction et de l'habitation"]))
                try:
                    temp_sous_calcul_traitement_285 = residence_8
                except EmptyError:
                    temp_sous_calcul_traitement_285 = dead_value
                    raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                         start_line=1493,
                                                         start_column=25,
                                                         end_line=1493,
                                                         end_column=34,
                                                         law_headings=["Article D823-9",
                                                         "Section 1 : Calcul, liquidation et versement des aides",
                                                         "Chapitre III : Modalités de liquidation et de versement",
                                                         "Titre II : Dispositions communes aux aides personnelles au logement",
                                                         "Livre VIII : Aides personnelles au logement",
                                                         "Partie réglementaire",
                                                         "Code de la construction et de l'habitation"]))
                try:
                    temp_sous_calcul_traitement_286 = location_2.loyer_principal
                except EmptyError:
                    temp_sous_calcul_traitement_286 = dead_value
                    raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                         start_line=1479,
                                                         start_column=31,
                                                         end_line=1479,
                                                         end_column=55,
                                                         law_headings=["Article D823-9",
                                                         "Section 1 : Calcul, liquidation et versement des aides",
                                                         "Chapitre III : Modalités de liquidation et de versement",
                                                         "Titre II : Dispositions communes aux aides personnelles au logement",
                                                         "Livre VIII : Aides personnelles au logement",
                                                         "Partie réglementaire",
                                                         "Code de la construction et de l'habitation"]))
                try:
                    temp_sous_calcul_traitement_287 = ressources_menage_avec_arrondi
                except EmptyError:
                    temp_sous_calcul_traitement_287 = dead_value
                    raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                         start_line=1474,
                                                         start_column=43,
                                                         end_line=1474,
                                                         end_column=60,
                                                         law_headings=["Article D823-9",
                                                         "Section 1 : Calcul, liquidation et versement des aides",
                                                         "Chapitre III : Modalités de liquidation et de versement",
                                                         "Titre II : Dispositions communes aux aides personnelles au logement",
                                                         "Livre VIII : Aides personnelles au logement",
                                                         "Partie réglementaire",
                                                         "Code de la construction et de l'habitation"]))
                try:
                    temp_sous_calcul_traitement_288 = location_2.beneficiaire_aide_adulte_ou_enfant_handicapes
                except EmptyError:
                    temp_sous_calcul_traitement_288 = dead_value
                    raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                         start_line=1481,
                                                         start_column=15,
                                                         end_line=1481,
                                                         end_column=69,
                                                         law_headings=["Article D823-9",
                                                         "Section 1 : Calcul, liquidation et versement des aides",
                                                         "Chapitre III : Modalités de liquidation et de versement",
                                                         "Titre II : Dispositions communes aux aides personnelles au logement",
                                                         "Livre VIII : Aides personnelles au logement",
                                                         "Partie réglementaire",
                                                         "Code de la construction et de l'habitation"]))
                try:
                    temp_sous_calcul_traitement_289 = date_courante_14
                except EmptyError:
                    temp_sous_calcul_traitement_289 = dead_value
                    raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                         start_line=1477,
                                                         start_column=29,
                                                         end_line=1477,
                                                         end_column=42,
                                                         law_headings=["Article D823-9",
                                                         "Section 1 : Calcul, liquidation et versement des aides",
                                                         "Chapitre III : Modalités de liquidation et de versement",
                                                         "Titre II : Dispositions communes aux aides personnelles au logement",
                                                         "Livre VIII : Aides personnelles au logement",
                                                         "Partie réglementaire",
                                                         "Code de la construction et de l'habitation"]))
                try:
                    temp_sous_calcul_traitement_290 = nombre_personnes_a_charge_11
                except EmptyError:
                    temp_sous_calcul_traitement_290 = dead_value
                    raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                         start_line=1475,
                                                         start_column=41,
                                                         end_line=1475,
                                                         end_column=66,
                                                         law_headings=["Article D823-9",
                                                         "Section 1 : Calcul, liquidation et versement des aides",
                                                         "Chapitre III : Modalités de liquidation et de versement",
                                                         "Titre II : Dispositions communes aux aides personnelles au logement",
                                                         "Livre VIII : Aides personnelles au logement",
                                                         "Partie réglementaire",
                                                         "Code de la construction et de l'habitation"]))
                try:
                    temp_sous_calcul_traitement_291 = situation_familiale_calcul_apl_8
                except EmptyError:
                    temp_sous_calcul_traitement_291 = dead_value
                    raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                         start_line=1478,
                                                         start_column=46,
                                                         end_line=1478,
                                                         end_column=76,
                                                         law_headings=["Article D823-9",
                                                         "Section 1 : Calcul, liquidation et versement des aides",
                                                         "Chapitre III : Modalités de liquidation et de versement",
                                                         "Titre II : Dispositions communes aux aides personnelles au logement",
                                                         "Livre VIII : Aides personnelles au logement",
                                                         "Partie réglementaire",
                                                         "Code de la construction et de l'habitation"]))
                try:
                    temp_sous_calcul_traitement_292 = zone_6
                except EmptyError:
                    temp_sous_calcul_traitement_292 = dead_value
                    raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                         start_line=1476,
                                                         start_column=20,
                                                         end_line=1476,
                                                         end_column=24,
                                                         law_headings=["Article D823-9",
                                                         "Section 1 : Calcul, liquidation et versement des aides",
                                                         "Chapitre III : Modalités de liquidation et de versement",
                                                         "Titre II : Dispositions communes aux aides personnelles au logement",
                                                         "Livre VIII : Aides personnelles au logement",
                                                         "Partie réglementaire",
                                                         "Code de la construction et de l'habitation"]))
                try:
                    temp_sous_calcul_traitement_293 = location_2.logement_est_chambre
                except EmptyError:
                    temp_sous_calcul_traitement_293 = dead_value
                    raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                         start_line=1482,
                                                         start_column=36,
                                                         end_line=1482,
                                                         end_column=65,
                                                         law_headings=["Article D823-9",
                                                         "Section 1 : Calcul, liquidation et versement des aides",
                                                         "Chapitre III : Modalités de liquidation et de versement",
                                                         "Titre II : Dispositions communes aux aides personnelles au logement",
                                                         "Livre VIII : Aides personnelles au logement",
                                                         "Partie réglementaire",
                                                         "Code de la construction et de l'habitation"]))
                try:
                    temp_sous_calcul_traitement_294 = location_2.agees_ou_handicap_adultes_hebergees_onereux_particuliers
                except EmptyError:
                    temp_sous_calcul_traitement_294 = dead_value
                    raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                         start_line=1485,
                                                         start_column=15,
                                                         end_line=1485,
                                                         end_column=80,
                                                         law_headings=["Article D823-9",
                                                         "Section 1 : Calcul, liquidation et versement des aides",
                                                         "Chapitre III : Modalités de liquidation et de versement",
                                                         "Titre II : Dispositions communes aux aides personnelles au logement",
                                                         "Livre VIII : Aides personnelles au logement",
                                                         "Partie réglementaire",
                                                         "Code de la construction et de l'habitation"]))
                try:
                    temp_sous_calcul_traitement_295 = type_aide_2
                except EmptyError:
                    temp_sous_calcul_traitement_295 = dead_value
                    raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                         start_line=1486,
                                                         start_column=25,
                                                         end_line=1486,
                                                         end_column=34,
                                                         law_headings=["Article D823-9",
                                                         "Section 1 : Calcul, liquidation et versement des aides",
                                                         "Chapitre III : Modalités de liquidation et de versement",
                                                         "Titre II : Dispositions communes aux aides personnelles au logement",
                                                         "Livre VIII : Aides personnelles au logement",
                                                         "Partie réglementaire",
                                                         "Code de la construction et de l'habitation"]))
                try:
                    temp_sous_calcul_traitement_296 = location_2.colocation
                except EmptyError:
                    temp_sous_calcul_traitement_296 = dead_value
                    raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                         start_line=1483,
                                                         start_column=26,
                                                         end_line=1483,
                                                         end_column=45,
                                                         law_headings=["Article D823-9",
                                                         "Section 1 : Calcul, liquidation et versement des aides",
                                                         "Chapitre III : Modalités de liquidation et de versement",
                                                         "Titre II : Dispositions communes aux aides personnelles au logement",
                                                         "Livre VIII : Aides personnelles au logement",
                                                         "Partie réglementaire",
                                                         "Code de la construction et de l'habitation"]))
                try:
                    match_arg_637 = location_2.bailleur
                    if match_arg_637.code == TypeBailleur_Code.BailleurSocial:
                        bailleur_6 = match_arg_637.value
                        temp_sous_calcul_traitement_297 = bailleur_6.reduction_loyer_solidarite_percue
                    elif match_arg_637.code == TypeBailleur_Code.BailleurPriveAvecConventionnementSocial:
                        _ = match_arg_637.value
                        temp_sous_calcul_traitement_297 = money_of_cents_string("0")
                    elif match_arg_637.code == TypeBailleur_Code.BailleurPrive:
                        _ = match_arg_637.value
                        temp_sous_calcul_traitement_297 = money_of_cents_string("0")
                except EmptyError:
                    temp_sous_calcul_traitement_297 = dead_value
                    raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                         start_line=1488,
                                                         start_column=16,
                                                         end_line=1491,
                                                         end_column=39,
                                                         law_headings=["Article D823-9",
                                                         "Section 1 : Calcul, liquidation et versement des aides",
                                                         "Chapitre III : Modalités de liquidation et de versement",
                                                         "Titre II : Dispositions communes aux aides personnelles au logement",
                                                         "Livre VIII : Aides personnelles au logement",
                                                         "Partie réglementaire",
                                                         "Code de la construction et de l'habitation"]))
                try:
                    temp_sous_calcul_traitement_298 = location_2.logement_meuble_d842_2
                except EmptyError:
                    temp_sous_calcul_traitement_298 = dead_value
                    raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                         start_line=1492,
                                                         start_column=38,
                                                         end_line=1492,
                                                         end_column=69,
                                                         law_headings=["Article D823-9",
                                                         "Section 1 : Calcul, liquidation et versement des aides",
                                                         "Chapitre III : Modalités de liquidation et de versement",
                                                         "Titre II : Dispositions communes aux aides personnelles au logement",
                                                         "Livre VIII : Aides personnelles au logement",
                                                         "Partie réglementaire",
                                                         "Code de la construction et de l'habitation"]))
                try:
                    temp_sous_calcul_traitement_299 = residence_8
                except EmptyError:
                    temp_sous_calcul_traitement_299 = dead_value
                    raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                         start_line=1493,
                                                         start_column=25,
                                                         end_line=1493,
                                                         end_column=34,
                                                         law_headings=["Article D823-9",
                                                         "Section 1 : Calcul, liquidation et versement des aides",
                                                         "Chapitre III : Modalités de liquidation et de versement",
                                                         "Titre II : Dispositions communes aux aides personnelles au logement",
                                                         "Livre VIII : Aides personnelles au logement",
                                                         "Partie réglementaire",
                                                         "Code de la construction et de l'habitation"]))
                def temp_sous_calcul_traitement_300(param0_3:Money):
                    try:
                        temp_sous_calcul_traitement_301 = location_2.loyer_principal
                    except EmptyError:
                        temp_sous_calcul_traitement_301 = dead_value
                        raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                             start_line=1479,
                                                             start_column=31,
                                                             end_line=1479,
                                                             end_column=55,
                                                             law_headings=["Article D823-9",
                                                             "Section 1 : Calcul, liquidation et versement des aides",
                                                             "Chapitre III : Modalités de liquidation et de versement",
                                                             "Titre II : Dispositions communes aux aides personnelles au logement",
                                                             "Livre VIII : Aides personnelles au logement",
                                                             "Partie réglementaire",
                                                             "Code de la construction et de l'habitation"]))
                    try:
                        temp_sous_calcul_traitement_302 = ressources_menage_avec_arrondi
                    except EmptyError:
                        temp_sous_calcul_traitement_302 = dead_value
                        raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                             start_line=1474,
                                                             start_column=43,
                                                             end_line=1474,
                                                             end_column=60,
                                                             law_headings=["Article D823-9",
                                                             "Section 1 : Calcul, liquidation et versement des aides",
                                                             "Chapitre III : Modalités de liquidation et de versement",
                                                             "Titre II : Dispositions communes aux aides personnelles au logement",
                                                             "Livre VIII : Aides personnelles au logement",
                                                             "Partie réglementaire",
                                                             "Code de la construction et de l'habitation"]))
                    try:
                        temp_sous_calcul_traitement_303 = location_2.beneficiaire_aide_adulte_ou_enfant_handicapes
                    except EmptyError:
                        temp_sous_calcul_traitement_303 = dead_value
                        raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                             start_line=1481,
                                                             start_column=15,
                                                             end_line=1481,
                                                             end_column=69,
                                                             law_headings=["Article D823-9",
                                                             "Section 1 : Calcul, liquidation et versement des aides",
                                                             "Chapitre III : Modalités de liquidation et de versement",
                                                             "Titre II : Dispositions communes aux aides personnelles au logement",
                                                             "Livre VIII : Aides personnelles au logement",
                                                             "Partie réglementaire",
                                                             "Code de la construction et de l'habitation"]))
                    try:
                        temp_sous_calcul_traitement_304 = date_courante_14
                    except EmptyError:
                        temp_sous_calcul_traitement_304 = dead_value
                        raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                             start_line=1477,
                                                             start_column=29,
                                                             end_line=1477,
                                                             end_column=42,
                                                             law_headings=["Article D823-9",
                                                             "Section 1 : Calcul, liquidation et versement des aides",
                                                             "Chapitre III : Modalités de liquidation et de versement",
                                                             "Titre II : Dispositions communes aux aides personnelles au logement",
                                                             "Livre VIII : Aides personnelles au logement",
                                                             "Partie réglementaire",
                                                             "Code de la construction et de l'habitation"]))
                    try:
                        temp_sous_calcul_traitement_305 = nombre_personnes_a_charge_11
                    except EmptyError:
                        temp_sous_calcul_traitement_305 = dead_value
                        raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                             start_line=1475,
                                                             start_column=41,
                                                             end_line=1475,
                                                             end_column=66,
                                                             law_headings=["Article D823-9",
                                                             "Section 1 : Calcul, liquidation et versement des aides",
                                                             "Chapitre III : Modalités de liquidation et de versement",
                                                             "Titre II : Dispositions communes aux aides personnelles au logement",
                                                             "Livre VIII : Aides personnelles au logement",
                                                             "Partie réglementaire",
                                                             "Code de la construction et de l'habitation"]))
                    try:
                        temp_sous_calcul_traitement_306 = situation_familiale_calcul_apl_8
                    except EmptyError:
                        temp_sous_calcul_traitement_306 = dead_value
                        raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                             start_line=1478,
                                                             start_column=46,
                                                             end_line=1478,
                                                             end_column=76,
                                                             law_headings=["Article D823-9",
                                                             "Section 1 : Calcul, liquidation et versement des aides",
                                                             "Chapitre III : Modalités de liquidation et de versement",
                                                             "Titre II : Dispositions communes aux aides personnelles au logement",
                                                             "Livre VIII : Aides personnelles au logement",
                                                             "Partie réglementaire",
                                                             "Code de la construction et de l'habitation"]))
                    try:
                        temp_sous_calcul_traitement_307 = zone_6
                    except EmptyError:
                        temp_sous_calcul_traitement_307 = dead_value
                        raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                             start_line=1476,
                                                             start_column=20,
                                                             end_line=1476,
                                                             end_column=24,
                                                             law_headings=["Article D823-9",
                                                             "Section 1 : Calcul, liquidation et versement des aides",
                                                             "Chapitre III : Modalités de liquidation et de versement",
                                                             "Titre II : Dispositions communes aux aides personnelles au logement",
                                                             "Livre VIII : Aides personnelles au logement",
                                                             "Partie réglementaire",
                                                             "Code de la construction et de l'habitation"]))
                    try:
                        temp_sous_calcul_traitement_308 = location_2.logement_est_chambre
                    except EmptyError:
                        temp_sous_calcul_traitement_308 = dead_value
                        raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                             start_line=1482,
                                                             start_column=36,
                                                             end_line=1482,
                                                             end_column=65,
                                                             law_headings=["Article D823-9",
                                                             "Section 1 : Calcul, liquidation et versement des aides",
                                                             "Chapitre III : Modalités de liquidation et de versement",
                                                             "Titre II : Dispositions communes aux aides personnelles au logement",
                                                             "Livre VIII : Aides personnelles au logement",
                                                             "Partie réglementaire",
                                                             "Code de la construction et de l'habitation"]))
                    try:
                        temp_sous_calcul_traitement_309 = location_2.agees_ou_handicap_adultes_hebergees_onereux_particuliers
                    except EmptyError:
                        temp_sous_calcul_traitement_309 = dead_value
                        raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                             start_line=1485,
                                                             start_column=15,
                                                             end_line=1485,
                                                             end_column=80,
                                                             law_headings=["Article D823-9",
                                                             "Section 1 : Calcul, liquidation et versement des aides",
                                                             "Chapitre III : Modalités de liquidation et de versement",
                                                             "Titre II : Dispositions communes aux aides personnelles au logement",
                                                             "Livre VIII : Aides personnelles au logement",
                                                             "Partie réglementaire",
                                                             "Code de la construction et de l'habitation"]))
                    try:
                        temp_sous_calcul_traitement_310 = type_aide_2
                    except EmptyError:
                        temp_sous_calcul_traitement_310 = dead_value
                        raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                             start_line=1486,
                                                             start_column=25,
                                                             end_line=1486,
                                                             end_column=34,
                                                             law_headings=["Article D823-9",
                                                             "Section 1 : Calcul, liquidation et versement des aides",
                                                             "Chapitre III : Modalités de liquidation et de versement",
                                                             "Titre II : Dispositions communes aux aides personnelles au logement",
                                                             "Livre VIII : Aides personnelles au logement",
                                                             "Partie réglementaire",
                                                             "Code de la construction et de l'habitation"]))
                    try:
                        temp_sous_calcul_traitement_311 = location_2.colocation
                    except EmptyError:
                        temp_sous_calcul_traitement_311 = dead_value
                        raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                             start_line=1483,
                                                             start_column=26,
                                                             end_line=1483,
                                                             end_column=45,
                                                             law_headings=["Article D823-9",
                                                             "Section 1 : Calcul, liquidation et versement des aides",
                                                             "Chapitre III : Modalités de liquidation et de versement",
                                                             "Titre II : Dispositions communes aux aides personnelles au logement",
                                                             "Livre VIII : Aides personnelles au logement",
                                                             "Partie réglementaire",
                                                             "Code de la construction et de l'habitation"]))
                    try:
                        match_arg_638 = location_2.bailleur
                        if match_arg_638.code == TypeBailleur_Code.BailleurSocial:
                            bailleur_7 = match_arg_638.value
                            temp_sous_calcul_traitement_312 = bailleur_7.reduction_loyer_solidarite_percue
                        elif match_arg_638.code == TypeBailleur_Code.BailleurPriveAvecConventionnementSocial:
                            _ = match_arg_638.value
                            temp_sous_calcul_traitement_312 = money_of_cents_string("0")
                        elif match_arg_638.code == TypeBailleur_Code.BailleurPrive:
                            _ = match_arg_638.value
                            temp_sous_calcul_traitement_312 = money_of_cents_string("0")
                    except EmptyError:
                        temp_sous_calcul_traitement_312 = dead_value
                        raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                             start_line=1488,
                                                             start_column=16,
                                                             end_line=1491,
                                                             end_column=39,
                                                             law_headings=["Article D823-9",
                                                             "Section 1 : Calcul, liquidation et versement des aides",
                                                             "Chapitre III : Modalités de liquidation et de versement",
                                                             "Titre II : Dispositions communes aux aides personnelles au logement",
                                                             "Livre VIII : Aides personnelles au logement",
                                                             "Partie réglementaire",
                                                             "Code de la construction et de l'habitation"]))
                    try:
                        temp_sous_calcul_traitement_313 = location_2.logement_meuble_d842_2
                    except EmptyError:
                        temp_sous_calcul_traitement_313 = dead_value
                        raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                             start_line=1492,
                                                             start_column=38,
                                                             end_line=1492,
                                                             end_column=69,
                                                             law_headings=["Article D823-9",
                                                             "Section 1 : Calcul, liquidation et versement des aides",
                                                             "Chapitre III : Modalités de liquidation et de versement",
                                                             "Titre II : Dispositions communes aux aides personnelles au logement",
                                                             "Livre VIII : Aides personnelles au logement",
                                                             "Partie réglementaire",
                                                             "Code de la construction et de l'habitation"]))
                    try:
                        temp_sous_calcul_traitement_314 = residence_8
                    except EmptyError:
                        temp_sous_calcul_traitement_314 = dead_value
                        raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                             start_line=1493,
                                                             start_column=25,
                                                             end_line=1493,
                                                             end_column=34,
                                                             law_headings=["Article D823-9",
                                                             "Section 1 : Calcul, liquidation et versement des aides",
                                                             "Chapitre III : Modalités de liquidation et de versement",
                                                             "Titre II : Dispositions communes aux aides personnelles au logement",
                                                             "Livre VIII : Aides personnelles au logement",
                                                             "Partie réglementaire",
                                                             "Code de la construction et de l'habitation"]))
                    return calcul_aide_personnalisee_logement_locatif(
                        CalculAidePersonnaliseeLogementLocatifIn(loyer_principal_base_in = temp_sous_calcul_traitement_301,
                        ressources_menage_arrondies_in = temp_sous_calcul_traitement_302,
                        beneficiaire_aide_adulte_ou_enfant_handicapes_in = temp_sous_calcul_traitement_303,
                        date_courante_in = temp_sous_calcul_traitement_304,
                        nombre_personnes_a_charge_in = temp_sous_calcul_traitement_305,
                        situation_familiale_calcul_apl_in = temp_sous_calcul_traitement_306,
                        zone_in = temp_sous_calcul_traitement_307,
                        logement_est_chambre_in = temp_sous_calcul_traitement_308,
                        agees_ou_handicap_adultes_hebergees_onereux_particuliers_in = temp_sous_calcul_traitement_309,
                        type_aide_in = temp_sous_calcul_traitement_310,
                        colocation_in = temp_sous_calcul_traitement_311,
                        reduction_loyer_solidarite_in = temp_sous_calcul_traitement_312,
                        logement_meuble_d842_2_in = temp_sous_calcul_traitement_313,
                        residence_in = temp_sous_calcul_traitement_314)).traitement_aide_finale(
                        param0_3)
                try:
                    temp_sous_calcul_traitement_315 = location_2.loyer_principal
                except EmptyError:
                    temp_sous_calcul_traitement_315 = dead_value
                    raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                         start_line=1479,
                                                         start_column=31,
                                                         end_line=1479,
                                                         end_column=55,
                                                         law_headings=["Article D823-9",
                                                         "Section 1 : Calcul, liquidation et versement des aides",
                                                         "Chapitre III : Modalités de liquidation et de versement",
                                                         "Titre II : Dispositions communes aux aides personnelles au logement",
                                                         "Livre VIII : Aides personnelles au logement",
                                                         "Partie réglementaire",
                                                         "Code de la construction et de l'habitation"]))
                try:
                    temp_sous_calcul_traitement_316 = ressources_menage_avec_arrondi
                except EmptyError:
                    temp_sous_calcul_traitement_316 = dead_value
                    raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                         start_line=1474,
                                                         start_column=43,
                                                         end_line=1474,
                                                         end_column=60,
                                                         law_headings=["Article D823-9",
                                                         "Section 1 : Calcul, liquidation et versement des aides",
                                                         "Chapitre III : Modalités de liquidation et de versement",
                                                         "Titre II : Dispositions communes aux aides personnelles au logement",
                                                         "Livre VIII : Aides personnelles au logement",
                                                         "Partie réglementaire",
                                                         "Code de la construction et de l'habitation"]))
                try:
                    temp_sous_calcul_traitement_317 = location_2.beneficiaire_aide_adulte_ou_enfant_handicapes
                except EmptyError:
                    temp_sous_calcul_traitement_317 = dead_value
                    raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                         start_line=1481,
                                                         start_column=15,
                                                         end_line=1481,
                                                         end_column=69,
                                                         law_headings=["Article D823-9",
                                                         "Section 1 : Calcul, liquidation et versement des aides",
                                                         "Chapitre III : Modalités de liquidation et de versement",
                                                         "Titre II : Dispositions communes aux aides personnelles au logement",
                                                         "Livre VIII : Aides personnelles au logement",
                                                         "Partie réglementaire",
                                                         "Code de la construction et de l'habitation"]))
                try:
                    temp_sous_calcul_traitement_318 = date_courante_14
                except EmptyError:
                    temp_sous_calcul_traitement_318 = dead_value
                    raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                         start_line=1477,
                                                         start_column=29,
                                                         end_line=1477,
                                                         end_column=42,
                                                         law_headings=["Article D823-9",
                                                         "Section 1 : Calcul, liquidation et versement des aides",
                                                         "Chapitre III : Modalités de liquidation et de versement",
                                                         "Titre II : Dispositions communes aux aides personnelles au logement",
                                                         "Livre VIII : Aides personnelles au logement",
                                                         "Partie réglementaire",
                                                         "Code de la construction et de l'habitation"]))
                try:
                    temp_sous_calcul_traitement_319 = nombre_personnes_a_charge_11
                except EmptyError:
                    temp_sous_calcul_traitement_319 = dead_value
                    raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                         start_line=1475,
                                                         start_column=41,
                                                         end_line=1475,
                                                         end_column=66,
                                                         law_headings=["Article D823-9",
                                                         "Section 1 : Calcul, liquidation et versement des aides",
                                                         "Chapitre III : Modalités de liquidation et de versement",
                                                         "Titre II : Dispositions communes aux aides personnelles au logement",
                                                         "Livre VIII : Aides personnelles au logement",
                                                         "Partie réglementaire",
                                                         "Code de la construction et de l'habitation"]))
                try:
                    temp_sous_calcul_traitement_320 = situation_familiale_calcul_apl_8
                except EmptyError:
                    temp_sous_calcul_traitement_320 = dead_value
                    raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                         start_line=1478,
                                                         start_column=46,
                                                         end_line=1478,
                                                         end_column=76,
                                                         law_headings=["Article D823-9",
                                                         "Section 1 : Calcul, liquidation et versement des aides",
                                                         "Chapitre III : Modalités de liquidation et de versement",
                                                         "Titre II : Dispositions communes aux aides personnelles au logement",
                                                         "Livre VIII : Aides personnelles au logement",
                                                         "Partie réglementaire",
                                                         "Code de la construction et de l'habitation"]))
                try:
                    temp_sous_calcul_traitement_321 = zone_6
                except EmptyError:
                    temp_sous_calcul_traitement_321 = dead_value
                    raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                         start_line=1476,
                                                         start_column=20,
                                                         end_line=1476,
                                                         end_column=24,
                                                         law_headings=["Article D823-9",
                                                         "Section 1 : Calcul, liquidation et versement des aides",
                                                         "Chapitre III : Modalités de liquidation et de versement",
                                                         "Titre II : Dispositions communes aux aides personnelles au logement",
                                                         "Livre VIII : Aides personnelles au logement",
                                                         "Partie réglementaire",
                                                         "Code de la construction et de l'habitation"]))
                try:
                    temp_sous_calcul_traitement_322 = location_2.logement_est_chambre
                except EmptyError:
                    temp_sous_calcul_traitement_322 = dead_value
                    raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                         start_line=1482,
                                                         start_column=36,
                                                         end_line=1482,
                                                         end_column=65,
                                                         law_headings=["Article D823-9",
                                                         "Section 1 : Calcul, liquidation et versement des aides",
                                                         "Chapitre III : Modalités de liquidation et de versement",
                                                         "Titre II : Dispositions communes aux aides personnelles au logement",
                                                         "Livre VIII : Aides personnelles au logement",
                                                         "Partie réglementaire",
                                                         "Code de la construction et de l'habitation"]))
                try:
                    temp_sous_calcul_traitement_323 = location_2.agees_ou_handicap_adultes_hebergees_onereux_particuliers
                except EmptyError:
                    temp_sous_calcul_traitement_323 = dead_value
                    raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                         start_line=1485,
                                                         start_column=15,
                                                         end_line=1485,
                                                         end_column=80,
                                                         law_headings=["Article D823-9",
                                                         "Section 1 : Calcul, liquidation et versement des aides",
                                                         "Chapitre III : Modalités de liquidation et de versement",
                                                         "Titre II : Dispositions communes aux aides personnelles au logement",
                                                         "Livre VIII : Aides personnelles au logement",
                                                         "Partie réglementaire",
                                                         "Code de la construction et de l'habitation"]))
                try:
                    temp_sous_calcul_traitement_324 = type_aide_2
                except EmptyError:
                    temp_sous_calcul_traitement_324 = dead_value
                    raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                         start_line=1486,
                                                         start_column=25,
                                                         end_line=1486,
                                                         end_column=34,
                                                         law_headings=["Article D823-9",
                                                         "Section 1 : Calcul, liquidation et versement des aides",
                                                         "Chapitre III : Modalités de liquidation et de versement",
                                                         "Titre II : Dispositions communes aux aides personnelles au logement",
                                                         "Livre VIII : Aides personnelles au logement",
                                                         "Partie réglementaire",
                                                         "Code de la construction et de l'habitation"]))
                try:
                    temp_sous_calcul_traitement_325 = location_2.colocation
                except EmptyError:
                    temp_sous_calcul_traitement_325 = dead_value
                    raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                         start_line=1483,
                                                         start_column=26,
                                                         end_line=1483,
                                                         end_column=45,
                                                         law_headings=["Article D823-9",
                                                         "Section 1 : Calcul, liquidation et versement des aides",
                                                         "Chapitre III : Modalités de liquidation et de versement",
                                                         "Titre II : Dispositions communes aux aides personnelles au logement",
                                                         "Livre VIII : Aides personnelles au logement",
                                                         "Partie réglementaire",
                                                         "Code de la construction et de l'habitation"]))
                try:
                    match_arg_639 = location_2.bailleur
                    if match_arg_639.code == TypeBailleur_Code.BailleurSocial:
                        bailleur_8 = match_arg_639.value
                        temp_sous_calcul_traitement_326 = bailleur_8.reduction_loyer_solidarite_percue
                    elif match_arg_639.code == TypeBailleur_Code.BailleurPriveAvecConventionnementSocial:
                        _ = match_arg_639.value
                        temp_sous_calcul_traitement_326 = money_of_cents_string("0")
                    elif match_arg_639.code == TypeBailleur_Code.BailleurPrive:
                        _ = match_arg_639.value
                        temp_sous_calcul_traitement_326 = money_of_cents_string("0")
                except EmptyError:
                    temp_sous_calcul_traitement_326 = dead_value
                    raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                         start_line=1488,
                                                         start_column=16,
                                                         end_line=1491,
                                                         end_column=39,
                                                         law_headings=["Article D823-9",
                                                         "Section 1 : Calcul, liquidation et versement des aides",
                                                         "Chapitre III : Modalités de liquidation et de versement",
                                                         "Titre II : Dispositions communes aux aides personnelles au logement",
                                                         "Livre VIII : Aides personnelles au logement",
                                                         "Partie réglementaire",
                                                         "Code de la construction et de l'habitation"]))
                try:
                    temp_sous_calcul_traitement_327 = location_2.logement_meuble_d842_2
                except EmptyError:
                    temp_sous_calcul_traitement_327 = dead_value
                    raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                         start_line=1492,
                                                         start_column=38,
                                                         end_line=1492,
                                                         end_column=69,
                                                         law_headings=["Article D823-9",
                                                         "Section 1 : Calcul, liquidation et versement des aides",
                                                         "Chapitre III : Modalités de liquidation et de versement",
                                                         "Titre II : Dispositions communes aux aides personnelles au logement",
                                                         "Livre VIII : Aides personnelles au logement",
                                                         "Partie réglementaire",
                                                         "Code de la construction et de l'habitation"]))
                try:
                    temp_sous_calcul_traitement_328 = residence_8
                except EmptyError:
                    temp_sous_calcul_traitement_328 = dead_value
                    raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                         start_line=1493,
                                                         start_column=25,
                                                         end_line=1493,
                                                         end_column=34,
                                                         law_headings=["Article D823-9",
                                                         "Section 1 : Calcul, liquidation et versement des aides",
                                                         "Chapitre III : Modalités de liquidation et de versement",
                                                         "Titre II : Dispositions communes aux aides personnelles au logement",
                                                         "Livre VIII : Aides personnelles au logement",
                                                         "Partie réglementaire",
                                                         "Code de la construction et de l'habitation"]))
                try:
                    temp_sous_calcul_traitement_329 = location_2.loyer_principal
                except EmptyError:
                    temp_sous_calcul_traitement_329 = dead_value
                    raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                         start_line=1479,
                                                         start_column=31,
                                                         end_line=1479,
                                                         end_column=55,
                                                         law_headings=["Article D823-9",
                                                         "Section 1 : Calcul, liquidation et versement des aides",
                                                         "Chapitre III : Modalités de liquidation et de versement",
                                                         "Titre II : Dispositions communes aux aides personnelles au logement",
                                                         "Livre VIII : Aides personnelles au logement",
                                                         "Partie réglementaire",
                                                         "Code de la construction et de l'habitation"]))
                try:
                    temp_sous_calcul_traitement_330 = ressources_menage_avec_arrondi
                except EmptyError:
                    temp_sous_calcul_traitement_330 = dead_value
                    raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                         start_line=1474,
                                                         start_column=43,
                                                         end_line=1474,
                                                         end_column=60,
                                                         law_headings=["Article D823-9",
                                                         "Section 1 : Calcul, liquidation et versement des aides",
                                                         "Chapitre III : Modalités de liquidation et de versement",
                                                         "Titre II : Dispositions communes aux aides personnelles au logement",
                                                         "Livre VIII : Aides personnelles au logement",
                                                         "Partie réglementaire",
                                                         "Code de la construction et de l'habitation"]))
                try:
                    temp_sous_calcul_traitement_331 = location_2.beneficiaire_aide_adulte_ou_enfant_handicapes
                except EmptyError:
                    temp_sous_calcul_traitement_331 = dead_value
                    raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                         start_line=1481,
                                                         start_column=15,
                                                         end_line=1481,
                                                         end_column=69,
                                                         law_headings=["Article D823-9",
                                                         "Section 1 : Calcul, liquidation et versement des aides",
                                                         "Chapitre III : Modalités de liquidation et de versement",
                                                         "Titre II : Dispositions communes aux aides personnelles au logement",
                                                         "Livre VIII : Aides personnelles au logement",
                                                         "Partie réglementaire",
                                                         "Code de la construction et de l'habitation"]))
                try:
                    temp_sous_calcul_traitement_332 = date_courante_14
                except EmptyError:
                    temp_sous_calcul_traitement_332 = dead_value
                    raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                         start_line=1477,
                                                         start_column=29,
                                                         end_line=1477,
                                                         end_column=42,
                                                         law_headings=["Article D823-9",
                                                         "Section 1 : Calcul, liquidation et versement des aides",
                                                         "Chapitre III : Modalités de liquidation et de versement",
                                                         "Titre II : Dispositions communes aux aides personnelles au logement",
                                                         "Livre VIII : Aides personnelles au logement",
                                                         "Partie réglementaire",
                                                         "Code de la construction et de l'habitation"]))
                try:
                    temp_sous_calcul_traitement_333 = nombre_personnes_a_charge_11
                except EmptyError:
                    temp_sous_calcul_traitement_333 = dead_value
                    raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                         start_line=1475,
                                                         start_column=41,
                                                         end_line=1475,
                                                         end_column=66,
                                                         law_headings=["Article D823-9",
                                                         "Section 1 : Calcul, liquidation et versement des aides",
                                                         "Chapitre III : Modalités de liquidation et de versement",
                                                         "Titre II : Dispositions communes aux aides personnelles au logement",
                                                         "Livre VIII : Aides personnelles au logement",
                                                         "Partie réglementaire",
                                                         "Code de la construction et de l'habitation"]))
                try:
                    temp_sous_calcul_traitement_334 = situation_familiale_calcul_apl_8
                except EmptyError:
                    temp_sous_calcul_traitement_334 = dead_value
                    raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                         start_line=1478,
                                                         start_column=46,
                                                         end_line=1478,
                                                         end_column=76,
                                                         law_headings=["Article D823-9",
                                                         "Section 1 : Calcul, liquidation et versement des aides",
                                                         "Chapitre III : Modalités de liquidation et de versement",
                                                         "Titre II : Dispositions communes aux aides personnelles au logement",
                                                         "Livre VIII : Aides personnelles au logement",
                                                         "Partie réglementaire",
                                                         "Code de la construction et de l'habitation"]))
                try:
                    temp_sous_calcul_traitement_335 = zone_6
                except EmptyError:
                    temp_sous_calcul_traitement_335 = dead_value
                    raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                         start_line=1476,
                                                         start_column=20,
                                                         end_line=1476,
                                                         end_column=24,
                                                         law_headings=["Article D823-9",
                                                         "Section 1 : Calcul, liquidation et versement des aides",
                                                         "Chapitre III : Modalités de liquidation et de versement",
                                                         "Titre II : Dispositions communes aux aides personnelles au logement",
                                                         "Livre VIII : Aides personnelles au logement",
                                                         "Partie réglementaire",
                                                         "Code de la construction et de l'habitation"]))
                try:
                    temp_sous_calcul_traitement_336 = location_2.logement_est_chambre
                except EmptyError:
                    temp_sous_calcul_traitement_336 = dead_value
                    raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                         start_line=1482,
                                                         start_column=36,
                                                         end_line=1482,
                                                         end_column=65,
                                                         law_headings=["Article D823-9",
                                                         "Section 1 : Calcul, liquidation et versement des aides",
                                                         "Chapitre III : Modalités de liquidation et de versement",
                                                         "Titre II : Dispositions communes aux aides personnelles au logement",
                                                         "Livre VIII : Aides personnelles au logement",
                                                         "Partie réglementaire",
                                                         "Code de la construction et de l'habitation"]))
                try:
                    temp_sous_calcul_traitement_337 = location_2.agees_ou_handicap_adultes_hebergees_onereux_particuliers
                except EmptyError:
                    temp_sous_calcul_traitement_337 = dead_value
                    raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                         start_line=1485,
                                                         start_column=15,
                                                         end_line=1485,
                                                         end_column=80,
                                                         law_headings=["Article D823-9",
                                                         "Section 1 : Calcul, liquidation et versement des aides",
                                                         "Chapitre III : Modalités de liquidation et de versement",
                                                         "Titre II : Dispositions communes aux aides personnelles au logement",
                                                         "Livre VIII : Aides personnelles au logement",
                                                         "Partie réglementaire",
                                                         "Code de la construction et de l'habitation"]))
                try:
                    temp_sous_calcul_traitement_338 = type_aide_2
                except EmptyError:
                    temp_sous_calcul_traitement_338 = dead_value
                    raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                         start_line=1486,
                                                         start_column=25,
                                                         end_line=1486,
                                                         end_column=34,
                                                         law_headings=["Article D823-9",
                                                         "Section 1 : Calcul, liquidation et versement des aides",
                                                         "Chapitre III : Modalités de liquidation et de versement",
                                                         "Titre II : Dispositions communes aux aides personnelles au logement",
                                                         "Livre VIII : Aides personnelles au logement",
                                                         "Partie réglementaire",
                                                         "Code de la construction et de l'habitation"]))
                try:
                    temp_sous_calcul_traitement_339 = location_2.colocation
                except EmptyError:
                    temp_sous_calcul_traitement_339 = dead_value
                    raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                         start_line=1483,
                                                         start_column=26,
                                                         end_line=1483,
                                                         end_column=45,
                                                         law_headings=["Article D823-9",
                                                         "Section 1 : Calcul, liquidation et versement des aides",
                                                         "Chapitre III : Modalités de liquidation et de versement",
                                                         "Titre II : Dispositions communes aux aides personnelles au logement",
                                                         "Livre VIII : Aides personnelles au logement",
                                                         "Partie réglementaire",
                                                         "Code de la construction et de l'habitation"]))
                try:
                    match_arg_640 = location_2.bailleur
                    if match_arg_640.code == TypeBailleur_Code.BailleurSocial:
                        bailleur_9 = match_arg_640.value
                        temp_sous_calcul_traitement_340 = bailleur_9.reduction_loyer_solidarite_percue
                    elif match_arg_640.code == TypeBailleur_Code.BailleurPriveAvecConventionnementSocial:
                        _ = match_arg_640.value
                        temp_sous_calcul_traitement_340 = money_of_cents_string("0")
                    elif match_arg_640.code == TypeBailleur_Code.BailleurPrive:
                        _ = match_arg_640.value
                        temp_sous_calcul_traitement_340 = money_of_cents_string("0")
                except EmptyError:
                    temp_sous_calcul_traitement_340 = dead_value
                    raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                         start_line=1488,
                                                         start_column=16,
                                                         end_line=1491,
                                                         end_column=39,
                                                         law_headings=["Article D823-9",
                                                         "Section 1 : Calcul, liquidation et versement des aides",
                                                         "Chapitre III : Modalités de liquidation et de versement",
                                                         "Titre II : Dispositions communes aux aides personnelles au logement",
                                                         "Livre VIII : Aides personnelles au logement",
                                                         "Partie réglementaire",
                                                         "Code de la construction et de l'habitation"]))
                try:
                    temp_sous_calcul_traitement_341 = location_2.logement_meuble_d842_2
                except EmptyError:
                    temp_sous_calcul_traitement_341 = dead_value
                    raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                         start_line=1492,
                                                         start_column=38,
                                                         end_line=1492,
                                                         end_column=69,
                                                         law_headings=["Article D823-9",
                                                         "Section 1 : Calcul, liquidation et versement des aides",
                                                         "Chapitre III : Modalités de liquidation et de versement",
                                                         "Titre II : Dispositions communes aux aides personnelles au logement",
                                                         "Livre VIII : Aides personnelles au logement",
                                                         "Partie réglementaire",
                                                         "Code de la construction et de l'habitation"]))
                try:
                    temp_sous_calcul_traitement_342 = residence_8
                except EmptyError:
                    temp_sous_calcul_traitement_342 = dead_value
                    raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                         start_line=1493,
                                                         start_column=25,
                                                         end_line=1493,
                                                         end_column=34,
                                                         law_headings=["Article D823-9",
                                                         "Section 1 : Calcul, liquidation et versement des aides",
                                                         "Chapitre III : Modalités de liquidation et de versement",
                                                         "Titre II : Dispositions communes aux aides personnelles au logement",
                                                         "Livre VIII : Aides personnelles au logement",
                                                         "Partie réglementaire",
                                                         "Code de la construction et de l'habitation"]))
                try:
                    temp_sous_calcul_traitement_343 = location_2.loyer_principal
                except EmptyError:
                    temp_sous_calcul_traitement_343 = dead_value
                    raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                         start_line=1479,
                                                         start_column=31,
                                                         end_line=1479,
                                                         end_column=55,
                                                         law_headings=["Article D823-9",
                                                         "Section 1 : Calcul, liquidation et versement des aides",
                                                         "Chapitre III : Modalités de liquidation et de versement",
                                                         "Titre II : Dispositions communes aux aides personnelles au logement",
                                                         "Livre VIII : Aides personnelles au logement",
                                                         "Partie réglementaire",
                                                         "Code de la construction et de l'habitation"]))
                try:
                    temp_sous_calcul_traitement_344 = ressources_menage_avec_arrondi
                except EmptyError:
                    temp_sous_calcul_traitement_344 = dead_value
                    raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                         start_line=1474,
                                                         start_column=43,
                                                         end_line=1474,
                                                         end_column=60,
                                                         law_headings=["Article D823-9",
                                                         "Section 1 : Calcul, liquidation et versement des aides",
                                                         "Chapitre III : Modalités de liquidation et de versement",
                                                         "Titre II : Dispositions communes aux aides personnelles au logement",
                                                         "Livre VIII : Aides personnelles au logement",
                                                         "Partie réglementaire",
                                                         "Code de la construction et de l'habitation"]))
                try:
                    temp_sous_calcul_traitement_345 = location_2.beneficiaire_aide_adulte_ou_enfant_handicapes
                except EmptyError:
                    temp_sous_calcul_traitement_345 = dead_value
                    raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                         start_line=1481,
                                                         start_column=15,
                                                         end_line=1481,
                                                         end_column=69,
                                                         law_headings=["Article D823-9",
                                                         "Section 1 : Calcul, liquidation et versement des aides",
                                                         "Chapitre III : Modalités de liquidation et de versement",
                                                         "Titre II : Dispositions communes aux aides personnelles au logement",
                                                         "Livre VIII : Aides personnelles au logement",
                                                         "Partie réglementaire",
                                                         "Code de la construction et de l'habitation"]))
                try:
                    temp_sous_calcul_traitement_346 = date_courante_14
                except EmptyError:
                    temp_sous_calcul_traitement_346 = dead_value
                    raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                         start_line=1477,
                                                         start_column=29,
                                                         end_line=1477,
                                                         end_column=42,
                                                         law_headings=["Article D823-9",
                                                         "Section 1 : Calcul, liquidation et versement des aides",
                                                         "Chapitre III : Modalités de liquidation et de versement",
                                                         "Titre II : Dispositions communes aux aides personnelles au logement",
                                                         "Livre VIII : Aides personnelles au logement",
                                                         "Partie réglementaire",
                                                         "Code de la construction et de l'habitation"]))
                try:
                    temp_sous_calcul_traitement_347 = nombre_personnes_a_charge_11
                except EmptyError:
                    temp_sous_calcul_traitement_347 = dead_value
                    raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                         start_line=1475,
                                                         start_column=41,
                                                         end_line=1475,
                                                         end_column=66,
                                                         law_headings=["Article D823-9",
                                                         "Section 1 : Calcul, liquidation et versement des aides",
                                                         "Chapitre III : Modalités de liquidation et de versement",
                                                         "Titre II : Dispositions communes aux aides personnelles au logement",
                                                         "Livre VIII : Aides personnelles au logement",
                                                         "Partie réglementaire",
                                                         "Code de la construction et de l'habitation"]))
                try:
                    temp_sous_calcul_traitement_348 = situation_familiale_calcul_apl_8
                except EmptyError:
                    temp_sous_calcul_traitement_348 = dead_value
                    raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                         start_line=1478,
                                                         start_column=46,
                                                         end_line=1478,
                                                         end_column=76,
                                                         law_headings=["Article D823-9",
                                                         "Section 1 : Calcul, liquidation et versement des aides",
                                                         "Chapitre III : Modalités de liquidation et de versement",
                                                         "Titre II : Dispositions communes aux aides personnelles au logement",
                                                         "Livre VIII : Aides personnelles au logement",
                                                         "Partie réglementaire",
                                                         "Code de la construction et de l'habitation"]))
                try:
                    temp_sous_calcul_traitement_349 = zone_6
                except EmptyError:
                    temp_sous_calcul_traitement_349 = dead_value
                    raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                         start_line=1476,
                                                         start_column=20,
                                                         end_line=1476,
                                                         end_column=24,
                                                         law_headings=["Article D823-9",
                                                         "Section 1 : Calcul, liquidation et versement des aides",
                                                         "Chapitre III : Modalités de liquidation et de versement",
                                                         "Titre II : Dispositions communes aux aides personnelles au logement",
                                                         "Livre VIII : Aides personnelles au logement",
                                                         "Partie réglementaire",
                                                         "Code de la construction et de l'habitation"]))
                try:
                    temp_sous_calcul_traitement_350 = location_2.logement_est_chambre
                except EmptyError:
                    temp_sous_calcul_traitement_350 = dead_value
                    raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                         start_line=1482,
                                                         start_column=36,
                                                         end_line=1482,
                                                         end_column=65,
                                                         law_headings=["Article D823-9",
                                                         "Section 1 : Calcul, liquidation et versement des aides",
                                                         "Chapitre III : Modalités de liquidation et de versement",
                                                         "Titre II : Dispositions communes aux aides personnelles au logement",
                                                         "Livre VIII : Aides personnelles au logement",
                                                         "Partie réglementaire",
                                                         "Code de la construction et de l'habitation"]))
                try:
                    temp_sous_calcul_traitement_351 = location_2.agees_ou_handicap_adultes_hebergees_onereux_particuliers
                except EmptyError:
                    temp_sous_calcul_traitement_351 = dead_value
                    raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                         start_line=1485,
                                                         start_column=15,
                                                         end_line=1485,
                                                         end_column=80,
                                                         law_headings=["Article D823-9",
                                                         "Section 1 : Calcul, liquidation et versement des aides",
                                                         "Chapitre III : Modalités de liquidation et de versement",
                                                         "Titre II : Dispositions communes aux aides personnelles au logement",
                                                         "Livre VIII : Aides personnelles au logement",
                                                         "Partie réglementaire",
                                                         "Code de la construction et de l'habitation"]))
                try:
                    temp_sous_calcul_traitement_352 = type_aide_2
                except EmptyError:
                    temp_sous_calcul_traitement_352 = dead_value
                    raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                         start_line=1486,
                                                         start_column=25,
                                                         end_line=1486,
                                                         end_column=34,
                                                         law_headings=["Article D823-9",
                                                         "Section 1 : Calcul, liquidation et versement des aides",
                                                         "Chapitre III : Modalités de liquidation et de versement",
                                                         "Titre II : Dispositions communes aux aides personnelles au logement",
                                                         "Livre VIII : Aides personnelles au logement",
                                                         "Partie réglementaire",
                                                         "Code de la construction et de l'habitation"]))
                try:
                    temp_sous_calcul_traitement_353 = location_2.colocation
                except EmptyError:
                    temp_sous_calcul_traitement_353 = dead_value
                    raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                         start_line=1483,
                                                         start_column=26,
                                                         end_line=1483,
                                                         end_column=45,
                                                         law_headings=["Article D823-9",
                                                         "Section 1 : Calcul, liquidation et versement des aides",
                                                         "Chapitre III : Modalités de liquidation et de versement",
                                                         "Titre II : Dispositions communes aux aides personnelles au logement",
                                                         "Livre VIII : Aides personnelles au logement",
                                                         "Partie réglementaire",
                                                         "Code de la construction et de l'habitation"]))
                try:
                    match_arg_641 = location_2.bailleur
                    if match_arg_641.code == TypeBailleur_Code.BailleurSocial:
                        bailleur_10 = match_arg_641.value
                        temp_sous_calcul_traitement_354 = bailleur_10.reduction_loyer_solidarite_percue
                    elif match_arg_641.code == TypeBailleur_Code.BailleurPriveAvecConventionnementSocial:
                        _ = match_arg_641.value
                        temp_sous_calcul_traitement_354 = money_of_cents_string("0")
                    elif match_arg_641.code == TypeBailleur_Code.BailleurPrive:
                        _ = match_arg_641.value
                        temp_sous_calcul_traitement_354 = money_of_cents_string("0")
                except EmptyError:
                    temp_sous_calcul_traitement_354 = dead_value
                    raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                         start_line=1488,
                                                         start_column=16,
                                                         end_line=1491,
                                                         end_column=39,
                                                         law_headings=["Article D823-9",
                                                         "Section 1 : Calcul, liquidation et versement des aides",
                                                         "Chapitre III : Modalités de liquidation et de versement",
                                                         "Titre II : Dispositions communes aux aides personnelles au logement",
                                                         "Livre VIII : Aides personnelles au logement",
                                                         "Partie réglementaire",
                                                         "Code de la construction et de l'habitation"]))
                try:
                    temp_sous_calcul_traitement_355 = location_2.logement_meuble_d842_2
                except EmptyError:
                    temp_sous_calcul_traitement_355 = dead_value
                    raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                         start_line=1492,
                                                         start_column=38,
                                                         end_line=1492,
                                                         end_column=69,
                                                         law_headings=["Article D823-9",
                                                         "Section 1 : Calcul, liquidation et versement des aides",
                                                         "Chapitre III : Modalités de liquidation et de versement",
                                                         "Titre II : Dispositions communes aux aides personnelles au logement",
                                                         "Livre VIII : Aides personnelles au logement",
                                                         "Partie réglementaire",
                                                         "Code de la construction et de l'habitation"]))
                try:
                    temp_sous_calcul_traitement_356 = residence_8
                except EmptyError:
                    temp_sous_calcul_traitement_356 = dead_value
                    raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                         start_line=1493,
                                                         start_column=25,
                                                         end_line=1493,
                                                         end_column=34,
                                                         law_headings=["Article D823-9",
                                                         "Section 1 : Calcul, liquidation et versement des aides",
                                                         "Chapitre III : Modalités de liquidation et de versement",
                                                         "Titre II : Dispositions communes aux aides personnelles au logement",
                                                         "Livre VIII : Aides personnelles au logement",
                                                         "Partie réglementaire",
                                                         "Code de la construction et de l'habitation"]))
                try:
                    temp_sous_calcul_traitement_357 = location_2.loyer_principal
                except EmptyError:
                    temp_sous_calcul_traitement_357 = dead_value
                    raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                         start_line=1479,
                                                         start_column=31,
                                                         end_line=1479,
                                                         end_column=55,
                                                         law_headings=["Article D823-9",
                                                         "Section 1 : Calcul, liquidation et versement des aides",
                                                         "Chapitre III : Modalités de liquidation et de versement",
                                                         "Titre II : Dispositions communes aux aides personnelles au logement",
                                                         "Livre VIII : Aides personnelles au logement",
                                                         "Partie réglementaire",
                                                         "Code de la construction et de l'habitation"]))
                try:
                    temp_sous_calcul_traitement_358 = ressources_menage_avec_arrondi
                except EmptyError:
                    temp_sous_calcul_traitement_358 = dead_value
                    raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                         start_line=1474,
                                                         start_column=43,
                                                         end_line=1474,
                                                         end_column=60,
                                                         law_headings=["Article D823-9",
                                                         "Section 1 : Calcul, liquidation et versement des aides",
                                                         "Chapitre III : Modalités de liquidation et de versement",
                                                         "Titre II : Dispositions communes aux aides personnelles au logement",
                                                         "Livre VIII : Aides personnelles au logement",
                                                         "Partie réglementaire",
                                                         "Code de la construction et de l'habitation"]))
                try:
                    temp_sous_calcul_traitement_359 = location_2.beneficiaire_aide_adulte_ou_enfant_handicapes
                except EmptyError:
                    temp_sous_calcul_traitement_359 = dead_value
                    raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                         start_line=1481,
                                                         start_column=15,
                                                         end_line=1481,
                                                         end_column=69,
                                                         law_headings=["Article D823-9",
                                                         "Section 1 : Calcul, liquidation et versement des aides",
                                                         "Chapitre III : Modalités de liquidation et de versement",
                                                         "Titre II : Dispositions communes aux aides personnelles au logement",
                                                         "Livre VIII : Aides personnelles au logement",
                                                         "Partie réglementaire",
                                                         "Code de la construction et de l'habitation"]))
                try:
                    temp_sous_calcul_traitement_360 = date_courante_14
                except EmptyError:
                    temp_sous_calcul_traitement_360 = dead_value
                    raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                         start_line=1477,
                                                         start_column=29,
                                                         end_line=1477,
                                                         end_column=42,
                                                         law_headings=["Article D823-9",
                                                         "Section 1 : Calcul, liquidation et versement des aides",
                                                         "Chapitre III : Modalités de liquidation et de versement",
                                                         "Titre II : Dispositions communes aux aides personnelles au logement",
                                                         "Livre VIII : Aides personnelles au logement",
                                                         "Partie réglementaire",
                                                         "Code de la construction et de l'habitation"]))
                try:
                    temp_sous_calcul_traitement_361 = nombre_personnes_a_charge_11
                except EmptyError:
                    temp_sous_calcul_traitement_361 = dead_value
                    raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                         start_line=1475,
                                                         start_column=41,
                                                         end_line=1475,
                                                         end_column=66,
                                                         law_headings=["Article D823-9",
                                                         "Section 1 : Calcul, liquidation et versement des aides",
                                                         "Chapitre III : Modalités de liquidation et de versement",
                                                         "Titre II : Dispositions communes aux aides personnelles au logement",
                                                         "Livre VIII : Aides personnelles au logement",
                                                         "Partie réglementaire",
                                                         "Code de la construction et de l'habitation"]))
                try:
                    temp_sous_calcul_traitement_362 = situation_familiale_calcul_apl_8
                except EmptyError:
                    temp_sous_calcul_traitement_362 = dead_value
                    raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                         start_line=1478,
                                                         start_column=46,
                                                         end_line=1478,
                                                         end_column=76,
                                                         law_headings=["Article D823-9",
                                                         "Section 1 : Calcul, liquidation et versement des aides",
                                                         "Chapitre III : Modalités de liquidation et de versement",
                                                         "Titre II : Dispositions communes aux aides personnelles au logement",
                                                         "Livre VIII : Aides personnelles au logement",
                                                         "Partie réglementaire",
                                                         "Code de la construction et de l'habitation"]))
                try:
                    temp_sous_calcul_traitement_363 = zone_6
                except EmptyError:
                    temp_sous_calcul_traitement_363 = dead_value
                    raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                         start_line=1476,
                                                         start_column=20,
                                                         end_line=1476,
                                                         end_column=24,
                                                         law_headings=["Article D823-9",
                                                         "Section 1 : Calcul, liquidation et versement des aides",
                                                         "Chapitre III : Modalités de liquidation et de versement",
                                                         "Titre II : Dispositions communes aux aides personnelles au logement",
                                                         "Livre VIII : Aides personnelles au logement",
                                                         "Partie réglementaire",
                                                         "Code de la construction et de l'habitation"]))
                try:
                    temp_sous_calcul_traitement_364 = location_2.logement_est_chambre
                except EmptyError:
                    temp_sous_calcul_traitement_364 = dead_value
                    raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                         start_line=1482,
                                                         start_column=36,
                                                         end_line=1482,
                                                         end_column=65,
                                                         law_headings=["Article D823-9",
                                                         "Section 1 : Calcul, liquidation et versement des aides",
                                                         "Chapitre III : Modalités de liquidation et de versement",
                                                         "Titre II : Dispositions communes aux aides personnelles au logement",
                                                         "Livre VIII : Aides personnelles au logement",
                                                         "Partie réglementaire",
                                                         "Code de la construction et de l'habitation"]))
                try:
                    temp_sous_calcul_traitement_365 = location_2.agees_ou_handicap_adultes_hebergees_onereux_particuliers
                except EmptyError:
                    temp_sous_calcul_traitement_365 = dead_value
                    raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                         start_line=1485,
                                                         start_column=15,
                                                         end_line=1485,
                                                         end_column=80,
                                                         law_headings=["Article D823-9",
                                                         "Section 1 : Calcul, liquidation et versement des aides",
                                                         "Chapitre III : Modalités de liquidation et de versement",
                                                         "Titre II : Dispositions communes aux aides personnelles au logement",
                                                         "Livre VIII : Aides personnelles au logement",
                                                         "Partie réglementaire",
                                                         "Code de la construction et de l'habitation"]))
                try:
                    temp_sous_calcul_traitement_366 = type_aide_2
                except EmptyError:
                    temp_sous_calcul_traitement_366 = dead_value
                    raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                         start_line=1486,
                                                         start_column=25,
                                                         end_line=1486,
                                                         end_column=34,
                                                         law_headings=["Article D823-9",
                                                         "Section 1 : Calcul, liquidation et versement des aides",
                                                         "Chapitre III : Modalités de liquidation et de versement",
                                                         "Titre II : Dispositions communes aux aides personnelles au logement",
                                                         "Livre VIII : Aides personnelles au logement",
                                                         "Partie réglementaire",
                                                         "Code de la construction et de l'habitation"]))
                try:
                    temp_sous_calcul_traitement_367 = location_2.colocation
                except EmptyError:
                    temp_sous_calcul_traitement_367 = dead_value
                    raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                         start_line=1483,
                                                         start_column=26,
                                                         end_line=1483,
                                                         end_column=45,
                                                         law_headings=["Article D823-9",
                                                         "Section 1 : Calcul, liquidation et versement des aides",
                                                         "Chapitre III : Modalités de liquidation et de versement",
                                                         "Titre II : Dispositions communes aux aides personnelles au logement",
                                                         "Livre VIII : Aides personnelles au logement",
                                                         "Partie réglementaire",
                                                         "Code de la construction et de l'habitation"]))
                try:
                    match_arg_642 = location_2.bailleur
                    if match_arg_642.code == TypeBailleur_Code.BailleurSocial:
                        bailleur_11 = match_arg_642.value
                        temp_sous_calcul_traitement_368 = bailleur_11.reduction_loyer_solidarite_percue
                    elif match_arg_642.code == TypeBailleur_Code.BailleurPriveAvecConventionnementSocial:
                        _ = match_arg_642.value
                        temp_sous_calcul_traitement_368 = money_of_cents_string("0")
                    elif match_arg_642.code == TypeBailleur_Code.BailleurPrive:
                        _ = match_arg_642.value
                        temp_sous_calcul_traitement_368 = money_of_cents_string("0")
                except EmptyError:
                    temp_sous_calcul_traitement_368 = dead_value
                    raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                         start_line=1488,
                                                         start_column=16,
                                                         end_line=1491,
                                                         end_column=39,
                                                         law_headings=["Article D823-9",
                                                         "Section 1 : Calcul, liquidation et versement des aides",
                                                         "Chapitre III : Modalités de liquidation et de versement",
                                                         "Titre II : Dispositions communes aux aides personnelles au logement",
                                                         "Livre VIII : Aides personnelles au logement",
                                                         "Partie réglementaire",
                                                         "Code de la construction et de l'habitation"]))
                try:
                    temp_sous_calcul_traitement_369 = location_2.logement_meuble_d842_2
                except EmptyError:
                    temp_sous_calcul_traitement_369 = dead_value
                    raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                         start_line=1492,
                                                         start_column=38,
                                                         end_line=1492,
                                                         end_column=69,
                                                         law_headings=["Article D823-9",
                                                         "Section 1 : Calcul, liquidation et versement des aides",
                                                         "Chapitre III : Modalités de liquidation et de versement",
                                                         "Titre II : Dispositions communes aux aides personnelles au logement",
                                                         "Livre VIII : Aides personnelles au logement",
                                                         "Partie réglementaire",
                                                         "Code de la construction et de l'habitation"]))
                try:
                    temp_sous_calcul_traitement_370 = residence_8
                except EmptyError:
                    temp_sous_calcul_traitement_370 = dead_value
                    raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                         start_line=1493,
                                                         start_column=25,
                                                         end_line=1493,
                                                         end_column=34,
                                                         law_headings=["Article D823-9",
                                                         "Section 1 : Calcul, liquidation et versement des aides",
                                                         "Chapitre III : Modalités de liquidation et de versement",
                                                         "Titre II : Dispositions communes aux aides personnelles au logement",
                                                         "Livre VIII : Aides personnelles au logement",
                                                         "Partie réglementaire",
                                                         "Code de la construction et de l'habitation"]))
                try:
                    temp_sous_calcul_traitement_371 = location_2.loyer_principal
                except EmptyError:
                    temp_sous_calcul_traitement_371 = dead_value
                    raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                         start_line=1479,
                                                         start_column=31,
                                                         end_line=1479,
                                                         end_column=55,
                                                         law_headings=["Article D823-9",
                                                         "Section 1 : Calcul, liquidation et versement des aides",
                                                         "Chapitre III : Modalités de liquidation et de versement",
                                                         "Titre II : Dispositions communes aux aides personnelles au logement",
                                                         "Livre VIII : Aides personnelles au logement",
                                                         "Partie réglementaire",
                                                         "Code de la construction et de l'habitation"]))
                try:
                    temp_sous_calcul_traitement_372 = ressources_menage_avec_arrondi
                except EmptyError:
                    temp_sous_calcul_traitement_372 = dead_value
                    raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                         start_line=1474,
                                                         start_column=43,
                                                         end_line=1474,
                                                         end_column=60,
                                                         law_headings=["Article D823-9",
                                                         "Section 1 : Calcul, liquidation et versement des aides",
                                                         "Chapitre III : Modalités de liquidation et de versement",
                                                         "Titre II : Dispositions communes aux aides personnelles au logement",
                                                         "Livre VIII : Aides personnelles au logement",
                                                         "Partie réglementaire",
                                                         "Code de la construction et de l'habitation"]))
                try:
                    temp_sous_calcul_traitement_373 = location_2.beneficiaire_aide_adulte_ou_enfant_handicapes
                except EmptyError:
                    temp_sous_calcul_traitement_373 = dead_value
                    raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                         start_line=1481,
                                                         start_column=15,
                                                         end_line=1481,
                                                         end_column=69,
                                                         law_headings=["Article D823-9",
                                                         "Section 1 : Calcul, liquidation et versement des aides",
                                                         "Chapitre III : Modalités de liquidation et de versement",
                                                         "Titre II : Dispositions communes aux aides personnelles au logement",
                                                         "Livre VIII : Aides personnelles au logement",
                                                         "Partie réglementaire",
                                                         "Code de la construction et de l'habitation"]))
                try:
                    temp_sous_calcul_traitement_374 = date_courante_14
                except EmptyError:
                    temp_sous_calcul_traitement_374 = dead_value
                    raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                         start_line=1477,
                                                         start_column=29,
                                                         end_line=1477,
                                                         end_column=42,
                                                         law_headings=["Article D823-9",
                                                         "Section 1 : Calcul, liquidation et versement des aides",
                                                         "Chapitre III : Modalités de liquidation et de versement",
                                                         "Titre II : Dispositions communes aux aides personnelles au logement",
                                                         "Livre VIII : Aides personnelles au logement",
                                                         "Partie réglementaire",
                                                         "Code de la construction et de l'habitation"]))
                try:
                    temp_sous_calcul_traitement_375 = nombre_personnes_a_charge_11
                except EmptyError:
                    temp_sous_calcul_traitement_375 = dead_value
                    raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                         start_line=1475,
                                                         start_column=41,
                                                         end_line=1475,
                                                         end_column=66,
                                                         law_headings=["Article D823-9",
                                                         "Section 1 : Calcul, liquidation et versement des aides",
                                                         "Chapitre III : Modalités de liquidation et de versement",
                                                         "Titre II : Dispositions communes aux aides personnelles au logement",
                                                         "Livre VIII : Aides personnelles au logement",
                                                         "Partie réglementaire",
                                                         "Code de la construction et de l'habitation"]))
                try:
                    temp_sous_calcul_traitement_376 = situation_familiale_calcul_apl_8
                except EmptyError:
                    temp_sous_calcul_traitement_376 = dead_value
                    raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                         start_line=1478,
                                                         start_column=46,
                                                         end_line=1478,
                                                         end_column=76,
                                                         law_headings=["Article D823-9",
                                                         "Section 1 : Calcul, liquidation et versement des aides",
                                                         "Chapitre III : Modalités de liquidation et de versement",
                                                         "Titre II : Dispositions communes aux aides personnelles au logement",
                                                         "Livre VIII : Aides personnelles au logement",
                                                         "Partie réglementaire",
                                                         "Code de la construction et de l'habitation"]))
                try:
                    temp_sous_calcul_traitement_377 = zone_6
                except EmptyError:
                    temp_sous_calcul_traitement_377 = dead_value
                    raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                         start_line=1476,
                                                         start_column=20,
                                                         end_line=1476,
                                                         end_column=24,
                                                         law_headings=["Article D823-9",
                                                         "Section 1 : Calcul, liquidation et versement des aides",
                                                         "Chapitre III : Modalités de liquidation et de versement",
                                                         "Titre II : Dispositions communes aux aides personnelles au logement",
                                                         "Livre VIII : Aides personnelles au logement",
                                                         "Partie réglementaire",
                                                         "Code de la construction et de l'habitation"]))
                try:
                    temp_sous_calcul_traitement_378 = location_2.logement_est_chambre
                except EmptyError:
                    temp_sous_calcul_traitement_378 = dead_value
                    raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                         start_line=1482,
                                                         start_column=36,
                                                         end_line=1482,
                                                         end_column=65,
                                                         law_headings=["Article D823-9",
                                                         "Section 1 : Calcul, liquidation et versement des aides",
                                                         "Chapitre III : Modalités de liquidation et de versement",
                                                         "Titre II : Dispositions communes aux aides personnelles au logement",
                                                         "Livre VIII : Aides personnelles au logement",
                                                         "Partie réglementaire",
                                                         "Code de la construction et de l'habitation"]))
                try:
                    temp_sous_calcul_traitement_379 = location_2.agees_ou_handicap_adultes_hebergees_onereux_particuliers
                except EmptyError:
                    temp_sous_calcul_traitement_379 = dead_value
                    raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                         start_line=1485,
                                                         start_column=15,
                                                         end_line=1485,
                                                         end_column=80,
                                                         law_headings=["Article D823-9",
                                                         "Section 1 : Calcul, liquidation et versement des aides",
                                                         "Chapitre III : Modalités de liquidation et de versement",
                                                         "Titre II : Dispositions communes aux aides personnelles au logement",
                                                         "Livre VIII : Aides personnelles au logement",
                                                         "Partie réglementaire",
                                                         "Code de la construction et de l'habitation"]))
                try:
                    temp_sous_calcul_traitement_380 = type_aide_2
                except EmptyError:
                    temp_sous_calcul_traitement_380 = dead_value
                    raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                         start_line=1486,
                                                         start_column=25,
                                                         end_line=1486,
                                                         end_column=34,
                                                         law_headings=["Article D823-9",
                                                         "Section 1 : Calcul, liquidation et versement des aides",
                                                         "Chapitre III : Modalités de liquidation et de versement",
                                                         "Titre II : Dispositions communes aux aides personnelles au logement",
                                                         "Livre VIII : Aides personnelles au logement",
                                                         "Partie réglementaire",
                                                         "Code de la construction et de l'habitation"]))
                try:
                    temp_sous_calcul_traitement_381 = location_2.colocation
                except EmptyError:
                    temp_sous_calcul_traitement_381 = dead_value
                    raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                         start_line=1483,
                                                         start_column=26,
                                                         end_line=1483,
                                                         end_column=45,
                                                         law_headings=["Article D823-9",
                                                         "Section 1 : Calcul, liquidation et versement des aides",
                                                         "Chapitre III : Modalités de liquidation et de versement",
                                                         "Titre II : Dispositions communes aux aides personnelles au logement",
                                                         "Livre VIII : Aides personnelles au logement",
                                                         "Partie réglementaire",
                                                         "Code de la construction et de l'habitation"]))
                try:
                    match_arg_643 = location_2.bailleur
                    if match_arg_643.code == TypeBailleur_Code.BailleurSocial:
                        bailleur_12 = match_arg_643.value
                        temp_sous_calcul_traitement_382 = bailleur_12.reduction_loyer_solidarite_percue
                    elif match_arg_643.code == TypeBailleur_Code.BailleurPriveAvecConventionnementSocial:
                        _ = match_arg_643.value
                        temp_sous_calcul_traitement_382 = money_of_cents_string("0")
                    elif match_arg_643.code == TypeBailleur_Code.BailleurPrive:
                        _ = match_arg_643.value
                        temp_sous_calcul_traitement_382 = money_of_cents_string("0")
                except EmptyError:
                    temp_sous_calcul_traitement_382 = dead_value
                    raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                         start_line=1488,
                                                         start_column=16,
                                                         end_line=1491,
                                                         end_column=39,
                                                         law_headings=["Article D823-9",
                                                         "Section 1 : Calcul, liquidation et versement des aides",
                                                         "Chapitre III : Modalités de liquidation et de versement",
                                                         "Titre II : Dispositions communes aux aides personnelles au logement",
                                                         "Livre VIII : Aides personnelles au logement",
                                                         "Partie réglementaire",
                                                         "Code de la construction et de l'habitation"]))
                try:
                    temp_sous_calcul_traitement_383 = location_2.logement_meuble_d842_2
                except EmptyError:
                    temp_sous_calcul_traitement_383 = dead_value
                    raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                         start_line=1492,
                                                         start_column=38,
                                                         end_line=1492,
                                                         end_column=69,
                                                         law_headings=["Article D823-9",
                                                         "Section 1 : Calcul, liquidation et versement des aides",
                                                         "Chapitre III : Modalités de liquidation et de versement",
                                                         "Titre II : Dispositions communes aux aides personnelles au logement",
                                                         "Livre VIII : Aides personnelles au logement",
                                                         "Partie réglementaire",
                                                         "Code de la construction et de l'habitation"]))
                try:
                    temp_sous_calcul_traitement_384 = residence_8
                except EmptyError:
                    temp_sous_calcul_traitement_384 = dead_value
                    raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                         start_line=1493,
                                                         start_column=25,
                                                         end_line=1493,
                                                         end_column=34,
                                                         law_headings=["Article D823-9",
                                                         "Section 1 : Calcul, liquidation et versement des aides",
                                                         "Chapitre III : Modalités de liquidation et de versement",
                                                         "Titre II : Dispositions communes aux aides personnelles au logement",
                                                         "Livre VIII : Aides personnelles au logement",
                                                         "Partie réglementaire",
                                                         "Code de la construction et de l'habitation"]))
                try:
                    temp_sous_calcul_traitement_385 = location_2.loyer_principal
                except EmptyError:
                    temp_sous_calcul_traitement_385 = dead_value
                    raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                         start_line=1479,
                                                         start_column=31,
                                                         end_line=1479,
                                                         end_column=55,
                                                         law_headings=["Article D823-9",
                                                         "Section 1 : Calcul, liquidation et versement des aides",
                                                         "Chapitre III : Modalités de liquidation et de versement",
                                                         "Titre II : Dispositions communes aux aides personnelles au logement",
                                                         "Livre VIII : Aides personnelles au logement",
                                                         "Partie réglementaire",
                                                         "Code de la construction et de l'habitation"]))
                try:
                    temp_sous_calcul_traitement_386 = ressources_menage_avec_arrondi
                except EmptyError:
                    temp_sous_calcul_traitement_386 = dead_value
                    raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                         start_line=1474,
                                                         start_column=43,
                                                         end_line=1474,
                                                         end_column=60,
                                                         law_headings=["Article D823-9",
                                                         "Section 1 : Calcul, liquidation et versement des aides",
                                                         "Chapitre III : Modalités de liquidation et de versement",
                                                         "Titre II : Dispositions communes aux aides personnelles au logement",
                                                         "Livre VIII : Aides personnelles au logement",
                                                         "Partie réglementaire",
                                                         "Code de la construction et de l'habitation"]))
                try:
                    temp_sous_calcul_traitement_387 = location_2.beneficiaire_aide_adulte_ou_enfant_handicapes
                except EmptyError:
                    temp_sous_calcul_traitement_387 = dead_value
                    raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                         start_line=1481,
                                                         start_column=15,
                                                         end_line=1481,
                                                         end_column=69,
                                                         law_headings=["Article D823-9",
                                                         "Section 1 : Calcul, liquidation et versement des aides",
                                                         "Chapitre III : Modalités de liquidation et de versement",
                                                         "Titre II : Dispositions communes aux aides personnelles au logement",
                                                         "Livre VIII : Aides personnelles au logement",
                                                         "Partie réglementaire",
                                                         "Code de la construction et de l'habitation"]))
                try:
                    temp_sous_calcul_traitement_388 = date_courante_14
                except EmptyError:
                    temp_sous_calcul_traitement_388 = dead_value
                    raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                         start_line=1477,
                                                         start_column=29,
                                                         end_line=1477,
                                                         end_column=42,
                                                         law_headings=["Article D823-9",
                                                         "Section 1 : Calcul, liquidation et versement des aides",
                                                         "Chapitre III : Modalités de liquidation et de versement",
                                                         "Titre II : Dispositions communes aux aides personnelles au logement",
                                                         "Livre VIII : Aides personnelles au logement",
                                                         "Partie réglementaire",
                                                         "Code de la construction et de l'habitation"]))
                try:
                    temp_sous_calcul_traitement_389 = nombre_personnes_a_charge_11
                except EmptyError:
                    temp_sous_calcul_traitement_389 = dead_value
                    raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                         start_line=1475,
                                                         start_column=41,
                                                         end_line=1475,
                                                         end_column=66,
                                                         law_headings=["Article D823-9",
                                                         "Section 1 : Calcul, liquidation et versement des aides",
                                                         "Chapitre III : Modalités de liquidation et de versement",
                                                         "Titre II : Dispositions communes aux aides personnelles au logement",
                                                         "Livre VIII : Aides personnelles au logement",
                                                         "Partie réglementaire",
                                                         "Code de la construction et de l'habitation"]))
                try:
                    temp_sous_calcul_traitement_390 = situation_familiale_calcul_apl_8
                except EmptyError:
                    temp_sous_calcul_traitement_390 = dead_value
                    raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                         start_line=1478,
                                                         start_column=46,
                                                         end_line=1478,
                                                         end_column=76,
                                                         law_headings=["Article D823-9",
                                                         "Section 1 : Calcul, liquidation et versement des aides",
                                                         "Chapitre III : Modalités de liquidation et de versement",
                                                         "Titre II : Dispositions communes aux aides personnelles au logement",
                                                         "Livre VIII : Aides personnelles au logement",
                                                         "Partie réglementaire",
                                                         "Code de la construction et de l'habitation"]))
                try:
                    temp_sous_calcul_traitement_391 = zone_6
                except EmptyError:
                    temp_sous_calcul_traitement_391 = dead_value
                    raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                         start_line=1476,
                                                         start_column=20,
                                                         end_line=1476,
                                                         end_column=24,
                                                         law_headings=["Article D823-9",
                                                         "Section 1 : Calcul, liquidation et versement des aides",
                                                         "Chapitre III : Modalités de liquidation et de versement",
                                                         "Titre II : Dispositions communes aux aides personnelles au logement",
                                                         "Livre VIII : Aides personnelles au logement",
                                                         "Partie réglementaire",
                                                         "Code de la construction et de l'habitation"]))
                try:
                    temp_sous_calcul_traitement_392 = location_2.logement_est_chambre
                except EmptyError:
                    temp_sous_calcul_traitement_392 = dead_value
                    raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                         start_line=1482,
                                                         start_column=36,
                                                         end_line=1482,
                                                         end_column=65,
                                                         law_headings=["Article D823-9",
                                                         "Section 1 : Calcul, liquidation et versement des aides",
                                                         "Chapitre III : Modalités de liquidation et de versement",
                                                         "Titre II : Dispositions communes aux aides personnelles au logement",
                                                         "Livre VIII : Aides personnelles au logement",
                                                         "Partie réglementaire",
                                                         "Code de la construction et de l'habitation"]))
                try:
                    temp_sous_calcul_traitement_393 = location_2.agees_ou_handicap_adultes_hebergees_onereux_particuliers
                except EmptyError:
                    temp_sous_calcul_traitement_393 = dead_value
                    raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                         start_line=1485,
                                                         start_column=15,
                                                         end_line=1485,
                                                         end_column=80,
                                                         law_headings=["Article D823-9",
                                                         "Section 1 : Calcul, liquidation et versement des aides",
                                                         "Chapitre III : Modalités de liquidation et de versement",
                                                         "Titre II : Dispositions communes aux aides personnelles au logement",
                                                         "Livre VIII : Aides personnelles au logement",
                                                         "Partie réglementaire",
                                                         "Code de la construction et de l'habitation"]))
                try:
                    temp_sous_calcul_traitement_394 = type_aide_2
                except EmptyError:
                    temp_sous_calcul_traitement_394 = dead_value
                    raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                         start_line=1486,
                                                         start_column=25,
                                                         end_line=1486,
                                                         end_column=34,
                                                         law_headings=["Article D823-9",
                                                         "Section 1 : Calcul, liquidation et versement des aides",
                                                         "Chapitre III : Modalités de liquidation et de versement",
                                                         "Titre II : Dispositions communes aux aides personnelles au logement",
                                                         "Livre VIII : Aides personnelles au logement",
                                                         "Partie réglementaire",
                                                         "Code de la construction et de l'habitation"]))
                try:
                    temp_sous_calcul_traitement_395 = location_2.colocation
                except EmptyError:
                    temp_sous_calcul_traitement_395 = dead_value
                    raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                         start_line=1483,
                                                         start_column=26,
                                                         end_line=1483,
                                                         end_column=45,
                                                         law_headings=["Article D823-9",
                                                         "Section 1 : Calcul, liquidation et versement des aides",
                                                         "Chapitre III : Modalités de liquidation et de versement",
                                                         "Titre II : Dispositions communes aux aides personnelles au logement",
                                                         "Livre VIII : Aides personnelles au logement",
                                                         "Partie réglementaire",
                                                         "Code de la construction et de l'habitation"]))
                try:
                    match_arg_644 = location_2.bailleur
                    if match_arg_644.code == TypeBailleur_Code.BailleurSocial:
                        bailleur_13 = match_arg_644.value
                        temp_sous_calcul_traitement_396 = bailleur_13.reduction_loyer_solidarite_percue
                    elif match_arg_644.code == TypeBailleur_Code.BailleurPriveAvecConventionnementSocial:
                        _ = match_arg_644.value
                        temp_sous_calcul_traitement_396 = money_of_cents_string("0")
                    elif match_arg_644.code == TypeBailleur_Code.BailleurPrive:
                        _ = match_arg_644.value
                        temp_sous_calcul_traitement_396 = money_of_cents_string("0")
                except EmptyError:
                    temp_sous_calcul_traitement_396 = dead_value
                    raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                         start_line=1488,
                                                         start_column=16,
                                                         end_line=1491,
                                                         end_column=39,
                                                         law_headings=["Article D823-9",
                                                         "Section 1 : Calcul, liquidation et versement des aides",
                                                         "Chapitre III : Modalités de liquidation et de versement",
                                                         "Titre II : Dispositions communes aux aides personnelles au logement",
                                                         "Livre VIII : Aides personnelles au logement",
                                                         "Partie réglementaire",
                                                         "Code de la construction et de l'habitation"]))
                try:
                    temp_sous_calcul_traitement_397 = location_2.logement_meuble_d842_2
                except EmptyError:
                    temp_sous_calcul_traitement_397 = dead_value
                    raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                         start_line=1492,
                                                         start_column=38,
                                                         end_line=1492,
                                                         end_column=69,
                                                         law_headings=["Article D823-9",
                                                         "Section 1 : Calcul, liquidation et versement des aides",
                                                         "Chapitre III : Modalités de liquidation et de versement",
                                                         "Titre II : Dispositions communes aux aides personnelles au logement",
                                                         "Livre VIII : Aides personnelles au logement",
                                                         "Partie réglementaire",
                                                         "Code de la construction et de l'habitation"]))
                try:
                    temp_sous_calcul_traitement_398 = residence_8
                except EmptyError:
                    temp_sous_calcul_traitement_398 = dead_value
                    raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                         start_line=1493,
                                                         start_column=25,
                                                         end_line=1493,
                                                         end_column=34,
                                                         law_headings=["Article D823-9",
                                                         "Section 1 : Calcul, liquidation et versement des aides",
                                                         "Chapitre III : Modalités de liquidation et de versement",
                                                         "Titre II : Dispositions communes aux aides personnelles au logement",
                                                         "Livre VIII : Aides personnelles au logement",
                                                         "Partie réglementaire",
                                                         "Code de la construction et de l'habitation"]))
                temp_sous_calcul_traitement_2 = TraitementFormuleAideFinale(aide_finale_formule = CalculAidePersonnaliseeLogementLocatif(montant_forfaitaire_charges_d823_16 = calcul_aide_personnalisee_logement_locatif(
                    CalculAidePersonnaliseeLogementLocatifIn(loyer_principal_base_in = temp_sous_calcul_traitement_286,
                    ressources_menage_arrondies_in = temp_sous_calcul_traitement_287,
                    beneficiaire_aide_adulte_ou_enfant_handicapes_in = temp_sous_calcul_traitement_288,
                    date_courante_in = temp_sous_calcul_traitement_289,
                    nombre_personnes_a_charge_in = temp_sous_calcul_traitement_290,
                    situation_familiale_calcul_apl_in = temp_sous_calcul_traitement_291,
                    zone_in = temp_sous_calcul_traitement_292,
                    logement_est_chambre_in = temp_sous_calcul_traitement_293,
                    agees_ou_handicap_adultes_hebergees_onereux_particuliers_in = temp_sous_calcul_traitement_294,
                    type_aide_in = temp_sous_calcul_traitement_295,
                    colocation_in = temp_sous_calcul_traitement_296,
                    reduction_loyer_solidarite_in = temp_sous_calcul_traitement_297,
                    logement_meuble_d842_2_in = temp_sous_calcul_traitement_298,
                    residence_in = temp_sous_calcul_traitement_299)).montant_forfaitaire_charges_d823_16,
                    plafond_loyer_d823_16_2 = calcul_aide_personnalisee_logement_locatif(
                    CalculAidePersonnaliseeLogementLocatifIn(loyer_principal_base_in = temp_sous_calcul_traitement_272,
                    ressources_menage_arrondies_in = temp_sous_calcul_traitement_273,
                    beneficiaire_aide_adulte_ou_enfant_handicapes_in = temp_sous_calcul_traitement_274,
                    date_courante_in = temp_sous_calcul_traitement_275,
                    nombre_personnes_a_charge_in = temp_sous_calcul_traitement_276,
                    situation_familiale_calcul_apl_in = temp_sous_calcul_traitement_277,
                    zone_in = temp_sous_calcul_traitement_278,
                    logement_est_chambre_in = temp_sous_calcul_traitement_279,
                    agees_ou_handicap_adultes_hebergees_onereux_particuliers_in = temp_sous_calcul_traitement_280,
                    type_aide_in = temp_sous_calcul_traitement_281,
                    colocation_in = temp_sous_calcul_traitement_282,
                    reduction_loyer_solidarite_in = temp_sous_calcul_traitement_283,
                    logement_meuble_d842_2_in = temp_sous_calcul_traitement_284,
                    residence_in = temp_sous_calcul_traitement_285)).plafond_loyer_d823_16_2,
                    participation_minimale = calcul_aide_personnalisee_logement_locatif(
                    CalculAidePersonnaliseeLogementLocatifIn(loyer_principal_base_in = temp_sous_calcul_traitement_258,
                    ressources_menage_arrondies_in = temp_sous_calcul_traitement_259,
                    beneficiaire_aide_adulte_ou_enfant_handicapes_in = temp_sous_calcul_traitement_260,
                    date_courante_in = temp_sous_calcul_traitement_261,
                    nombre_personnes_a_charge_in = temp_sous_calcul_traitement_262,
                    situation_familiale_calcul_apl_in = temp_sous_calcul_traitement_263,
                    zone_in = temp_sous_calcul_traitement_264,
                    logement_est_chambre_in = temp_sous_calcul_traitement_265,
                    agees_ou_handicap_adultes_hebergees_onereux_particuliers_in = temp_sous_calcul_traitement_266,
                    type_aide_in = temp_sous_calcul_traitement_267,
                    colocation_in = temp_sous_calcul_traitement_268,
                    reduction_loyer_solidarite_in = temp_sous_calcul_traitement_269,
                    logement_meuble_d842_2_in = temp_sous_calcul_traitement_270,
                    residence_in = temp_sous_calcul_traitement_271)).participation_minimale,
                    taux_composition_familiale = calcul_aide_personnalisee_logement_locatif(
                    CalculAidePersonnaliseeLogementLocatifIn(loyer_principal_base_in = temp_sous_calcul_traitement_244,
                    ressources_menage_arrondies_in = temp_sous_calcul_traitement_245,
                    beneficiaire_aide_adulte_ou_enfant_handicapes_in = temp_sous_calcul_traitement_246,
                    date_courante_in = temp_sous_calcul_traitement_247,
                    nombre_personnes_a_charge_in = temp_sous_calcul_traitement_248,
                    situation_familiale_calcul_apl_in = temp_sous_calcul_traitement_249,
                    zone_in = temp_sous_calcul_traitement_250,
                    logement_est_chambre_in = temp_sous_calcul_traitement_251,
                    agees_ou_handicap_adultes_hebergees_onereux_particuliers_in = temp_sous_calcul_traitement_252,
                    type_aide_in = temp_sous_calcul_traitement_253,
                    colocation_in = temp_sous_calcul_traitement_254,
                    reduction_loyer_solidarite_in = temp_sous_calcul_traitement_255,
                    logement_meuble_d842_2_in = temp_sous_calcul_traitement_256,
                    residence_in = temp_sous_calcul_traitement_257)).taux_composition_familiale,
                    participation_personnelle = calcul_aide_personnalisee_logement_locatif(
                    CalculAidePersonnaliseeLogementLocatifIn(loyer_principal_base_in = temp_sous_calcul_traitement_230,
                    ressources_menage_arrondies_in = temp_sous_calcul_traitement_231,
                    beneficiaire_aide_adulte_ou_enfant_handicapes_in = temp_sous_calcul_traitement_232,
                    date_courante_in = temp_sous_calcul_traitement_233,
                    nombre_personnes_a_charge_in = temp_sous_calcul_traitement_234,
                    situation_familiale_calcul_apl_in = temp_sous_calcul_traitement_235,
                    zone_in = temp_sous_calcul_traitement_236,
                    logement_est_chambre_in = temp_sous_calcul_traitement_237,
                    agees_ou_handicap_adultes_hebergees_onereux_particuliers_in = temp_sous_calcul_traitement_238,
                    type_aide_in = temp_sous_calcul_traitement_239,
                    colocation_in = temp_sous_calcul_traitement_240,
                    reduction_loyer_solidarite_in = temp_sous_calcul_traitement_241,
                    logement_meuble_d842_2_in = temp_sous_calcul_traitement_242,
                    residence_in = temp_sous_calcul_traitement_243)).participation_personnelle,
                    aide_finale_formule = calcul_aide_personnalisee_logement_locatif(
                    CalculAidePersonnaliseeLogementLocatifIn(loyer_principal_base_in = temp_sous_calcul_traitement_216,
                    ressources_menage_arrondies_in = temp_sous_calcul_traitement_217,
                    beneficiaire_aide_adulte_ou_enfant_handicapes_in = temp_sous_calcul_traitement_218,
                    date_courante_in = temp_sous_calcul_traitement_219,
                    nombre_personnes_a_charge_in = temp_sous_calcul_traitement_220,
                    situation_familiale_calcul_apl_in = temp_sous_calcul_traitement_221,
                    zone_in = temp_sous_calcul_traitement_222,
                    logement_est_chambre_in = temp_sous_calcul_traitement_223,
                    agees_ou_handicap_adultes_hebergees_onereux_particuliers_in = temp_sous_calcul_traitement_224,
                    type_aide_in = temp_sous_calcul_traitement_225,
                    colocation_in = temp_sous_calcul_traitement_226,
                    reduction_loyer_solidarite_in = temp_sous_calcul_traitement_227,
                    logement_meuble_d842_2_in = temp_sous_calcul_traitement_228,
                    residence_in = temp_sous_calcul_traitement_229)).aide_finale_formule,
                    traitement_aide_finale = temp_sous_calcul_traitement_201).aide_finale_formule,
                    traitement_aide_finale = CalculAidePersonnaliseeLogementLocatif(montant_forfaitaire_charges_d823_16 = calcul_aide_personnalisee_logement_locatif(
                    CalculAidePersonnaliseeLogementLocatifIn(loyer_principal_base_in = temp_sous_calcul_traitement_385,
                    ressources_menage_arrondies_in = temp_sous_calcul_traitement_386,
                    beneficiaire_aide_adulte_ou_enfant_handicapes_in = temp_sous_calcul_traitement_387,
                    date_courante_in = temp_sous_calcul_traitement_388,
                    nombre_personnes_a_charge_in = temp_sous_calcul_traitement_389,
                    situation_familiale_calcul_apl_in = temp_sous_calcul_traitement_390,
                    zone_in = temp_sous_calcul_traitement_391,
                    logement_est_chambre_in = temp_sous_calcul_traitement_392,
                    agees_ou_handicap_adultes_hebergees_onereux_particuliers_in = temp_sous_calcul_traitement_393,
                    type_aide_in = temp_sous_calcul_traitement_394,
                    colocation_in = temp_sous_calcul_traitement_395,
                    reduction_loyer_solidarite_in = temp_sous_calcul_traitement_396,
                    logement_meuble_d842_2_in = temp_sous_calcul_traitement_397,
                    residence_in = temp_sous_calcul_traitement_398)).montant_forfaitaire_charges_d823_16,
                    plafond_loyer_d823_16_2 = calcul_aide_personnalisee_logement_locatif(
                    CalculAidePersonnaliseeLogementLocatifIn(loyer_principal_base_in = temp_sous_calcul_traitement_371,
                    ressources_menage_arrondies_in = temp_sous_calcul_traitement_372,
                    beneficiaire_aide_adulte_ou_enfant_handicapes_in = temp_sous_calcul_traitement_373,
                    date_courante_in = temp_sous_calcul_traitement_374,
                    nombre_personnes_a_charge_in = temp_sous_calcul_traitement_375,
                    situation_familiale_calcul_apl_in = temp_sous_calcul_traitement_376,
                    zone_in = temp_sous_calcul_traitement_377,
                    logement_est_chambre_in = temp_sous_calcul_traitement_378,
                    agees_ou_handicap_adultes_hebergees_onereux_particuliers_in = temp_sous_calcul_traitement_379,
                    type_aide_in = temp_sous_calcul_traitement_380,
                    colocation_in = temp_sous_calcul_traitement_381,
                    reduction_loyer_solidarite_in = temp_sous_calcul_traitement_382,
                    logement_meuble_d842_2_in = temp_sous_calcul_traitement_383,
                    residence_in = temp_sous_calcul_traitement_384)).plafond_loyer_d823_16_2,
                    participation_minimale = calcul_aide_personnalisee_logement_locatif(
                    CalculAidePersonnaliseeLogementLocatifIn(loyer_principal_base_in = temp_sous_calcul_traitement_357,
                    ressources_menage_arrondies_in = temp_sous_calcul_traitement_358,
                    beneficiaire_aide_adulte_ou_enfant_handicapes_in = temp_sous_calcul_traitement_359,
                    date_courante_in = temp_sous_calcul_traitement_360,
                    nombre_personnes_a_charge_in = temp_sous_calcul_traitement_361,
                    situation_familiale_calcul_apl_in = temp_sous_calcul_traitement_362,
                    zone_in = temp_sous_calcul_traitement_363,
                    logement_est_chambre_in = temp_sous_calcul_traitement_364,
                    agees_ou_handicap_adultes_hebergees_onereux_particuliers_in = temp_sous_calcul_traitement_365,
                    type_aide_in = temp_sous_calcul_traitement_366,
                    colocation_in = temp_sous_calcul_traitement_367,
                    reduction_loyer_solidarite_in = temp_sous_calcul_traitement_368,
                    logement_meuble_d842_2_in = temp_sous_calcul_traitement_369,
                    residence_in = temp_sous_calcul_traitement_370)).participation_minimale,
                    taux_composition_familiale = calcul_aide_personnalisee_logement_locatif(
                    CalculAidePersonnaliseeLogementLocatifIn(loyer_principal_base_in = temp_sous_calcul_traitement_343,
                    ressources_menage_arrondies_in = temp_sous_calcul_traitement_344,
                    beneficiaire_aide_adulte_ou_enfant_handicapes_in = temp_sous_calcul_traitement_345,
                    date_courante_in = temp_sous_calcul_traitement_346,
                    nombre_personnes_a_charge_in = temp_sous_calcul_traitement_347,
                    situation_familiale_calcul_apl_in = temp_sous_calcul_traitement_348,
                    zone_in = temp_sous_calcul_traitement_349,
                    logement_est_chambre_in = temp_sous_calcul_traitement_350,
                    agees_ou_handicap_adultes_hebergees_onereux_particuliers_in = temp_sous_calcul_traitement_351,
                    type_aide_in = temp_sous_calcul_traitement_352,
                    colocation_in = temp_sous_calcul_traitement_353,
                    reduction_loyer_solidarite_in = temp_sous_calcul_traitement_354,
                    logement_meuble_d842_2_in = temp_sous_calcul_traitement_355,
                    residence_in = temp_sous_calcul_traitement_356)).taux_composition_familiale,
                    participation_personnelle = calcul_aide_personnalisee_logement_locatif(
                    CalculAidePersonnaliseeLogementLocatifIn(loyer_principal_base_in = temp_sous_calcul_traitement_329,
                    ressources_menage_arrondies_in = temp_sous_calcul_traitement_330,
                    beneficiaire_aide_adulte_ou_enfant_handicapes_in = temp_sous_calcul_traitement_331,
                    date_courante_in = temp_sous_calcul_traitement_332,
                    nombre_personnes_a_charge_in = temp_sous_calcul_traitement_333,
                    situation_familiale_calcul_apl_in = temp_sous_calcul_traitement_334,
                    zone_in = temp_sous_calcul_traitement_335,
                    logement_est_chambre_in = temp_sous_calcul_traitement_336,
                    agees_ou_handicap_adultes_hebergees_onereux_particuliers_in = temp_sous_calcul_traitement_337,
                    type_aide_in = temp_sous_calcul_traitement_338,
                    colocation_in = temp_sous_calcul_traitement_339,
                    reduction_loyer_solidarite_in = temp_sous_calcul_traitement_340,
                    logement_meuble_d842_2_in = temp_sous_calcul_traitement_341,
                    residence_in = temp_sous_calcul_traitement_342)).participation_personnelle,
                    aide_finale_formule = calcul_aide_personnalisee_logement_locatif(
                    CalculAidePersonnaliseeLogementLocatifIn(loyer_principal_base_in = temp_sous_calcul_traitement_315,
                    ressources_menage_arrondies_in = temp_sous_calcul_traitement_316,
                    beneficiaire_aide_adulte_ou_enfant_handicapes_in = temp_sous_calcul_traitement_317,
                    date_courante_in = temp_sous_calcul_traitement_318,
                    nombre_personnes_a_charge_in = temp_sous_calcul_traitement_319,
                    situation_familiale_calcul_apl_in = temp_sous_calcul_traitement_320,
                    zone_in = temp_sous_calcul_traitement_321,
                    logement_est_chambre_in = temp_sous_calcul_traitement_322,
                    agees_ou_handicap_adultes_hebergees_onereux_particuliers_in = temp_sous_calcul_traitement_323,
                    type_aide_in = temp_sous_calcul_traitement_324,
                    colocation_in = temp_sous_calcul_traitement_325,
                    reduction_loyer_solidarite_in = temp_sous_calcul_traitement_326,
                    logement_meuble_d842_2_in = temp_sous_calcul_traitement_327,
                    residence_in = temp_sous_calcul_traitement_328)).aide_finale_formule,
                    traitement_aide_finale = temp_sous_calcul_traitement_300).traitement_aide_finale)
            elif match_arg_630.code == CategorieCalculAPL_Code.AccessionPropriete:
                proprietaire_2 = match_arg_630.value
                def temp_sous_calcul_traitement_399(param0_4:Money):
                    try:
                        temp_sous_calcul_traitement_400 = proprietaire_2.mensualite_principale
                    except EmptyError:
                        temp_sous_calcul_traitement_400 = dead_value
                        raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                             start_line=1532,
                                                             start_column=38,
                                                             end_line=1532,
                                                             end_column=72,
                                                             law_headings=["Article D823-9",
                                                             "Section 1 : Calcul, liquidation et versement des aides",
                                                             "Chapitre III : Modalités de liquidation et de versement",
                                                             "Titre II : Dispositions communes aux aides personnelles au logement",
                                                             "Livre VIII : Aides personnelles au logement",
                                                             "Partie réglementaire",
                                                             "Code de la construction et de l'habitation"]))
                    try:
                        temp_sous_calcul_traitement_401 = ressources_menage_avec_arrondi
                    except EmptyError:
                        temp_sous_calcul_traitement_401 = dead_value
                        raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                             start_line=1527,
                                                             start_column=44,
                                                             end_line=1527,
                                                             end_column=61,
                                                             law_headings=["Article D823-9",
                                                             "Section 1 : Calcul, liquidation et versement des aides",
                                                             "Chapitre III : Modalités de liquidation et de versement",
                                                             "Titre II : Dispositions communes aux aides personnelles au logement",
                                                             "Livre VIII : Aides personnelles au logement",
                                                             "Partie réglementaire",
                                                             "Code de la construction et de l'habitation"]))
                    try:
                        temp_sous_calcul_traitement_402 = nombre_personnes_a_charge_11
                    except EmptyError:
                        temp_sous_calcul_traitement_402 = dead_value
                        raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                             start_line=1528,
                                                             start_column=42,
                                                             end_line=1528,
                                                             end_column=67,
                                                             law_headings=["Article D823-9",
                                                             "Section 1 : Calcul, liquidation et versement des aides",
                                                             "Chapitre III : Modalités de liquidation et de versement",
                                                             "Titre II : Dispositions communes aux aides personnelles au logement",
                                                             "Livre VIII : Aides personnelles au logement",
                                                             "Partie réglementaire",
                                                             "Code de la construction et de l'habitation"]))
                    try:
                        temp_sous_calcul_traitement_403 = situation_familiale_calcul_apl_8
                    except EmptyError:
                        temp_sous_calcul_traitement_403 = dead_value
                        raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                             start_line=1531,
                                                             start_column=47,
                                                             end_line=1531,
                                                             end_column=77,
                                                             law_headings=["Article D823-9",
                                                             "Section 1 : Calcul, liquidation et versement des aides",
                                                             "Chapitre III : Modalités de liquidation et de versement",
                                                             "Titre II : Dispositions communes aux aides personnelles au logement",
                                                             "Livre VIII : Aides personnelles au logement",
                                                             "Partie réglementaire",
                                                             "Code de la construction et de l'habitation"]))
                    try:
                        temp_sous_calcul_traitement_404 = proprietaire_2.type_travaux_logement_d832_15
                    except EmptyError:
                        temp_sous_calcul_traitement_404 = dead_value
                        raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                             start_line=1533,
                                                             start_column=38,
                                                             end_line=1533,
                                                             end_column=80,
                                                             law_headings=["Article D823-9",
                                                             "Section 1 : Calcul, liquidation et versement des aides",
                                                             "Chapitre III : Modalités de liquidation et de versement",
                                                             "Titre II : Dispositions communes aux aides personnelles au logement",
                                                             "Livre VIII : Aides personnelles au logement",
                                                             "Partie réglementaire",
                                                             "Code de la construction et de l'habitation"]))
                    try:
                        temp_sous_calcul_traitement_405 = proprietaire_2.pret.date_signature
                    except EmptyError:
                        temp_sous_calcul_traitement_405 = dead_value
                        raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                             start_line=1534,
                                                             start_column=36,
                                                             end_line=1534,
                                                             end_column=68,
                                                             law_headings=["Article D823-9",
                                                             "Section 1 : Calcul, liquidation et versement des aides",
                                                             "Chapitre III : Modalités de liquidation et de versement",
                                                             "Titre II : Dispositions communes aux aides personnelles au logement",
                                                             "Livre VIII : Aides personnelles au logement",
                                                             "Partie réglementaire",
                                                             "Code de la construction et de l'habitation"]))
                    try:
                        temp_sous_calcul_traitement_406 = proprietaire_2.local_habite_premiere_fois_beneficiaire
                    except EmptyError:
                        temp_sous_calcul_traitement_406 = dead_value
                        raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                             start_line=1536,
                                                             start_column=14,
                                                             end_line=1536,
                                                             end_column=66,
                                                             law_headings=["Article D823-9",
                                                             "Section 1 : Calcul, liquidation et versement des aides",
                                                             "Chapitre III : Modalités de liquidation et de versement",
                                                             "Titre II : Dispositions communes aux aides personnelles au logement",
                                                             "Livre VIII : Aides personnelles au logement",
                                                             "Partie réglementaire",
                                                             "Code de la construction et de l'habitation"]))
                    try:
                        temp_sous_calcul_traitement_407 = proprietaire_2.date_entree_logement
                    except EmptyError:
                        temp_sous_calcul_traitement_407 = dead_value
                        raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                             start_line=1537,
                                                             start_column=37,
                                                             end_line=1537,
                                                             end_column=70,
                                                             law_headings=["Article D823-9",
                                                             "Section 1 : Calcul, liquidation et versement des aides",
                                                             "Chapitre III : Modalités de liquidation et de versement",
                                                             "Titre II : Dispositions communes aux aides personnelles au logement",
                                                             "Livre VIII : Aides personnelles au logement",
                                                             "Partie réglementaire",
                                                             "Code de la construction et de l'habitation"]))
                    try:
                        temp_sous_calcul_traitement_408 = proprietaire_2.copropriete
                    except EmptyError:
                        temp_sous_calcul_traitement_408 = dead_value
                        raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                             start_line=1538,
                                                             start_column=28,
                                                             end_line=1538,
                                                             end_column=52,
                                                             law_headings=["Article D823-9",
                                                             "Section 1 : Calcul, liquidation et versement des aides",
                                                             "Chapitre III : Modalités de liquidation et de versement",
                                                             "Titre II : Dispositions communes aux aides personnelles au logement",
                                                             "Livre VIII : Aides personnelles au logement",
                                                             "Partie réglementaire",
                                                             "Code de la construction et de l'habitation"]))
                    try:
                        temp_sous_calcul_traitement_409 = proprietaire_2.situation_r822_11_13_17
                    except EmptyError:
                        temp_sous_calcul_traitement_409 = dead_value
                        raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                             start_line=1539,
                                                             start_column=40,
                                                             end_line=1539,
                                                             end_column=76,
                                                             law_headings=["Article D823-9",
                                                             "Section 1 : Calcul, liquidation et versement des aides",
                                                             "Chapitre III : Modalités de liquidation et de versement",
                                                             "Titre II : Dispositions communes aux aides personnelles au logement",
                                                             "Livre VIII : Aides personnelles au logement",
                                                             "Partie réglementaire",
                                                             "Code de la construction et de l'habitation"]))
                    try:
                        temp_sous_calcul_traitement_410 = zone_6
                    except EmptyError:
                        temp_sous_calcul_traitement_410 = dead_value
                        raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                             start_line=1529,
                                                             start_column=21,
                                                             end_line=1529,
                                                             end_column=25,
                                                             law_headings=["Article D823-9",
                                                             "Section 1 : Calcul, liquidation et versement des aides",
                                                             "Chapitre III : Modalités de liquidation et de versement",
                                                             "Titre II : Dispositions communes aux aides personnelles au logement",
                                                             "Livre VIII : Aides personnelles au logement",
                                                             "Partie réglementaire",
                                                             "Code de la construction et de l'habitation"]))
                    try:
                        temp_sous_calcul_traitement_411 = proprietaire_2.pret.type_pret
                    except EmptyError:
                        temp_sous_calcul_traitement_411 = dead_value
                        raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                             start_line=1540,
                                                             start_column=26,
                                                             end_line=1540,
                                                             end_column=53,
                                                             law_headings=["Article D823-9",
                                                             "Section 1 : Calcul, liquidation et versement des aides",
                                                             "Chapitre III : Modalités de liquidation et de versement",
                                                             "Titre II : Dispositions communes aux aides personnelles au logement",
                                                             "Livre VIII : Aides personnelles au logement",
                                                             "Partie réglementaire",
                                                             "Code de la construction et de l'habitation"]))
                    try:
                        temp_sous_calcul_traitement_412 = proprietaire_2.anciennete_logement
                    except EmptyError:
                        temp_sous_calcul_traitement_412 = dead_value
                        raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                             start_line=1541,
                                                             start_column=36,
                                                             end_line=1541,
                                                             end_column=68,
                                                             law_headings=["Article D823-9",
                                                             "Section 1 : Calcul, liquidation et versement des aides",
                                                             "Chapitre III : Modalités de liquidation et de versement",
                                                             "Titre II : Dispositions communes aux aides personnelles au logement",
                                                             "Livre VIII : Aides personnelles au logement",
                                                             "Partie réglementaire",
                                                             "Code de la construction et de l'habitation"]))
                    try:
                        temp_sous_calcul_traitement_413 = date_courante_14
                    except EmptyError:
                        temp_sous_calcul_traitement_413 = dead_value
                        raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                             start_line=1530,
                                                             start_column=30,
                                                             end_line=1530,
                                                             end_column=43,
                                                             law_headings=["Article D823-9",
                                                             "Section 1 : Calcul, liquidation et versement des aides",
                                                             "Chapitre III : Modalités de liquidation et de versement",
                                                             "Titre II : Dispositions communes aux aides personnelles au logement",
                                                             "Livre VIII : Aides personnelles au logement",
                                                             "Partie réglementaire",
                                                             "Code de la construction et de l'habitation"]))
                    return calcul_aide_personnalisee_logement_accession_propriete(
                        CalculAidePersonnaliseeLogementAccessionProprieteIn(mensualite_principale_in = temp_sous_calcul_traitement_400,
                        ressources_menage_arrondies_in = temp_sous_calcul_traitement_401,
                        nombre_personnes_a_charge_in = temp_sous_calcul_traitement_402,
                        situation_familiale_calcul_apl_in = temp_sous_calcul_traitement_403,
                        type_travaux_logement_in = temp_sous_calcul_traitement_404,
                        date_signature_pret_in = temp_sous_calcul_traitement_405,
                        local_habite_premiere_fois_beneficiaire_in = temp_sous_calcul_traitement_406,
                        date_entree_logement_in = temp_sous_calcul_traitement_407,
                        copropriete_in = temp_sous_calcul_traitement_408,
                        situation_r822_11_13_17_in = temp_sous_calcul_traitement_409,
                        zone_in = temp_sous_calcul_traitement_410,
                        type_pret_in = temp_sous_calcul_traitement_411,
                        anciennete_logement_in = temp_sous_calcul_traitement_412,
                        date_courante_in = temp_sous_calcul_traitement_413)).traitement_aide_finale(
                        param0_4)
                try:
                    temp_sous_calcul_traitement_414 = proprietaire_2.mensualite_principale
                except EmptyError:
                    temp_sous_calcul_traitement_414 = dead_value
                    raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                         start_line=1532,
                                                         start_column=38,
                                                         end_line=1532,
                                                         end_column=72,
                                                         law_headings=["Article D823-9",
                                                         "Section 1 : Calcul, liquidation et versement des aides",
                                                         "Chapitre III : Modalités de liquidation et de versement",
                                                         "Titre II : Dispositions communes aux aides personnelles au logement",
                                                         "Livre VIII : Aides personnelles au logement",
                                                         "Partie réglementaire",
                                                         "Code de la construction et de l'habitation"]))
                try:
                    temp_sous_calcul_traitement_415 = ressources_menage_avec_arrondi
                except EmptyError:
                    temp_sous_calcul_traitement_415 = dead_value
                    raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                         start_line=1527,
                                                         start_column=44,
                                                         end_line=1527,
                                                         end_column=61,
                                                         law_headings=["Article D823-9",
                                                         "Section 1 : Calcul, liquidation et versement des aides",
                                                         "Chapitre III : Modalités de liquidation et de versement",
                                                         "Titre II : Dispositions communes aux aides personnelles au logement",
                                                         "Livre VIII : Aides personnelles au logement",
                                                         "Partie réglementaire",
                                                         "Code de la construction et de l'habitation"]))
                try:
                    temp_sous_calcul_traitement_416 = nombre_personnes_a_charge_11
                except EmptyError:
                    temp_sous_calcul_traitement_416 = dead_value
                    raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                         start_line=1528,
                                                         start_column=42,
                                                         end_line=1528,
                                                         end_column=67,
                                                         law_headings=["Article D823-9",
                                                         "Section 1 : Calcul, liquidation et versement des aides",
                                                         "Chapitre III : Modalités de liquidation et de versement",
                                                         "Titre II : Dispositions communes aux aides personnelles au logement",
                                                         "Livre VIII : Aides personnelles au logement",
                                                         "Partie réglementaire",
                                                         "Code de la construction et de l'habitation"]))
                try:
                    temp_sous_calcul_traitement_417 = situation_familiale_calcul_apl_8
                except EmptyError:
                    temp_sous_calcul_traitement_417 = dead_value
                    raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                         start_line=1531,
                                                         start_column=47,
                                                         end_line=1531,
                                                         end_column=77,
                                                         law_headings=["Article D823-9",
                                                         "Section 1 : Calcul, liquidation et versement des aides",
                                                         "Chapitre III : Modalités de liquidation et de versement",
                                                         "Titre II : Dispositions communes aux aides personnelles au logement",
                                                         "Livre VIII : Aides personnelles au logement",
                                                         "Partie réglementaire",
                                                         "Code de la construction et de l'habitation"]))
                try:
                    temp_sous_calcul_traitement_418 = proprietaire_2.type_travaux_logement_d832_15
                except EmptyError:
                    temp_sous_calcul_traitement_418 = dead_value
                    raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                         start_line=1533,
                                                         start_column=38,
                                                         end_line=1533,
                                                         end_column=80,
                                                         law_headings=["Article D823-9",
                                                         "Section 1 : Calcul, liquidation et versement des aides",
                                                         "Chapitre III : Modalités de liquidation et de versement",
                                                         "Titre II : Dispositions communes aux aides personnelles au logement",
                                                         "Livre VIII : Aides personnelles au logement",
                                                         "Partie réglementaire",
                                                         "Code de la construction et de l'habitation"]))
                try:
                    temp_sous_calcul_traitement_419 = proprietaire_2.pret.date_signature
                except EmptyError:
                    temp_sous_calcul_traitement_419 = dead_value
                    raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                         start_line=1534,
                                                         start_column=36,
                                                         end_line=1534,
                                                         end_column=68,
                                                         law_headings=["Article D823-9",
                                                         "Section 1 : Calcul, liquidation et versement des aides",
                                                         "Chapitre III : Modalités de liquidation et de versement",
                                                         "Titre II : Dispositions communes aux aides personnelles au logement",
                                                         "Livre VIII : Aides personnelles au logement",
                                                         "Partie réglementaire",
                                                         "Code de la construction et de l'habitation"]))
                try:
                    temp_sous_calcul_traitement_420 = proprietaire_2.local_habite_premiere_fois_beneficiaire
                except EmptyError:
                    temp_sous_calcul_traitement_420 = dead_value
                    raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                         start_line=1536,
                                                         start_column=14,
                                                         end_line=1536,
                                                         end_column=66,
                                                         law_headings=["Article D823-9",
                                                         "Section 1 : Calcul, liquidation et versement des aides",
                                                         "Chapitre III : Modalités de liquidation et de versement",
                                                         "Titre II : Dispositions communes aux aides personnelles au logement",
                                                         "Livre VIII : Aides personnelles au logement",
                                                         "Partie réglementaire",
                                                         "Code de la construction et de l'habitation"]))
                try:
                    temp_sous_calcul_traitement_421 = proprietaire_2.date_entree_logement
                except EmptyError:
                    temp_sous_calcul_traitement_421 = dead_value
                    raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                         start_line=1537,
                                                         start_column=37,
                                                         end_line=1537,
                                                         end_column=70,
                                                         law_headings=["Article D823-9",
                                                         "Section 1 : Calcul, liquidation et versement des aides",
                                                         "Chapitre III : Modalités de liquidation et de versement",
                                                         "Titre II : Dispositions communes aux aides personnelles au logement",
                                                         "Livre VIII : Aides personnelles au logement",
                                                         "Partie réglementaire",
                                                         "Code de la construction et de l'habitation"]))
                try:
                    temp_sous_calcul_traitement_422 = proprietaire_2.copropriete
                except EmptyError:
                    temp_sous_calcul_traitement_422 = dead_value
                    raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                         start_line=1538,
                                                         start_column=28,
                                                         end_line=1538,
                                                         end_column=52,
                                                         law_headings=["Article D823-9",
                                                         "Section 1 : Calcul, liquidation et versement des aides",
                                                         "Chapitre III : Modalités de liquidation et de versement",
                                                         "Titre II : Dispositions communes aux aides personnelles au logement",
                                                         "Livre VIII : Aides personnelles au logement",
                                                         "Partie réglementaire",
                                                         "Code de la construction et de l'habitation"]))
                try:
                    temp_sous_calcul_traitement_423 = proprietaire_2.situation_r822_11_13_17
                except EmptyError:
                    temp_sous_calcul_traitement_423 = dead_value
                    raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                         start_line=1539,
                                                         start_column=40,
                                                         end_line=1539,
                                                         end_column=76,
                                                         law_headings=["Article D823-9",
                                                         "Section 1 : Calcul, liquidation et versement des aides",
                                                         "Chapitre III : Modalités de liquidation et de versement",
                                                         "Titre II : Dispositions communes aux aides personnelles au logement",
                                                         "Livre VIII : Aides personnelles au logement",
                                                         "Partie réglementaire",
                                                         "Code de la construction et de l'habitation"]))
                try:
                    temp_sous_calcul_traitement_424 = zone_6
                except EmptyError:
                    temp_sous_calcul_traitement_424 = dead_value
                    raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                         start_line=1529,
                                                         start_column=21,
                                                         end_line=1529,
                                                         end_column=25,
                                                         law_headings=["Article D823-9",
                                                         "Section 1 : Calcul, liquidation et versement des aides",
                                                         "Chapitre III : Modalités de liquidation et de versement",
                                                         "Titre II : Dispositions communes aux aides personnelles au logement",
                                                         "Livre VIII : Aides personnelles au logement",
                                                         "Partie réglementaire",
                                                         "Code de la construction et de l'habitation"]))
                try:
                    temp_sous_calcul_traitement_425 = proprietaire_2.pret.type_pret
                except EmptyError:
                    temp_sous_calcul_traitement_425 = dead_value
                    raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                         start_line=1540,
                                                         start_column=26,
                                                         end_line=1540,
                                                         end_column=53,
                                                         law_headings=["Article D823-9",
                                                         "Section 1 : Calcul, liquidation et versement des aides",
                                                         "Chapitre III : Modalités de liquidation et de versement",
                                                         "Titre II : Dispositions communes aux aides personnelles au logement",
                                                         "Livre VIII : Aides personnelles au logement",
                                                         "Partie réglementaire",
                                                         "Code de la construction et de l'habitation"]))
                try:
                    temp_sous_calcul_traitement_426 = proprietaire_2.anciennete_logement
                except EmptyError:
                    temp_sous_calcul_traitement_426 = dead_value
                    raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                         start_line=1541,
                                                         start_column=36,
                                                         end_line=1541,
                                                         end_column=68,
                                                         law_headings=["Article D823-9",
                                                         "Section 1 : Calcul, liquidation et versement des aides",
                                                         "Chapitre III : Modalités de liquidation et de versement",
                                                         "Titre II : Dispositions communes aux aides personnelles au logement",
                                                         "Livre VIII : Aides personnelles au logement",
                                                         "Partie réglementaire",
                                                         "Code de la construction et de l'habitation"]))
                try:
                    temp_sous_calcul_traitement_427 = date_courante_14
                except EmptyError:
                    temp_sous_calcul_traitement_427 = dead_value
                    raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                         start_line=1530,
                                                         start_column=30,
                                                         end_line=1530,
                                                         end_column=43,
                                                         law_headings=["Article D823-9",
                                                         "Section 1 : Calcul, liquidation et versement des aides",
                                                         "Chapitre III : Modalités de liquidation et de versement",
                                                         "Titre II : Dispositions communes aux aides personnelles au logement",
                                                         "Livre VIII : Aides personnelles au logement",
                                                         "Partie réglementaire",
                                                         "Code de la construction et de l'habitation"]))
                try:
                    temp_sous_calcul_traitement_428 = proprietaire_2.mensualite_principale
                except EmptyError:
                    temp_sous_calcul_traitement_428 = dead_value
                    raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                         start_line=1532,
                                                         start_column=38,
                                                         end_line=1532,
                                                         end_column=72,
                                                         law_headings=["Article D823-9",
                                                         "Section 1 : Calcul, liquidation et versement des aides",
                                                         "Chapitre III : Modalités de liquidation et de versement",
                                                         "Titre II : Dispositions communes aux aides personnelles au logement",
                                                         "Livre VIII : Aides personnelles au logement",
                                                         "Partie réglementaire",
                                                         "Code de la construction et de l'habitation"]))
                try:
                    temp_sous_calcul_traitement_429 = ressources_menage_avec_arrondi
                except EmptyError:
                    temp_sous_calcul_traitement_429 = dead_value
                    raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                         start_line=1527,
                                                         start_column=44,
                                                         end_line=1527,
                                                         end_column=61,
                                                         law_headings=["Article D823-9",
                                                         "Section 1 : Calcul, liquidation et versement des aides",
                                                         "Chapitre III : Modalités de liquidation et de versement",
                                                         "Titre II : Dispositions communes aux aides personnelles au logement",
                                                         "Livre VIII : Aides personnelles au logement",
                                                         "Partie réglementaire",
                                                         "Code de la construction et de l'habitation"]))
                try:
                    temp_sous_calcul_traitement_430 = nombre_personnes_a_charge_11
                except EmptyError:
                    temp_sous_calcul_traitement_430 = dead_value
                    raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                         start_line=1528,
                                                         start_column=42,
                                                         end_line=1528,
                                                         end_column=67,
                                                         law_headings=["Article D823-9",
                                                         "Section 1 : Calcul, liquidation et versement des aides",
                                                         "Chapitre III : Modalités de liquidation et de versement",
                                                         "Titre II : Dispositions communes aux aides personnelles au logement",
                                                         "Livre VIII : Aides personnelles au logement",
                                                         "Partie réglementaire",
                                                         "Code de la construction et de l'habitation"]))
                try:
                    temp_sous_calcul_traitement_431 = situation_familiale_calcul_apl_8
                except EmptyError:
                    temp_sous_calcul_traitement_431 = dead_value
                    raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                         start_line=1531,
                                                         start_column=47,
                                                         end_line=1531,
                                                         end_column=77,
                                                         law_headings=["Article D823-9",
                                                         "Section 1 : Calcul, liquidation et versement des aides",
                                                         "Chapitre III : Modalités de liquidation et de versement",
                                                         "Titre II : Dispositions communes aux aides personnelles au logement",
                                                         "Livre VIII : Aides personnelles au logement",
                                                         "Partie réglementaire",
                                                         "Code de la construction et de l'habitation"]))
                try:
                    temp_sous_calcul_traitement_432 = proprietaire_2.type_travaux_logement_d832_15
                except EmptyError:
                    temp_sous_calcul_traitement_432 = dead_value
                    raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                         start_line=1533,
                                                         start_column=38,
                                                         end_line=1533,
                                                         end_column=80,
                                                         law_headings=["Article D823-9",
                                                         "Section 1 : Calcul, liquidation et versement des aides",
                                                         "Chapitre III : Modalités de liquidation et de versement",
                                                         "Titre II : Dispositions communes aux aides personnelles au logement",
                                                         "Livre VIII : Aides personnelles au logement",
                                                         "Partie réglementaire",
                                                         "Code de la construction et de l'habitation"]))
                try:
                    temp_sous_calcul_traitement_433 = proprietaire_2.pret.date_signature
                except EmptyError:
                    temp_sous_calcul_traitement_433 = dead_value
                    raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                         start_line=1534,
                                                         start_column=36,
                                                         end_line=1534,
                                                         end_column=68,
                                                         law_headings=["Article D823-9",
                                                         "Section 1 : Calcul, liquidation et versement des aides",
                                                         "Chapitre III : Modalités de liquidation et de versement",
                                                         "Titre II : Dispositions communes aux aides personnelles au logement",
                                                         "Livre VIII : Aides personnelles au logement",
                                                         "Partie réglementaire",
                                                         "Code de la construction et de l'habitation"]))
                try:
                    temp_sous_calcul_traitement_434 = proprietaire_2.local_habite_premiere_fois_beneficiaire
                except EmptyError:
                    temp_sous_calcul_traitement_434 = dead_value
                    raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                         start_line=1536,
                                                         start_column=14,
                                                         end_line=1536,
                                                         end_column=66,
                                                         law_headings=["Article D823-9",
                                                         "Section 1 : Calcul, liquidation et versement des aides",
                                                         "Chapitre III : Modalités de liquidation et de versement",
                                                         "Titre II : Dispositions communes aux aides personnelles au logement",
                                                         "Livre VIII : Aides personnelles au logement",
                                                         "Partie réglementaire",
                                                         "Code de la construction et de l'habitation"]))
                try:
                    temp_sous_calcul_traitement_435 = proprietaire_2.date_entree_logement
                except EmptyError:
                    temp_sous_calcul_traitement_435 = dead_value
                    raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                         start_line=1537,
                                                         start_column=37,
                                                         end_line=1537,
                                                         end_column=70,
                                                         law_headings=["Article D823-9",
                                                         "Section 1 : Calcul, liquidation et versement des aides",
                                                         "Chapitre III : Modalités de liquidation et de versement",
                                                         "Titre II : Dispositions communes aux aides personnelles au logement",
                                                         "Livre VIII : Aides personnelles au logement",
                                                         "Partie réglementaire",
                                                         "Code de la construction et de l'habitation"]))
                try:
                    temp_sous_calcul_traitement_436 = proprietaire_2.copropriete
                except EmptyError:
                    temp_sous_calcul_traitement_436 = dead_value
                    raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                         start_line=1538,
                                                         start_column=28,
                                                         end_line=1538,
                                                         end_column=52,
                                                         law_headings=["Article D823-9",
                                                         "Section 1 : Calcul, liquidation et versement des aides",
                                                         "Chapitre III : Modalités de liquidation et de versement",
                                                         "Titre II : Dispositions communes aux aides personnelles au logement",
                                                         "Livre VIII : Aides personnelles au logement",
                                                         "Partie réglementaire",
                                                         "Code de la construction et de l'habitation"]))
                try:
                    temp_sous_calcul_traitement_437 = proprietaire_2.situation_r822_11_13_17
                except EmptyError:
                    temp_sous_calcul_traitement_437 = dead_value
                    raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                         start_line=1539,
                                                         start_column=40,
                                                         end_line=1539,
                                                         end_column=76,
                                                         law_headings=["Article D823-9",
                                                         "Section 1 : Calcul, liquidation et versement des aides",
                                                         "Chapitre III : Modalités de liquidation et de versement",
                                                         "Titre II : Dispositions communes aux aides personnelles au logement",
                                                         "Livre VIII : Aides personnelles au logement",
                                                         "Partie réglementaire",
                                                         "Code de la construction et de l'habitation"]))
                try:
                    temp_sous_calcul_traitement_438 = zone_6
                except EmptyError:
                    temp_sous_calcul_traitement_438 = dead_value
                    raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                         start_line=1529,
                                                         start_column=21,
                                                         end_line=1529,
                                                         end_column=25,
                                                         law_headings=["Article D823-9",
                                                         "Section 1 : Calcul, liquidation et versement des aides",
                                                         "Chapitre III : Modalités de liquidation et de versement",
                                                         "Titre II : Dispositions communes aux aides personnelles au logement",
                                                         "Livre VIII : Aides personnelles au logement",
                                                         "Partie réglementaire",
                                                         "Code de la construction et de l'habitation"]))
                try:
                    temp_sous_calcul_traitement_439 = proprietaire_2.pret.type_pret
                except EmptyError:
                    temp_sous_calcul_traitement_439 = dead_value
                    raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                         start_line=1540,
                                                         start_column=26,
                                                         end_line=1540,
                                                         end_column=53,
                                                         law_headings=["Article D823-9",
                                                         "Section 1 : Calcul, liquidation et versement des aides",
                                                         "Chapitre III : Modalités de liquidation et de versement",
                                                         "Titre II : Dispositions communes aux aides personnelles au logement",
                                                         "Livre VIII : Aides personnelles au logement",
                                                         "Partie réglementaire",
                                                         "Code de la construction et de l'habitation"]))
                try:
                    temp_sous_calcul_traitement_440 = proprietaire_2.anciennete_logement
                except EmptyError:
                    temp_sous_calcul_traitement_440 = dead_value
                    raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                         start_line=1541,
                                                         start_column=36,
                                                         end_line=1541,
                                                         end_column=68,
                                                         law_headings=["Article D823-9",
                                                         "Section 1 : Calcul, liquidation et versement des aides",
                                                         "Chapitre III : Modalités de liquidation et de versement",
                                                         "Titre II : Dispositions communes aux aides personnelles au logement",
                                                         "Livre VIII : Aides personnelles au logement",
                                                         "Partie réglementaire",
                                                         "Code de la construction et de l'habitation"]))
                try:
                    temp_sous_calcul_traitement_441 = date_courante_14
                except EmptyError:
                    temp_sous_calcul_traitement_441 = dead_value
                    raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                         start_line=1530,
                                                         start_column=30,
                                                         end_line=1530,
                                                         end_column=43,
                                                         law_headings=["Article D823-9",
                                                         "Section 1 : Calcul, liquidation et versement des aides",
                                                         "Chapitre III : Modalités de liquidation et de versement",
                                                         "Titre II : Dispositions communes aux aides personnelles au logement",
                                                         "Livre VIII : Aides personnelles au logement",
                                                         "Partie réglementaire",
                                                         "Code de la construction et de l'habitation"]))
                try:
                    temp_sous_calcul_traitement_442 = proprietaire_2.mensualite_principale
                except EmptyError:
                    temp_sous_calcul_traitement_442 = dead_value
                    raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                         start_line=1532,
                                                         start_column=38,
                                                         end_line=1532,
                                                         end_column=72,
                                                         law_headings=["Article D823-9",
                                                         "Section 1 : Calcul, liquidation et versement des aides",
                                                         "Chapitre III : Modalités de liquidation et de versement",
                                                         "Titre II : Dispositions communes aux aides personnelles au logement",
                                                         "Livre VIII : Aides personnelles au logement",
                                                         "Partie réglementaire",
                                                         "Code de la construction et de l'habitation"]))
                try:
                    temp_sous_calcul_traitement_443 = ressources_menage_avec_arrondi
                except EmptyError:
                    temp_sous_calcul_traitement_443 = dead_value
                    raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                         start_line=1527,
                                                         start_column=44,
                                                         end_line=1527,
                                                         end_column=61,
                                                         law_headings=["Article D823-9",
                                                         "Section 1 : Calcul, liquidation et versement des aides",
                                                         "Chapitre III : Modalités de liquidation et de versement",
                                                         "Titre II : Dispositions communes aux aides personnelles au logement",
                                                         "Livre VIII : Aides personnelles au logement",
                                                         "Partie réglementaire",
                                                         "Code de la construction et de l'habitation"]))
                try:
                    temp_sous_calcul_traitement_444 = nombre_personnes_a_charge_11
                except EmptyError:
                    temp_sous_calcul_traitement_444 = dead_value
                    raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                         start_line=1528,
                                                         start_column=42,
                                                         end_line=1528,
                                                         end_column=67,
                                                         law_headings=["Article D823-9",
                                                         "Section 1 : Calcul, liquidation et versement des aides",
                                                         "Chapitre III : Modalités de liquidation et de versement",
                                                         "Titre II : Dispositions communes aux aides personnelles au logement",
                                                         "Livre VIII : Aides personnelles au logement",
                                                         "Partie réglementaire",
                                                         "Code de la construction et de l'habitation"]))
                try:
                    temp_sous_calcul_traitement_445 = situation_familiale_calcul_apl_8
                except EmptyError:
                    temp_sous_calcul_traitement_445 = dead_value
                    raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                         start_line=1531,
                                                         start_column=47,
                                                         end_line=1531,
                                                         end_column=77,
                                                         law_headings=["Article D823-9",
                                                         "Section 1 : Calcul, liquidation et versement des aides",
                                                         "Chapitre III : Modalités de liquidation et de versement",
                                                         "Titre II : Dispositions communes aux aides personnelles au logement",
                                                         "Livre VIII : Aides personnelles au logement",
                                                         "Partie réglementaire",
                                                         "Code de la construction et de l'habitation"]))
                try:
                    temp_sous_calcul_traitement_446 = proprietaire_2.type_travaux_logement_d832_15
                except EmptyError:
                    temp_sous_calcul_traitement_446 = dead_value
                    raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                         start_line=1533,
                                                         start_column=38,
                                                         end_line=1533,
                                                         end_column=80,
                                                         law_headings=["Article D823-9",
                                                         "Section 1 : Calcul, liquidation et versement des aides",
                                                         "Chapitre III : Modalités de liquidation et de versement",
                                                         "Titre II : Dispositions communes aux aides personnelles au logement",
                                                         "Livre VIII : Aides personnelles au logement",
                                                         "Partie réglementaire",
                                                         "Code de la construction et de l'habitation"]))
                try:
                    temp_sous_calcul_traitement_447 = proprietaire_2.pret.date_signature
                except EmptyError:
                    temp_sous_calcul_traitement_447 = dead_value
                    raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                         start_line=1534,
                                                         start_column=36,
                                                         end_line=1534,
                                                         end_column=68,
                                                         law_headings=["Article D823-9",
                                                         "Section 1 : Calcul, liquidation et versement des aides",
                                                         "Chapitre III : Modalités de liquidation et de versement",
                                                         "Titre II : Dispositions communes aux aides personnelles au logement",
                                                         "Livre VIII : Aides personnelles au logement",
                                                         "Partie réglementaire",
                                                         "Code de la construction et de l'habitation"]))
                try:
                    temp_sous_calcul_traitement_448 = proprietaire_2.local_habite_premiere_fois_beneficiaire
                except EmptyError:
                    temp_sous_calcul_traitement_448 = dead_value
                    raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                         start_line=1536,
                                                         start_column=14,
                                                         end_line=1536,
                                                         end_column=66,
                                                         law_headings=["Article D823-9",
                                                         "Section 1 : Calcul, liquidation et versement des aides",
                                                         "Chapitre III : Modalités de liquidation et de versement",
                                                         "Titre II : Dispositions communes aux aides personnelles au logement",
                                                         "Livre VIII : Aides personnelles au logement",
                                                         "Partie réglementaire",
                                                         "Code de la construction et de l'habitation"]))
                try:
                    temp_sous_calcul_traitement_449 = proprietaire_2.date_entree_logement
                except EmptyError:
                    temp_sous_calcul_traitement_449 = dead_value
                    raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                         start_line=1537,
                                                         start_column=37,
                                                         end_line=1537,
                                                         end_column=70,
                                                         law_headings=["Article D823-9",
                                                         "Section 1 : Calcul, liquidation et versement des aides",
                                                         "Chapitre III : Modalités de liquidation et de versement",
                                                         "Titre II : Dispositions communes aux aides personnelles au logement",
                                                         "Livre VIII : Aides personnelles au logement",
                                                         "Partie réglementaire",
                                                         "Code de la construction et de l'habitation"]))
                try:
                    temp_sous_calcul_traitement_450 = proprietaire_2.copropriete
                except EmptyError:
                    temp_sous_calcul_traitement_450 = dead_value
                    raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                         start_line=1538,
                                                         start_column=28,
                                                         end_line=1538,
                                                         end_column=52,
                                                         law_headings=["Article D823-9",
                                                         "Section 1 : Calcul, liquidation et versement des aides",
                                                         "Chapitre III : Modalités de liquidation et de versement",
                                                         "Titre II : Dispositions communes aux aides personnelles au logement",
                                                         "Livre VIII : Aides personnelles au logement",
                                                         "Partie réglementaire",
                                                         "Code de la construction et de l'habitation"]))
                try:
                    temp_sous_calcul_traitement_451 = proprietaire_2.situation_r822_11_13_17
                except EmptyError:
                    temp_sous_calcul_traitement_451 = dead_value
                    raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                         start_line=1539,
                                                         start_column=40,
                                                         end_line=1539,
                                                         end_column=76,
                                                         law_headings=["Article D823-9",
                                                         "Section 1 : Calcul, liquidation et versement des aides",
                                                         "Chapitre III : Modalités de liquidation et de versement",
                                                         "Titre II : Dispositions communes aux aides personnelles au logement",
                                                         "Livre VIII : Aides personnelles au logement",
                                                         "Partie réglementaire",
                                                         "Code de la construction et de l'habitation"]))
                try:
                    temp_sous_calcul_traitement_452 = zone_6
                except EmptyError:
                    temp_sous_calcul_traitement_452 = dead_value
                    raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                         start_line=1529,
                                                         start_column=21,
                                                         end_line=1529,
                                                         end_column=25,
                                                         law_headings=["Article D823-9",
                                                         "Section 1 : Calcul, liquidation et versement des aides",
                                                         "Chapitre III : Modalités de liquidation et de versement",
                                                         "Titre II : Dispositions communes aux aides personnelles au logement",
                                                         "Livre VIII : Aides personnelles au logement",
                                                         "Partie réglementaire",
                                                         "Code de la construction et de l'habitation"]))
                try:
                    temp_sous_calcul_traitement_453 = proprietaire_2.pret.type_pret
                except EmptyError:
                    temp_sous_calcul_traitement_453 = dead_value
                    raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                         start_line=1540,
                                                         start_column=26,
                                                         end_line=1540,
                                                         end_column=53,
                                                         law_headings=["Article D823-9",
                                                         "Section 1 : Calcul, liquidation et versement des aides",
                                                         "Chapitre III : Modalités de liquidation et de versement",
                                                         "Titre II : Dispositions communes aux aides personnelles au logement",
                                                         "Livre VIII : Aides personnelles au logement",
                                                         "Partie réglementaire",
                                                         "Code de la construction et de l'habitation"]))
                try:
                    temp_sous_calcul_traitement_454 = proprietaire_2.anciennete_logement
                except EmptyError:
                    temp_sous_calcul_traitement_454 = dead_value
                    raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                         start_line=1541,
                                                         start_column=36,
                                                         end_line=1541,
                                                         end_column=68,
                                                         law_headings=["Article D823-9",
                                                         "Section 1 : Calcul, liquidation et versement des aides",
                                                         "Chapitre III : Modalités de liquidation et de versement",
                                                         "Titre II : Dispositions communes aux aides personnelles au logement",
                                                         "Livre VIII : Aides personnelles au logement",
                                                         "Partie réglementaire",
                                                         "Code de la construction et de l'habitation"]))
                try:
                    temp_sous_calcul_traitement_455 = date_courante_14
                except EmptyError:
                    temp_sous_calcul_traitement_455 = dead_value
                    raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                         start_line=1530,
                                                         start_column=30,
                                                         end_line=1530,
                                                         end_column=43,
                                                         law_headings=["Article D823-9",
                                                         "Section 1 : Calcul, liquidation et versement des aides",
                                                         "Chapitre III : Modalités de liquidation et de versement",
                                                         "Titre II : Dispositions communes aux aides personnelles au logement",
                                                         "Livre VIII : Aides personnelles au logement",
                                                         "Partie réglementaire",
                                                         "Code de la construction et de l'habitation"]))
                try:
                    temp_sous_calcul_traitement_456 = proprietaire_2.mensualite_principale
                except EmptyError:
                    temp_sous_calcul_traitement_456 = dead_value
                    raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                         start_line=1532,
                                                         start_column=38,
                                                         end_line=1532,
                                                         end_column=72,
                                                         law_headings=["Article D823-9",
                                                         "Section 1 : Calcul, liquidation et versement des aides",
                                                         "Chapitre III : Modalités de liquidation et de versement",
                                                         "Titre II : Dispositions communes aux aides personnelles au logement",
                                                         "Livre VIII : Aides personnelles au logement",
                                                         "Partie réglementaire",
                                                         "Code de la construction et de l'habitation"]))
                try:
                    temp_sous_calcul_traitement_457 = ressources_menage_avec_arrondi
                except EmptyError:
                    temp_sous_calcul_traitement_457 = dead_value
                    raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                         start_line=1527,
                                                         start_column=44,
                                                         end_line=1527,
                                                         end_column=61,
                                                         law_headings=["Article D823-9",
                                                         "Section 1 : Calcul, liquidation et versement des aides",
                                                         "Chapitre III : Modalités de liquidation et de versement",
                                                         "Titre II : Dispositions communes aux aides personnelles au logement",
                                                         "Livre VIII : Aides personnelles au logement",
                                                         "Partie réglementaire",
                                                         "Code de la construction et de l'habitation"]))
                try:
                    temp_sous_calcul_traitement_458 = nombre_personnes_a_charge_11
                except EmptyError:
                    temp_sous_calcul_traitement_458 = dead_value
                    raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                         start_line=1528,
                                                         start_column=42,
                                                         end_line=1528,
                                                         end_column=67,
                                                         law_headings=["Article D823-9",
                                                         "Section 1 : Calcul, liquidation et versement des aides",
                                                         "Chapitre III : Modalités de liquidation et de versement",
                                                         "Titre II : Dispositions communes aux aides personnelles au logement",
                                                         "Livre VIII : Aides personnelles au logement",
                                                         "Partie réglementaire",
                                                         "Code de la construction et de l'habitation"]))
                try:
                    temp_sous_calcul_traitement_459 = situation_familiale_calcul_apl_8
                except EmptyError:
                    temp_sous_calcul_traitement_459 = dead_value
                    raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                         start_line=1531,
                                                         start_column=47,
                                                         end_line=1531,
                                                         end_column=77,
                                                         law_headings=["Article D823-9",
                                                         "Section 1 : Calcul, liquidation et versement des aides",
                                                         "Chapitre III : Modalités de liquidation et de versement",
                                                         "Titre II : Dispositions communes aux aides personnelles au logement",
                                                         "Livre VIII : Aides personnelles au logement",
                                                         "Partie réglementaire",
                                                         "Code de la construction et de l'habitation"]))
                try:
                    temp_sous_calcul_traitement_460 = proprietaire_2.type_travaux_logement_d832_15
                except EmptyError:
                    temp_sous_calcul_traitement_460 = dead_value
                    raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                         start_line=1533,
                                                         start_column=38,
                                                         end_line=1533,
                                                         end_column=80,
                                                         law_headings=["Article D823-9",
                                                         "Section 1 : Calcul, liquidation et versement des aides",
                                                         "Chapitre III : Modalités de liquidation et de versement",
                                                         "Titre II : Dispositions communes aux aides personnelles au logement",
                                                         "Livre VIII : Aides personnelles au logement",
                                                         "Partie réglementaire",
                                                         "Code de la construction et de l'habitation"]))
                try:
                    temp_sous_calcul_traitement_461 = proprietaire_2.pret.date_signature
                except EmptyError:
                    temp_sous_calcul_traitement_461 = dead_value
                    raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                         start_line=1534,
                                                         start_column=36,
                                                         end_line=1534,
                                                         end_column=68,
                                                         law_headings=["Article D823-9",
                                                         "Section 1 : Calcul, liquidation et versement des aides",
                                                         "Chapitre III : Modalités de liquidation et de versement",
                                                         "Titre II : Dispositions communes aux aides personnelles au logement",
                                                         "Livre VIII : Aides personnelles au logement",
                                                         "Partie réglementaire",
                                                         "Code de la construction et de l'habitation"]))
                try:
                    temp_sous_calcul_traitement_462 = proprietaire_2.local_habite_premiere_fois_beneficiaire
                except EmptyError:
                    temp_sous_calcul_traitement_462 = dead_value
                    raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                         start_line=1536,
                                                         start_column=14,
                                                         end_line=1536,
                                                         end_column=66,
                                                         law_headings=["Article D823-9",
                                                         "Section 1 : Calcul, liquidation et versement des aides",
                                                         "Chapitre III : Modalités de liquidation et de versement",
                                                         "Titre II : Dispositions communes aux aides personnelles au logement",
                                                         "Livre VIII : Aides personnelles au logement",
                                                         "Partie réglementaire",
                                                         "Code de la construction et de l'habitation"]))
                try:
                    temp_sous_calcul_traitement_463 = proprietaire_2.date_entree_logement
                except EmptyError:
                    temp_sous_calcul_traitement_463 = dead_value
                    raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                         start_line=1537,
                                                         start_column=37,
                                                         end_line=1537,
                                                         end_column=70,
                                                         law_headings=["Article D823-9",
                                                         "Section 1 : Calcul, liquidation et versement des aides",
                                                         "Chapitre III : Modalités de liquidation et de versement",
                                                         "Titre II : Dispositions communes aux aides personnelles au logement",
                                                         "Livre VIII : Aides personnelles au logement",
                                                         "Partie réglementaire",
                                                         "Code de la construction et de l'habitation"]))
                try:
                    temp_sous_calcul_traitement_464 = proprietaire_2.copropriete
                except EmptyError:
                    temp_sous_calcul_traitement_464 = dead_value
                    raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                         start_line=1538,
                                                         start_column=28,
                                                         end_line=1538,
                                                         end_column=52,
                                                         law_headings=["Article D823-9",
                                                         "Section 1 : Calcul, liquidation et versement des aides",
                                                         "Chapitre III : Modalités de liquidation et de versement",
                                                         "Titre II : Dispositions communes aux aides personnelles au logement",
                                                         "Livre VIII : Aides personnelles au logement",
                                                         "Partie réglementaire",
                                                         "Code de la construction et de l'habitation"]))
                try:
                    temp_sous_calcul_traitement_465 = proprietaire_2.situation_r822_11_13_17
                except EmptyError:
                    temp_sous_calcul_traitement_465 = dead_value
                    raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                         start_line=1539,
                                                         start_column=40,
                                                         end_line=1539,
                                                         end_column=76,
                                                         law_headings=["Article D823-9",
                                                         "Section 1 : Calcul, liquidation et versement des aides",
                                                         "Chapitre III : Modalités de liquidation et de versement",
                                                         "Titre II : Dispositions communes aux aides personnelles au logement",
                                                         "Livre VIII : Aides personnelles au logement",
                                                         "Partie réglementaire",
                                                         "Code de la construction et de l'habitation"]))
                try:
                    temp_sous_calcul_traitement_466 = zone_6
                except EmptyError:
                    temp_sous_calcul_traitement_466 = dead_value
                    raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                         start_line=1529,
                                                         start_column=21,
                                                         end_line=1529,
                                                         end_column=25,
                                                         law_headings=["Article D823-9",
                                                         "Section 1 : Calcul, liquidation et versement des aides",
                                                         "Chapitre III : Modalités de liquidation et de versement",
                                                         "Titre II : Dispositions communes aux aides personnelles au logement",
                                                         "Livre VIII : Aides personnelles au logement",
                                                         "Partie réglementaire",
                                                         "Code de la construction et de l'habitation"]))
                try:
                    temp_sous_calcul_traitement_467 = proprietaire_2.pret.type_pret
                except EmptyError:
                    temp_sous_calcul_traitement_467 = dead_value
                    raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                         start_line=1540,
                                                         start_column=26,
                                                         end_line=1540,
                                                         end_column=53,
                                                         law_headings=["Article D823-9",
                                                         "Section 1 : Calcul, liquidation et versement des aides",
                                                         "Chapitre III : Modalités de liquidation et de versement",
                                                         "Titre II : Dispositions communes aux aides personnelles au logement",
                                                         "Livre VIII : Aides personnelles au logement",
                                                         "Partie réglementaire",
                                                         "Code de la construction et de l'habitation"]))
                try:
                    temp_sous_calcul_traitement_468 = proprietaire_2.anciennete_logement
                except EmptyError:
                    temp_sous_calcul_traitement_468 = dead_value
                    raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                         start_line=1541,
                                                         start_column=36,
                                                         end_line=1541,
                                                         end_column=68,
                                                         law_headings=["Article D823-9",
                                                         "Section 1 : Calcul, liquidation et versement des aides",
                                                         "Chapitre III : Modalités de liquidation et de versement",
                                                         "Titre II : Dispositions communes aux aides personnelles au logement",
                                                         "Livre VIII : Aides personnelles au logement",
                                                         "Partie réglementaire",
                                                         "Code de la construction et de l'habitation"]))
                try:
                    temp_sous_calcul_traitement_469 = date_courante_14
                except EmptyError:
                    temp_sous_calcul_traitement_469 = dead_value
                    raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                         start_line=1530,
                                                         start_column=30,
                                                         end_line=1530,
                                                         end_column=43,
                                                         law_headings=["Article D823-9",
                                                         "Section 1 : Calcul, liquidation et versement des aides",
                                                         "Chapitre III : Modalités de liquidation et de versement",
                                                         "Titre II : Dispositions communes aux aides personnelles au logement",
                                                         "Livre VIII : Aides personnelles au logement",
                                                         "Partie réglementaire",
                                                         "Code de la construction et de l'habitation"]))
                def temp_sous_calcul_traitement_470(param0_5:Money):
                    try:
                        temp_sous_calcul_traitement_471 = proprietaire_2.mensualite_principale
                    except EmptyError:
                        temp_sous_calcul_traitement_471 = dead_value
                        raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                             start_line=1532,
                                                             start_column=38,
                                                             end_line=1532,
                                                             end_column=72,
                                                             law_headings=["Article D823-9",
                                                             "Section 1 : Calcul, liquidation et versement des aides",
                                                             "Chapitre III : Modalités de liquidation et de versement",
                                                             "Titre II : Dispositions communes aux aides personnelles au logement",
                                                             "Livre VIII : Aides personnelles au logement",
                                                             "Partie réglementaire",
                                                             "Code de la construction et de l'habitation"]))
                    try:
                        temp_sous_calcul_traitement_472 = ressources_menage_avec_arrondi
                    except EmptyError:
                        temp_sous_calcul_traitement_472 = dead_value
                        raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                             start_line=1527,
                                                             start_column=44,
                                                             end_line=1527,
                                                             end_column=61,
                                                             law_headings=["Article D823-9",
                                                             "Section 1 : Calcul, liquidation et versement des aides",
                                                             "Chapitre III : Modalités de liquidation et de versement",
                                                             "Titre II : Dispositions communes aux aides personnelles au logement",
                                                             "Livre VIII : Aides personnelles au logement",
                                                             "Partie réglementaire",
                                                             "Code de la construction et de l'habitation"]))
                    try:
                        temp_sous_calcul_traitement_473 = nombre_personnes_a_charge_11
                    except EmptyError:
                        temp_sous_calcul_traitement_473 = dead_value
                        raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                             start_line=1528,
                                                             start_column=42,
                                                             end_line=1528,
                                                             end_column=67,
                                                             law_headings=["Article D823-9",
                                                             "Section 1 : Calcul, liquidation et versement des aides",
                                                             "Chapitre III : Modalités de liquidation et de versement",
                                                             "Titre II : Dispositions communes aux aides personnelles au logement",
                                                             "Livre VIII : Aides personnelles au logement",
                                                             "Partie réglementaire",
                                                             "Code de la construction et de l'habitation"]))
                    try:
                        temp_sous_calcul_traitement_474 = situation_familiale_calcul_apl_8
                    except EmptyError:
                        temp_sous_calcul_traitement_474 = dead_value
                        raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                             start_line=1531,
                                                             start_column=47,
                                                             end_line=1531,
                                                             end_column=77,
                                                             law_headings=["Article D823-9",
                                                             "Section 1 : Calcul, liquidation et versement des aides",
                                                             "Chapitre III : Modalités de liquidation et de versement",
                                                             "Titre II : Dispositions communes aux aides personnelles au logement",
                                                             "Livre VIII : Aides personnelles au logement",
                                                             "Partie réglementaire",
                                                             "Code de la construction et de l'habitation"]))
                    try:
                        temp_sous_calcul_traitement_475 = proprietaire_2.type_travaux_logement_d832_15
                    except EmptyError:
                        temp_sous_calcul_traitement_475 = dead_value
                        raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                             start_line=1533,
                                                             start_column=38,
                                                             end_line=1533,
                                                             end_column=80,
                                                             law_headings=["Article D823-9",
                                                             "Section 1 : Calcul, liquidation et versement des aides",
                                                             "Chapitre III : Modalités de liquidation et de versement",
                                                             "Titre II : Dispositions communes aux aides personnelles au logement",
                                                             "Livre VIII : Aides personnelles au logement",
                                                             "Partie réglementaire",
                                                             "Code de la construction et de l'habitation"]))
                    try:
                        temp_sous_calcul_traitement_476 = proprietaire_2.pret.date_signature
                    except EmptyError:
                        temp_sous_calcul_traitement_476 = dead_value
                        raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                             start_line=1534,
                                                             start_column=36,
                                                             end_line=1534,
                                                             end_column=68,
                                                             law_headings=["Article D823-9",
                                                             "Section 1 : Calcul, liquidation et versement des aides",
                                                             "Chapitre III : Modalités de liquidation et de versement",
                                                             "Titre II : Dispositions communes aux aides personnelles au logement",
                                                             "Livre VIII : Aides personnelles au logement",
                                                             "Partie réglementaire",
                                                             "Code de la construction et de l'habitation"]))
                    try:
                        temp_sous_calcul_traitement_477 = proprietaire_2.local_habite_premiere_fois_beneficiaire
                    except EmptyError:
                        temp_sous_calcul_traitement_477 = dead_value
                        raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                             start_line=1536,
                                                             start_column=14,
                                                             end_line=1536,
                                                             end_column=66,
                                                             law_headings=["Article D823-9",
                                                             "Section 1 : Calcul, liquidation et versement des aides",
                                                             "Chapitre III : Modalités de liquidation et de versement",
                                                             "Titre II : Dispositions communes aux aides personnelles au logement",
                                                             "Livre VIII : Aides personnelles au logement",
                                                             "Partie réglementaire",
                                                             "Code de la construction et de l'habitation"]))
                    try:
                        temp_sous_calcul_traitement_478 = proprietaire_2.date_entree_logement
                    except EmptyError:
                        temp_sous_calcul_traitement_478 = dead_value
                        raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                             start_line=1537,
                                                             start_column=37,
                                                             end_line=1537,
                                                             end_column=70,
                                                             law_headings=["Article D823-9",
                                                             "Section 1 : Calcul, liquidation et versement des aides",
                                                             "Chapitre III : Modalités de liquidation et de versement",
                                                             "Titre II : Dispositions communes aux aides personnelles au logement",
                                                             "Livre VIII : Aides personnelles au logement",
                                                             "Partie réglementaire",
                                                             "Code de la construction et de l'habitation"]))
                    try:
                        temp_sous_calcul_traitement_479 = proprietaire_2.copropriete
                    except EmptyError:
                        temp_sous_calcul_traitement_479 = dead_value
                        raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                             start_line=1538,
                                                             start_column=28,
                                                             end_line=1538,
                                                             end_column=52,
                                                             law_headings=["Article D823-9",
                                                             "Section 1 : Calcul, liquidation et versement des aides",
                                                             "Chapitre III : Modalités de liquidation et de versement",
                                                             "Titre II : Dispositions communes aux aides personnelles au logement",
                                                             "Livre VIII : Aides personnelles au logement",
                                                             "Partie réglementaire",
                                                             "Code de la construction et de l'habitation"]))
                    try:
                        temp_sous_calcul_traitement_480 = proprietaire_2.situation_r822_11_13_17
                    except EmptyError:
                        temp_sous_calcul_traitement_480 = dead_value
                        raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                             start_line=1539,
                                                             start_column=40,
                                                             end_line=1539,
                                                             end_column=76,
                                                             law_headings=["Article D823-9",
                                                             "Section 1 : Calcul, liquidation et versement des aides",
                                                             "Chapitre III : Modalités de liquidation et de versement",
                                                             "Titre II : Dispositions communes aux aides personnelles au logement",
                                                             "Livre VIII : Aides personnelles au logement",
                                                             "Partie réglementaire",
                                                             "Code de la construction et de l'habitation"]))
                    try:
                        temp_sous_calcul_traitement_481 = zone_6
                    except EmptyError:
                        temp_sous_calcul_traitement_481 = dead_value
                        raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                             start_line=1529,
                                                             start_column=21,
                                                             end_line=1529,
                                                             end_column=25,
                                                             law_headings=["Article D823-9",
                                                             "Section 1 : Calcul, liquidation et versement des aides",
                                                             "Chapitre III : Modalités de liquidation et de versement",
                                                             "Titre II : Dispositions communes aux aides personnelles au logement",
                                                             "Livre VIII : Aides personnelles au logement",
                                                             "Partie réglementaire",
                                                             "Code de la construction et de l'habitation"]))
                    try:
                        temp_sous_calcul_traitement_482 = proprietaire_2.pret.type_pret
                    except EmptyError:
                        temp_sous_calcul_traitement_482 = dead_value
                        raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                             start_line=1540,
                                                             start_column=26,
                                                             end_line=1540,
                                                             end_column=53,
                                                             law_headings=["Article D823-9",
                                                             "Section 1 : Calcul, liquidation et versement des aides",
                                                             "Chapitre III : Modalités de liquidation et de versement",
                                                             "Titre II : Dispositions communes aux aides personnelles au logement",
                                                             "Livre VIII : Aides personnelles au logement",
                                                             "Partie réglementaire",
                                                             "Code de la construction et de l'habitation"]))
                    try:
                        temp_sous_calcul_traitement_483 = proprietaire_2.anciennete_logement
                    except EmptyError:
                        temp_sous_calcul_traitement_483 = dead_value
                        raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                             start_line=1541,
                                                             start_column=36,
                                                             end_line=1541,
                                                             end_column=68,
                                                             law_headings=["Article D823-9",
                                                             "Section 1 : Calcul, liquidation et versement des aides",
                                                             "Chapitre III : Modalités de liquidation et de versement",
                                                             "Titre II : Dispositions communes aux aides personnelles au logement",
                                                             "Livre VIII : Aides personnelles au logement",
                                                             "Partie réglementaire",
                                                             "Code de la construction et de l'habitation"]))
                    try:
                        temp_sous_calcul_traitement_484 = date_courante_14
                    except EmptyError:
                        temp_sous_calcul_traitement_484 = dead_value
                        raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                             start_line=1530,
                                                             start_column=30,
                                                             end_line=1530,
                                                             end_column=43,
                                                             law_headings=["Article D823-9",
                                                             "Section 1 : Calcul, liquidation et versement des aides",
                                                             "Chapitre III : Modalités de liquidation et de versement",
                                                             "Titre II : Dispositions communes aux aides personnelles au logement",
                                                             "Livre VIII : Aides personnelles au logement",
                                                             "Partie réglementaire",
                                                             "Code de la construction et de l'habitation"]))
                    return calcul_aide_personnalisee_logement_accession_propriete(
                        CalculAidePersonnaliseeLogementAccessionProprieteIn(mensualite_principale_in = temp_sous_calcul_traitement_471,
                        ressources_menage_arrondies_in = temp_sous_calcul_traitement_472,
                        nombre_personnes_a_charge_in = temp_sous_calcul_traitement_473,
                        situation_familiale_calcul_apl_in = temp_sous_calcul_traitement_474,
                        type_travaux_logement_in = temp_sous_calcul_traitement_475,
                        date_signature_pret_in = temp_sous_calcul_traitement_476,
                        local_habite_premiere_fois_beneficiaire_in = temp_sous_calcul_traitement_477,
                        date_entree_logement_in = temp_sous_calcul_traitement_478,
                        copropriete_in = temp_sous_calcul_traitement_479,
                        situation_r822_11_13_17_in = temp_sous_calcul_traitement_480,
                        zone_in = temp_sous_calcul_traitement_481,
                        type_pret_in = temp_sous_calcul_traitement_482,
                        anciennete_logement_in = temp_sous_calcul_traitement_483,
                        date_courante_in = temp_sous_calcul_traitement_484)).traitement_aide_finale(
                        param0_5)
                try:
                    temp_sous_calcul_traitement_485 = proprietaire_2.mensualite_principale
                except EmptyError:
                    temp_sous_calcul_traitement_485 = dead_value
                    raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                         start_line=1532,
                                                         start_column=38,
                                                         end_line=1532,
                                                         end_column=72,
                                                         law_headings=["Article D823-9",
                                                         "Section 1 : Calcul, liquidation et versement des aides",
                                                         "Chapitre III : Modalités de liquidation et de versement",
                                                         "Titre II : Dispositions communes aux aides personnelles au logement",
                                                         "Livre VIII : Aides personnelles au logement",
                                                         "Partie réglementaire",
                                                         "Code de la construction et de l'habitation"]))
                try:
                    temp_sous_calcul_traitement_486 = ressources_menage_avec_arrondi
                except EmptyError:
                    temp_sous_calcul_traitement_486 = dead_value
                    raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                         start_line=1527,
                                                         start_column=44,
                                                         end_line=1527,
                                                         end_column=61,
                                                         law_headings=["Article D823-9",
                                                         "Section 1 : Calcul, liquidation et versement des aides",
                                                         "Chapitre III : Modalités de liquidation et de versement",
                                                         "Titre II : Dispositions communes aux aides personnelles au logement",
                                                         "Livre VIII : Aides personnelles au logement",
                                                         "Partie réglementaire",
                                                         "Code de la construction et de l'habitation"]))
                try:
                    temp_sous_calcul_traitement_487 = nombre_personnes_a_charge_11
                except EmptyError:
                    temp_sous_calcul_traitement_487 = dead_value
                    raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                         start_line=1528,
                                                         start_column=42,
                                                         end_line=1528,
                                                         end_column=67,
                                                         law_headings=["Article D823-9",
                                                         "Section 1 : Calcul, liquidation et versement des aides",
                                                         "Chapitre III : Modalités de liquidation et de versement",
                                                         "Titre II : Dispositions communes aux aides personnelles au logement",
                                                         "Livre VIII : Aides personnelles au logement",
                                                         "Partie réglementaire",
                                                         "Code de la construction et de l'habitation"]))
                try:
                    temp_sous_calcul_traitement_488 = situation_familiale_calcul_apl_8
                except EmptyError:
                    temp_sous_calcul_traitement_488 = dead_value
                    raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                         start_line=1531,
                                                         start_column=47,
                                                         end_line=1531,
                                                         end_column=77,
                                                         law_headings=["Article D823-9",
                                                         "Section 1 : Calcul, liquidation et versement des aides",
                                                         "Chapitre III : Modalités de liquidation et de versement",
                                                         "Titre II : Dispositions communes aux aides personnelles au logement",
                                                         "Livre VIII : Aides personnelles au logement",
                                                         "Partie réglementaire",
                                                         "Code de la construction et de l'habitation"]))
                try:
                    temp_sous_calcul_traitement_489 = proprietaire_2.type_travaux_logement_d832_15
                except EmptyError:
                    temp_sous_calcul_traitement_489 = dead_value
                    raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                         start_line=1533,
                                                         start_column=38,
                                                         end_line=1533,
                                                         end_column=80,
                                                         law_headings=["Article D823-9",
                                                         "Section 1 : Calcul, liquidation et versement des aides",
                                                         "Chapitre III : Modalités de liquidation et de versement",
                                                         "Titre II : Dispositions communes aux aides personnelles au logement",
                                                         "Livre VIII : Aides personnelles au logement",
                                                         "Partie réglementaire",
                                                         "Code de la construction et de l'habitation"]))
                try:
                    temp_sous_calcul_traitement_490 = proprietaire_2.pret.date_signature
                except EmptyError:
                    temp_sous_calcul_traitement_490 = dead_value
                    raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                         start_line=1534,
                                                         start_column=36,
                                                         end_line=1534,
                                                         end_column=68,
                                                         law_headings=["Article D823-9",
                                                         "Section 1 : Calcul, liquidation et versement des aides",
                                                         "Chapitre III : Modalités de liquidation et de versement",
                                                         "Titre II : Dispositions communes aux aides personnelles au logement",
                                                         "Livre VIII : Aides personnelles au logement",
                                                         "Partie réglementaire",
                                                         "Code de la construction et de l'habitation"]))
                try:
                    temp_sous_calcul_traitement_491 = proprietaire_2.local_habite_premiere_fois_beneficiaire
                except EmptyError:
                    temp_sous_calcul_traitement_491 = dead_value
                    raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                         start_line=1536,
                                                         start_column=14,
                                                         end_line=1536,
                                                         end_column=66,
                                                         law_headings=["Article D823-9",
                                                         "Section 1 : Calcul, liquidation et versement des aides",
                                                         "Chapitre III : Modalités de liquidation et de versement",
                                                         "Titre II : Dispositions communes aux aides personnelles au logement",
                                                         "Livre VIII : Aides personnelles au logement",
                                                         "Partie réglementaire",
                                                         "Code de la construction et de l'habitation"]))
                try:
                    temp_sous_calcul_traitement_492 = proprietaire_2.date_entree_logement
                except EmptyError:
                    temp_sous_calcul_traitement_492 = dead_value
                    raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                         start_line=1537,
                                                         start_column=37,
                                                         end_line=1537,
                                                         end_column=70,
                                                         law_headings=["Article D823-9",
                                                         "Section 1 : Calcul, liquidation et versement des aides",
                                                         "Chapitre III : Modalités de liquidation et de versement",
                                                         "Titre II : Dispositions communes aux aides personnelles au logement",
                                                         "Livre VIII : Aides personnelles au logement",
                                                         "Partie réglementaire",
                                                         "Code de la construction et de l'habitation"]))
                try:
                    temp_sous_calcul_traitement_493 = proprietaire_2.copropriete
                except EmptyError:
                    temp_sous_calcul_traitement_493 = dead_value
                    raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                         start_line=1538,
                                                         start_column=28,
                                                         end_line=1538,
                                                         end_column=52,
                                                         law_headings=["Article D823-9",
                                                         "Section 1 : Calcul, liquidation et versement des aides",
                                                         "Chapitre III : Modalités de liquidation et de versement",
                                                         "Titre II : Dispositions communes aux aides personnelles au logement",
                                                         "Livre VIII : Aides personnelles au logement",
                                                         "Partie réglementaire",
                                                         "Code de la construction et de l'habitation"]))
                try:
                    temp_sous_calcul_traitement_494 = proprietaire_2.situation_r822_11_13_17
                except EmptyError:
                    temp_sous_calcul_traitement_494 = dead_value
                    raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                         start_line=1539,
                                                         start_column=40,
                                                         end_line=1539,
                                                         end_column=76,
                                                         law_headings=["Article D823-9",
                                                         "Section 1 : Calcul, liquidation et versement des aides",
                                                         "Chapitre III : Modalités de liquidation et de versement",
                                                         "Titre II : Dispositions communes aux aides personnelles au logement",
                                                         "Livre VIII : Aides personnelles au logement",
                                                         "Partie réglementaire",
                                                         "Code de la construction et de l'habitation"]))
                try:
                    temp_sous_calcul_traitement_495 = zone_6
                except EmptyError:
                    temp_sous_calcul_traitement_495 = dead_value
                    raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                         start_line=1529,
                                                         start_column=21,
                                                         end_line=1529,
                                                         end_column=25,
                                                         law_headings=["Article D823-9",
                                                         "Section 1 : Calcul, liquidation et versement des aides",
                                                         "Chapitre III : Modalités de liquidation et de versement",
                                                         "Titre II : Dispositions communes aux aides personnelles au logement",
                                                         "Livre VIII : Aides personnelles au logement",
                                                         "Partie réglementaire",
                                                         "Code de la construction et de l'habitation"]))
                try:
                    temp_sous_calcul_traitement_496 = proprietaire_2.pret.type_pret
                except EmptyError:
                    temp_sous_calcul_traitement_496 = dead_value
                    raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                         start_line=1540,
                                                         start_column=26,
                                                         end_line=1540,
                                                         end_column=53,
                                                         law_headings=["Article D823-9",
                                                         "Section 1 : Calcul, liquidation et versement des aides",
                                                         "Chapitre III : Modalités de liquidation et de versement",
                                                         "Titre II : Dispositions communes aux aides personnelles au logement",
                                                         "Livre VIII : Aides personnelles au logement",
                                                         "Partie réglementaire",
                                                         "Code de la construction et de l'habitation"]))
                try:
                    temp_sous_calcul_traitement_497 = proprietaire_2.anciennete_logement
                except EmptyError:
                    temp_sous_calcul_traitement_497 = dead_value
                    raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                         start_line=1541,
                                                         start_column=36,
                                                         end_line=1541,
                                                         end_column=68,
                                                         law_headings=["Article D823-9",
                                                         "Section 1 : Calcul, liquidation et versement des aides",
                                                         "Chapitre III : Modalités de liquidation et de versement",
                                                         "Titre II : Dispositions communes aux aides personnelles au logement",
                                                         "Livre VIII : Aides personnelles au logement",
                                                         "Partie réglementaire",
                                                         "Code de la construction et de l'habitation"]))
                try:
                    temp_sous_calcul_traitement_498 = date_courante_14
                except EmptyError:
                    temp_sous_calcul_traitement_498 = dead_value
                    raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                         start_line=1530,
                                                         start_column=30,
                                                         end_line=1530,
                                                         end_column=43,
                                                         law_headings=["Article D823-9",
                                                         "Section 1 : Calcul, liquidation et versement des aides",
                                                         "Chapitre III : Modalités de liquidation et de versement",
                                                         "Titre II : Dispositions communes aux aides personnelles au logement",
                                                         "Livre VIII : Aides personnelles au logement",
                                                         "Partie réglementaire",
                                                         "Code de la construction et de l'habitation"]))
                try:
                    temp_sous_calcul_traitement_499 = proprietaire_2.mensualite_principale
                except EmptyError:
                    temp_sous_calcul_traitement_499 = dead_value
                    raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                         start_line=1532,
                                                         start_column=38,
                                                         end_line=1532,
                                                         end_column=72,
                                                         law_headings=["Article D823-9",
                                                         "Section 1 : Calcul, liquidation et versement des aides",
                                                         "Chapitre III : Modalités de liquidation et de versement",
                                                         "Titre II : Dispositions communes aux aides personnelles au logement",
                                                         "Livre VIII : Aides personnelles au logement",
                                                         "Partie réglementaire",
                                                         "Code de la construction et de l'habitation"]))
                try:
                    temp_sous_calcul_traitement_500 = ressources_menage_avec_arrondi
                except EmptyError:
                    temp_sous_calcul_traitement_500 = dead_value
                    raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                         start_line=1527,
                                                         start_column=44,
                                                         end_line=1527,
                                                         end_column=61,
                                                         law_headings=["Article D823-9",
                                                         "Section 1 : Calcul, liquidation et versement des aides",
                                                         "Chapitre III : Modalités de liquidation et de versement",
                                                         "Titre II : Dispositions communes aux aides personnelles au logement",
                                                         "Livre VIII : Aides personnelles au logement",
                                                         "Partie réglementaire",
                                                         "Code de la construction et de l'habitation"]))
                try:
                    temp_sous_calcul_traitement_501 = nombre_personnes_a_charge_11
                except EmptyError:
                    temp_sous_calcul_traitement_501 = dead_value
                    raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                         start_line=1528,
                                                         start_column=42,
                                                         end_line=1528,
                                                         end_column=67,
                                                         law_headings=["Article D823-9",
                                                         "Section 1 : Calcul, liquidation et versement des aides",
                                                         "Chapitre III : Modalités de liquidation et de versement",
                                                         "Titre II : Dispositions communes aux aides personnelles au logement",
                                                         "Livre VIII : Aides personnelles au logement",
                                                         "Partie réglementaire",
                                                         "Code de la construction et de l'habitation"]))
                try:
                    temp_sous_calcul_traitement_502 = situation_familiale_calcul_apl_8
                except EmptyError:
                    temp_sous_calcul_traitement_502 = dead_value
                    raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                         start_line=1531,
                                                         start_column=47,
                                                         end_line=1531,
                                                         end_column=77,
                                                         law_headings=["Article D823-9",
                                                         "Section 1 : Calcul, liquidation et versement des aides",
                                                         "Chapitre III : Modalités de liquidation et de versement",
                                                         "Titre II : Dispositions communes aux aides personnelles au logement",
                                                         "Livre VIII : Aides personnelles au logement",
                                                         "Partie réglementaire",
                                                         "Code de la construction et de l'habitation"]))
                try:
                    temp_sous_calcul_traitement_503 = proprietaire_2.type_travaux_logement_d832_15
                except EmptyError:
                    temp_sous_calcul_traitement_503 = dead_value
                    raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                         start_line=1533,
                                                         start_column=38,
                                                         end_line=1533,
                                                         end_column=80,
                                                         law_headings=["Article D823-9",
                                                         "Section 1 : Calcul, liquidation et versement des aides",
                                                         "Chapitre III : Modalités de liquidation et de versement",
                                                         "Titre II : Dispositions communes aux aides personnelles au logement",
                                                         "Livre VIII : Aides personnelles au logement",
                                                         "Partie réglementaire",
                                                         "Code de la construction et de l'habitation"]))
                try:
                    temp_sous_calcul_traitement_504 = proprietaire_2.pret.date_signature
                except EmptyError:
                    temp_sous_calcul_traitement_504 = dead_value
                    raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                         start_line=1534,
                                                         start_column=36,
                                                         end_line=1534,
                                                         end_column=68,
                                                         law_headings=["Article D823-9",
                                                         "Section 1 : Calcul, liquidation et versement des aides",
                                                         "Chapitre III : Modalités de liquidation et de versement",
                                                         "Titre II : Dispositions communes aux aides personnelles au logement",
                                                         "Livre VIII : Aides personnelles au logement",
                                                         "Partie réglementaire",
                                                         "Code de la construction et de l'habitation"]))
                try:
                    temp_sous_calcul_traitement_505 = proprietaire_2.local_habite_premiere_fois_beneficiaire
                except EmptyError:
                    temp_sous_calcul_traitement_505 = dead_value
                    raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                         start_line=1536,
                                                         start_column=14,
                                                         end_line=1536,
                                                         end_column=66,
                                                         law_headings=["Article D823-9",
                                                         "Section 1 : Calcul, liquidation et versement des aides",
                                                         "Chapitre III : Modalités de liquidation et de versement",
                                                         "Titre II : Dispositions communes aux aides personnelles au logement",
                                                         "Livre VIII : Aides personnelles au logement",
                                                         "Partie réglementaire",
                                                         "Code de la construction et de l'habitation"]))
                try:
                    temp_sous_calcul_traitement_506 = proprietaire_2.date_entree_logement
                except EmptyError:
                    temp_sous_calcul_traitement_506 = dead_value
                    raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                         start_line=1537,
                                                         start_column=37,
                                                         end_line=1537,
                                                         end_column=70,
                                                         law_headings=["Article D823-9",
                                                         "Section 1 : Calcul, liquidation et versement des aides",
                                                         "Chapitre III : Modalités de liquidation et de versement",
                                                         "Titre II : Dispositions communes aux aides personnelles au logement",
                                                         "Livre VIII : Aides personnelles au logement",
                                                         "Partie réglementaire",
                                                         "Code de la construction et de l'habitation"]))
                try:
                    temp_sous_calcul_traitement_507 = proprietaire_2.copropriete
                except EmptyError:
                    temp_sous_calcul_traitement_507 = dead_value
                    raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                         start_line=1538,
                                                         start_column=28,
                                                         end_line=1538,
                                                         end_column=52,
                                                         law_headings=["Article D823-9",
                                                         "Section 1 : Calcul, liquidation et versement des aides",
                                                         "Chapitre III : Modalités de liquidation et de versement",
                                                         "Titre II : Dispositions communes aux aides personnelles au logement",
                                                         "Livre VIII : Aides personnelles au logement",
                                                         "Partie réglementaire",
                                                         "Code de la construction et de l'habitation"]))
                try:
                    temp_sous_calcul_traitement_508 = proprietaire_2.situation_r822_11_13_17
                except EmptyError:
                    temp_sous_calcul_traitement_508 = dead_value
                    raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                         start_line=1539,
                                                         start_column=40,
                                                         end_line=1539,
                                                         end_column=76,
                                                         law_headings=["Article D823-9",
                                                         "Section 1 : Calcul, liquidation et versement des aides",
                                                         "Chapitre III : Modalités de liquidation et de versement",
                                                         "Titre II : Dispositions communes aux aides personnelles au logement",
                                                         "Livre VIII : Aides personnelles au logement",
                                                         "Partie réglementaire",
                                                         "Code de la construction et de l'habitation"]))
                try:
                    temp_sous_calcul_traitement_509 = zone_6
                except EmptyError:
                    temp_sous_calcul_traitement_509 = dead_value
                    raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                         start_line=1529,
                                                         start_column=21,
                                                         end_line=1529,
                                                         end_column=25,
                                                         law_headings=["Article D823-9",
                                                         "Section 1 : Calcul, liquidation et versement des aides",
                                                         "Chapitre III : Modalités de liquidation et de versement",
                                                         "Titre II : Dispositions communes aux aides personnelles au logement",
                                                         "Livre VIII : Aides personnelles au logement",
                                                         "Partie réglementaire",
                                                         "Code de la construction et de l'habitation"]))
                try:
                    temp_sous_calcul_traitement_510 = proprietaire_2.pret.type_pret
                except EmptyError:
                    temp_sous_calcul_traitement_510 = dead_value
                    raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                         start_line=1540,
                                                         start_column=26,
                                                         end_line=1540,
                                                         end_column=53,
                                                         law_headings=["Article D823-9",
                                                         "Section 1 : Calcul, liquidation et versement des aides",
                                                         "Chapitre III : Modalités de liquidation et de versement",
                                                         "Titre II : Dispositions communes aux aides personnelles au logement",
                                                         "Livre VIII : Aides personnelles au logement",
                                                         "Partie réglementaire",
                                                         "Code de la construction et de l'habitation"]))
                try:
                    temp_sous_calcul_traitement_511 = proprietaire_2.anciennete_logement
                except EmptyError:
                    temp_sous_calcul_traitement_511 = dead_value
                    raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                         start_line=1541,
                                                         start_column=36,
                                                         end_line=1541,
                                                         end_column=68,
                                                         law_headings=["Article D823-9",
                                                         "Section 1 : Calcul, liquidation et versement des aides",
                                                         "Chapitre III : Modalités de liquidation et de versement",
                                                         "Titre II : Dispositions communes aux aides personnelles au logement",
                                                         "Livre VIII : Aides personnelles au logement",
                                                         "Partie réglementaire",
                                                         "Code de la construction et de l'habitation"]))
                try:
                    temp_sous_calcul_traitement_512 = date_courante_14
                except EmptyError:
                    temp_sous_calcul_traitement_512 = dead_value
                    raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                         start_line=1530,
                                                         start_column=30,
                                                         end_line=1530,
                                                         end_column=43,
                                                         law_headings=["Article D823-9",
                                                         "Section 1 : Calcul, liquidation et versement des aides",
                                                         "Chapitre III : Modalités de liquidation et de versement",
                                                         "Titre II : Dispositions communes aux aides personnelles au logement",
                                                         "Livre VIII : Aides personnelles au logement",
                                                         "Partie réglementaire",
                                                         "Code de la construction et de l'habitation"]))
                try:
                    temp_sous_calcul_traitement_513 = proprietaire_2.mensualite_principale
                except EmptyError:
                    temp_sous_calcul_traitement_513 = dead_value
                    raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                         start_line=1532,
                                                         start_column=38,
                                                         end_line=1532,
                                                         end_column=72,
                                                         law_headings=["Article D823-9",
                                                         "Section 1 : Calcul, liquidation et versement des aides",
                                                         "Chapitre III : Modalités de liquidation et de versement",
                                                         "Titre II : Dispositions communes aux aides personnelles au logement",
                                                         "Livre VIII : Aides personnelles au logement",
                                                         "Partie réglementaire",
                                                         "Code de la construction et de l'habitation"]))
                try:
                    temp_sous_calcul_traitement_514 = ressources_menage_avec_arrondi
                except EmptyError:
                    temp_sous_calcul_traitement_514 = dead_value
                    raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                         start_line=1527,
                                                         start_column=44,
                                                         end_line=1527,
                                                         end_column=61,
                                                         law_headings=["Article D823-9",
                                                         "Section 1 : Calcul, liquidation et versement des aides",
                                                         "Chapitre III : Modalités de liquidation et de versement",
                                                         "Titre II : Dispositions communes aux aides personnelles au logement",
                                                         "Livre VIII : Aides personnelles au logement",
                                                         "Partie réglementaire",
                                                         "Code de la construction et de l'habitation"]))
                try:
                    temp_sous_calcul_traitement_515 = nombre_personnes_a_charge_11
                except EmptyError:
                    temp_sous_calcul_traitement_515 = dead_value
                    raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                         start_line=1528,
                                                         start_column=42,
                                                         end_line=1528,
                                                         end_column=67,
                                                         law_headings=["Article D823-9",
                                                         "Section 1 : Calcul, liquidation et versement des aides",
                                                         "Chapitre III : Modalités de liquidation et de versement",
                                                         "Titre II : Dispositions communes aux aides personnelles au logement",
                                                         "Livre VIII : Aides personnelles au logement",
                                                         "Partie réglementaire",
                                                         "Code de la construction et de l'habitation"]))
                try:
                    temp_sous_calcul_traitement_516 = situation_familiale_calcul_apl_8
                except EmptyError:
                    temp_sous_calcul_traitement_516 = dead_value
                    raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                         start_line=1531,
                                                         start_column=47,
                                                         end_line=1531,
                                                         end_column=77,
                                                         law_headings=["Article D823-9",
                                                         "Section 1 : Calcul, liquidation et versement des aides",
                                                         "Chapitre III : Modalités de liquidation et de versement",
                                                         "Titre II : Dispositions communes aux aides personnelles au logement",
                                                         "Livre VIII : Aides personnelles au logement",
                                                         "Partie réglementaire",
                                                         "Code de la construction et de l'habitation"]))
                try:
                    temp_sous_calcul_traitement_517 = proprietaire_2.type_travaux_logement_d832_15
                except EmptyError:
                    temp_sous_calcul_traitement_517 = dead_value
                    raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                         start_line=1533,
                                                         start_column=38,
                                                         end_line=1533,
                                                         end_column=80,
                                                         law_headings=["Article D823-9",
                                                         "Section 1 : Calcul, liquidation et versement des aides",
                                                         "Chapitre III : Modalités de liquidation et de versement",
                                                         "Titre II : Dispositions communes aux aides personnelles au logement",
                                                         "Livre VIII : Aides personnelles au logement",
                                                         "Partie réglementaire",
                                                         "Code de la construction et de l'habitation"]))
                try:
                    temp_sous_calcul_traitement_518 = proprietaire_2.pret.date_signature
                except EmptyError:
                    temp_sous_calcul_traitement_518 = dead_value
                    raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                         start_line=1534,
                                                         start_column=36,
                                                         end_line=1534,
                                                         end_column=68,
                                                         law_headings=["Article D823-9",
                                                         "Section 1 : Calcul, liquidation et versement des aides",
                                                         "Chapitre III : Modalités de liquidation et de versement",
                                                         "Titre II : Dispositions communes aux aides personnelles au logement",
                                                         "Livre VIII : Aides personnelles au logement",
                                                         "Partie réglementaire",
                                                         "Code de la construction et de l'habitation"]))
                try:
                    temp_sous_calcul_traitement_519 = proprietaire_2.local_habite_premiere_fois_beneficiaire
                except EmptyError:
                    temp_sous_calcul_traitement_519 = dead_value
                    raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                         start_line=1536,
                                                         start_column=14,
                                                         end_line=1536,
                                                         end_column=66,
                                                         law_headings=["Article D823-9",
                                                         "Section 1 : Calcul, liquidation et versement des aides",
                                                         "Chapitre III : Modalités de liquidation et de versement",
                                                         "Titre II : Dispositions communes aux aides personnelles au logement",
                                                         "Livre VIII : Aides personnelles au logement",
                                                         "Partie réglementaire",
                                                         "Code de la construction et de l'habitation"]))
                try:
                    temp_sous_calcul_traitement_520 = proprietaire_2.date_entree_logement
                except EmptyError:
                    temp_sous_calcul_traitement_520 = dead_value
                    raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                         start_line=1537,
                                                         start_column=37,
                                                         end_line=1537,
                                                         end_column=70,
                                                         law_headings=["Article D823-9",
                                                         "Section 1 : Calcul, liquidation et versement des aides",
                                                         "Chapitre III : Modalités de liquidation et de versement",
                                                         "Titre II : Dispositions communes aux aides personnelles au logement",
                                                         "Livre VIII : Aides personnelles au logement",
                                                         "Partie réglementaire",
                                                         "Code de la construction et de l'habitation"]))
                try:
                    temp_sous_calcul_traitement_521 = proprietaire_2.copropriete
                except EmptyError:
                    temp_sous_calcul_traitement_521 = dead_value
                    raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                         start_line=1538,
                                                         start_column=28,
                                                         end_line=1538,
                                                         end_column=52,
                                                         law_headings=["Article D823-9",
                                                         "Section 1 : Calcul, liquidation et versement des aides",
                                                         "Chapitre III : Modalités de liquidation et de versement",
                                                         "Titre II : Dispositions communes aux aides personnelles au logement",
                                                         "Livre VIII : Aides personnelles au logement",
                                                         "Partie réglementaire",
                                                         "Code de la construction et de l'habitation"]))
                try:
                    temp_sous_calcul_traitement_522 = proprietaire_2.situation_r822_11_13_17
                except EmptyError:
                    temp_sous_calcul_traitement_522 = dead_value
                    raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                         start_line=1539,
                                                         start_column=40,
                                                         end_line=1539,
                                                         end_column=76,
                                                         law_headings=["Article D823-9",
                                                         "Section 1 : Calcul, liquidation et versement des aides",
                                                         "Chapitre III : Modalités de liquidation et de versement",
                                                         "Titre II : Dispositions communes aux aides personnelles au logement",
                                                         "Livre VIII : Aides personnelles au logement",
                                                         "Partie réglementaire",
                                                         "Code de la construction et de l'habitation"]))
                try:
                    temp_sous_calcul_traitement_523 = zone_6
                except EmptyError:
                    temp_sous_calcul_traitement_523 = dead_value
                    raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                         start_line=1529,
                                                         start_column=21,
                                                         end_line=1529,
                                                         end_column=25,
                                                         law_headings=["Article D823-9",
                                                         "Section 1 : Calcul, liquidation et versement des aides",
                                                         "Chapitre III : Modalités de liquidation et de versement",
                                                         "Titre II : Dispositions communes aux aides personnelles au logement",
                                                         "Livre VIII : Aides personnelles au logement",
                                                         "Partie réglementaire",
                                                         "Code de la construction et de l'habitation"]))
                try:
                    temp_sous_calcul_traitement_524 = proprietaire_2.pret.type_pret
                except EmptyError:
                    temp_sous_calcul_traitement_524 = dead_value
                    raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                         start_line=1540,
                                                         start_column=26,
                                                         end_line=1540,
                                                         end_column=53,
                                                         law_headings=["Article D823-9",
                                                         "Section 1 : Calcul, liquidation et versement des aides",
                                                         "Chapitre III : Modalités de liquidation et de versement",
                                                         "Titre II : Dispositions communes aux aides personnelles au logement",
                                                         "Livre VIII : Aides personnelles au logement",
                                                         "Partie réglementaire",
                                                         "Code de la construction et de l'habitation"]))
                try:
                    temp_sous_calcul_traitement_525 = proprietaire_2.anciennete_logement
                except EmptyError:
                    temp_sous_calcul_traitement_525 = dead_value
                    raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                         start_line=1541,
                                                         start_column=36,
                                                         end_line=1541,
                                                         end_column=68,
                                                         law_headings=["Article D823-9",
                                                         "Section 1 : Calcul, liquidation et versement des aides",
                                                         "Chapitre III : Modalités de liquidation et de versement",
                                                         "Titre II : Dispositions communes aux aides personnelles au logement",
                                                         "Livre VIII : Aides personnelles au logement",
                                                         "Partie réglementaire",
                                                         "Code de la construction et de l'habitation"]))
                try:
                    temp_sous_calcul_traitement_526 = date_courante_14
                except EmptyError:
                    temp_sous_calcul_traitement_526 = dead_value
                    raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                         start_line=1530,
                                                         start_column=30,
                                                         end_line=1530,
                                                         end_column=43,
                                                         law_headings=["Article D823-9",
                                                         "Section 1 : Calcul, liquidation et versement des aides",
                                                         "Chapitre III : Modalités de liquidation et de versement",
                                                         "Titre II : Dispositions communes aux aides personnelles au logement",
                                                         "Livre VIII : Aides personnelles au logement",
                                                         "Partie réglementaire",
                                                         "Code de la construction et de l'habitation"]))
                try:
                    temp_sous_calcul_traitement_527 = proprietaire_2.mensualite_principale
                except EmptyError:
                    temp_sous_calcul_traitement_527 = dead_value
                    raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                         start_line=1532,
                                                         start_column=38,
                                                         end_line=1532,
                                                         end_column=72,
                                                         law_headings=["Article D823-9",
                                                         "Section 1 : Calcul, liquidation et versement des aides",
                                                         "Chapitre III : Modalités de liquidation et de versement",
                                                         "Titre II : Dispositions communes aux aides personnelles au logement",
                                                         "Livre VIII : Aides personnelles au logement",
                                                         "Partie réglementaire",
                                                         "Code de la construction et de l'habitation"]))
                try:
                    temp_sous_calcul_traitement_528 = ressources_menage_avec_arrondi
                except EmptyError:
                    temp_sous_calcul_traitement_528 = dead_value
                    raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                         start_line=1527,
                                                         start_column=44,
                                                         end_line=1527,
                                                         end_column=61,
                                                         law_headings=["Article D823-9",
                                                         "Section 1 : Calcul, liquidation et versement des aides",
                                                         "Chapitre III : Modalités de liquidation et de versement",
                                                         "Titre II : Dispositions communes aux aides personnelles au logement",
                                                         "Livre VIII : Aides personnelles au logement",
                                                         "Partie réglementaire",
                                                         "Code de la construction et de l'habitation"]))
                try:
                    temp_sous_calcul_traitement_529 = nombre_personnes_a_charge_11
                except EmptyError:
                    temp_sous_calcul_traitement_529 = dead_value
                    raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                         start_line=1528,
                                                         start_column=42,
                                                         end_line=1528,
                                                         end_column=67,
                                                         law_headings=["Article D823-9",
                                                         "Section 1 : Calcul, liquidation et versement des aides",
                                                         "Chapitre III : Modalités de liquidation et de versement",
                                                         "Titre II : Dispositions communes aux aides personnelles au logement",
                                                         "Livre VIII : Aides personnelles au logement",
                                                         "Partie réglementaire",
                                                         "Code de la construction et de l'habitation"]))
                try:
                    temp_sous_calcul_traitement_530 = situation_familiale_calcul_apl_8
                except EmptyError:
                    temp_sous_calcul_traitement_530 = dead_value
                    raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                         start_line=1531,
                                                         start_column=47,
                                                         end_line=1531,
                                                         end_column=77,
                                                         law_headings=["Article D823-9",
                                                         "Section 1 : Calcul, liquidation et versement des aides",
                                                         "Chapitre III : Modalités de liquidation et de versement",
                                                         "Titre II : Dispositions communes aux aides personnelles au logement",
                                                         "Livre VIII : Aides personnelles au logement",
                                                         "Partie réglementaire",
                                                         "Code de la construction et de l'habitation"]))
                try:
                    temp_sous_calcul_traitement_531 = proprietaire_2.type_travaux_logement_d832_15
                except EmptyError:
                    temp_sous_calcul_traitement_531 = dead_value
                    raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                         start_line=1533,
                                                         start_column=38,
                                                         end_line=1533,
                                                         end_column=80,
                                                         law_headings=["Article D823-9",
                                                         "Section 1 : Calcul, liquidation et versement des aides",
                                                         "Chapitre III : Modalités de liquidation et de versement",
                                                         "Titre II : Dispositions communes aux aides personnelles au logement",
                                                         "Livre VIII : Aides personnelles au logement",
                                                         "Partie réglementaire",
                                                         "Code de la construction et de l'habitation"]))
                try:
                    temp_sous_calcul_traitement_532 = proprietaire_2.pret.date_signature
                except EmptyError:
                    temp_sous_calcul_traitement_532 = dead_value
                    raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                         start_line=1534,
                                                         start_column=36,
                                                         end_line=1534,
                                                         end_column=68,
                                                         law_headings=["Article D823-9",
                                                         "Section 1 : Calcul, liquidation et versement des aides",
                                                         "Chapitre III : Modalités de liquidation et de versement",
                                                         "Titre II : Dispositions communes aux aides personnelles au logement",
                                                         "Livre VIII : Aides personnelles au logement",
                                                         "Partie réglementaire",
                                                         "Code de la construction et de l'habitation"]))
                try:
                    temp_sous_calcul_traitement_533 = proprietaire_2.local_habite_premiere_fois_beneficiaire
                except EmptyError:
                    temp_sous_calcul_traitement_533 = dead_value
                    raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                         start_line=1536,
                                                         start_column=14,
                                                         end_line=1536,
                                                         end_column=66,
                                                         law_headings=["Article D823-9",
                                                         "Section 1 : Calcul, liquidation et versement des aides",
                                                         "Chapitre III : Modalités de liquidation et de versement",
                                                         "Titre II : Dispositions communes aux aides personnelles au logement",
                                                         "Livre VIII : Aides personnelles au logement",
                                                         "Partie réglementaire",
                                                         "Code de la construction et de l'habitation"]))
                try:
                    temp_sous_calcul_traitement_534 = proprietaire_2.date_entree_logement
                except EmptyError:
                    temp_sous_calcul_traitement_534 = dead_value
                    raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                         start_line=1537,
                                                         start_column=37,
                                                         end_line=1537,
                                                         end_column=70,
                                                         law_headings=["Article D823-9",
                                                         "Section 1 : Calcul, liquidation et versement des aides",
                                                         "Chapitre III : Modalités de liquidation et de versement",
                                                         "Titre II : Dispositions communes aux aides personnelles au logement",
                                                         "Livre VIII : Aides personnelles au logement",
                                                         "Partie réglementaire",
                                                         "Code de la construction et de l'habitation"]))
                try:
                    temp_sous_calcul_traitement_535 = proprietaire_2.copropriete
                except EmptyError:
                    temp_sous_calcul_traitement_535 = dead_value
                    raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                         start_line=1538,
                                                         start_column=28,
                                                         end_line=1538,
                                                         end_column=52,
                                                         law_headings=["Article D823-9",
                                                         "Section 1 : Calcul, liquidation et versement des aides",
                                                         "Chapitre III : Modalités de liquidation et de versement",
                                                         "Titre II : Dispositions communes aux aides personnelles au logement",
                                                         "Livre VIII : Aides personnelles au logement",
                                                         "Partie réglementaire",
                                                         "Code de la construction et de l'habitation"]))
                try:
                    temp_sous_calcul_traitement_536 = proprietaire_2.situation_r822_11_13_17
                except EmptyError:
                    temp_sous_calcul_traitement_536 = dead_value
                    raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                         start_line=1539,
                                                         start_column=40,
                                                         end_line=1539,
                                                         end_column=76,
                                                         law_headings=["Article D823-9",
                                                         "Section 1 : Calcul, liquidation et versement des aides",
                                                         "Chapitre III : Modalités de liquidation et de versement",
                                                         "Titre II : Dispositions communes aux aides personnelles au logement",
                                                         "Livre VIII : Aides personnelles au logement",
                                                         "Partie réglementaire",
                                                         "Code de la construction et de l'habitation"]))
                try:
                    temp_sous_calcul_traitement_537 = zone_6
                except EmptyError:
                    temp_sous_calcul_traitement_537 = dead_value
                    raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                         start_line=1529,
                                                         start_column=21,
                                                         end_line=1529,
                                                         end_column=25,
                                                         law_headings=["Article D823-9",
                                                         "Section 1 : Calcul, liquidation et versement des aides",
                                                         "Chapitre III : Modalités de liquidation et de versement",
                                                         "Titre II : Dispositions communes aux aides personnelles au logement",
                                                         "Livre VIII : Aides personnelles au logement",
                                                         "Partie réglementaire",
                                                         "Code de la construction et de l'habitation"]))
                try:
                    temp_sous_calcul_traitement_538 = proprietaire_2.pret.type_pret
                except EmptyError:
                    temp_sous_calcul_traitement_538 = dead_value
                    raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                         start_line=1540,
                                                         start_column=26,
                                                         end_line=1540,
                                                         end_column=53,
                                                         law_headings=["Article D823-9",
                                                         "Section 1 : Calcul, liquidation et versement des aides",
                                                         "Chapitre III : Modalités de liquidation et de versement",
                                                         "Titre II : Dispositions communes aux aides personnelles au logement",
                                                         "Livre VIII : Aides personnelles au logement",
                                                         "Partie réglementaire",
                                                         "Code de la construction et de l'habitation"]))
                try:
                    temp_sous_calcul_traitement_539 = proprietaire_2.anciennete_logement
                except EmptyError:
                    temp_sous_calcul_traitement_539 = dead_value
                    raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                         start_line=1541,
                                                         start_column=36,
                                                         end_line=1541,
                                                         end_column=68,
                                                         law_headings=["Article D823-9",
                                                         "Section 1 : Calcul, liquidation et versement des aides",
                                                         "Chapitre III : Modalités de liquidation et de versement",
                                                         "Titre II : Dispositions communes aux aides personnelles au logement",
                                                         "Livre VIII : Aides personnelles au logement",
                                                         "Partie réglementaire",
                                                         "Code de la construction et de l'habitation"]))
                try:
                    temp_sous_calcul_traitement_540 = date_courante_14
                except EmptyError:
                    temp_sous_calcul_traitement_540 = dead_value
                    raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                         start_line=1530,
                                                         start_column=30,
                                                         end_line=1530,
                                                         end_column=43,
                                                         law_headings=["Article D823-9",
                                                         "Section 1 : Calcul, liquidation et versement des aides",
                                                         "Chapitre III : Modalités de liquidation et de versement",
                                                         "Titre II : Dispositions communes aux aides personnelles au logement",
                                                         "Livre VIII : Aides personnelles au logement",
                                                         "Partie réglementaire",
                                                         "Code de la construction et de l'habitation"]))
                temp_sous_calcul_traitement_2 = TraitementFormuleAideFinale(aide_finale_formule = CalculAidePersonnaliseeLogementAccessionPropriete(mensualite_eligible = calcul_aide_personnalisee_logement_accession_propriete(
                    CalculAidePersonnaliseeLogementAccessionProprieteIn(mensualite_principale_in = temp_sous_calcul_traitement_456,
                    ressources_menage_arrondies_in = temp_sous_calcul_traitement_457,
                    nombre_personnes_a_charge_in = temp_sous_calcul_traitement_458,
                    situation_familiale_calcul_apl_in = temp_sous_calcul_traitement_459,
                    type_travaux_logement_in = temp_sous_calcul_traitement_460,
                    date_signature_pret_in = temp_sous_calcul_traitement_461,
                    local_habite_premiere_fois_beneficiaire_in = temp_sous_calcul_traitement_462,
                    date_entree_logement_in = temp_sous_calcul_traitement_463,
                    copropriete_in = temp_sous_calcul_traitement_464,
                    situation_r822_11_13_17_in = temp_sous_calcul_traitement_465,
                    zone_in = temp_sous_calcul_traitement_466,
                    type_pret_in = temp_sous_calcul_traitement_467,
                    anciennete_logement_in = temp_sous_calcul_traitement_468,
                    date_courante_in = temp_sous_calcul_traitement_469)).mensualite_eligible,
                    mensualite_minimale = calcul_aide_personnalisee_logement_accession_propriete(
                    CalculAidePersonnaliseeLogementAccessionProprieteIn(mensualite_principale_in = temp_sous_calcul_traitement_442,
                    ressources_menage_arrondies_in = temp_sous_calcul_traitement_443,
                    nombre_personnes_a_charge_in = temp_sous_calcul_traitement_444,
                    situation_familiale_calcul_apl_in = temp_sous_calcul_traitement_445,
                    type_travaux_logement_in = temp_sous_calcul_traitement_446,
                    date_signature_pret_in = temp_sous_calcul_traitement_447,
                    local_habite_premiere_fois_beneficiaire_in = temp_sous_calcul_traitement_448,
                    date_entree_logement_in = temp_sous_calcul_traitement_449,
                    copropriete_in = temp_sous_calcul_traitement_450,
                    situation_r822_11_13_17_in = temp_sous_calcul_traitement_451,
                    zone_in = temp_sous_calcul_traitement_452,
                    type_pret_in = temp_sous_calcul_traitement_453,
                    anciennete_logement_in = temp_sous_calcul_traitement_454,
                    date_courante_in = temp_sous_calcul_traitement_455)).mensualite_minimale,
                    coefficient_prise_en_charge_d832_10 = calcul_aide_personnalisee_logement_accession_propriete(
                    CalculAidePersonnaliseeLogementAccessionProprieteIn(mensualite_principale_in = temp_sous_calcul_traitement_428,
                    ressources_menage_arrondies_in = temp_sous_calcul_traitement_429,
                    nombre_personnes_a_charge_in = temp_sous_calcul_traitement_430,
                    situation_familiale_calcul_apl_in = temp_sous_calcul_traitement_431,
                    type_travaux_logement_in = temp_sous_calcul_traitement_432,
                    date_signature_pret_in = temp_sous_calcul_traitement_433,
                    local_habite_premiere_fois_beneficiaire_in = temp_sous_calcul_traitement_434,
                    date_entree_logement_in = temp_sous_calcul_traitement_435,
                    copropriete_in = temp_sous_calcul_traitement_436,
                    situation_r822_11_13_17_in = temp_sous_calcul_traitement_437,
                    zone_in = temp_sous_calcul_traitement_438,
                    type_pret_in = temp_sous_calcul_traitement_439,
                    anciennete_logement_in = temp_sous_calcul_traitement_440,
                    date_courante_in = temp_sous_calcul_traitement_441)).coefficient_prise_en_charge_d832_10,
                    aide_finale_formule = calcul_aide_personnalisee_logement_accession_propriete(
                    CalculAidePersonnaliseeLogementAccessionProprieteIn(mensualite_principale_in = temp_sous_calcul_traitement_414,
                    ressources_menage_arrondies_in = temp_sous_calcul_traitement_415,
                    nombre_personnes_a_charge_in = temp_sous_calcul_traitement_416,
                    situation_familiale_calcul_apl_in = temp_sous_calcul_traitement_417,
                    type_travaux_logement_in = temp_sous_calcul_traitement_418,
                    date_signature_pret_in = temp_sous_calcul_traitement_419,
                    local_habite_premiere_fois_beneficiaire_in = temp_sous_calcul_traitement_420,
                    date_entree_logement_in = temp_sous_calcul_traitement_421,
                    copropriete_in = temp_sous_calcul_traitement_422,
                    situation_r822_11_13_17_in = temp_sous_calcul_traitement_423,
                    zone_in = temp_sous_calcul_traitement_424,
                    type_pret_in = temp_sous_calcul_traitement_425,
                    anciennete_logement_in = temp_sous_calcul_traitement_426,
                    date_courante_in = temp_sous_calcul_traitement_427)).aide_finale_formule,
                    traitement_aide_finale = temp_sous_calcul_traitement_399).aide_finale_formule,
                    traitement_aide_finale = CalculAidePersonnaliseeLogementAccessionPropriete(mensualite_eligible = calcul_aide_personnalisee_logement_accession_propriete(
                    CalculAidePersonnaliseeLogementAccessionProprieteIn(mensualite_principale_in = temp_sous_calcul_traitement_527,
                    ressources_menage_arrondies_in = temp_sous_calcul_traitement_528,
                    nombre_personnes_a_charge_in = temp_sous_calcul_traitement_529,
                    situation_familiale_calcul_apl_in = temp_sous_calcul_traitement_530,
                    type_travaux_logement_in = temp_sous_calcul_traitement_531,
                    date_signature_pret_in = temp_sous_calcul_traitement_532,
                    local_habite_premiere_fois_beneficiaire_in = temp_sous_calcul_traitement_533,
                    date_entree_logement_in = temp_sous_calcul_traitement_534,
                    copropriete_in = temp_sous_calcul_traitement_535,
                    situation_r822_11_13_17_in = temp_sous_calcul_traitement_536,
                    zone_in = temp_sous_calcul_traitement_537,
                    type_pret_in = temp_sous_calcul_traitement_538,
                    anciennete_logement_in = temp_sous_calcul_traitement_539,
                    date_courante_in = temp_sous_calcul_traitement_540)).mensualite_eligible,
                    mensualite_minimale = calcul_aide_personnalisee_logement_accession_propriete(
                    CalculAidePersonnaliseeLogementAccessionProprieteIn(mensualite_principale_in = temp_sous_calcul_traitement_513,
                    ressources_menage_arrondies_in = temp_sous_calcul_traitement_514,
                    nombre_personnes_a_charge_in = temp_sous_calcul_traitement_515,
                    situation_familiale_calcul_apl_in = temp_sous_calcul_traitement_516,
                    type_travaux_logement_in = temp_sous_calcul_traitement_517,
                    date_signature_pret_in = temp_sous_calcul_traitement_518,
                    local_habite_premiere_fois_beneficiaire_in = temp_sous_calcul_traitement_519,
                    date_entree_logement_in = temp_sous_calcul_traitement_520,
                    copropriete_in = temp_sous_calcul_traitement_521,
                    situation_r822_11_13_17_in = temp_sous_calcul_traitement_522,
                    zone_in = temp_sous_calcul_traitement_523,
                    type_pret_in = temp_sous_calcul_traitement_524,
                    anciennete_logement_in = temp_sous_calcul_traitement_525,
                    date_courante_in = temp_sous_calcul_traitement_526)).mensualite_minimale,
                    coefficient_prise_en_charge_d832_10 = calcul_aide_personnalisee_logement_accession_propriete(
                    CalculAidePersonnaliseeLogementAccessionProprieteIn(mensualite_principale_in = temp_sous_calcul_traitement_499,
                    ressources_menage_arrondies_in = temp_sous_calcul_traitement_500,
                    nombre_personnes_a_charge_in = temp_sous_calcul_traitement_501,
                    situation_familiale_calcul_apl_in = temp_sous_calcul_traitement_502,
                    type_travaux_logement_in = temp_sous_calcul_traitement_503,
                    date_signature_pret_in = temp_sous_calcul_traitement_504,
                    local_habite_premiere_fois_beneficiaire_in = temp_sous_calcul_traitement_505,
                    date_entree_logement_in = temp_sous_calcul_traitement_506,
                    copropriete_in = temp_sous_calcul_traitement_507,
                    situation_r822_11_13_17_in = temp_sous_calcul_traitement_508,
                    zone_in = temp_sous_calcul_traitement_509,
                    type_pret_in = temp_sous_calcul_traitement_510,
                    anciennete_logement_in = temp_sous_calcul_traitement_511,
                    date_courante_in = temp_sous_calcul_traitement_512)).coefficient_prise_en_charge_d832_10,
                    aide_finale_formule = calcul_aide_personnalisee_logement_accession_propriete(
                    CalculAidePersonnaliseeLogementAccessionProprieteIn(mensualite_principale_in = temp_sous_calcul_traitement_485,
                    ressources_menage_arrondies_in = temp_sous_calcul_traitement_486,
                    nombre_personnes_a_charge_in = temp_sous_calcul_traitement_487,
                    situation_familiale_calcul_apl_in = temp_sous_calcul_traitement_488,
                    type_travaux_logement_in = temp_sous_calcul_traitement_489,
                    date_signature_pret_in = temp_sous_calcul_traitement_490,
                    local_habite_premiere_fois_beneficiaire_in = temp_sous_calcul_traitement_491,
                    date_entree_logement_in = temp_sous_calcul_traitement_492,
                    copropriete_in = temp_sous_calcul_traitement_493,
                    situation_r822_11_13_17_in = temp_sous_calcul_traitement_494,
                    zone_in = temp_sous_calcul_traitement_495,
                    type_pret_in = temp_sous_calcul_traitement_496,
                    anciennete_logement_in = temp_sous_calcul_traitement_497,
                    date_courante_in = temp_sous_calcul_traitement_498)).aide_finale_formule,
                    traitement_aide_finale = temp_sous_calcul_traitement_470).traitement_aide_finale)
            elif match_arg_630.code == CategorieCalculAPL_Code.LogementFoyer:
                logement_foyer__1 = match_arg_630.value
                def temp_sous_calcul_traitement_541(param0_6:Money):
                    try:
                        temp_sous_calcul_traitement_542 = logement_foyer__1.type
                    except EmptyError:
                        temp_sous_calcul_traitement_542 = dead_value
                        raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                             start_line=1513,
                                                             start_column=35,
                                                             end_line=1513,
                                                             end_column=55,
                                                             law_headings=["Article D823-9",
                                                             "Section 1 : Calcul, liquidation et versement des aides",
                                                             "Chapitre III : Modalités de liquidation et de versement",
                                                             "Titre II : Dispositions communes aux aides personnelles au logement",
                                                             "Livre VIII : Aides personnelles au logement",
                                                             "Partie réglementaire",
                                                             "Code de la construction et de l'habitation"]))
                    try:
                        temp_sous_calcul_traitement_543 = logement_foyer__1.date_conventionnement
                    except EmptyError:
                        temp_sous_calcul_traitement_543 = dead_value
                        raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                             start_line=1514,
                                                             start_column=37,
                                                             end_line=1514,
                                                             end_column=74,
                                                             law_headings=["Article D823-9",
                                                             "Section 1 : Calcul, liquidation et versement des aides",
                                                             "Chapitre III : Modalités de liquidation et de versement",
                                                             "Titre II : Dispositions communes aux aides personnelles au logement",
                                                             "Livre VIII : Aides personnelles au logement",
                                                             "Partie réglementaire",
                                                             "Code de la construction et de l'habitation"]))
                    try:
                        temp_sous_calcul_traitement_544 = ressources_menage_avec_arrondi
                    except EmptyError:
                        temp_sous_calcul_traitement_544 = dead_value
                        raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                             start_line=1506,
                                                             start_column=43,
                                                             end_line=1506,
                                                             end_column=60,
                                                             law_headings=["Article D823-9",
                                                             "Section 1 : Calcul, liquidation et versement des aides",
                                                             "Chapitre III : Modalités de liquidation et de versement",
                                                             "Titre II : Dispositions communes aux aides personnelles au logement",
                                                             "Livre VIII : Aides personnelles au logement",
                                                             "Partie réglementaire",
                                                             "Code de la construction et de l'habitation"]))
                    try:
                        temp_sous_calcul_traitement_545 = nombre_personnes_a_charge_11
                    except EmptyError:
                        temp_sous_calcul_traitement_545 = dead_value
                        raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                             start_line=1507,
                                                             start_column=41,
                                                             end_line=1507,
                                                             end_column=66,
                                                             law_headings=["Article D823-9",
                                                             "Section 1 : Calcul, liquidation et versement des aides",
                                                             "Chapitre III : Modalités de liquidation et de versement",
                                                             "Titre II : Dispositions communes aux aides personnelles au logement",
                                                             "Livre VIII : Aides personnelles au logement",
                                                             "Partie réglementaire",
                                                             "Code de la construction et de l'habitation"]))
                    try:
                        temp_sous_calcul_traitement_546 = situation_familiale_calcul_apl_8
                    except EmptyError:
                        temp_sous_calcul_traitement_546 = dead_value
                        raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                             start_line=1511,
                                                             start_column=46,
                                                             end_line=1511,
                                                             end_column=76,
                                                             law_headings=["Article D823-9",
                                                             "Section 1 : Calcul, liquidation et versement des aides",
                                                             "Chapitre III : Modalités de liquidation et de versement",
                                                             "Titre II : Dispositions communes aux aides personnelles au logement",
                                                             "Livre VIII : Aides personnelles au logement",
                                                             "Partie réglementaire",
                                                             "Code de la construction et de l'habitation"]))
                    try:
                        temp_sous_calcul_traitement_547 = zone_6
                    except EmptyError:
                        temp_sous_calcul_traitement_547 = dead_value
                        raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                             start_line=1508,
                                                             start_column=20,
                                                             end_line=1508,
                                                             end_column=24,
                                                             law_headings=["Article D823-9",
                                                             "Section 1 : Calcul, liquidation et versement des aides",
                                                             "Chapitre III : Modalités de liquidation et de versement",
                                                             "Titre II : Dispositions communes aux aides personnelles au logement",
                                                             "Livre VIII : Aides personnelles au logement",
                                                             "Partie réglementaire",
                                                             "Code de la construction et de l'habitation"]))
                    try:
                        temp_sous_calcul_traitement_548 = date_courante_14
                    except EmptyError:
                        temp_sous_calcul_traitement_548 = dead_value
                        raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                             start_line=1510,
                                                             start_column=29,
                                                             end_line=1510,
                                                             end_column=42,
                                                             law_headings=["Article D823-9",
                                                             "Section 1 : Calcul, liquidation et versement des aides",
                                                             "Chapitre III : Modalités de liquidation et de versement",
                                                             "Titre II : Dispositions communes aux aides personnelles au logement",
                                                             "Livre VIII : Aides personnelles au logement",
                                                             "Partie réglementaire",
                                                             "Code de la construction et de l'habitation"]))
                    try:
                        temp_sous_calcul_traitement_549 = logement_foyer__1.redevance
                    except EmptyError:
                        temp_sous_calcul_traitement_549 = dead_value
                        raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                             start_line=1512,
                                                             start_column=25,
                                                             end_line=1512,
                                                             end_column=50,
                                                             law_headings=["Article D823-9",
                                                             "Section 1 : Calcul, liquidation et versement des aides",
                                                             "Chapitre III : Modalités de liquidation et de versement",
                                                             "Titre II : Dispositions communes aux aides personnelles au logement",
                                                             "Livre VIII : Aides personnelles au logement",
                                                             "Partie réglementaire",
                                                             "Code de la construction et de l'habitation"]))
                    try:
                        temp_sous_calcul_traitement_550 = residence_8
                    except EmptyError:
                        temp_sous_calcul_traitement_550 = dead_value
                        raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                             start_line=1509,
                                                             start_column=25,
                                                             end_line=1509,
                                                             end_column=34,
                                                             law_headings=["Article D823-9",
                                                             "Section 1 : Calcul, liquidation et versement des aides",
                                                             "Chapitre III : Modalités de liquidation et de versement",
                                                             "Titre II : Dispositions communes aux aides personnelles au logement",
                                                             "Livre VIII : Aides personnelles au logement",
                                                             "Partie réglementaire",
                                                             "Code de la construction et de l'habitation"]))
                    def temp_sous_calcul_traitement_551(_:Unit):
                        raise EmptyError
                    def temp_sous_calcul_traitement_552(_:Unit):
                        raise EmptyError
                    def temp_sous_calcul_traitement_553(_:Unit):
                        raise EmptyError
                    return calcul_aide_personnalisee_logement_foyer(CalculAidePersonnaliseeLogementFoyerIn(type_logement_foyer_in = temp_sous_calcul_traitement_542,
                                                                    date_conventionnement_in = temp_sous_calcul_traitement_543,
                                                                    ressources_menage_arrondies_in = temp_sous_calcul_traitement_544,
                                                                    nombre_personnes_a_charge_in = temp_sous_calcul_traitement_545,
                                                                    situation_familiale_calcul_apl_in = temp_sous_calcul_traitement_546,
                                                                    zone_in = temp_sous_calcul_traitement_547,
                                                                    date_courante_in = temp_sous_calcul_traitement_548,
                                                                    redevance_in = temp_sous_calcul_traitement_549,
                                                                    residence_in = temp_sous_calcul_traitement_550,
                                                                    condition_2_du_832_25_in = temp_sous_calcul_traitement_551,
                                                                    limitation_majoration_personnes_a_charge_in = temp_sous_calcul_traitement_552,
                                                                    n_nombre_parts_d832_25_in = temp_sous_calcul_traitement_553)).traitement_aide_finale(
                        param0_6)
                try:
                    temp_sous_calcul_traitement_554 = logement_foyer__1.type
                except EmptyError:
                    temp_sous_calcul_traitement_554 = dead_value
                    raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                         start_line=1513,
                                                         start_column=35,
                                                         end_line=1513,
                                                         end_column=55,
                                                         law_headings=["Article D823-9",
                                                         "Section 1 : Calcul, liquidation et versement des aides",
                                                         "Chapitre III : Modalités de liquidation et de versement",
                                                         "Titre II : Dispositions communes aux aides personnelles au logement",
                                                         "Livre VIII : Aides personnelles au logement",
                                                         "Partie réglementaire",
                                                         "Code de la construction et de l'habitation"]))
                try:
                    temp_sous_calcul_traitement_555 = logement_foyer__1.date_conventionnement
                except EmptyError:
                    temp_sous_calcul_traitement_555 = dead_value
                    raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                         start_line=1514,
                                                         start_column=37,
                                                         end_line=1514,
                                                         end_column=74,
                                                         law_headings=["Article D823-9",
                                                         "Section 1 : Calcul, liquidation et versement des aides",
                                                         "Chapitre III : Modalités de liquidation et de versement",
                                                         "Titre II : Dispositions communes aux aides personnelles au logement",
                                                         "Livre VIII : Aides personnelles au logement",
                                                         "Partie réglementaire",
                                                         "Code de la construction et de l'habitation"]))
                try:
                    temp_sous_calcul_traitement_556 = ressources_menage_avec_arrondi
                except EmptyError:
                    temp_sous_calcul_traitement_556 = dead_value
                    raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                         start_line=1506,
                                                         start_column=43,
                                                         end_line=1506,
                                                         end_column=60,
                                                         law_headings=["Article D823-9",
                                                         "Section 1 : Calcul, liquidation et versement des aides",
                                                         "Chapitre III : Modalités de liquidation et de versement",
                                                         "Titre II : Dispositions communes aux aides personnelles au logement",
                                                         "Livre VIII : Aides personnelles au logement",
                                                         "Partie réglementaire",
                                                         "Code de la construction et de l'habitation"]))
                try:
                    temp_sous_calcul_traitement_557 = nombre_personnes_a_charge_11
                except EmptyError:
                    temp_sous_calcul_traitement_557 = dead_value
                    raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                         start_line=1507,
                                                         start_column=41,
                                                         end_line=1507,
                                                         end_column=66,
                                                         law_headings=["Article D823-9",
                                                         "Section 1 : Calcul, liquidation et versement des aides",
                                                         "Chapitre III : Modalités de liquidation et de versement",
                                                         "Titre II : Dispositions communes aux aides personnelles au logement",
                                                         "Livre VIII : Aides personnelles au logement",
                                                         "Partie réglementaire",
                                                         "Code de la construction et de l'habitation"]))
                try:
                    temp_sous_calcul_traitement_558 = situation_familiale_calcul_apl_8
                except EmptyError:
                    temp_sous_calcul_traitement_558 = dead_value
                    raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                         start_line=1511,
                                                         start_column=46,
                                                         end_line=1511,
                                                         end_column=76,
                                                         law_headings=["Article D823-9",
                                                         "Section 1 : Calcul, liquidation et versement des aides",
                                                         "Chapitre III : Modalités de liquidation et de versement",
                                                         "Titre II : Dispositions communes aux aides personnelles au logement",
                                                         "Livre VIII : Aides personnelles au logement",
                                                         "Partie réglementaire",
                                                         "Code de la construction et de l'habitation"]))
                try:
                    temp_sous_calcul_traitement_559 = zone_6
                except EmptyError:
                    temp_sous_calcul_traitement_559 = dead_value
                    raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                         start_line=1508,
                                                         start_column=20,
                                                         end_line=1508,
                                                         end_column=24,
                                                         law_headings=["Article D823-9",
                                                         "Section 1 : Calcul, liquidation et versement des aides",
                                                         "Chapitre III : Modalités de liquidation et de versement",
                                                         "Titre II : Dispositions communes aux aides personnelles au logement",
                                                         "Livre VIII : Aides personnelles au logement",
                                                         "Partie réglementaire",
                                                         "Code de la construction et de l'habitation"]))
                try:
                    temp_sous_calcul_traitement_560 = date_courante_14
                except EmptyError:
                    temp_sous_calcul_traitement_560 = dead_value
                    raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                         start_line=1510,
                                                         start_column=29,
                                                         end_line=1510,
                                                         end_column=42,
                                                         law_headings=["Article D823-9",
                                                         "Section 1 : Calcul, liquidation et versement des aides",
                                                         "Chapitre III : Modalités de liquidation et de versement",
                                                         "Titre II : Dispositions communes aux aides personnelles au logement",
                                                         "Livre VIII : Aides personnelles au logement",
                                                         "Partie réglementaire",
                                                         "Code de la construction et de l'habitation"]))
                try:
                    temp_sous_calcul_traitement_561 = logement_foyer__1.redevance
                except EmptyError:
                    temp_sous_calcul_traitement_561 = dead_value
                    raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                         start_line=1512,
                                                         start_column=25,
                                                         end_line=1512,
                                                         end_column=50,
                                                         law_headings=["Article D823-9",
                                                         "Section 1 : Calcul, liquidation et versement des aides",
                                                         "Chapitre III : Modalités de liquidation et de versement",
                                                         "Titre II : Dispositions communes aux aides personnelles au logement",
                                                         "Livre VIII : Aides personnelles au logement",
                                                         "Partie réglementaire",
                                                         "Code de la construction et de l'habitation"]))
                try:
                    temp_sous_calcul_traitement_562 = residence_8
                except EmptyError:
                    temp_sous_calcul_traitement_562 = dead_value
                    raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                         start_line=1509,
                                                         start_column=25,
                                                         end_line=1509,
                                                         end_column=34,
                                                         law_headings=["Article D823-9",
                                                         "Section 1 : Calcul, liquidation et versement des aides",
                                                         "Chapitre III : Modalités de liquidation et de versement",
                                                         "Titre II : Dispositions communes aux aides personnelles au logement",
                                                         "Livre VIII : Aides personnelles au logement",
                                                         "Partie réglementaire",
                                                         "Code de la construction et de l'habitation"]))
                def temp_sous_calcul_traitement_563(_:Unit):
                    raise EmptyError
                def temp_sous_calcul_traitement_564(_:Unit):
                    raise EmptyError
                def temp_sous_calcul_traitement_565(_:Unit):
                    raise EmptyError
                try:
                    temp_sous_calcul_traitement_566 = logement_foyer__1.type
                except EmptyError:
                    temp_sous_calcul_traitement_566 = dead_value
                    raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                         start_line=1513,
                                                         start_column=35,
                                                         end_line=1513,
                                                         end_column=55,
                                                         law_headings=["Article D823-9",
                                                         "Section 1 : Calcul, liquidation et versement des aides",
                                                         "Chapitre III : Modalités de liquidation et de versement",
                                                         "Titre II : Dispositions communes aux aides personnelles au logement",
                                                         "Livre VIII : Aides personnelles au logement",
                                                         "Partie réglementaire",
                                                         "Code de la construction et de l'habitation"]))
                try:
                    temp_sous_calcul_traitement_567 = logement_foyer__1.date_conventionnement
                except EmptyError:
                    temp_sous_calcul_traitement_567 = dead_value
                    raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                         start_line=1514,
                                                         start_column=37,
                                                         end_line=1514,
                                                         end_column=74,
                                                         law_headings=["Article D823-9",
                                                         "Section 1 : Calcul, liquidation et versement des aides",
                                                         "Chapitre III : Modalités de liquidation et de versement",
                                                         "Titre II : Dispositions communes aux aides personnelles au logement",
                                                         "Livre VIII : Aides personnelles au logement",
                                                         "Partie réglementaire",
                                                         "Code de la construction et de l'habitation"]))
                try:
                    temp_sous_calcul_traitement_568 = ressources_menage_avec_arrondi
                except EmptyError:
                    temp_sous_calcul_traitement_568 = dead_value
                    raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                         start_line=1506,
                                                         start_column=43,
                                                         end_line=1506,
                                                         end_column=60,
                                                         law_headings=["Article D823-9",
                                                         "Section 1 : Calcul, liquidation et versement des aides",
                                                         "Chapitre III : Modalités de liquidation et de versement",
                                                         "Titre II : Dispositions communes aux aides personnelles au logement",
                                                         "Livre VIII : Aides personnelles au logement",
                                                         "Partie réglementaire",
                                                         "Code de la construction et de l'habitation"]))
                try:
                    temp_sous_calcul_traitement_569 = nombre_personnes_a_charge_11
                except EmptyError:
                    temp_sous_calcul_traitement_569 = dead_value
                    raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                         start_line=1507,
                                                         start_column=41,
                                                         end_line=1507,
                                                         end_column=66,
                                                         law_headings=["Article D823-9",
                                                         "Section 1 : Calcul, liquidation et versement des aides",
                                                         "Chapitre III : Modalités de liquidation et de versement",
                                                         "Titre II : Dispositions communes aux aides personnelles au logement",
                                                         "Livre VIII : Aides personnelles au logement",
                                                         "Partie réglementaire",
                                                         "Code de la construction et de l'habitation"]))
                try:
                    temp_sous_calcul_traitement_570 = situation_familiale_calcul_apl_8
                except EmptyError:
                    temp_sous_calcul_traitement_570 = dead_value
                    raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                         start_line=1511,
                                                         start_column=46,
                                                         end_line=1511,
                                                         end_column=76,
                                                         law_headings=["Article D823-9",
                                                         "Section 1 : Calcul, liquidation et versement des aides",
                                                         "Chapitre III : Modalités de liquidation et de versement",
                                                         "Titre II : Dispositions communes aux aides personnelles au logement",
                                                         "Livre VIII : Aides personnelles au logement",
                                                         "Partie réglementaire",
                                                         "Code de la construction et de l'habitation"]))
                try:
                    temp_sous_calcul_traitement_571 = zone_6
                except EmptyError:
                    temp_sous_calcul_traitement_571 = dead_value
                    raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                         start_line=1508,
                                                         start_column=20,
                                                         end_line=1508,
                                                         end_column=24,
                                                         law_headings=["Article D823-9",
                                                         "Section 1 : Calcul, liquidation et versement des aides",
                                                         "Chapitre III : Modalités de liquidation et de versement",
                                                         "Titre II : Dispositions communes aux aides personnelles au logement",
                                                         "Livre VIII : Aides personnelles au logement",
                                                         "Partie réglementaire",
                                                         "Code de la construction et de l'habitation"]))
                try:
                    temp_sous_calcul_traitement_572 = date_courante_14
                except EmptyError:
                    temp_sous_calcul_traitement_572 = dead_value
                    raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                         start_line=1510,
                                                         start_column=29,
                                                         end_line=1510,
                                                         end_column=42,
                                                         law_headings=["Article D823-9",
                                                         "Section 1 : Calcul, liquidation et versement des aides",
                                                         "Chapitre III : Modalités de liquidation et de versement",
                                                         "Titre II : Dispositions communes aux aides personnelles au logement",
                                                         "Livre VIII : Aides personnelles au logement",
                                                         "Partie réglementaire",
                                                         "Code de la construction et de l'habitation"]))
                try:
                    temp_sous_calcul_traitement_573 = logement_foyer__1.redevance
                except EmptyError:
                    temp_sous_calcul_traitement_573 = dead_value
                    raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                         start_line=1512,
                                                         start_column=25,
                                                         end_line=1512,
                                                         end_column=50,
                                                         law_headings=["Article D823-9",
                                                         "Section 1 : Calcul, liquidation et versement des aides",
                                                         "Chapitre III : Modalités de liquidation et de versement",
                                                         "Titre II : Dispositions communes aux aides personnelles au logement",
                                                         "Livre VIII : Aides personnelles au logement",
                                                         "Partie réglementaire",
                                                         "Code de la construction et de l'habitation"]))
                try:
                    temp_sous_calcul_traitement_574 = residence_8
                except EmptyError:
                    temp_sous_calcul_traitement_574 = dead_value
                    raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                         start_line=1509,
                                                         start_column=25,
                                                         end_line=1509,
                                                         end_column=34,
                                                         law_headings=["Article D823-9",
                                                         "Section 1 : Calcul, liquidation et versement des aides",
                                                         "Chapitre III : Modalités de liquidation et de versement",
                                                         "Titre II : Dispositions communes aux aides personnelles au logement",
                                                         "Livre VIII : Aides personnelles au logement",
                                                         "Partie réglementaire",
                                                         "Code de la construction et de l'habitation"]))
                def temp_sous_calcul_traitement_575(_:Unit):
                    raise EmptyError
                def temp_sous_calcul_traitement_576(_:Unit):
                    raise EmptyError
                def temp_sous_calcul_traitement_577(_:Unit):
                    raise EmptyError
                try:
                    temp_sous_calcul_traitement_578 = logement_foyer__1.type
                except EmptyError:
                    temp_sous_calcul_traitement_578 = dead_value
                    raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                         start_line=1513,
                                                         start_column=35,
                                                         end_line=1513,
                                                         end_column=55,
                                                         law_headings=["Article D823-9",
                                                         "Section 1 : Calcul, liquidation et versement des aides",
                                                         "Chapitre III : Modalités de liquidation et de versement",
                                                         "Titre II : Dispositions communes aux aides personnelles au logement",
                                                         "Livre VIII : Aides personnelles au logement",
                                                         "Partie réglementaire",
                                                         "Code de la construction et de l'habitation"]))
                try:
                    temp_sous_calcul_traitement_579 = logement_foyer__1.date_conventionnement
                except EmptyError:
                    temp_sous_calcul_traitement_579 = dead_value
                    raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                         start_line=1514,
                                                         start_column=37,
                                                         end_line=1514,
                                                         end_column=74,
                                                         law_headings=["Article D823-9",
                                                         "Section 1 : Calcul, liquidation et versement des aides",
                                                         "Chapitre III : Modalités de liquidation et de versement",
                                                         "Titre II : Dispositions communes aux aides personnelles au logement",
                                                         "Livre VIII : Aides personnelles au logement",
                                                         "Partie réglementaire",
                                                         "Code de la construction et de l'habitation"]))
                try:
                    temp_sous_calcul_traitement_580 = ressources_menage_avec_arrondi
                except EmptyError:
                    temp_sous_calcul_traitement_580 = dead_value
                    raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                         start_line=1506,
                                                         start_column=43,
                                                         end_line=1506,
                                                         end_column=60,
                                                         law_headings=["Article D823-9",
                                                         "Section 1 : Calcul, liquidation et versement des aides",
                                                         "Chapitre III : Modalités de liquidation et de versement",
                                                         "Titre II : Dispositions communes aux aides personnelles au logement",
                                                         "Livre VIII : Aides personnelles au logement",
                                                         "Partie réglementaire",
                                                         "Code de la construction et de l'habitation"]))
                try:
                    temp_sous_calcul_traitement_581 = nombre_personnes_a_charge_11
                except EmptyError:
                    temp_sous_calcul_traitement_581 = dead_value
                    raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                         start_line=1507,
                                                         start_column=41,
                                                         end_line=1507,
                                                         end_column=66,
                                                         law_headings=["Article D823-9",
                                                         "Section 1 : Calcul, liquidation et versement des aides",
                                                         "Chapitre III : Modalités de liquidation et de versement",
                                                         "Titre II : Dispositions communes aux aides personnelles au logement",
                                                         "Livre VIII : Aides personnelles au logement",
                                                         "Partie réglementaire",
                                                         "Code de la construction et de l'habitation"]))
                try:
                    temp_sous_calcul_traitement_582 = situation_familiale_calcul_apl_8
                except EmptyError:
                    temp_sous_calcul_traitement_582 = dead_value
                    raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                         start_line=1511,
                                                         start_column=46,
                                                         end_line=1511,
                                                         end_column=76,
                                                         law_headings=["Article D823-9",
                                                         "Section 1 : Calcul, liquidation et versement des aides",
                                                         "Chapitre III : Modalités de liquidation et de versement",
                                                         "Titre II : Dispositions communes aux aides personnelles au logement",
                                                         "Livre VIII : Aides personnelles au logement",
                                                         "Partie réglementaire",
                                                         "Code de la construction et de l'habitation"]))
                try:
                    temp_sous_calcul_traitement_583 = zone_6
                except EmptyError:
                    temp_sous_calcul_traitement_583 = dead_value
                    raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                         start_line=1508,
                                                         start_column=20,
                                                         end_line=1508,
                                                         end_column=24,
                                                         law_headings=["Article D823-9",
                                                         "Section 1 : Calcul, liquidation et versement des aides",
                                                         "Chapitre III : Modalités de liquidation et de versement",
                                                         "Titre II : Dispositions communes aux aides personnelles au logement",
                                                         "Livre VIII : Aides personnelles au logement",
                                                         "Partie réglementaire",
                                                         "Code de la construction et de l'habitation"]))
                try:
                    temp_sous_calcul_traitement_584 = date_courante_14
                except EmptyError:
                    temp_sous_calcul_traitement_584 = dead_value
                    raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                         start_line=1510,
                                                         start_column=29,
                                                         end_line=1510,
                                                         end_column=42,
                                                         law_headings=["Article D823-9",
                                                         "Section 1 : Calcul, liquidation et versement des aides",
                                                         "Chapitre III : Modalités de liquidation et de versement",
                                                         "Titre II : Dispositions communes aux aides personnelles au logement",
                                                         "Livre VIII : Aides personnelles au logement",
                                                         "Partie réglementaire",
                                                         "Code de la construction et de l'habitation"]))
                try:
                    temp_sous_calcul_traitement_585 = logement_foyer__1.redevance
                except EmptyError:
                    temp_sous_calcul_traitement_585 = dead_value
                    raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                         start_line=1512,
                                                         start_column=25,
                                                         end_line=1512,
                                                         end_column=50,
                                                         law_headings=["Article D823-9",
                                                         "Section 1 : Calcul, liquidation et versement des aides",
                                                         "Chapitre III : Modalités de liquidation et de versement",
                                                         "Titre II : Dispositions communes aux aides personnelles au logement",
                                                         "Livre VIII : Aides personnelles au logement",
                                                         "Partie réglementaire",
                                                         "Code de la construction et de l'habitation"]))
                try:
                    temp_sous_calcul_traitement_586 = residence_8
                except EmptyError:
                    temp_sous_calcul_traitement_586 = dead_value
                    raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                         start_line=1509,
                                                         start_column=25,
                                                         end_line=1509,
                                                         end_column=34,
                                                         law_headings=["Article D823-9",
                                                         "Section 1 : Calcul, liquidation et versement des aides",
                                                         "Chapitre III : Modalités de liquidation et de versement",
                                                         "Titre II : Dispositions communes aux aides personnelles au logement",
                                                         "Livre VIII : Aides personnelles au logement",
                                                         "Partie réglementaire",
                                                         "Code de la construction et de l'habitation"]))
                def temp_sous_calcul_traitement_587(_:Unit):
                    raise EmptyError
                def temp_sous_calcul_traitement_588(_:Unit):
                    raise EmptyError
                def temp_sous_calcul_traitement_589(_:Unit):
                    raise EmptyError
                try:
                    temp_sous_calcul_traitement_590 = logement_foyer__1.type
                except EmptyError:
                    temp_sous_calcul_traitement_590 = dead_value
                    raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                         start_line=1513,
                                                         start_column=35,
                                                         end_line=1513,
                                                         end_column=55,
                                                         law_headings=["Article D823-9",
                                                         "Section 1 : Calcul, liquidation et versement des aides",
                                                         "Chapitre III : Modalités de liquidation et de versement",
                                                         "Titre II : Dispositions communes aux aides personnelles au logement",
                                                         "Livre VIII : Aides personnelles au logement",
                                                         "Partie réglementaire",
                                                         "Code de la construction et de l'habitation"]))
                try:
                    temp_sous_calcul_traitement_591 = logement_foyer__1.date_conventionnement
                except EmptyError:
                    temp_sous_calcul_traitement_591 = dead_value
                    raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                         start_line=1514,
                                                         start_column=37,
                                                         end_line=1514,
                                                         end_column=74,
                                                         law_headings=["Article D823-9",
                                                         "Section 1 : Calcul, liquidation et versement des aides",
                                                         "Chapitre III : Modalités de liquidation et de versement",
                                                         "Titre II : Dispositions communes aux aides personnelles au logement",
                                                         "Livre VIII : Aides personnelles au logement",
                                                         "Partie réglementaire",
                                                         "Code de la construction et de l'habitation"]))
                try:
                    temp_sous_calcul_traitement_592 = ressources_menage_avec_arrondi
                except EmptyError:
                    temp_sous_calcul_traitement_592 = dead_value
                    raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                         start_line=1506,
                                                         start_column=43,
                                                         end_line=1506,
                                                         end_column=60,
                                                         law_headings=["Article D823-9",
                                                         "Section 1 : Calcul, liquidation et versement des aides",
                                                         "Chapitre III : Modalités de liquidation et de versement",
                                                         "Titre II : Dispositions communes aux aides personnelles au logement",
                                                         "Livre VIII : Aides personnelles au logement",
                                                         "Partie réglementaire",
                                                         "Code de la construction et de l'habitation"]))
                try:
                    temp_sous_calcul_traitement_593 = nombre_personnes_a_charge_11
                except EmptyError:
                    temp_sous_calcul_traitement_593 = dead_value
                    raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                         start_line=1507,
                                                         start_column=41,
                                                         end_line=1507,
                                                         end_column=66,
                                                         law_headings=["Article D823-9",
                                                         "Section 1 : Calcul, liquidation et versement des aides",
                                                         "Chapitre III : Modalités de liquidation et de versement",
                                                         "Titre II : Dispositions communes aux aides personnelles au logement",
                                                         "Livre VIII : Aides personnelles au logement",
                                                         "Partie réglementaire",
                                                         "Code de la construction et de l'habitation"]))
                try:
                    temp_sous_calcul_traitement_594 = situation_familiale_calcul_apl_8
                except EmptyError:
                    temp_sous_calcul_traitement_594 = dead_value
                    raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                         start_line=1511,
                                                         start_column=46,
                                                         end_line=1511,
                                                         end_column=76,
                                                         law_headings=["Article D823-9",
                                                         "Section 1 : Calcul, liquidation et versement des aides",
                                                         "Chapitre III : Modalités de liquidation et de versement",
                                                         "Titre II : Dispositions communes aux aides personnelles au logement",
                                                         "Livre VIII : Aides personnelles au logement",
                                                         "Partie réglementaire",
                                                         "Code de la construction et de l'habitation"]))
                try:
                    temp_sous_calcul_traitement_595 = zone_6
                except EmptyError:
                    temp_sous_calcul_traitement_595 = dead_value
                    raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                         start_line=1508,
                                                         start_column=20,
                                                         end_line=1508,
                                                         end_column=24,
                                                         law_headings=["Article D823-9",
                                                         "Section 1 : Calcul, liquidation et versement des aides",
                                                         "Chapitre III : Modalités de liquidation et de versement",
                                                         "Titre II : Dispositions communes aux aides personnelles au logement",
                                                         "Livre VIII : Aides personnelles au logement",
                                                         "Partie réglementaire",
                                                         "Code de la construction et de l'habitation"]))
                try:
                    temp_sous_calcul_traitement_596 = date_courante_14
                except EmptyError:
                    temp_sous_calcul_traitement_596 = dead_value
                    raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                         start_line=1510,
                                                         start_column=29,
                                                         end_line=1510,
                                                         end_column=42,
                                                         law_headings=["Article D823-9",
                                                         "Section 1 : Calcul, liquidation et versement des aides",
                                                         "Chapitre III : Modalités de liquidation et de versement",
                                                         "Titre II : Dispositions communes aux aides personnelles au logement",
                                                         "Livre VIII : Aides personnelles au logement",
                                                         "Partie réglementaire",
                                                         "Code de la construction et de l'habitation"]))
                try:
                    temp_sous_calcul_traitement_597 = logement_foyer__1.redevance
                except EmptyError:
                    temp_sous_calcul_traitement_597 = dead_value
                    raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                         start_line=1512,
                                                         start_column=25,
                                                         end_line=1512,
                                                         end_column=50,
                                                         law_headings=["Article D823-9",
                                                         "Section 1 : Calcul, liquidation et versement des aides",
                                                         "Chapitre III : Modalités de liquidation et de versement",
                                                         "Titre II : Dispositions communes aux aides personnelles au logement",
                                                         "Livre VIII : Aides personnelles au logement",
                                                         "Partie réglementaire",
                                                         "Code de la construction et de l'habitation"]))
                try:
                    temp_sous_calcul_traitement_598 = residence_8
                except EmptyError:
                    temp_sous_calcul_traitement_598 = dead_value
                    raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                         start_line=1509,
                                                         start_column=25,
                                                         end_line=1509,
                                                         end_column=34,
                                                         law_headings=["Article D823-9",
                                                         "Section 1 : Calcul, liquidation et versement des aides",
                                                         "Chapitre III : Modalités de liquidation et de versement",
                                                         "Titre II : Dispositions communes aux aides personnelles au logement",
                                                         "Livre VIII : Aides personnelles au logement",
                                                         "Partie réglementaire",
                                                         "Code de la construction et de l'habitation"]))
                def temp_sous_calcul_traitement_599(_:Unit):
                    raise EmptyError
                def temp_sous_calcul_traitement_600(_:Unit):
                    raise EmptyError
                def temp_sous_calcul_traitement_601(_:Unit):
                    raise EmptyError
                try:
                    temp_sous_calcul_traitement_602 = logement_foyer__1.type
                except EmptyError:
                    temp_sous_calcul_traitement_602 = dead_value
                    raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                         start_line=1513,
                                                         start_column=35,
                                                         end_line=1513,
                                                         end_column=55,
                                                         law_headings=["Article D823-9",
                                                         "Section 1 : Calcul, liquidation et versement des aides",
                                                         "Chapitre III : Modalités de liquidation et de versement",
                                                         "Titre II : Dispositions communes aux aides personnelles au logement",
                                                         "Livre VIII : Aides personnelles au logement",
                                                         "Partie réglementaire",
                                                         "Code de la construction et de l'habitation"]))
                try:
                    temp_sous_calcul_traitement_603 = logement_foyer__1.date_conventionnement
                except EmptyError:
                    temp_sous_calcul_traitement_603 = dead_value
                    raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                         start_line=1514,
                                                         start_column=37,
                                                         end_line=1514,
                                                         end_column=74,
                                                         law_headings=["Article D823-9",
                                                         "Section 1 : Calcul, liquidation et versement des aides",
                                                         "Chapitre III : Modalités de liquidation et de versement",
                                                         "Titre II : Dispositions communes aux aides personnelles au logement",
                                                         "Livre VIII : Aides personnelles au logement",
                                                         "Partie réglementaire",
                                                         "Code de la construction et de l'habitation"]))
                try:
                    temp_sous_calcul_traitement_604 = ressources_menage_avec_arrondi
                except EmptyError:
                    temp_sous_calcul_traitement_604 = dead_value
                    raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                         start_line=1506,
                                                         start_column=43,
                                                         end_line=1506,
                                                         end_column=60,
                                                         law_headings=["Article D823-9",
                                                         "Section 1 : Calcul, liquidation et versement des aides",
                                                         "Chapitre III : Modalités de liquidation et de versement",
                                                         "Titre II : Dispositions communes aux aides personnelles au logement",
                                                         "Livre VIII : Aides personnelles au logement",
                                                         "Partie réglementaire",
                                                         "Code de la construction et de l'habitation"]))
                try:
                    temp_sous_calcul_traitement_605 = nombre_personnes_a_charge_11
                except EmptyError:
                    temp_sous_calcul_traitement_605 = dead_value
                    raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                         start_line=1507,
                                                         start_column=41,
                                                         end_line=1507,
                                                         end_column=66,
                                                         law_headings=["Article D823-9",
                                                         "Section 1 : Calcul, liquidation et versement des aides",
                                                         "Chapitre III : Modalités de liquidation et de versement",
                                                         "Titre II : Dispositions communes aux aides personnelles au logement",
                                                         "Livre VIII : Aides personnelles au logement",
                                                         "Partie réglementaire",
                                                         "Code de la construction et de l'habitation"]))
                try:
                    temp_sous_calcul_traitement_606 = situation_familiale_calcul_apl_8
                except EmptyError:
                    temp_sous_calcul_traitement_606 = dead_value
                    raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                         start_line=1511,
                                                         start_column=46,
                                                         end_line=1511,
                                                         end_column=76,
                                                         law_headings=["Article D823-9",
                                                         "Section 1 : Calcul, liquidation et versement des aides",
                                                         "Chapitre III : Modalités de liquidation et de versement",
                                                         "Titre II : Dispositions communes aux aides personnelles au logement",
                                                         "Livre VIII : Aides personnelles au logement",
                                                         "Partie réglementaire",
                                                         "Code de la construction et de l'habitation"]))
                try:
                    temp_sous_calcul_traitement_607 = zone_6
                except EmptyError:
                    temp_sous_calcul_traitement_607 = dead_value
                    raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                         start_line=1508,
                                                         start_column=20,
                                                         end_line=1508,
                                                         end_column=24,
                                                         law_headings=["Article D823-9",
                                                         "Section 1 : Calcul, liquidation et versement des aides",
                                                         "Chapitre III : Modalités de liquidation et de versement",
                                                         "Titre II : Dispositions communes aux aides personnelles au logement",
                                                         "Livre VIII : Aides personnelles au logement",
                                                         "Partie réglementaire",
                                                         "Code de la construction et de l'habitation"]))
                try:
                    temp_sous_calcul_traitement_608 = date_courante_14
                except EmptyError:
                    temp_sous_calcul_traitement_608 = dead_value
                    raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                         start_line=1510,
                                                         start_column=29,
                                                         end_line=1510,
                                                         end_column=42,
                                                         law_headings=["Article D823-9",
                                                         "Section 1 : Calcul, liquidation et versement des aides",
                                                         "Chapitre III : Modalités de liquidation et de versement",
                                                         "Titre II : Dispositions communes aux aides personnelles au logement",
                                                         "Livre VIII : Aides personnelles au logement",
                                                         "Partie réglementaire",
                                                         "Code de la construction et de l'habitation"]))
                try:
                    temp_sous_calcul_traitement_609 = logement_foyer__1.redevance
                except EmptyError:
                    temp_sous_calcul_traitement_609 = dead_value
                    raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                         start_line=1512,
                                                         start_column=25,
                                                         end_line=1512,
                                                         end_column=50,
                                                         law_headings=["Article D823-9",
                                                         "Section 1 : Calcul, liquidation et versement des aides",
                                                         "Chapitre III : Modalités de liquidation et de versement",
                                                         "Titre II : Dispositions communes aux aides personnelles au logement",
                                                         "Livre VIII : Aides personnelles au logement",
                                                         "Partie réglementaire",
                                                         "Code de la construction et de l'habitation"]))
                try:
                    temp_sous_calcul_traitement_610 = residence_8
                except EmptyError:
                    temp_sous_calcul_traitement_610 = dead_value
                    raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                         start_line=1509,
                                                         start_column=25,
                                                         end_line=1509,
                                                         end_column=34,
                                                         law_headings=["Article D823-9",
                                                         "Section 1 : Calcul, liquidation et versement des aides",
                                                         "Chapitre III : Modalités de liquidation et de versement",
                                                         "Titre II : Dispositions communes aux aides personnelles au logement",
                                                         "Livre VIII : Aides personnelles au logement",
                                                         "Partie réglementaire",
                                                         "Code de la construction et de l'habitation"]))
                def temp_sous_calcul_traitement_611(_:Unit):
                    raise EmptyError
                def temp_sous_calcul_traitement_612(_:Unit):
                    raise EmptyError
                def temp_sous_calcul_traitement_613(_:Unit):
                    raise EmptyError
                try:
                    temp_sous_calcul_traitement_614 = logement_foyer__1.type
                except EmptyError:
                    temp_sous_calcul_traitement_614 = dead_value
                    raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                         start_line=1513,
                                                         start_column=35,
                                                         end_line=1513,
                                                         end_column=55,
                                                         law_headings=["Article D823-9",
                                                         "Section 1 : Calcul, liquidation et versement des aides",
                                                         "Chapitre III : Modalités de liquidation et de versement",
                                                         "Titre II : Dispositions communes aux aides personnelles au logement",
                                                         "Livre VIII : Aides personnelles au logement",
                                                         "Partie réglementaire",
                                                         "Code de la construction et de l'habitation"]))
                try:
                    temp_sous_calcul_traitement_615 = logement_foyer__1.date_conventionnement
                except EmptyError:
                    temp_sous_calcul_traitement_615 = dead_value
                    raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                         start_line=1514,
                                                         start_column=37,
                                                         end_line=1514,
                                                         end_column=74,
                                                         law_headings=["Article D823-9",
                                                         "Section 1 : Calcul, liquidation et versement des aides",
                                                         "Chapitre III : Modalités de liquidation et de versement",
                                                         "Titre II : Dispositions communes aux aides personnelles au logement",
                                                         "Livre VIII : Aides personnelles au logement",
                                                         "Partie réglementaire",
                                                         "Code de la construction et de l'habitation"]))
                try:
                    temp_sous_calcul_traitement_616 = ressources_menage_avec_arrondi
                except EmptyError:
                    temp_sous_calcul_traitement_616 = dead_value
                    raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                         start_line=1506,
                                                         start_column=43,
                                                         end_line=1506,
                                                         end_column=60,
                                                         law_headings=["Article D823-9",
                                                         "Section 1 : Calcul, liquidation et versement des aides",
                                                         "Chapitre III : Modalités de liquidation et de versement",
                                                         "Titre II : Dispositions communes aux aides personnelles au logement",
                                                         "Livre VIII : Aides personnelles au logement",
                                                         "Partie réglementaire",
                                                         "Code de la construction et de l'habitation"]))
                try:
                    temp_sous_calcul_traitement_617 = nombre_personnes_a_charge_11
                except EmptyError:
                    temp_sous_calcul_traitement_617 = dead_value
                    raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                         start_line=1507,
                                                         start_column=41,
                                                         end_line=1507,
                                                         end_column=66,
                                                         law_headings=["Article D823-9",
                                                         "Section 1 : Calcul, liquidation et versement des aides",
                                                         "Chapitre III : Modalités de liquidation et de versement",
                                                         "Titre II : Dispositions communes aux aides personnelles au logement",
                                                         "Livre VIII : Aides personnelles au logement",
                                                         "Partie réglementaire",
                                                         "Code de la construction et de l'habitation"]))
                try:
                    temp_sous_calcul_traitement_618 = situation_familiale_calcul_apl_8
                except EmptyError:
                    temp_sous_calcul_traitement_618 = dead_value
                    raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                         start_line=1511,
                                                         start_column=46,
                                                         end_line=1511,
                                                         end_column=76,
                                                         law_headings=["Article D823-9",
                                                         "Section 1 : Calcul, liquidation et versement des aides",
                                                         "Chapitre III : Modalités de liquidation et de versement",
                                                         "Titre II : Dispositions communes aux aides personnelles au logement",
                                                         "Livre VIII : Aides personnelles au logement",
                                                         "Partie réglementaire",
                                                         "Code de la construction et de l'habitation"]))
                try:
                    temp_sous_calcul_traitement_619 = zone_6
                except EmptyError:
                    temp_sous_calcul_traitement_619 = dead_value
                    raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                         start_line=1508,
                                                         start_column=20,
                                                         end_line=1508,
                                                         end_column=24,
                                                         law_headings=["Article D823-9",
                                                         "Section 1 : Calcul, liquidation et versement des aides",
                                                         "Chapitre III : Modalités de liquidation et de versement",
                                                         "Titre II : Dispositions communes aux aides personnelles au logement",
                                                         "Livre VIII : Aides personnelles au logement",
                                                         "Partie réglementaire",
                                                         "Code de la construction et de l'habitation"]))
                try:
                    temp_sous_calcul_traitement_620 = date_courante_14
                except EmptyError:
                    temp_sous_calcul_traitement_620 = dead_value
                    raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                         start_line=1510,
                                                         start_column=29,
                                                         end_line=1510,
                                                         end_column=42,
                                                         law_headings=["Article D823-9",
                                                         "Section 1 : Calcul, liquidation et versement des aides",
                                                         "Chapitre III : Modalités de liquidation et de versement",
                                                         "Titre II : Dispositions communes aux aides personnelles au logement",
                                                         "Livre VIII : Aides personnelles au logement",
                                                         "Partie réglementaire",
                                                         "Code de la construction et de l'habitation"]))
                try:
                    temp_sous_calcul_traitement_621 = logement_foyer__1.redevance
                except EmptyError:
                    temp_sous_calcul_traitement_621 = dead_value
                    raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                         start_line=1512,
                                                         start_column=25,
                                                         end_line=1512,
                                                         end_column=50,
                                                         law_headings=["Article D823-9",
                                                         "Section 1 : Calcul, liquidation et versement des aides",
                                                         "Chapitre III : Modalités de liquidation et de versement",
                                                         "Titre II : Dispositions communes aux aides personnelles au logement",
                                                         "Livre VIII : Aides personnelles au logement",
                                                         "Partie réglementaire",
                                                         "Code de la construction et de l'habitation"]))
                try:
                    temp_sous_calcul_traitement_622 = residence_8
                except EmptyError:
                    temp_sous_calcul_traitement_622 = dead_value
                    raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                         start_line=1509,
                                                         start_column=25,
                                                         end_line=1509,
                                                         end_column=34,
                                                         law_headings=["Article D823-9",
                                                         "Section 1 : Calcul, liquidation et versement des aides",
                                                         "Chapitre III : Modalités de liquidation et de versement",
                                                         "Titre II : Dispositions communes aux aides personnelles au logement",
                                                         "Livre VIII : Aides personnelles au logement",
                                                         "Partie réglementaire",
                                                         "Code de la construction et de l'habitation"]))
                def temp_sous_calcul_traitement_623(_:Unit):
                    raise EmptyError
                def temp_sous_calcul_traitement_624(_:Unit):
                    raise EmptyError
                def temp_sous_calcul_traitement_625(_:Unit):
                    raise EmptyError
                try:
                    temp_sous_calcul_traitement_626 = logement_foyer__1.type
                except EmptyError:
                    temp_sous_calcul_traitement_626 = dead_value
                    raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                         start_line=1513,
                                                         start_column=35,
                                                         end_line=1513,
                                                         end_column=55,
                                                         law_headings=["Article D823-9",
                                                         "Section 1 : Calcul, liquidation et versement des aides",
                                                         "Chapitre III : Modalités de liquidation et de versement",
                                                         "Titre II : Dispositions communes aux aides personnelles au logement",
                                                         "Livre VIII : Aides personnelles au logement",
                                                         "Partie réglementaire",
                                                         "Code de la construction et de l'habitation"]))
                try:
                    temp_sous_calcul_traitement_627 = logement_foyer__1.date_conventionnement
                except EmptyError:
                    temp_sous_calcul_traitement_627 = dead_value
                    raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                         start_line=1514,
                                                         start_column=37,
                                                         end_line=1514,
                                                         end_column=74,
                                                         law_headings=["Article D823-9",
                                                         "Section 1 : Calcul, liquidation et versement des aides",
                                                         "Chapitre III : Modalités de liquidation et de versement",
                                                         "Titre II : Dispositions communes aux aides personnelles au logement",
                                                         "Livre VIII : Aides personnelles au logement",
                                                         "Partie réglementaire",
                                                         "Code de la construction et de l'habitation"]))
                try:
                    temp_sous_calcul_traitement_628 = ressources_menage_avec_arrondi
                except EmptyError:
                    temp_sous_calcul_traitement_628 = dead_value
                    raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                         start_line=1506,
                                                         start_column=43,
                                                         end_line=1506,
                                                         end_column=60,
                                                         law_headings=["Article D823-9",
                                                         "Section 1 : Calcul, liquidation et versement des aides",
                                                         "Chapitre III : Modalités de liquidation et de versement",
                                                         "Titre II : Dispositions communes aux aides personnelles au logement",
                                                         "Livre VIII : Aides personnelles au logement",
                                                         "Partie réglementaire",
                                                         "Code de la construction et de l'habitation"]))
                try:
                    temp_sous_calcul_traitement_629 = nombre_personnes_a_charge_11
                except EmptyError:
                    temp_sous_calcul_traitement_629 = dead_value
                    raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                         start_line=1507,
                                                         start_column=41,
                                                         end_line=1507,
                                                         end_column=66,
                                                         law_headings=["Article D823-9",
                                                         "Section 1 : Calcul, liquidation et versement des aides",
                                                         "Chapitre III : Modalités de liquidation et de versement",
                                                         "Titre II : Dispositions communes aux aides personnelles au logement",
                                                         "Livre VIII : Aides personnelles au logement",
                                                         "Partie réglementaire",
                                                         "Code de la construction et de l'habitation"]))
                try:
                    temp_sous_calcul_traitement_630 = situation_familiale_calcul_apl_8
                except EmptyError:
                    temp_sous_calcul_traitement_630 = dead_value
                    raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                         start_line=1511,
                                                         start_column=46,
                                                         end_line=1511,
                                                         end_column=76,
                                                         law_headings=["Article D823-9",
                                                         "Section 1 : Calcul, liquidation et versement des aides",
                                                         "Chapitre III : Modalités de liquidation et de versement",
                                                         "Titre II : Dispositions communes aux aides personnelles au logement",
                                                         "Livre VIII : Aides personnelles au logement",
                                                         "Partie réglementaire",
                                                         "Code de la construction et de l'habitation"]))
                try:
                    temp_sous_calcul_traitement_631 = zone_6
                except EmptyError:
                    temp_sous_calcul_traitement_631 = dead_value
                    raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                         start_line=1508,
                                                         start_column=20,
                                                         end_line=1508,
                                                         end_column=24,
                                                         law_headings=["Article D823-9",
                                                         "Section 1 : Calcul, liquidation et versement des aides",
                                                         "Chapitre III : Modalités de liquidation et de versement",
                                                         "Titre II : Dispositions communes aux aides personnelles au logement",
                                                         "Livre VIII : Aides personnelles au logement",
                                                         "Partie réglementaire",
                                                         "Code de la construction et de l'habitation"]))
                try:
                    temp_sous_calcul_traitement_632 = date_courante_14
                except EmptyError:
                    temp_sous_calcul_traitement_632 = dead_value
                    raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                         start_line=1510,
                                                         start_column=29,
                                                         end_line=1510,
                                                         end_column=42,
                                                         law_headings=["Article D823-9",
                                                         "Section 1 : Calcul, liquidation et versement des aides",
                                                         "Chapitre III : Modalités de liquidation et de versement",
                                                         "Titre II : Dispositions communes aux aides personnelles au logement",
                                                         "Livre VIII : Aides personnelles au logement",
                                                         "Partie réglementaire",
                                                         "Code de la construction et de l'habitation"]))
                try:
                    temp_sous_calcul_traitement_633 = logement_foyer__1.redevance
                except EmptyError:
                    temp_sous_calcul_traitement_633 = dead_value
                    raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                         start_line=1512,
                                                         start_column=25,
                                                         end_line=1512,
                                                         end_column=50,
                                                         law_headings=["Article D823-9",
                                                         "Section 1 : Calcul, liquidation et versement des aides",
                                                         "Chapitre III : Modalités de liquidation et de versement",
                                                         "Titre II : Dispositions communes aux aides personnelles au logement",
                                                         "Livre VIII : Aides personnelles au logement",
                                                         "Partie réglementaire",
                                                         "Code de la construction et de l'habitation"]))
                try:
                    temp_sous_calcul_traitement_634 = residence_8
                except EmptyError:
                    temp_sous_calcul_traitement_634 = dead_value
                    raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                         start_line=1509,
                                                         start_column=25,
                                                         end_line=1509,
                                                         end_column=34,
                                                         law_headings=["Article D823-9",
                                                         "Section 1 : Calcul, liquidation et versement des aides",
                                                         "Chapitre III : Modalités de liquidation et de versement",
                                                         "Titre II : Dispositions communes aux aides personnelles au logement",
                                                         "Livre VIII : Aides personnelles au logement",
                                                         "Partie réglementaire",
                                                         "Code de la construction et de l'habitation"]))
                def temp_sous_calcul_traitement_635(_:Unit):
                    raise EmptyError
                def temp_sous_calcul_traitement_636(_:Unit):
                    raise EmptyError
                def temp_sous_calcul_traitement_637(_:Unit):
                    raise EmptyError
                try:
                    temp_sous_calcul_traitement_638 = logement_foyer__1.type
                except EmptyError:
                    temp_sous_calcul_traitement_638 = dead_value
                    raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                         start_line=1513,
                                                         start_column=35,
                                                         end_line=1513,
                                                         end_column=55,
                                                         law_headings=["Article D823-9",
                                                         "Section 1 : Calcul, liquidation et versement des aides",
                                                         "Chapitre III : Modalités de liquidation et de versement",
                                                         "Titre II : Dispositions communes aux aides personnelles au logement",
                                                         "Livre VIII : Aides personnelles au logement",
                                                         "Partie réglementaire",
                                                         "Code de la construction et de l'habitation"]))
                try:
                    temp_sous_calcul_traitement_639 = logement_foyer__1.date_conventionnement
                except EmptyError:
                    temp_sous_calcul_traitement_639 = dead_value
                    raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                         start_line=1514,
                                                         start_column=37,
                                                         end_line=1514,
                                                         end_column=74,
                                                         law_headings=["Article D823-9",
                                                         "Section 1 : Calcul, liquidation et versement des aides",
                                                         "Chapitre III : Modalités de liquidation et de versement",
                                                         "Titre II : Dispositions communes aux aides personnelles au logement",
                                                         "Livre VIII : Aides personnelles au logement",
                                                         "Partie réglementaire",
                                                         "Code de la construction et de l'habitation"]))
                try:
                    temp_sous_calcul_traitement_640 = ressources_menage_avec_arrondi
                except EmptyError:
                    temp_sous_calcul_traitement_640 = dead_value
                    raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                         start_line=1506,
                                                         start_column=43,
                                                         end_line=1506,
                                                         end_column=60,
                                                         law_headings=["Article D823-9",
                                                         "Section 1 : Calcul, liquidation et versement des aides",
                                                         "Chapitre III : Modalités de liquidation et de versement",
                                                         "Titre II : Dispositions communes aux aides personnelles au logement",
                                                         "Livre VIII : Aides personnelles au logement",
                                                         "Partie réglementaire",
                                                         "Code de la construction et de l'habitation"]))
                try:
                    temp_sous_calcul_traitement_641 = nombre_personnes_a_charge_11
                except EmptyError:
                    temp_sous_calcul_traitement_641 = dead_value
                    raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                         start_line=1507,
                                                         start_column=41,
                                                         end_line=1507,
                                                         end_column=66,
                                                         law_headings=["Article D823-9",
                                                         "Section 1 : Calcul, liquidation et versement des aides",
                                                         "Chapitre III : Modalités de liquidation et de versement",
                                                         "Titre II : Dispositions communes aux aides personnelles au logement",
                                                         "Livre VIII : Aides personnelles au logement",
                                                         "Partie réglementaire",
                                                         "Code de la construction et de l'habitation"]))
                try:
                    temp_sous_calcul_traitement_642 = situation_familiale_calcul_apl_8
                except EmptyError:
                    temp_sous_calcul_traitement_642 = dead_value
                    raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                         start_line=1511,
                                                         start_column=46,
                                                         end_line=1511,
                                                         end_column=76,
                                                         law_headings=["Article D823-9",
                                                         "Section 1 : Calcul, liquidation et versement des aides",
                                                         "Chapitre III : Modalités de liquidation et de versement",
                                                         "Titre II : Dispositions communes aux aides personnelles au logement",
                                                         "Livre VIII : Aides personnelles au logement",
                                                         "Partie réglementaire",
                                                         "Code de la construction et de l'habitation"]))
                try:
                    temp_sous_calcul_traitement_643 = zone_6
                except EmptyError:
                    temp_sous_calcul_traitement_643 = dead_value
                    raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                         start_line=1508,
                                                         start_column=20,
                                                         end_line=1508,
                                                         end_column=24,
                                                         law_headings=["Article D823-9",
                                                         "Section 1 : Calcul, liquidation et versement des aides",
                                                         "Chapitre III : Modalités de liquidation et de versement",
                                                         "Titre II : Dispositions communes aux aides personnelles au logement",
                                                         "Livre VIII : Aides personnelles au logement",
                                                         "Partie réglementaire",
                                                         "Code de la construction et de l'habitation"]))
                try:
                    temp_sous_calcul_traitement_644 = date_courante_14
                except EmptyError:
                    temp_sous_calcul_traitement_644 = dead_value
                    raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                         start_line=1510,
                                                         start_column=29,
                                                         end_line=1510,
                                                         end_column=42,
                                                         law_headings=["Article D823-9",
                                                         "Section 1 : Calcul, liquidation et versement des aides",
                                                         "Chapitre III : Modalités de liquidation et de versement",
                                                         "Titre II : Dispositions communes aux aides personnelles au logement",
                                                         "Livre VIII : Aides personnelles au logement",
                                                         "Partie réglementaire",
                                                         "Code de la construction et de l'habitation"]))
                try:
                    temp_sous_calcul_traitement_645 = logement_foyer__1.redevance
                except EmptyError:
                    temp_sous_calcul_traitement_645 = dead_value
                    raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                         start_line=1512,
                                                         start_column=25,
                                                         end_line=1512,
                                                         end_column=50,
                                                         law_headings=["Article D823-9",
                                                         "Section 1 : Calcul, liquidation et versement des aides",
                                                         "Chapitre III : Modalités de liquidation et de versement",
                                                         "Titre II : Dispositions communes aux aides personnelles au logement",
                                                         "Livre VIII : Aides personnelles au logement",
                                                         "Partie réglementaire",
                                                         "Code de la construction et de l'habitation"]))
                try:
                    temp_sous_calcul_traitement_646 = residence_8
                except EmptyError:
                    temp_sous_calcul_traitement_646 = dead_value
                    raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                         start_line=1509,
                                                         start_column=25,
                                                         end_line=1509,
                                                         end_column=34,
                                                         law_headings=["Article D823-9",
                                                         "Section 1 : Calcul, liquidation et versement des aides",
                                                         "Chapitre III : Modalités de liquidation et de versement",
                                                         "Titre II : Dispositions communes aux aides personnelles au logement",
                                                         "Livre VIII : Aides personnelles au logement",
                                                         "Partie réglementaire",
                                                         "Code de la construction et de l'habitation"]))
                def temp_sous_calcul_traitement_647(_:Unit):
                    raise EmptyError
                def temp_sous_calcul_traitement_648(_:Unit):
                    raise EmptyError
                def temp_sous_calcul_traitement_649(_:Unit):
                    raise EmptyError
                def temp_sous_calcul_traitement_650(param0_7:Money):
                    try:
                        temp_sous_calcul_traitement_651 = logement_foyer__1.type
                    except EmptyError:
                        temp_sous_calcul_traitement_651 = dead_value
                        raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                             start_line=1513,
                                                             start_column=35,
                                                             end_line=1513,
                                                             end_column=55,
                                                             law_headings=["Article D823-9",
                                                             "Section 1 : Calcul, liquidation et versement des aides",
                                                             "Chapitre III : Modalités de liquidation et de versement",
                                                             "Titre II : Dispositions communes aux aides personnelles au logement",
                                                             "Livre VIII : Aides personnelles au logement",
                                                             "Partie réglementaire",
                                                             "Code de la construction et de l'habitation"]))
                    try:
                        temp_sous_calcul_traitement_652 = logement_foyer__1.date_conventionnement
                    except EmptyError:
                        temp_sous_calcul_traitement_652 = dead_value
                        raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                             start_line=1514,
                                                             start_column=37,
                                                             end_line=1514,
                                                             end_column=74,
                                                             law_headings=["Article D823-9",
                                                             "Section 1 : Calcul, liquidation et versement des aides",
                                                             "Chapitre III : Modalités de liquidation et de versement",
                                                             "Titre II : Dispositions communes aux aides personnelles au logement",
                                                             "Livre VIII : Aides personnelles au logement",
                                                             "Partie réglementaire",
                                                             "Code de la construction et de l'habitation"]))
                    try:
                        temp_sous_calcul_traitement_653 = ressources_menage_avec_arrondi
                    except EmptyError:
                        temp_sous_calcul_traitement_653 = dead_value
                        raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                             start_line=1506,
                                                             start_column=43,
                                                             end_line=1506,
                                                             end_column=60,
                                                             law_headings=["Article D823-9",
                                                             "Section 1 : Calcul, liquidation et versement des aides",
                                                             "Chapitre III : Modalités de liquidation et de versement",
                                                             "Titre II : Dispositions communes aux aides personnelles au logement",
                                                             "Livre VIII : Aides personnelles au logement",
                                                             "Partie réglementaire",
                                                             "Code de la construction et de l'habitation"]))
                    try:
                        temp_sous_calcul_traitement_654 = nombre_personnes_a_charge_11
                    except EmptyError:
                        temp_sous_calcul_traitement_654 = dead_value
                        raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                             start_line=1507,
                                                             start_column=41,
                                                             end_line=1507,
                                                             end_column=66,
                                                             law_headings=["Article D823-9",
                                                             "Section 1 : Calcul, liquidation et versement des aides",
                                                             "Chapitre III : Modalités de liquidation et de versement",
                                                             "Titre II : Dispositions communes aux aides personnelles au logement",
                                                             "Livre VIII : Aides personnelles au logement",
                                                             "Partie réglementaire",
                                                             "Code de la construction et de l'habitation"]))
                    try:
                        temp_sous_calcul_traitement_655 = situation_familiale_calcul_apl_8
                    except EmptyError:
                        temp_sous_calcul_traitement_655 = dead_value
                        raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                             start_line=1511,
                                                             start_column=46,
                                                             end_line=1511,
                                                             end_column=76,
                                                             law_headings=["Article D823-9",
                                                             "Section 1 : Calcul, liquidation et versement des aides",
                                                             "Chapitre III : Modalités de liquidation et de versement",
                                                             "Titre II : Dispositions communes aux aides personnelles au logement",
                                                             "Livre VIII : Aides personnelles au logement",
                                                             "Partie réglementaire",
                                                             "Code de la construction et de l'habitation"]))
                    try:
                        temp_sous_calcul_traitement_656 = zone_6
                    except EmptyError:
                        temp_sous_calcul_traitement_656 = dead_value
                        raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                             start_line=1508,
                                                             start_column=20,
                                                             end_line=1508,
                                                             end_column=24,
                                                             law_headings=["Article D823-9",
                                                             "Section 1 : Calcul, liquidation et versement des aides",
                                                             "Chapitre III : Modalités de liquidation et de versement",
                                                             "Titre II : Dispositions communes aux aides personnelles au logement",
                                                             "Livre VIII : Aides personnelles au logement",
                                                             "Partie réglementaire",
                                                             "Code de la construction et de l'habitation"]))
                    try:
                        temp_sous_calcul_traitement_657 = date_courante_14
                    except EmptyError:
                        temp_sous_calcul_traitement_657 = dead_value
                        raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                             start_line=1510,
                                                             start_column=29,
                                                             end_line=1510,
                                                             end_column=42,
                                                             law_headings=["Article D823-9",
                                                             "Section 1 : Calcul, liquidation et versement des aides",
                                                             "Chapitre III : Modalités de liquidation et de versement",
                                                             "Titre II : Dispositions communes aux aides personnelles au logement",
                                                             "Livre VIII : Aides personnelles au logement",
                                                             "Partie réglementaire",
                                                             "Code de la construction et de l'habitation"]))
                    try:
                        temp_sous_calcul_traitement_658 = logement_foyer__1.redevance
                    except EmptyError:
                        temp_sous_calcul_traitement_658 = dead_value
                        raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                             start_line=1512,
                                                             start_column=25,
                                                             end_line=1512,
                                                             end_column=50,
                                                             law_headings=["Article D823-9",
                                                             "Section 1 : Calcul, liquidation et versement des aides",
                                                             "Chapitre III : Modalités de liquidation et de versement",
                                                             "Titre II : Dispositions communes aux aides personnelles au logement",
                                                             "Livre VIII : Aides personnelles au logement",
                                                             "Partie réglementaire",
                                                             "Code de la construction et de l'habitation"]))
                    try:
                        temp_sous_calcul_traitement_659 = residence_8
                    except EmptyError:
                        temp_sous_calcul_traitement_659 = dead_value
                        raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                             start_line=1509,
                                                             start_column=25,
                                                             end_line=1509,
                                                             end_column=34,
                                                             law_headings=["Article D823-9",
                                                             "Section 1 : Calcul, liquidation et versement des aides",
                                                             "Chapitre III : Modalités de liquidation et de versement",
                                                             "Titre II : Dispositions communes aux aides personnelles au logement",
                                                             "Livre VIII : Aides personnelles au logement",
                                                             "Partie réglementaire",
                                                             "Code de la construction et de l'habitation"]))
                    def temp_sous_calcul_traitement_660(_:Unit):
                        raise EmptyError
                    def temp_sous_calcul_traitement_661(_:Unit):
                        raise EmptyError
                    def temp_sous_calcul_traitement_662(_:Unit):
                        raise EmptyError
                    return calcul_aide_personnalisee_logement_foyer(CalculAidePersonnaliseeLogementFoyerIn(type_logement_foyer_in = temp_sous_calcul_traitement_651,
                                                                    date_conventionnement_in = temp_sous_calcul_traitement_652,
                                                                    ressources_menage_arrondies_in = temp_sous_calcul_traitement_653,
                                                                    nombre_personnes_a_charge_in = temp_sous_calcul_traitement_654,
                                                                    situation_familiale_calcul_apl_in = temp_sous_calcul_traitement_655,
                                                                    zone_in = temp_sous_calcul_traitement_656,
                                                                    date_courante_in = temp_sous_calcul_traitement_657,
                                                                    redevance_in = temp_sous_calcul_traitement_658,
                                                                    residence_in = temp_sous_calcul_traitement_659,
                                                                    condition_2_du_832_25_in = temp_sous_calcul_traitement_660,
                                                                    limitation_majoration_personnes_a_charge_in = temp_sous_calcul_traitement_661,
                                                                    n_nombre_parts_d832_25_in = temp_sous_calcul_traitement_662)).traitement_aide_finale(
                        param0_7)
                try:
                    temp_sous_calcul_traitement_663 = logement_foyer__1.type
                except EmptyError:
                    temp_sous_calcul_traitement_663 = dead_value
                    raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                         start_line=1513,
                                                         start_column=35,
                                                         end_line=1513,
                                                         end_column=55,
                                                         law_headings=["Article D823-9",
                                                         "Section 1 : Calcul, liquidation et versement des aides",
                                                         "Chapitre III : Modalités de liquidation et de versement",
                                                         "Titre II : Dispositions communes aux aides personnelles au logement",
                                                         "Livre VIII : Aides personnelles au logement",
                                                         "Partie réglementaire",
                                                         "Code de la construction et de l'habitation"]))
                try:
                    temp_sous_calcul_traitement_664 = logement_foyer__1.date_conventionnement
                except EmptyError:
                    temp_sous_calcul_traitement_664 = dead_value
                    raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                         start_line=1514,
                                                         start_column=37,
                                                         end_line=1514,
                                                         end_column=74,
                                                         law_headings=["Article D823-9",
                                                         "Section 1 : Calcul, liquidation et versement des aides",
                                                         "Chapitre III : Modalités de liquidation et de versement",
                                                         "Titre II : Dispositions communes aux aides personnelles au logement",
                                                         "Livre VIII : Aides personnelles au logement",
                                                         "Partie réglementaire",
                                                         "Code de la construction et de l'habitation"]))
                try:
                    temp_sous_calcul_traitement_665 = ressources_menage_avec_arrondi
                except EmptyError:
                    temp_sous_calcul_traitement_665 = dead_value
                    raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                         start_line=1506,
                                                         start_column=43,
                                                         end_line=1506,
                                                         end_column=60,
                                                         law_headings=["Article D823-9",
                                                         "Section 1 : Calcul, liquidation et versement des aides",
                                                         "Chapitre III : Modalités de liquidation et de versement",
                                                         "Titre II : Dispositions communes aux aides personnelles au logement",
                                                         "Livre VIII : Aides personnelles au logement",
                                                         "Partie réglementaire",
                                                         "Code de la construction et de l'habitation"]))
                try:
                    temp_sous_calcul_traitement_666 = nombre_personnes_a_charge_11
                except EmptyError:
                    temp_sous_calcul_traitement_666 = dead_value
                    raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                         start_line=1507,
                                                         start_column=41,
                                                         end_line=1507,
                                                         end_column=66,
                                                         law_headings=["Article D823-9",
                                                         "Section 1 : Calcul, liquidation et versement des aides",
                                                         "Chapitre III : Modalités de liquidation et de versement",
                                                         "Titre II : Dispositions communes aux aides personnelles au logement",
                                                         "Livre VIII : Aides personnelles au logement",
                                                         "Partie réglementaire",
                                                         "Code de la construction et de l'habitation"]))
                try:
                    temp_sous_calcul_traitement_667 = situation_familiale_calcul_apl_8
                except EmptyError:
                    temp_sous_calcul_traitement_667 = dead_value
                    raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                         start_line=1511,
                                                         start_column=46,
                                                         end_line=1511,
                                                         end_column=76,
                                                         law_headings=["Article D823-9",
                                                         "Section 1 : Calcul, liquidation et versement des aides",
                                                         "Chapitre III : Modalités de liquidation et de versement",
                                                         "Titre II : Dispositions communes aux aides personnelles au logement",
                                                         "Livre VIII : Aides personnelles au logement",
                                                         "Partie réglementaire",
                                                         "Code de la construction et de l'habitation"]))
                try:
                    temp_sous_calcul_traitement_668 = zone_6
                except EmptyError:
                    temp_sous_calcul_traitement_668 = dead_value
                    raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                         start_line=1508,
                                                         start_column=20,
                                                         end_line=1508,
                                                         end_column=24,
                                                         law_headings=["Article D823-9",
                                                         "Section 1 : Calcul, liquidation et versement des aides",
                                                         "Chapitre III : Modalités de liquidation et de versement",
                                                         "Titre II : Dispositions communes aux aides personnelles au logement",
                                                         "Livre VIII : Aides personnelles au logement",
                                                         "Partie réglementaire",
                                                         "Code de la construction et de l'habitation"]))
                try:
                    temp_sous_calcul_traitement_669 = date_courante_14
                except EmptyError:
                    temp_sous_calcul_traitement_669 = dead_value
                    raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                         start_line=1510,
                                                         start_column=29,
                                                         end_line=1510,
                                                         end_column=42,
                                                         law_headings=["Article D823-9",
                                                         "Section 1 : Calcul, liquidation et versement des aides",
                                                         "Chapitre III : Modalités de liquidation et de versement",
                                                         "Titre II : Dispositions communes aux aides personnelles au logement",
                                                         "Livre VIII : Aides personnelles au logement",
                                                         "Partie réglementaire",
                                                         "Code de la construction et de l'habitation"]))
                try:
                    temp_sous_calcul_traitement_670 = logement_foyer__1.redevance
                except EmptyError:
                    temp_sous_calcul_traitement_670 = dead_value
                    raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                         start_line=1512,
                                                         start_column=25,
                                                         end_line=1512,
                                                         end_column=50,
                                                         law_headings=["Article D823-9",
                                                         "Section 1 : Calcul, liquidation et versement des aides",
                                                         "Chapitre III : Modalités de liquidation et de versement",
                                                         "Titre II : Dispositions communes aux aides personnelles au logement",
                                                         "Livre VIII : Aides personnelles au logement",
                                                         "Partie réglementaire",
                                                         "Code de la construction et de l'habitation"]))
                try:
                    temp_sous_calcul_traitement_671 = residence_8
                except EmptyError:
                    temp_sous_calcul_traitement_671 = dead_value
                    raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                         start_line=1509,
                                                         start_column=25,
                                                         end_line=1509,
                                                         end_column=34,
                                                         law_headings=["Article D823-9",
                                                         "Section 1 : Calcul, liquidation et versement des aides",
                                                         "Chapitre III : Modalités de liquidation et de versement",
                                                         "Titre II : Dispositions communes aux aides personnelles au logement",
                                                         "Livre VIII : Aides personnelles au logement",
                                                         "Partie réglementaire",
                                                         "Code de la construction et de l'habitation"]))
                def temp_sous_calcul_traitement_672(_:Unit):
                    raise EmptyError
                def temp_sous_calcul_traitement_673(_:Unit):
                    raise EmptyError
                def temp_sous_calcul_traitement_674(_:Unit):
                    raise EmptyError
                try:
                    temp_sous_calcul_traitement_675 = logement_foyer__1.type
                except EmptyError:
                    temp_sous_calcul_traitement_675 = dead_value
                    raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                         start_line=1513,
                                                         start_column=35,
                                                         end_line=1513,
                                                         end_column=55,
                                                         law_headings=["Article D823-9",
                                                         "Section 1 : Calcul, liquidation et versement des aides",
                                                         "Chapitre III : Modalités de liquidation et de versement",
                                                         "Titre II : Dispositions communes aux aides personnelles au logement",
                                                         "Livre VIII : Aides personnelles au logement",
                                                         "Partie réglementaire",
                                                         "Code de la construction et de l'habitation"]))
                try:
                    temp_sous_calcul_traitement_676 = logement_foyer__1.date_conventionnement
                except EmptyError:
                    temp_sous_calcul_traitement_676 = dead_value
                    raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                         start_line=1514,
                                                         start_column=37,
                                                         end_line=1514,
                                                         end_column=74,
                                                         law_headings=["Article D823-9",
                                                         "Section 1 : Calcul, liquidation et versement des aides",
                                                         "Chapitre III : Modalités de liquidation et de versement",
                                                         "Titre II : Dispositions communes aux aides personnelles au logement",
                                                         "Livre VIII : Aides personnelles au logement",
                                                         "Partie réglementaire",
                                                         "Code de la construction et de l'habitation"]))
                try:
                    temp_sous_calcul_traitement_677 = ressources_menage_avec_arrondi
                except EmptyError:
                    temp_sous_calcul_traitement_677 = dead_value
                    raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                         start_line=1506,
                                                         start_column=43,
                                                         end_line=1506,
                                                         end_column=60,
                                                         law_headings=["Article D823-9",
                                                         "Section 1 : Calcul, liquidation et versement des aides",
                                                         "Chapitre III : Modalités de liquidation et de versement",
                                                         "Titre II : Dispositions communes aux aides personnelles au logement",
                                                         "Livre VIII : Aides personnelles au logement",
                                                         "Partie réglementaire",
                                                         "Code de la construction et de l'habitation"]))
                try:
                    temp_sous_calcul_traitement_678 = nombre_personnes_a_charge_11
                except EmptyError:
                    temp_sous_calcul_traitement_678 = dead_value
                    raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                         start_line=1507,
                                                         start_column=41,
                                                         end_line=1507,
                                                         end_column=66,
                                                         law_headings=["Article D823-9",
                                                         "Section 1 : Calcul, liquidation et versement des aides",
                                                         "Chapitre III : Modalités de liquidation et de versement",
                                                         "Titre II : Dispositions communes aux aides personnelles au logement",
                                                         "Livre VIII : Aides personnelles au logement",
                                                         "Partie réglementaire",
                                                         "Code de la construction et de l'habitation"]))
                try:
                    temp_sous_calcul_traitement_679 = situation_familiale_calcul_apl_8
                except EmptyError:
                    temp_sous_calcul_traitement_679 = dead_value
                    raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                         start_line=1511,
                                                         start_column=46,
                                                         end_line=1511,
                                                         end_column=76,
                                                         law_headings=["Article D823-9",
                                                         "Section 1 : Calcul, liquidation et versement des aides",
                                                         "Chapitre III : Modalités de liquidation et de versement",
                                                         "Titre II : Dispositions communes aux aides personnelles au logement",
                                                         "Livre VIII : Aides personnelles au logement",
                                                         "Partie réglementaire",
                                                         "Code de la construction et de l'habitation"]))
                try:
                    temp_sous_calcul_traitement_680 = zone_6
                except EmptyError:
                    temp_sous_calcul_traitement_680 = dead_value
                    raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                         start_line=1508,
                                                         start_column=20,
                                                         end_line=1508,
                                                         end_column=24,
                                                         law_headings=["Article D823-9",
                                                         "Section 1 : Calcul, liquidation et versement des aides",
                                                         "Chapitre III : Modalités de liquidation et de versement",
                                                         "Titre II : Dispositions communes aux aides personnelles au logement",
                                                         "Livre VIII : Aides personnelles au logement",
                                                         "Partie réglementaire",
                                                         "Code de la construction et de l'habitation"]))
                try:
                    temp_sous_calcul_traitement_681 = date_courante_14
                except EmptyError:
                    temp_sous_calcul_traitement_681 = dead_value
                    raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                         start_line=1510,
                                                         start_column=29,
                                                         end_line=1510,
                                                         end_column=42,
                                                         law_headings=["Article D823-9",
                                                         "Section 1 : Calcul, liquidation et versement des aides",
                                                         "Chapitre III : Modalités de liquidation et de versement",
                                                         "Titre II : Dispositions communes aux aides personnelles au logement",
                                                         "Livre VIII : Aides personnelles au logement",
                                                         "Partie réglementaire",
                                                         "Code de la construction et de l'habitation"]))
                try:
                    temp_sous_calcul_traitement_682 = logement_foyer__1.redevance
                except EmptyError:
                    temp_sous_calcul_traitement_682 = dead_value
                    raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                         start_line=1512,
                                                         start_column=25,
                                                         end_line=1512,
                                                         end_column=50,
                                                         law_headings=["Article D823-9",
                                                         "Section 1 : Calcul, liquidation et versement des aides",
                                                         "Chapitre III : Modalités de liquidation et de versement",
                                                         "Titre II : Dispositions communes aux aides personnelles au logement",
                                                         "Livre VIII : Aides personnelles au logement",
                                                         "Partie réglementaire",
                                                         "Code de la construction et de l'habitation"]))
                try:
                    temp_sous_calcul_traitement_683 = residence_8
                except EmptyError:
                    temp_sous_calcul_traitement_683 = dead_value
                    raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                         start_line=1509,
                                                         start_column=25,
                                                         end_line=1509,
                                                         end_column=34,
                                                         law_headings=["Article D823-9",
                                                         "Section 1 : Calcul, liquidation et versement des aides",
                                                         "Chapitre III : Modalités de liquidation et de versement",
                                                         "Titre II : Dispositions communes aux aides personnelles au logement",
                                                         "Livre VIII : Aides personnelles au logement",
                                                         "Partie réglementaire",
                                                         "Code de la construction et de l'habitation"]))
                def temp_sous_calcul_traitement_684(_:Unit):
                    raise EmptyError
                def temp_sous_calcul_traitement_685(_:Unit):
                    raise EmptyError
                def temp_sous_calcul_traitement_686(_:Unit):
                    raise EmptyError
                try:
                    temp_sous_calcul_traitement_687 = logement_foyer__1.type
                except EmptyError:
                    temp_sous_calcul_traitement_687 = dead_value
                    raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                         start_line=1513,
                                                         start_column=35,
                                                         end_line=1513,
                                                         end_column=55,
                                                         law_headings=["Article D823-9",
                                                         "Section 1 : Calcul, liquidation et versement des aides",
                                                         "Chapitre III : Modalités de liquidation et de versement",
                                                         "Titre II : Dispositions communes aux aides personnelles au logement",
                                                         "Livre VIII : Aides personnelles au logement",
                                                         "Partie réglementaire",
                                                         "Code de la construction et de l'habitation"]))
                try:
                    temp_sous_calcul_traitement_688 = logement_foyer__1.date_conventionnement
                except EmptyError:
                    temp_sous_calcul_traitement_688 = dead_value
                    raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                         start_line=1514,
                                                         start_column=37,
                                                         end_line=1514,
                                                         end_column=74,
                                                         law_headings=["Article D823-9",
                                                         "Section 1 : Calcul, liquidation et versement des aides",
                                                         "Chapitre III : Modalités de liquidation et de versement",
                                                         "Titre II : Dispositions communes aux aides personnelles au logement",
                                                         "Livre VIII : Aides personnelles au logement",
                                                         "Partie réglementaire",
                                                         "Code de la construction et de l'habitation"]))
                try:
                    temp_sous_calcul_traitement_689 = ressources_menage_avec_arrondi
                except EmptyError:
                    temp_sous_calcul_traitement_689 = dead_value
                    raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                         start_line=1506,
                                                         start_column=43,
                                                         end_line=1506,
                                                         end_column=60,
                                                         law_headings=["Article D823-9",
                                                         "Section 1 : Calcul, liquidation et versement des aides",
                                                         "Chapitre III : Modalités de liquidation et de versement",
                                                         "Titre II : Dispositions communes aux aides personnelles au logement",
                                                         "Livre VIII : Aides personnelles au logement",
                                                         "Partie réglementaire",
                                                         "Code de la construction et de l'habitation"]))
                try:
                    temp_sous_calcul_traitement_690 = nombre_personnes_a_charge_11
                except EmptyError:
                    temp_sous_calcul_traitement_690 = dead_value
                    raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                         start_line=1507,
                                                         start_column=41,
                                                         end_line=1507,
                                                         end_column=66,
                                                         law_headings=["Article D823-9",
                                                         "Section 1 : Calcul, liquidation et versement des aides",
                                                         "Chapitre III : Modalités de liquidation et de versement",
                                                         "Titre II : Dispositions communes aux aides personnelles au logement",
                                                         "Livre VIII : Aides personnelles au logement",
                                                         "Partie réglementaire",
                                                         "Code de la construction et de l'habitation"]))
                try:
                    temp_sous_calcul_traitement_691 = situation_familiale_calcul_apl_8
                except EmptyError:
                    temp_sous_calcul_traitement_691 = dead_value
                    raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                         start_line=1511,
                                                         start_column=46,
                                                         end_line=1511,
                                                         end_column=76,
                                                         law_headings=["Article D823-9",
                                                         "Section 1 : Calcul, liquidation et versement des aides",
                                                         "Chapitre III : Modalités de liquidation et de versement",
                                                         "Titre II : Dispositions communes aux aides personnelles au logement",
                                                         "Livre VIII : Aides personnelles au logement",
                                                         "Partie réglementaire",
                                                         "Code de la construction et de l'habitation"]))
                try:
                    temp_sous_calcul_traitement_692 = zone_6
                except EmptyError:
                    temp_sous_calcul_traitement_692 = dead_value
                    raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                         start_line=1508,
                                                         start_column=20,
                                                         end_line=1508,
                                                         end_column=24,
                                                         law_headings=["Article D823-9",
                                                         "Section 1 : Calcul, liquidation et versement des aides",
                                                         "Chapitre III : Modalités de liquidation et de versement",
                                                         "Titre II : Dispositions communes aux aides personnelles au logement",
                                                         "Livre VIII : Aides personnelles au logement",
                                                         "Partie réglementaire",
                                                         "Code de la construction et de l'habitation"]))
                try:
                    temp_sous_calcul_traitement_693 = date_courante_14
                except EmptyError:
                    temp_sous_calcul_traitement_693 = dead_value
                    raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                         start_line=1510,
                                                         start_column=29,
                                                         end_line=1510,
                                                         end_column=42,
                                                         law_headings=["Article D823-9",
                                                         "Section 1 : Calcul, liquidation et versement des aides",
                                                         "Chapitre III : Modalités de liquidation et de versement",
                                                         "Titre II : Dispositions communes aux aides personnelles au logement",
                                                         "Livre VIII : Aides personnelles au logement",
                                                         "Partie réglementaire",
                                                         "Code de la construction et de l'habitation"]))
                try:
                    temp_sous_calcul_traitement_694 = logement_foyer__1.redevance
                except EmptyError:
                    temp_sous_calcul_traitement_694 = dead_value
                    raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                         start_line=1512,
                                                         start_column=25,
                                                         end_line=1512,
                                                         end_column=50,
                                                         law_headings=["Article D823-9",
                                                         "Section 1 : Calcul, liquidation et versement des aides",
                                                         "Chapitre III : Modalités de liquidation et de versement",
                                                         "Titre II : Dispositions communes aux aides personnelles au logement",
                                                         "Livre VIII : Aides personnelles au logement",
                                                         "Partie réglementaire",
                                                         "Code de la construction et de l'habitation"]))
                try:
                    temp_sous_calcul_traitement_695 = residence_8
                except EmptyError:
                    temp_sous_calcul_traitement_695 = dead_value
                    raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                         start_line=1509,
                                                         start_column=25,
                                                         end_line=1509,
                                                         end_column=34,
                                                         law_headings=["Article D823-9",
                                                         "Section 1 : Calcul, liquidation et versement des aides",
                                                         "Chapitre III : Modalités de liquidation et de versement",
                                                         "Titre II : Dispositions communes aux aides personnelles au logement",
                                                         "Livre VIII : Aides personnelles au logement",
                                                         "Partie réglementaire",
                                                         "Code de la construction et de l'habitation"]))
                def temp_sous_calcul_traitement_696(_:Unit):
                    raise EmptyError
                def temp_sous_calcul_traitement_697(_:Unit):
                    raise EmptyError
                def temp_sous_calcul_traitement_698(_:Unit):
                    raise EmptyError
                try:
                    temp_sous_calcul_traitement_699 = logement_foyer__1.type
                except EmptyError:
                    temp_sous_calcul_traitement_699 = dead_value
                    raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                         start_line=1513,
                                                         start_column=35,
                                                         end_line=1513,
                                                         end_column=55,
                                                         law_headings=["Article D823-9",
                                                         "Section 1 : Calcul, liquidation et versement des aides",
                                                         "Chapitre III : Modalités de liquidation et de versement",
                                                         "Titre II : Dispositions communes aux aides personnelles au logement",
                                                         "Livre VIII : Aides personnelles au logement",
                                                         "Partie réglementaire",
                                                         "Code de la construction et de l'habitation"]))
                try:
                    temp_sous_calcul_traitement_700 = logement_foyer__1.date_conventionnement
                except EmptyError:
                    temp_sous_calcul_traitement_700 = dead_value
                    raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                         start_line=1514,
                                                         start_column=37,
                                                         end_line=1514,
                                                         end_column=74,
                                                         law_headings=["Article D823-9",
                                                         "Section 1 : Calcul, liquidation et versement des aides",
                                                         "Chapitre III : Modalités de liquidation et de versement",
                                                         "Titre II : Dispositions communes aux aides personnelles au logement",
                                                         "Livre VIII : Aides personnelles au logement",
                                                         "Partie réglementaire",
                                                         "Code de la construction et de l'habitation"]))
                try:
                    temp_sous_calcul_traitement_701 = ressources_menage_avec_arrondi
                except EmptyError:
                    temp_sous_calcul_traitement_701 = dead_value
                    raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                         start_line=1506,
                                                         start_column=43,
                                                         end_line=1506,
                                                         end_column=60,
                                                         law_headings=["Article D823-9",
                                                         "Section 1 : Calcul, liquidation et versement des aides",
                                                         "Chapitre III : Modalités de liquidation et de versement",
                                                         "Titre II : Dispositions communes aux aides personnelles au logement",
                                                         "Livre VIII : Aides personnelles au logement",
                                                         "Partie réglementaire",
                                                         "Code de la construction et de l'habitation"]))
                try:
                    temp_sous_calcul_traitement_702 = nombre_personnes_a_charge_11
                except EmptyError:
                    temp_sous_calcul_traitement_702 = dead_value
                    raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                         start_line=1507,
                                                         start_column=41,
                                                         end_line=1507,
                                                         end_column=66,
                                                         law_headings=["Article D823-9",
                                                         "Section 1 : Calcul, liquidation et versement des aides",
                                                         "Chapitre III : Modalités de liquidation et de versement",
                                                         "Titre II : Dispositions communes aux aides personnelles au logement",
                                                         "Livre VIII : Aides personnelles au logement",
                                                         "Partie réglementaire",
                                                         "Code de la construction et de l'habitation"]))
                try:
                    temp_sous_calcul_traitement_703 = situation_familiale_calcul_apl_8
                except EmptyError:
                    temp_sous_calcul_traitement_703 = dead_value
                    raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                         start_line=1511,
                                                         start_column=46,
                                                         end_line=1511,
                                                         end_column=76,
                                                         law_headings=["Article D823-9",
                                                         "Section 1 : Calcul, liquidation et versement des aides",
                                                         "Chapitre III : Modalités de liquidation et de versement",
                                                         "Titre II : Dispositions communes aux aides personnelles au logement",
                                                         "Livre VIII : Aides personnelles au logement",
                                                         "Partie réglementaire",
                                                         "Code de la construction et de l'habitation"]))
                try:
                    temp_sous_calcul_traitement_704 = zone_6
                except EmptyError:
                    temp_sous_calcul_traitement_704 = dead_value
                    raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                         start_line=1508,
                                                         start_column=20,
                                                         end_line=1508,
                                                         end_column=24,
                                                         law_headings=["Article D823-9",
                                                         "Section 1 : Calcul, liquidation et versement des aides",
                                                         "Chapitre III : Modalités de liquidation et de versement",
                                                         "Titre II : Dispositions communes aux aides personnelles au logement",
                                                         "Livre VIII : Aides personnelles au logement",
                                                         "Partie réglementaire",
                                                         "Code de la construction et de l'habitation"]))
                try:
                    temp_sous_calcul_traitement_705 = date_courante_14
                except EmptyError:
                    temp_sous_calcul_traitement_705 = dead_value
                    raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                         start_line=1510,
                                                         start_column=29,
                                                         end_line=1510,
                                                         end_column=42,
                                                         law_headings=["Article D823-9",
                                                         "Section 1 : Calcul, liquidation et versement des aides",
                                                         "Chapitre III : Modalités de liquidation et de versement",
                                                         "Titre II : Dispositions communes aux aides personnelles au logement",
                                                         "Livre VIII : Aides personnelles au logement",
                                                         "Partie réglementaire",
                                                         "Code de la construction et de l'habitation"]))
                try:
                    temp_sous_calcul_traitement_706 = logement_foyer__1.redevance
                except EmptyError:
                    temp_sous_calcul_traitement_706 = dead_value
                    raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                         start_line=1512,
                                                         start_column=25,
                                                         end_line=1512,
                                                         end_column=50,
                                                         law_headings=["Article D823-9",
                                                         "Section 1 : Calcul, liquidation et versement des aides",
                                                         "Chapitre III : Modalités de liquidation et de versement",
                                                         "Titre II : Dispositions communes aux aides personnelles au logement",
                                                         "Livre VIII : Aides personnelles au logement",
                                                         "Partie réglementaire",
                                                         "Code de la construction et de l'habitation"]))
                try:
                    temp_sous_calcul_traitement_707 = residence_8
                except EmptyError:
                    temp_sous_calcul_traitement_707 = dead_value
                    raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                         start_line=1509,
                                                         start_column=25,
                                                         end_line=1509,
                                                         end_column=34,
                                                         law_headings=["Article D823-9",
                                                         "Section 1 : Calcul, liquidation et versement des aides",
                                                         "Chapitre III : Modalités de liquidation et de versement",
                                                         "Titre II : Dispositions communes aux aides personnelles au logement",
                                                         "Livre VIII : Aides personnelles au logement",
                                                         "Partie réglementaire",
                                                         "Code de la construction et de l'habitation"]))
                def temp_sous_calcul_traitement_708(_:Unit):
                    raise EmptyError
                def temp_sous_calcul_traitement_709(_:Unit):
                    raise EmptyError
                def temp_sous_calcul_traitement_710(_:Unit):
                    raise EmptyError
                try:
                    temp_sous_calcul_traitement_711 = logement_foyer__1.type
                except EmptyError:
                    temp_sous_calcul_traitement_711 = dead_value
                    raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                         start_line=1513,
                                                         start_column=35,
                                                         end_line=1513,
                                                         end_column=55,
                                                         law_headings=["Article D823-9",
                                                         "Section 1 : Calcul, liquidation et versement des aides",
                                                         "Chapitre III : Modalités de liquidation et de versement",
                                                         "Titre II : Dispositions communes aux aides personnelles au logement",
                                                         "Livre VIII : Aides personnelles au logement",
                                                         "Partie réglementaire",
                                                         "Code de la construction et de l'habitation"]))
                try:
                    temp_sous_calcul_traitement_712 = logement_foyer__1.date_conventionnement
                except EmptyError:
                    temp_sous_calcul_traitement_712 = dead_value
                    raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                         start_line=1514,
                                                         start_column=37,
                                                         end_line=1514,
                                                         end_column=74,
                                                         law_headings=["Article D823-9",
                                                         "Section 1 : Calcul, liquidation et versement des aides",
                                                         "Chapitre III : Modalités de liquidation et de versement",
                                                         "Titre II : Dispositions communes aux aides personnelles au logement",
                                                         "Livre VIII : Aides personnelles au logement",
                                                         "Partie réglementaire",
                                                         "Code de la construction et de l'habitation"]))
                try:
                    temp_sous_calcul_traitement_713 = ressources_menage_avec_arrondi
                except EmptyError:
                    temp_sous_calcul_traitement_713 = dead_value
                    raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                         start_line=1506,
                                                         start_column=43,
                                                         end_line=1506,
                                                         end_column=60,
                                                         law_headings=["Article D823-9",
                                                         "Section 1 : Calcul, liquidation et versement des aides",
                                                         "Chapitre III : Modalités de liquidation et de versement",
                                                         "Titre II : Dispositions communes aux aides personnelles au logement",
                                                         "Livre VIII : Aides personnelles au logement",
                                                         "Partie réglementaire",
                                                         "Code de la construction et de l'habitation"]))
                try:
                    temp_sous_calcul_traitement_714 = nombre_personnes_a_charge_11
                except EmptyError:
                    temp_sous_calcul_traitement_714 = dead_value
                    raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                         start_line=1507,
                                                         start_column=41,
                                                         end_line=1507,
                                                         end_column=66,
                                                         law_headings=["Article D823-9",
                                                         "Section 1 : Calcul, liquidation et versement des aides",
                                                         "Chapitre III : Modalités de liquidation et de versement",
                                                         "Titre II : Dispositions communes aux aides personnelles au logement",
                                                         "Livre VIII : Aides personnelles au logement",
                                                         "Partie réglementaire",
                                                         "Code de la construction et de l'habitation"]))
                try:
                    temp_sous_calcul_traitement_715 = situation_familiale_calcul_apl_8
                except EmptyError:
                    temp_sous_calcul_traitement_715 = dead_value
                    raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                         start_line=1511,
                                                         start_column=46,
                                                         end_line=1511,
                                                         end_column=76,
                                                         law_headings=["Article D823-9",
                                                         "Section 1 : Calcul, liquidation et versement des aides",
                                                         "Chapitre III : Modalités de liquidation et de versement",
                                                         "Titre II : Dispositions communes aux aides personnelles au logement",
                                                         "Livre VIII : Aides personnelles au logement",
                                                         "Partie réglementaire",
                                                         "Code de la construction et de l'habitation"]))
                try:
                    temp_sous_calcul_traitement_716 = zone_6
                except EmptyError:
                    temp_sous_calcul_traitement_716 = dead_value
                    raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                         start_line=1508,
                                                         start_column=20,
                                                         end_line=1508,
                                                         end_column=24,
                                                         law_headings=["Article D823-9",
                                                         "Section 1 : Calcul, liquidation et versement des aides",
                                                         "Chapitre III : Modalités de liquidation et de versement",
                                                         "Titre II : Dispositions communes aux aides personnelles au logement",
                                                         "Livre VIII : Aides personnelles au logement",
                                                         "Partie réglementaire",
                                                         "Code de la construction et de l'habitation"]))
                try:
                    temp_sous_calcul_traitement_717 = date_courante_14
                except EmptyError:
                    temp_sous_calcul_traitement_717 = dead_value
                    raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                         start_line=1510,
                                                         start_column=29,
                                                         end_line=1510,
                                                         end_column=42,
                                                         law_headings=["Article D823-9",
                                                         "Section 1 : Calcul, liquidation et versement des aides",
                                                         "Chapitre III : Modalités de liquidation et de versement",
                                                         "Titre II : Dispositions communes aux aides personnelles au logement",
                                                         "Livre VIII : Aides personnelles au logement",
                                                         "Partie réglementaire",
                                                         "Code de la construction et de l'habitation"]))
                try:
                    temp_sous_calcul_traitement_718 = logement_foyer__1.redevance
                except EmptyError:
                    temp_sous_calcul_traitement_718 = dead_value
                    raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                         start_line=1512,
                                                         start_column=25,
                                                         end_line=1512,
                                                         end_column=50,
                                                         law_headings=["Article D823-9",
                                                         "Section 1 : Calcul, liquidation et versement des aides",
                                                         "Chapitre III : Modalités de liquidation et de versement",
                                                         "Titre II : Dispositions communes aux aides personnelles au logement",
                                                         "Livre VIII : Aides personnelles au logement",
                                                         "Partie réglementaire",
                                                         "Code de la construction et de l'habitation"]))
                try:
                    temp_sous_calcul_traitement_719 = residence_8
                except EmptyError:
                    temp_sous_calcul_traitement_719 = dead_value
                    raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                         start_line=1509,
                                                         start_column=25,
                                                         end_line=1509,
                                                         end_column=34,
                                                         law_headings=["Article D823-9",
                                                         "Section 1 : Calcul, liquidation et versement des aides",
                                                         "Chapitre III : Modalités de liquidation et de versement",
                                                         "Titre II : Dispositions communes aux aides personnelles au logement",
                                                         "Livre VIII : Aides personnelles au logement",
                                                         "Partie réglementaire",
                                                         "Code de la construction et de l'habitation"]))
                def temp_sous_calcul_traitement_720(_:Unit):
                    raise EmptyError
                def temp_sous_calcul_traitement_721(_:Unit):
                    raise EmptyError
                def temp_sous_calcul_traitement_722(_:Unit):
                    raise EmptyError
                try:
                    temp_sous_calcul_traitement_723 = logement_foyer__1.type
                except EmptyError:
                    temp_sous_calcul_traitement_723 = dead_value
                    raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                         start_line=1513,
                                                         start_column=35,
                                                         end_line=1513,
                                                         end_column=55,
                                                         law_headings=["Article D823-9",
                                                         "Section 1 : Calcul, liquidation et versement des aides",
                                                         "Chapitre III : Modalités de liquidation et de versement",
                                                         "Titre II : Dispositions communes aux aides personnelles au logement",
                                                         "Livre VIII : Aides personnelles au logement",
                                                         "Partie réglementaire",
                                                         "Code de la construction et de l'habitation"]))
                try:
                    temp_sous_calcul_traitement_724 = logement_foyer__1.date_conventionnement
                except EmptyError:
                    temp_sous_calcul_traitement_724 = dead_value
                    raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                         start_line=1514,
                                                         start_column=37,
                                                         end_line=1514,
                                                         end_column=74,
                                                         law_headings=["Article D823-9",
                                                         "Section 1 : Calcul, liquidation et versement des aides",
                                                         "Chapitre III : Modalités de liquidation et de versement",
                                                         "Titre II : Dispositions communes aux aides personnelles au logement",
                                                         "Livre VIII : Aides personnelles au logement",
                                                         "Partie réglementaire",
                                                         "Code de la construction et de l'habitation"]))
                try:
                    temp_sous_calcul_traitement_725 = ressources_menage_avec_arrondi
                except EmptyError:
                    temp_sous_calcul_traitement_725 = dead_value
                    raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                         start_line=1506,
                                                         start_column=43,
                                                         end_line=1506,
                                                         end_column=60,
                                                         law_headings=["Article D823-9",
                                                         "Section 1 : Calcul, liquidation et versement des aides",
                                                         "Chapitre III : Modalités de liquidation et de versement",
                                                         "Titre II : Dispositions communes aux aides personnelles au logement",
                                                         "Livre VIII : Aides personnelles au logement",
                                                         "Partie réglementaire",
                                                         "Code de la construction et de l'habitation"]))
                try:
                    temp_sous_calcul_traitement_726 = nombre_personnes_a_charge_11
                except EmptyError:
                    temp_sous_calcul_traitement_726 = dead_value
                    raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                         start_line=1507,
                                                         start_column=41,
                                                         end_line=1507,
                                                         end_column=66,
                                                         law_headings=["Article D823-9",
                                                         "Section 1 : Calcul, liquidation et versement des aides",
                                                         "Chapitre III : Modalités de liquidation et de versement",
                                                         "Titre II : Dispositions communes aux aides personnelles au logement",
                                                         "Livre VIII : Aides personnelles au logement",
                                                         "Partie réglementaire",
                                                         "Code de la construction et de l'habitation"]))
                try:
                    temp_sous_calcul_traitement_727 = situation_familiale_calcul_apl_8
                except EmptyError:
                    temp_sous_calcul_traitement_727 = dead_value
                    raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                         start_line=1511,
                                                         start_column=46,
                                                         end_line=1511,
                                                         end_column=76,
                                                         law_headings=["Article D823-9",
                                                         "Section 1 : Calcul, liquidation et versement des aides",
                                                         "Chapitre III : Modalités de liquidation et de versement",
                                                         "Titre II : Dispositions communes aux aides personnelles au logement",
                                                         "Livre VIII : Aides personnelles au logement",
                                                         "Partie réglementaire",
                                                         "Code de la construction et de l'habitation"]))
                try:
                    temp_sous_calcul_traitement_728 = zone_6
                except EmptyError:
                    temp_sous_calcul_traitement_728 = dead_value
                    raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                         start_line=1508,
                                                         start_column=20,
                                                         end_line=1508,
                                                         end_column=24,
                                                         law_headings=["Article D823-9",
                                                         "Section 1 : Calcul, liquidation et versement des aides",
                                                         "Chapitre III : Modalités de liquidation et de versement",
                                                         "Titre II : Dispositions communes aux aides personnelles au logement",
                                                         "Livre VIII : Aides personnelles au logement",
                                                         "Partie réglementaire",
                                                         "Code de la construction et de l'habitation"]))
                try:
                    temp_sous_calcul_traitement_729 = date_courante_14
                except EmptyError:
                    temp_sous_calcul_traitement_729 = dead_value
                    raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                         start_line=1510,
                                                         start_column=29,
                                                         end_line=1510,
                                                         end_column=42,
                                                         law_headings=["Article D823-9",
                                                         "Section 1 : Calcul, liquidation et versement des aides",
                                                         "Chapitre III : Modalités de liquidation et de versement",
                                                         "Titre II : Dispositions communes aux aides personnelles au logement",
                                                         "Livre VIII : Aides personnelles au logement",
                                                         "Partie réglementaire",
                                                         "Code de la construction et de l'habitation"]))
                try:
                    temp_sous_calcul_traitement_730 = logement_foyer__1.redevance
                except EmptyError:
                    temp_sous_calcul_traitement_730 = dead_value
                    raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                         start_line=1512,
                                                         start_column=25,
                                                         end_line=1512,
                                                         end_column=50,
                                                         law_headings=["Article D823-9",
                                                         "Section 1 : Calcul, liquidation et versement des aides",
                                                         "Chapitre III : Modalités de liquidation et de versement",
                                                         "Titre II : Dispositions communes aux aides personnelles au logement",
                                                         "Livre VIII : Aides personnelles au logement",
                                                         "Partie réglementaire",
                                                         "Code de la construction et de l'habitation"]))
                try:
                    temp_sous_calcul_traitement_731 = residence_8
                except EmptyError:
                    temp_sous_calcul_traitement_731 = dead_value
                    raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                         start_line=1509,
                                                         start_column=25,
                                                         end_line=1509,
                                                         end_column=34,
                                                         law_headings=["Article D823-9",
                                                         "Section 1 : Calcul, liquidation et versement des aides",
                                                         "Chapitre III : Modalités de liquidation et de versement",
                                                         "Titre II : Dispositions communes aux aides personnelles au logement",
                                                         "Livre VIII : Aides personnelles au logement",
                                                         "Partie réglementaire",
                                                         "Code de la construction et de l'habitation"]))
                def temp_sous_calcul_traitement_732(_:Unit):
                    raise EmptyError
                def temp_sous_calcul_traitement_733(_:Unit):
                    raise EmptyError
                def temp_sous_calcul_traitement_734(_:Unit):
                    raise EmptyError
                try:
                    temp_sous_calcul_traitement_735 = logement_foyer__1.type
                except EmptyError:
                    temp_sous_calcul_traitement_735 = dead_value
                    raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                         start_line=1513,
                                                         start_column=35,
                                                         end_line=1513,
                                                         end_column=55,
                                                         law_headings=["Article D823-9",
                                                         "Section 1 : Calcul, liquidation et versement des aides",
                                                         "Chapitre III : Modalités de liquidation et de versement",
                                                         "Titre II : Dispositions communes aux aides personnelles au logement",
                                                         "Livre VIII : Aides personnelles au logement",
                                                         "Partie réglementaire",
                                                         "Code de la construction et de l'habitation"]))
                try:
                    temp_sous_calcul_traitement_736 = logement_foyer__1.date_conventionnement
                except EmptyError:
                    temp_sous_calcul_traitement_736 = dead_value
                    raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                         start_line=1514,
                                                         start_column=37,
                                                         end_line=1514,
                                                         end_column=74,
                                                         law_headings=["Article D823-9",
                                                         "Section 1 : Calcul, liquidation et versement des aides",
                                                         "Chapitre III : Modalités de liquidation et de versement",
                                                         "Titre II : Dispositions communes aux aides personnelles au logement",
                                                         "Livre VIII : Aides personnelles au logement",
                                                         "Partie réglementaire",
                                                         "Code de la construction et de l'habitation"]))
                try:
                    temp_sous_calcul_traitement_737 = ressources_menage_avec_arrondi
                except EmptyError:
                    temp_sous_calcul_traitement_737 = dead_value
                    raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                         start_line=1506,
                                                         start_column=43,
                                                         end_line=1506,
                                                         end_column=60,
                                                         law_headings=["Article D823-9",
                                                         "Section 1 : Calcul, liquidation et versement des aides",
                                                         "Chapitre III : Modalités de liquidation et de versement",
                                                         "Titre II : Dispositions communes aux aides personnelles au logement",
                                                         "Livre VIII : Aides personnelles au logement",
                                                         "Partie réglementaire",
                                                         "Code de la construction et de l'habitation"]))
                try:
                    temp_sous_calcul_traitement_738 = nombre_personnes_a_charge_11
                except EmptyError:
                    temp_sous_calcul_traitement_738 = dead_value
                    raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                         start_line=1507,
                                                         start_column=41,
                                                         end_line=1507,
                                                         end_column=66,
                                                         law_headings=["Article D823-9",
                                                         "Section 1 : Calcul, liquidation et versement des aides",
                                                         "Chapitre III : Modalités de liquidation et de versement",
                                                         "Titre II : Dispositions communes aux aides personnelles au logement",
                                                         "Livre VIII : Aides personnelles au logement",
                                                         "Partie réglementaire",
                                                         "Code de la construction et de l'habitation"]))
                try:
                    temp_sous_calcul_traitement_739 = situation_familiale_calcul_apl_8
                except EmptyError:
                    temp_sous_calcul_traitement_739 = dead_value
                    raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                         start_line=1511,
                                                         start_column=46,
                                                         end_line=1511,
                                                         end_column=76,
                                                         law_headings=["Article D823-9",
                                                         "Section 1 : Calcul, liquidation et versement des aides",
                                                         "Chapitre III : Modalités de liquidation et de versement",
                                                         "Titre II : Dispositions communes aux aides personnelles au logement",
                                                         "Livre VIII : Aides personnelles au logement",
                                                         "Partie réglementaire",
                                                         "Code de la construction et de l'habitation"]))
                try:
                    temp_sous_calcul_traitement_740 = zone_6
                except EmptyError:
                    temp_sous_calcul_traitement_740 = dead_value
                    raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                         start_line=1508,
                                                         start_column=20,
                                                         end_line=1508,
                                                         end_column=24,
                                                         law_headings=["Article D823-9",
                                                         "Section 1 : Calcul, liquidation et versement des aides",
                                                         "Chapitre III : Modalités de liquidation et de versement",
                                                         "Titre II : Dispositions communes aux aides personnelles au logement",
                                                         "Livre VIII : Aides personnelles au logement",
                                                         "Partie réglementaire",
                                                         "Code de la construction et de l'habitation"]))
                try:
                    temp_sous_calcul_traitement_741 = date_courante_14
                except EmptyError:
                    temp_sous_calcul_traitement_741 = dead_value
                    raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                         start_line=1510,
                                                         start_column=29,
                                                         end_line=1510,
                                                         end_column=42,
                                                         law_headings=["Article D823-9",
                                                         "Section 1 : Calcul, liquidation et versement des aides",
                                                         "Chapitre III : Modalités de liquidation et de versement",
                                                         "Titre II : Dispositions communes aux aides personnelles au logement",
                                                         "Livre VIII : Aides personnelles au logement",
                                                         "Partie réglementaire",
                                                         "Code de la construction et de l'habitation"]))
                try:
                    temp_sous_calcul_traitement_742 = logement_foyer__1.redevance
                except EmptyError:
                    temp_sous_calcul_traitement_742 = dead_value
                    raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                         start_line=1512,
                                                         start_column=25,
                                                         end_line=1512,
                                                         end_column=50,
                                                         law_headings=["Article D823-9",
                                                         "Section 1 : Calcul, liquidation et versement des aides",
                                                         "Chapitre III : Modalités de liquidation et de versement",
                                                         "Titre II : Dispositions communes aux aides personnelles au logement",
                                                         "Livre VIII : Aides personnelles au logement",
                                                         "Partie réglementaire",
                                                         "Code de la construction et de l'habitation"]))
                try:
                    temp_sous_calcul_traitement_743 = residence_8
                except EmptyError:
                    temp_sous_calcul_traitement_743 = dead_value
                    raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                         start_line=1509,
                                                         start_column=25,
                                                         end_line=1509,
                                                         end_column=34,
                                                         law_headings=["Article D823-9",
                                                         "Section 1 : Calcul, liquidation et versement des aides",
                                                         "Chapitre III : Modalités de liquidation et de versement",
                                                         "Titre II : Dispositions communes aux aides personnelles au logement",
                                                         "Livre VIII : Aides personnelles au logement",
                                                         "Partie réglementaire",
                                                         "Code de la construction et de l'habitation"]))
                def temp_sous_calcul_traitement_744(_:Unit):
                    raise EmptyError
                def temp_sous_calcul_traitement_745(_:Unit):
                    raise EmptyError
                def temp_sous_calcul_traitement_746(_:Unit):
                    raise EmptyError
                try:
                    temp_sous_calcul_traitement_747 = logement_foyer__1.type
                except EmptyError:
                    temp_sous_calcul_traitement_747 = dead_value
                    raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                         start_line=1513,
                                                         start_column=35,
                                                         end_line=1513,
                                                         end_column=55,
                                                         law_headings=["Article D823-9",
                                                         "Section 1 : Calcul, liquidation et versement des aides",
                                                         "Chapitre III : Modalités de liquidation et de versement",
                                                         "Titre II : Dispositions communes aux aides personnelles au logement",
                                                         "Livre VIII : Aides personnelles au logement",
                                                         "Partie réglementaire",
                                                         "Code de la construction et de l'habitation"]))
                try:
                    temp_sous_calcul_traitement_748 = logement_foyer__1.date_conventionnement
                except EmptyError:
                    temp_sous_calcul_traitement_748 = dead_value
                    raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                         start_line=1514,
                                                         start_column=37,
                                                         end_line=1514,
                                                         end_column=74,
                                                         law_headings=["Article D823-9",
                                                         "Section 1 : Calcul, liquidation et versement des aides",
                                                         "Chapitre III : Modalités de liquidation et de versement",
                                                         "Titre II : Dispositions communes aux aides personnelles au logement",
                                                         "Livre VIII : Aides personnelles au logement",
                                                         "Partie réglementaire",
                                                         "Code de la construction et de l'habitation"]))
                try:
                    temp_sous_calcul_traitement_749 = ressources_menage_avec_arrondi
                except EmptyError:
                    temp_sous_calcul_traitement_749 = dead_value
                    raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                         start_line=1506,
                                                         start_column=43,
                                                         end_line=1506,
                                                         end_column=60,
                                                         law_headings=["Article D823-9",
                                                         "Section 1 : Calcul, liquidation et versement des aides",
                                                         "Chapitre III : Modalités de liquidation et de versement",
                                                         "Titre II : Dispositions communes aux aides personnelles au logement",
                                                         "Livre VIII : Aides personnelles au logement",
                                                         "Partie réglementaire",
                                                         "Code de la construction et de l'habitation"]))
                try:
                    temp_sous_calcul_traitement_750 = nombre_personnes_a_charge_11
                except EmptyError:
                    temp_sous_calcul_traitement_750 = dead_value
                    raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                         start_line=1507,
                                                         start_column=41,
                                                         end_line=1507,
                                                         end_column=66,
                                                         law_headings=["Article D823-9",
                                                         "Section 1 : Calcul, liquidation et versement des aides",
                                                         "Chapitre III : Modalités de liquidation et de versement",
                                                         "Titre II : Dispositions communes aux aides personnelles au logement",
                                                         "Livre VIII : Aides personnelles au logement",
                                                         "Partie réglementaire",
                                                         "Code de la construction et de l'habitation"]))
                try:
                    temp_sous_calcul_traitement_751 = situation_familiale_calcul_apl_8
                except EmptyError:
                    temp_sous_calcul_traitement_751 = dead_value
                    raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                         start_line=1511,
                                                         start_column=46,
                                                         end_line=1511,
                                                         end_column=76,
                                                         law_headings=["Article D823-9",
                                                         "Section 1 : Calcul, liquidation et versement des aides",
                                                         "Chapitre III : Modalités de liquidation et de versement",
                                                         "Titre II : Dispositions communes aux aides personnelles au logement",
                                                         "Livre VIII : Aides personnelles au logement",
                                                         "Partie réglementaire",
                                                         "Code de la construction et de l'habitation"]))
                try:
                    temp_sous_calcul_traitement_752 = zone_6
                except EmptyError:
                    temp_sous_calcul_traitement_752 = dead_value
                    raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                         start_line=1508,
                                                         start_column=20,
                                                         end_line=1508,
                                                         end_column=24,
                                                         law_headings=["Article D823-9",
                                                         "Section 1 : Calcul, liquidation et versement des aides",
                                                         "Chapitre III : Modalités de liquidation et de versement",
                                                         "Titre II : Dispositions communes aux aides personnelles au logement",
                                                         "Livre VIII : Aides personnelles au logement",
                                                         "Partie réglementaire",
                                                         "Code de la construction et de l'habitation"]))
                try:
                    temp_sous_calcul_traitement_753 = date_courante_14
                except EmptyError:
                    temp_sous_calcul_traitement_753 = dead_value
                    raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                         start_line=1510,
                                                         start_column=29,
                                                         end_line=1510,
                                                         end_column=42,
                                                         law_headings=["Article D823-9",
                                                         "Section 1 : Calcul, liquidation et versement des aides",
                                                         "Chapitre III : Modalités de liquidation et de versement",
                                                         "Titre II : Dispositions communes aux aides personnelles au logement",
                                                         "Livre VIII : Aides personnelles au logement",
                                                         "Partie réglementaire",
                                                         "Code de la construction et de l'habitation"]))
                try:
                    temp_sous_calcul_traitement_754 = logement_foyer__1.redevance
                except EmptyError:
                    temp_sous_calcul_traitement_754 = dead_value
                    raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                         start_line=1512,
                                                         start_column=25,
                                                         end_line=1512,
                                                         end_column=50,
                                                         law_headings=["Article D823-9",
                                                         "Section 1 : Calcul, liquidation et versement des aides",
                                                         "Chapitre III : Modalités de liquidation et de versement",
                                                         "Titre II : Dispositions communes aux aides personnelles au logement",
                                                         "Livre VIII : Aides personnelles au logement",
                                                         "Partie réglementaire",
                                                         "Code de la construction et de l'habitation"]))
                try:
                    temp_sous_calcul_traitement_755 = residence_8
                except EmptyError:
                    temp_sous_calcul_traitement_755 = dead_value
                    raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                         start_line=1509,
                                                         start_column=25,
                                                         end_line=1509,
                                                         end_column=34,
                                                         law_headings=["Article D823-9",
                                                         "Section 1 : Calcul, liquidation et versement des aides",
                                                         "Chapitre III : Modalités de liquidation et de versement",
                                                         "Titre II : Dispositions communes aux aides personnelles au logement",
                                                         "Livre VIII : Aides personnelles au logement",
                                                         "Partie réglementaire",
                                                         "Code de la construction et de l'habitation"]))
                def temp_sous_calcul_traitement_756(_:Unit):
                    raise EmptyError
                def temp_sous_calcul_traitement_757(_:Unit):
                    raise EmptyError
                def temp_sous_calcul_traitement_758(_:Unit):
                    raise EmptyError
                temp_sous_calcul_traitement_2 = TraitementFormuleAideFinale(aide_finale_formule = CalculAidePersonnaliseeLogementFoyer(coefficient_multiplicateur_d832_25 = calcul_aide_personnalisee_logement_foyer(
                    CalculAidePersonnaliseeLogementFoyerIn(type_logement_foyer_in = temp_sous_calcul_traitement_638,
                    date_conventionnement_in = temp_sous_calcul_traitement_639,
                    ressources_menage_arrondies_in = temp_sous_calcul_traitement_640,
                    nombre_personnes_a_charge_in = temp_sous_calcul_traitement_641,
                    situation_familiale_calcul_apl_in = temp_sous_calcul_traitement_642,
                    zone_in = temp_sous_calcul_traitement_643,
                    date_courante_in = temp_sous_calcul_traitement_644,
                    redevance_in = temp_sous_calcul_traitement_645,
                    residence_in = temp_sous_calcul_traitement_646,
                    condition_2_du_832_25_in = temp_sous_calcul_traitement_647,
                    limitation_majoration_personnes_a_charge_in = temp_sous_calcul_traitement_648,
                    n_nombre_parts_d832_25_in = temp_sous_calcul_traitement_649)).coefficient_multiplicateur_d832_25,
                    coefficient_r_d832_25 = calcul_aide_personnalisee_logement_foyer(
                    CalculAidePersonnaliseeLogementFoyerIn(type_logement_foyer_in = temp_sous_calcul_traitement_626,
                    date_conventionnement_in = temp_sous_calcul_traitement_627,
                    ressources_menage_arrondies_in = temp_sous_calcul_traitement_628,
                    nombre_personnes_a_charge_in = temp_sous_calcul_traitement_629,
                    situation_familiale_calcul_apl_in = temp_sous_calcul_traitement_630,
                    zone_in = temp_sous_calcul_traitement_631,
                    date_courante_in = temp_sous_calcul_traitement_632,
                    redevance_in = temp_sous_calcul_traitement_633,
                    residence_in = temp_sous_calcul_traitement_634,
                    condition_2_du_832_25_in = temp_sous_calcul_traitement_635,
                    limitation_majoration_personnes_a_charge_in = temp_sous_calcul_traitement_636,
                    n_nombre_parts_d832_25_in = temp_sous_calcul_traitement_637)).coefficient_r_d832_25,
                    n_nombre_parts_d832_25 = calcul_aide_personnalisee_logement_foyer(
                    CalculAidePersonnaliseeLogementFoyerIn(type_logement_foyer_in = temp_sous_calcul_traitement_614,
                    date_conventionnement_in = temp_sous_calcul_traitement_615,
                    ressources_menage_arrondies_in = temp_sous_calcul_traitement_616,
                    nombre_personnes_a_charge_in = temp_sous_calcul_traitement_617,
                    situation_familiale_calcul_apl_in = temp_sous_calcul_traitement_618,
                    zone_in = temp_sous_calcul_traitement_619,
                    date_courante_in = temp_sous_calcul_traitement_620,
                    redevance_in = temp_sous_calcul_traitement_621,
                    residence_in = temp_sous_calcul_traitement_622,
                    condition_2_du_832_25_in = temp_sous_calcul_traitement_623,
                    limitation_majoration_personnes_a_charge_in = temp_sous_calcul_traitement_624,
                    n_nombre_parts_d832_25_in = temp_sous_calcul_traitement_625)).n_nombre_parts_d832_25,
                    equivalence_loyer_eligible = calcul_aide_personnalisee_logement_foyer(
                    CalculAidePersonnaliseeLogementFoyerIn(type_logement_foyer_in = temp_sous_calcul_traitement_602,
                    date_conventionnement_in = temp_sous_calcul_traitement_603,
                    ressources_menage_arrondies_in = temp_sous_calcul_traitement_604,
                    nombre_personnes_a_charge_in = temp_sous_calcul_traitement_605,
                    situation_familiale_calcul_apl_in = temp_sous_calcul_traitement_606,
                    zone_in = temp_sous_calcul_traitement_607,
                    date_courante_in = temp_sous_calcul_traitement_608,
                    redevance_in = temp_sous_calcul_traitement_609,
                    residence_in = temp_sous_calcul_traitement_610,
                    condition_2_du_832_25_in = temp_sous_calcul_traitement_611,
                    limitation_majoration_personnes_a_charge_in = temp_sous_calcul_traitement_612,
                    n_nombre_parts_d832_25_in = temp_sous_calcul_traitement_613)).equivalence_loyer_eligible,
                    plafond_equivalence_loyer_eligible = calcul_aide_personnalisee_logement_foyer(
                    CalculAidePersonnaliseeLogementFoyerIn(type_logement_foyer_in = temp_sous_calcul_traitement_590,
                    date_conventionnement_in = temp_sous_calcul_traitement_591,
                    ressources_menage_arrondies_in = temp_sous_calcul_traitement_592,
                    nombre_personnes_a_charge_in = temp_sous_calcul_traitement_593,
                    situation_familiale_calcul_apl_in = temp_sous_calcul_traitement_594,
                    zone_in = temp_sous_calcul_traitement_595,
                    date_courante_in = temp_sous_calcul_traitement_596,
                    redevance_in = temp_sous_calcul_traitement_597,
                    residence_in = temp_sous_calcul_traitement_598,
                    condition_2_du_832_25_in = temp_sous_calcul_traitement_599,
                    limitation_majoration_personnes_a_charge_in = temp_sous_calcul_traitement_600,
                    n_nombre_parts_d832_25_in = temp_sous_calcul_traitement_601)).plafond_equivalence_loyer_eligible,
                    equivalence_loyer_minimale = calcul_aide_personnalisee_logement_foyer(
                    CalculAidePersonnaliseeLogementFoyerIn(type_logement_foyer_in = temp_sous_calcul_traitement_578,
                    date_conventionnement_in = temp_sous_calcul_traitement_579,
                    ressources_menage_arrondies_in = temp_sous_calcul_traitement_580,
                    nombre_personnes_a_charge_in = temp_sous_calcul_traitement_581,
                    situation_familiale_calcul_apl_in = temp_sous_calcul_traitement_582,
                    zone_in = temp_sous_calcul_traitement_583,
                    date_courante_in = temp_sous_calcul_traitement_584,
                    redevance_in = temp_sous_calcul_traitement_585,
                    residence_in = temp_sous_calcul_traitement_586,
                    condition_2_du_832_25_in = temp_sous_calcul_traitement_587,
                    limitation_majoration_personnes_a_charge_in = temp_sous_calcul_traitement_588,
                    n_nombre_parts_d832_25_in = temp_sous_calcul_traitement_589)).equivalence_loyer_minimale,
                    coefficient_prise_en_charge_d832_25 = calcul_aide_personnalisee_logement_foyer(
                    CalculAidePersonnaliseeLogementFoyerIn(type_logement_foyer_in = temp_sous_calcul_traitement_566,
                    date_conventionnement_in = temp_sous_calcul_traitement_567,
                    ressources_menage_arrondies_in = temp_sous_calcul_traitement_568,
                    nombre_personnes_a_charge_in = temp_sous_calcul_traitement_569,
                    situation_familiale_calcul_apl_in = temp_sous_calcul_traitement_570,
                    zone_in = temp_sous_calcul_traitement_571,
                    date_courante_in = temp_sous_calcul_traitement_572,
                    redevance_in = temp_sous_calcul_traitement_573,
                    residence_in = temp_sous_calcul_traitement_574,
                    condition_2_du_832_25_in = temp_sous_calcul_traitement_575,
                    limitation_majoration_personnes_a_charge_in = temp_sous_calcul_traitement_576,
                    n_nombre_parts_d832_25_in = temp_sous_calcul_traitement_577)).coefficient_prise_en_charge_d832_25,
                    aide_finale_formule = calcul_aide_personnalisee_logement_foyer(
                    CalculAidePersonnaliseeLogementFoyerIn(type_logement_foyer_in = temp_sous_calcul_traitement_554,
                    date_conventionnement_in = temp_sous_calcul_traitement_555,
                    ressources_menage_arrondies_in = temp_sous_calcul_traitement_556,
                    nombre_personnes_a_charge_in = temp_sous_calcul_traitement_557,
                    situation_familiale_calcul_apl_in = temp_sous_calcul_traitement_558,
                    zone_in = temp_sous_calcul_traitement_559,
                    date_courante_in = temp_sous_calcul_traitement_560,
                    redevance_in = temp_sous_calcul_traitement_561,
                    residence_in = temp_sous_calcul_traitement_562,
                    condition_2_du_832_25_in = temp_sous_calcul_traitement_563,
                    limitation_majoration_personnes_a_charge_in = temp_sous_calcul_traitement_564,
                    n_nombre_parts_d832_25_in = temp_sous_calcul_traitement_565)).aide_finale_formule,
                    traitement_aide_finale = temp_sous_calcul_traitement_541).aide_finale_formule,
                    traitement_aide_finale = CalculAidePersonnaliseeLogementFoyer(coefficient_multiplicateur_d832_25 = calcul_aide_personnalisee_logement_foyer(
                    CalculAidePersonnaliseeLogementFoyerIn(type_logement_foyer_in = temp_sous_calcul_traitement_747,
                    date_conventionnement_in = temp_sous_calcul_traitement_748,
                    ressources_menage_arrondies_in = temp_sous_calcul_traitement_749,
                    nombre_personnes_a_charge_in = temp_sous_calcul_traitement_750,
                    situation_familiale_calcul_apl_in = temp_sous_calcul_traitement_751,
                    zone_in = temp_sous_calcul_traitement_752,
                    date_courante_in = temp_sous_calcul_traitement_753,
                    redevance_in = temp_sous_calcul_traitement_754,
                    residence_in = temp_sous_calcul_traitement_755,
                    condition_2_du_832_25_in = temp_sous_calcul_traitement_756,
                    limitation_majoration_personnes_a_charge_in = temp_sous_calcul_traitement_757,
                    n_nombre_parts_d832_25_in = temp_sous_calcul_traitement_758)).coefficient_multiplicateur_d832_25,
                    coefficient_r_d832_25 = calcul_aide_personnalisee_logement_foyer(
                    CalculAidePersonnaliseeLogementFoyerIn(type_logement_foyer_in = temp_sous_calcul_traitement_735,
                    date_conventionnement_in = temp_sous_calcul_traitement_736,
                    ressources_menage_arrondies_in = temp_sous_calcul_traitement_737,
                    nombre_personnes_a_charge_in = temp_sous_calcul_traitement_738,
                    situation_familiale_calcul_apl_in = temp_sous_calcul_traitement_739,
                    zone_in = temp_sous_calcul_traitement_740,
                    date_courante_in = temp_sous_calcul_traitement_741,
                    redevance_in = temp_sous_calcul_traitement_742,
                    residence_in = temp_sous_calcul_traitement_743,
                    condition_2_du_832_25_in = temp_sous_calcul_traitement_744,
                    limitation_majoration_personnes_a_charge_in = temp_sous_calcul_traitement_745,
                    n_nombre_parts_d832_25_in = temp_sous_calcul_traitement_746)).coefficient_r_d832_25,
                    n_nombre_parts_d832_25 = calcul_aide_personnalisee_logement_foyer(
                    CalculAidePersonnaliseeLogementFoyerIn(type_logement_foyer_in = temp_sous_calcul_traitement_723,
                    date_conventionnement_in = temp_sous_calcul_traitement_724,
                    ressources_menage_arrondies_in = temp_sous_calcul_traitement_725,
                    nombre_personnes_a_charge_in = temp_sous_calcul_traitement_726,
                    situation_familiale_calcul_apl_in = temp_sous_calcul_traitement_727,
                    zone_in = temp_sous_calcul_traitement_728,
                    date_courante_in = temp_sous_calcul_traitement_729,
                    redevance_in = temp_sous_calcul_traitement_730,
                    residence_in = temp_sous_calcul_traitement_731,
                    condition_2_du_832_25_in = temp_sous_calcul_traitement_732,
                    limitation_majoration_personnes_a_charge_in = temp_sous_calcul_traitement_733,
                    n_nombre_parts_d832_25_in = temp_sous_calcul_traitement_734)).n_nombre_parts_d832_25,
                    equivalence_loyer_eligible = calcul_aide_personnalisee_logement_foyer(
                    CalculAidePersonnaliseeLogementFoyerIn(type_logement_foyer_in = temp_sous_calcul_traitement_711,
                    date_conventionnement_in = temp_sous_calcul_traitement_712,
                    ressources_menage_arrondies_in = temp_sous_calcul_traitement_713,
                    nombre_personnes_a_charge_in = temp_sous_calcul_traitement_714,
                    situation_familiale_calcul_apl_in = temp_sous_calcul_traitement_715,
                    zone_in = temp_sous_calcul_traitement_716,
                    date_courante_in = temp_sous_calcul_traitement_717,
                    redevance_in = temp_sous_calcul_traitement_718,
                    residence_in = temp_sous_calcul_traitement_719,
                    condition_2_du_832_25_in = temp_sous_calcul_traitement_720,
                    limitation_majoration_personnes_a_charge_in = temp_sous_calcul_traitement_721,
                    n_nombre_parts_d832_25_in = temp_sous_calcul_traitement_722)).equivalence_loyer_eligible,
                    plafond_equivalence_loyer_eligible = calcul_aide_personnalisee_logement_foyer(
                    CalculAidePersonnaliseeLogementFoyerIn(type_logement_foyer_in = temp_sous_calcul_traitement_699,
                    date_conventionnement_in = temp_sous_calcul_traitement_700,
                    ressources_menage_arrondies_in = temp_sous_calcul_traitement_701,
                    nombre_personnes_a_charge_in = temp_sous_calcul_traitement_702,
                    situation_familiale_calcul_apl_in = temp_sous_calcul_traitement_703,
                    zone_in = temp_sous_calcul_traitement_704,
                    date_courante_in = temp_sous_calcul_traitement_705,
                    redevance_in = temp_sous_calcul_traitement_706,
                    residence_in = temp_sous_calcul_traitement_707,
                    condition_2_du_832_25_in = temp_sous_calcul_traitement_708,
                    limitation_majoration_personnes_a_charge_in = temp_sous_calcul_traitement_709,
                    n_nombre_parts_d832_25_in = temp_sous_calcul_traitement_710)).plafond_equivalence_loyer_eligible,
                    equivalence_loyer_minimale = calcul_aide_personnalisee_logement_foyer(
                    CalculAidePersonnaliseeLogementFoyerIn(type_logement_foyer_in = temp_sous_calcul_traitement_687,
                    date_conventionnement_in = temp_sous_calcul_traitement_688,
                    ressources_menage_arrondies_in = temp_sous_calcul_traitement_689,
                    nombre_personnes_a_charge_in = temp_sous_calcul_traitement_690,
                    situation_familiale_calcul_apl_in = temp_sous_calcul_traitement_691,
                    zone_in = temp_sous_calcul_traitement_692,
                    date_courante_in = temp_sous_calcul_traitement_693,
                    redevance_in = temp_sous_calcul_traitement_694,
                    residence_in = temp_sous_calcul_traitement_695,
                    condition_2_du_832_25_in = temp_sous_calcul_traitement_696,
                    limitation_majoration_personnes_a_charge_in = temp_sous_calcul_traitement_697,
                    n_nombre_parts_d832_25_in = temp_sous_calcul_traitement_698)).equivalence_loyer_minimale,
                    coefficient_prise_en_charge_d832_25 = calcul_aide_personnalisee_logement_foyer(
                    CalculAidePersonnaliseeLogementFoyerIn(type_logement_foyer_in = temp_sous_calcul_traitement_675,
                    date_conventionnement_in = temp_sous_calcul_traitement_676,
                    ressources_menage_arrondies_in = temp_sous_calcul_traitement_677,
                    nombre_personnes_a_charge_in = temp_sous_calcul_traitement_678,
                    situation_familiale_calcul_apl_in = temp_sous_calcul_traitement_679,
                    zone_in = temp_sous_calcul_traitement_680,
                    date_courante_in = temp_sous_calcul_traitement_681,
                    redevance_in = temp_sous_calcul_traitement_682,
                    residence_in = temp_sous_calcul_traitement_683,
                    condition_2_du_832_25_in = temp_sous_calcul_traitement_684,
                    limitation_majoration_personnes_a_charge_in = temp_sous_calcul_traitement_685,
                    n_nombre_parts_d832_25_in = temp_sous_calcul_traitement_686)).coefficient_prise_en_charge_d832_25,
                    aide_finale_formule = calcul_aide_personnalisee_logement_foyer(
                    CalculAidePersonnaliseeLogementFoyerIn(type_logement_foyer_in = temp_sous_calcul_traitement_663,
                    date_conventionnement_in = temp_sous_calcul_traitement_664,
                    ressources_menage_arrondies_in = temp_sous_calcul_traitement_665,
                    nombre_personnes_a_charge_in = temp_sous_calcul_traitement_666,
                    situation_familiale_calcul_apl_in = temp_sous_calcul_traitement_667,
                    zone_in = temp_sous_calcul_traitement_668,
                    date_courante_in = temp_sous_calcul_traitement_669,
                    redevance_in = temp_sous_calcul_traitement_670,
                    residence_in = temp_sous_calcul_traitement_671,
                    condition_2_du_832_25_in = temp_sous_calcul_traitement_672,
                    limitation_majoration_personnes_a_charge_in = temp_sous_calcul_traitement_673,
                    n_nombre_parts_d832_25_in = temp_sous_calcul_traitement_674)).aide_finale_formule,
                    traitement_aide_finale = temp_sous_calcul_traitement_650).traitement_aide_finale)
    except EmptyError:
        temp_sous_calcul_traitement_2 = dead_value
        raise NoValueProvided(SourcePosition(filename="examples/aides_logement/prologue.catala_fr",
                                             start_line=829, start_column=11,
                                             end_line=829, end_column=33,
                                             law_headings=["Tous secteurs",
                                             "Calcul du montant de l'aide personnalisée au logement",
                                             "Déclarations des champs d'application",
                                             "Prologue : aides au logement"]))
    sous_calcul_traitement = temp_sous_calcul_traitement_2
    try:
        def temp_traitement_aide_finale_2(arg:Money):
            try:
                return sous_calcul_traitement.traitement_aide_finale(arg)
            except EmptyError:
                raise NoValueProvided(SourcePosition(filename="examples/aides_logement/prologue.catala_fr",
                                                     start_line=832,
                                                     start_column=12,
                                                     end_line=832,
                                                     end_column=34,
                                                     law_headings=["Tous secteurs",
                                                     "Calcul du montant de l'aide personnalisée au logement",
                                                     "Déclarations des champs d'application",
                                                     "Prologue : aides au logement"]))
    except EmptyError:
        temp_traitement_aide_finale_2 = dead_value
        raise NoValueProvided(SourcePosition(filename="examples/aides_logement/prologue.catala_fr",
                                             start_line=832, start_column=12,
                                             end_line=832, end_column=34,
                                             law_headings=["Tous secteurs",
                                             "Calcul du montant de l'aide personnalisée au logement",
                                             "Déclarations des champs d'application",
                                             "Prologue : aides au logement"]))
    traitement_aide_finale_1 = temp_traitement_aide_finale_2
    try:
        temp_aide_finale_formule_7 = sous_calcul_traitement.aide_finale_formule
    except EmptyError:
        temp_aide_finale_formule_7 = dead_value
        raise NoValueProvided(SourcePosition(filename="examples/aides_logement/prologue.catala_fr",
                                             start_line=831, start_column=12,
                                             end_line=831, end_column=31,
                                             law_headings=["Tous secteurs",
                                             "Calcul du montant de l'aide personnalisée au logement",
                                             "Déclarations des champs d'application",
                                             "Prologue : aides au logement"]))
    aide_finale_formule_6 = temp_aide_finale_formule_7
    return CalculAidePersonnaliseeLogement(aide_finale_formule = aide_finale_formule_6,
        traitement_aide_finale = traitement_aide_finale_1)

def eligibilite_aides_personnelle_logement(eligibilite_aides_personnelle_logement_in:EligibiliteAidesPersonnelleLogementIn):
    menage = eligibilite_aides_personnelle_logement_in.menage_in
    demandeur = eligibilite_aides_personnelle_logement_in.demandeur_in
    date_courante_15 = eligibilite_aides_personnelle_logement_in.date_courante_in
    condition_logement_residence_principale = eligibilite_aides_personnelle_logement_in.condition_logement_residence_principale_in
    condition_logement_surface = eligibilite_aides_personnelle_logement_in.condition_logement_surface_in
    date_entree_vigueur_differee_cch = eligibilite_aides_personnelle_logement_in.date_entree_vigueur_differee_cch_in
    try:
        def temp_condition_pret(pret:Pret):
            try:
                return False
            except EmptyError:
                raise NoValueProvided(SourcePosition(filename="examples/aides_logement/prologue.catala_fr",
                                                     start_line=309,
                                                     start_column=11,
                                                     end_line=309,
                                                     end_column=25,
                                                     law_headings=["Éligibilité aux aides personnelles au logement",
                                                     "Déclarations des champs d'application",
                                                     "Prologue : aides au logement"]))
    except EmptyError:
        temp_condition_pret = dead_value
        raise NoValueProvided(SourcePosition(filename="examples/aides_logement/prologue.catala_fr",
                                             start_line=309, start_column=11,
                                             end_line=309, end_column=25,
                                             law_headings=["Éligibilité aux aides personnelles au logement",
                                             "Déclarations des champs d'application",
                                             "Prologue : aides au logement"]))
    condition_pret = temp_condition_pret
    try:
        temp_condition_peuplement_logement_l822_10 = False
    except EmptyError:
        temp_condition_peuplement_logement_l822_10 = dead_value
        raise NoValueProvided(SourcePosition(filename="examples/aides_logement/prologue.catala_fr",
                                             start_line=318, start_column=11,
                                             end_line=318, end_column=48,
                                             law_headings=["Éligibilité aux aides personnelles au logement",
                                             "Déclarations des champs d'application",
                                             "Prologue : aides au logement"]))
    condition_peuplement_logement_l822_10 = temp_condition_peuplement_logement_l822_10
    try:
        try:
            temp_date_entree_vigueur_differee_cch = date_entree_vigueur_differee_cch(
                Unit())
        except EmptyError:
            temp_date_entree_vigueur_differee_cch = date_of_numbers(2021,1,1)
    except EmptyError:
        temp_date_entree_vigueur_differee_cch = dead_value
        raise NoValueProvided(SourcePosition(filename="examples/aides_logement/prologue.catala_fr",
                                             start_line=325, start_column=12,
                                             end_line=325, end_column=44,
                                             law_headings=["Éligibilité aux aides personnelles au logement",
                                             "Déclarations des champs d'application",
                                             "Prologue : aides au logement"]))
    date_entree_vigueur_differee_cch_1 = temp_date_entree_vigueur_differee_cch
    try:
        temp_seuil_l822_3_parts_propriete = decimal_of_string("0.1")
    except EmptyError:
        temp_seuil_l822_3_parts_propriete = dead_value
        raise NoValueProvided(SourcePosition(filename="examples/aides_logement/prologue.catala_fr",
                                             start_line=331, start_column=11,
                                             end_line=331, end_column=39,
                                             law_headings=["Éligibilité aux aides personnelles au logement",
                                             "Déclarations des champs d'application",
                                             "Prologue : aides au logement"]))
    seuil_l822_3_parts_propriete = temp_seuil_l822_3_parts_propriete
    try:
        temp_seuil_l822_3_parts_usufruit = decimal_of_string("0.1")
    except EmptyError:
        temp_seuil_l822_3_parts_usufruit = dead_value
        raise NoValueProvided(SourcePosition(filename="examples/aides_logement/prologue.catala_fr",
                                             start_line=332, start_column=11,
                                             end_line=332, end_column=38,
                                             law_headings=["Éligibilité aux aides personnelles au logement",
                                             "Déclarations des champs d'application",
                                             "Prologue : aides au logement"]))
    seuil_l822_3_parts_usufruit = temp_seuil_l822_3_parts_usufruit
    try:
        temp_seuil_l822_5_patrimoine = money_of_cents_string("3000000")
    except EmptyError:
        temp_seuil_l822_5_patrimoine = dead_value
        raise NoValueProvided(SourcePosition(filename="examples/aides_logement/prologue.catala_fr",
                                             start_line=333, start_column=11,
                                             end_line=333, end_column=34,
                                             law_headings=["Éligibilité aux aides personnelles au logement",
                                             "Déclarations des champs d'application",
                                             "Prologue : aides au logement"]))
    seuil_l822_5_patrimoine = temp_seuil_l822_5_patrimoine
    try:
        match_arg_645 = menage.logement.usufruit
        if match_arg_645.code == ParentOuAutre_Code.DemandeurOuConjointOuParentOuViaPartsSocietes:
            parts = match_arg_645.value
            temp_usufruit_ou_propriete_famille = True
        elif match_arg_645.code == ParentOuAutre_Code.Autre:
            _ = match_arg_645.value
            temp_usufruit_ou_propriete_famille = False
        match_arg_646 = menage.logement.proprietaire
        if match_arg_646.code == ParentOuAutre_Code.DemandeurOuConjointOuParentOuViaPartsSocietes:
            parts_1 = match_arg_646.value
            temp_usufruit_ou_propriete_famille_1 = True
        elif match_arg_646.code == ParentOuAutre_Code.Autre:
            _ = match_arg_646.value
            temp_usufruit_ou_propriete_famille_1 = False
        temp_usufruit_ou_propriete_famille_2 = (temp_usufruit_ou_propriete_famille_1 or
            temp_usufruit_ou_propriete_famille)
    except EmptyError:
        temp_usufruit_ou_propriete_famille_2 = dead_value
        raise NoValueProvided(SourcePosition(filename="examples/aides_logement/prologue.catala_fr",
                                             start_line=330, start_column=11,
                                             end_line=330, end_column=40,
                                             law_headings=["Éligibilité aux aides personnelles au logement",
                                             "Déclarations des champs d'application",
                                             "Prologue : aides au logement"]))
    usufruit_ou_propriete_famille = temp_usufruit_ou_propriete_famille_2
    try:
        match_arg_647 = menage.situation_familiale
        if match_arg_647.code == SituationFamiliale_Code.Celibataire:
            _ = match_arg_647.value
            temp_nombre_personnes_logement = integer_of_string("1")
        elif match_arg_647.code == SituationFamiliale_Code.Maries:
            _ = match_arg_647.value
            temp_nombre_personnes_logement = integer_of_string("2")
        elif match_arg_647.code == SituationFamiliale_Code.Pacses:
            _ = match_arg_647.value
            temp_nombre_personnes_logement = integer_of_string("2")
        elif match_arg_647.code == SituationFamiliale_Code.Concubins:
            _ = match_arg_647.value
            temp_nombre_personnes_logement = integer_of_string("2")
        elif match_arg_647.code == SituationFamiliale_Code.CelibataireSepareDeFait:
            _ = match_arg_647.value
            temp_nombre_personnes_logement = integer_of_string("1")
        elif match_arg_647.code == SituationFamiliale_Code.ConcubinageDontSepareDeFait:
            _ = match_arg_647.value
            temp_nombre_personnes_logement = integer_of_string("2")
        temp_nombre_personnes_logement_1 = ((temp_nombre_personnes_logement +
            menage.nombre_autres_occupants_logement) +
            list_length(menage.personnes_a_charge))
    except EmptyError:
        temp_nombre_personnes_logement_1 = dead_value
        raise NoValueProvided(SourcePosition(filename="examples/aides_logement/prologue.catala_fr",
                                             start_line=326, start_column=11,
                                             end_line=326, end_column=36,
                                             law_headings=["Éligibilité aux aides personnelles au logement",
                                             "Déclarations des champs d'application",
                                             "Prologue : aides au logement"]))
    nombre_personnes_logement = temp_nombre_personnes_logement_1
    try:
        try:
            try:
                match_arg_648 = menage.residence
                if match_arg_648.code == Collectivite_Code.Guadeloupe:
                    _ = match_arg_648.value
                    temp_septieme_alinea_l823_1_applicable = False
                elif match_arg_648.code == Collectivite_Code.Guyane:
                    _ = match_arg_648.value
                    temp_septieme_alinea_l823_1_applicable = False
                elif match_arg_648.code == Collectivite_Code.Martinique:
                    _ = match_arg_648.value
                    temp_septieme_alinea_l823_1_applicable = False
                elif match_arg_648.code == Collectivite_Code.LaReunion:
                    _ = match_arg_648.value
                    temp_septieme_alinea_l823_1_applicable = False
                elif match_arg_648.code == Collectivite_Code.SaintBarthelemy:
                    _ = match_arg_648.value
                    temp_septieme_alinea_l823_1_applicable = False
                elif match_arg_648.code == Collectivite_Code.SaintMartin:
                    _ = match_arg_648.value
                    temp_septieme_alinea_l823_1_applicable = False
                elif match_arg_648.code == Collectivite_Code.Metropole:
                    _ = match_arg_648.value
                    temp_septieme_alinea_l823_1_applicable = False
                elif match_arg_648.code == Collectivite_Code.SaintPierreEtMiquelon:
                    _ = match_arg_648.value
                    temp_septieme_alinea_l823_1_applicable = False
                elif match_arg_648.code == Collectivite_Code.Mayotte:
                    _ = match_arg_648.value
                    temp_septieme_alinea_l823_1_applicable = True
                if temp_septieme_alinea_l823_1_applicable:
                    temp_septieme_alinea_l823_1_applicable_1 = False
                else:
                    temp_septieme_alinea_l823_1_applicable_1 = dead_value
                    raise EmptyError
            except EmptyError:
                temp_septieme_alinea_l823_1_applicable_1 = True
        except EmptyError:
            temp_septieme_alinea_l823_1_applicable_1 = False
    except EmptyError:
        temp_septieme_alinea_l823_1_applicable_1 = dead_value
        raise NoValueProvided(SourcePosition(filename="examples/aides_logement/prologue.catala_fr",
                                             start_line=319, start_column=11,
                                             end_line=319, end_column=44,
                                             law_headings=["Éligibilité aux aides personnelles au logement",
                                             "Déclarations des champs d'application",
                                             "Prologue : aides au logement"]))
    septieme_alinea_l823_1_applicable = temp_septieme_alinea_l823_1_applicable_1
    try:
        try:
            if not menage.logement.logement_decent_l89_462:
                temp_condition_non_ouverture_l822_9_decence_logement = True
            else:
                temp_condition_non_ouverture_l822_9_decence_logement = dead_value
                raise EmptyError
        except EmptyError:
            temp_condition_non_ouverture_l822_9_decence_logement = False
    except EmptyError:
        temp_condition_non_ouverture_l822_9_decence_logement = dead_value
        raise NoValueProvided(SourcePosition(filename="examples/aides_logement/prologue.catala_fr",
                                             start_line=316, start_column=11,
                                             end_line=316, end_column=58,
                                             law_headings=["Éligibilité aux aides personnelles au logement",
                                             "Déclarations des champs d'application",
                                             "Prologue : aides au logement"]))
    condition_non_ouverture_l822_9_decence_logement = temp_condition_non_ouverture_l822_9_decence_logement
    try:
        try:
            if menage.condition_rattache_foyer_fiscal_parent_ifi:
                temp_condition_non_ouverture_l822_8 = True
            else:
                temp_condition_non_ouverture_l822_8 = dead_value
                raise EmptyError
        except EmptyError:
            temp_condition_non_ouverture_l822_8 = False
    except EmptyError:
        temp_condition_non_ouverture_l822_8 = dead_value
        raise NoValueProvided(SourcePosition(filename="examples/aides_logement/prologue.catala_fr",
                                             start_line=315, start_column=11,
                                             end_line=315, end_column=41,
                                             law_headings=["Éligibilité aux aides personnelles au logement",
                                             "Déclarations des champs d'application",
                                             "Prologue : aides au logement"]))
    condition_non_ouverture_l822_8 = temp_condition_non_ouverture_l822_8
    try:
        try:
            temp_condition_logement_residence_principale = condition_logement_residence_principale(
                Unit())
        except EmptyError:
            try:
                if menage.logement.residence_principale:
                    temp_condition_logement_residence_principale = True
                else:
                    temp_condition_logement_residence_principale = dead_value
                    raise EmptyError
            except EmptyError:
                temp_condition_logement_residence_principale = False
    except EmptyError:
        temp_condition_logement_residence_principale = dead_value
        raise NoValueProvided(SourcePosition(filename="examples/aides_logement/prologue.catala_fr",
                                             start_line=311, start_column=12,
                                             end_line=311, end_column=51,
                                             law_headings=["Éligibilité aux aides personnelles au logement",
                                             "Déclarations des champs d'application",
                                             "Prologue : aides au logement"]))
    condition_logement_residence_principale_1 = temp_condition_logement_residence_principale
    try:
        temp_ouverture_droits_retraite_dot_date_naissance_assure = demandeur.date_naissance
    except EmptyError:
        temp_ouverture_droits_retraite_dot_date_naissance_assure = dead_value
        raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_sécurité_sociale.catala_fr",
                                             start_line=123, start_column=14,
                                             end_line=123, end_column=61,
                                             law_headings=["Article L161-17-2",
                                             "Paragraphe 1 : Information et simplification des démarches des assurés.",
                                             "Sous-section 4 : Assurance vieillesse",
                                             "Section 1 : Bénéficiaires",
                                             "Chapitre 1er : Dispositions relatives aux prestations",
                                             "Titre VI : Dispositions relatives aux prestations et aux soins - Contrôle médical - Tutelle aux prestations sociales",
                                             "Titre III: Titre III : Dispositions communes relatives au financement",
                                             "Partie législative",
                                             "Code de la sécurité sociale"]))
    ouverture_droits_retraite_dot_date_naissance_assure = temp_ouverture_droits_retraite_dot_date_naissance_assure
    result_18 = ouverture_droits_retraite(OuvertureDroitsRetraiteIn(date_naissance_assure_in = ouverture_droits_retraite_dot_date_naissance_assure))
    ouverture_droits_retraite_dot_age_ouverture_droit = result_18.age_ouverture_droit
    try:
        temp_patrimoine_total_demandeur = (demandeur.patrimoine.produisant_revenu_periode_r822_3_3_r822_4 +
            demandeur.patrimoine.ne_produisant_pas_revenu_periode_r822_3_3_r822_4)
    except EmptyError:
        temp_patrimoine_total_demandeur = dead_value
        raise NoValueProvided(SourcePosition(filename="examples/aides_logement/prologue.catala_fr",
                                             start_line=329, start_column=11,
                                             end_line=329, end_column=37,
                                             law_headings=["Éligibilité aux aides personnelles au logement",
                                             "Déclarations des champs d'application",
                                             "Prologue : aides au logement"]))
    patrimoine_total_demandeur = temp_patrimoine_total_demandeur
    try:
        try:
            match_arg_649 = menage.residence
            if match_arg_649.code == Collectivite_Code.Guadeloupe:
                _ = match_arg_649.value
                temp_condition_nationalite = False
            elif match_arg_649.code == Collectivite_Code.Guyane:
                _ = match_arg_649.value
                temp_condition_nationalite = False
            elif match_arg_649.code == Collectivite_Code.Martinique:
                _ = match_arg_649.value
                temp_condition_nationalite = False
            elif match_arg_649.code == Collectivite_Code.LaReunion:
                _ = match_arg_649.value
                temp_condition_nationalite = False
            elif match_arg_649.code == Collectivite_Code.SaintBarthelemy:
                _ = match_arg_649.value
                temp_condition_nationalite = False
            elif match_arg_649.code == Collectivite_Code.SaintMartin:
                _ = match_arg_649.value
                temp_condition_nationalite = False
            elif match_arg_649.code == Collectivite_Code.Metropole:
                _ = match_arg_649.value
                temp_condition_nationalite = False
            elif match_arg_649.code == Collectivite_Code.SaintPierreEtMiquelon:
                _ = match_arg_649.value
                temp_condition_nationalite = False
            elif match_arg_649.code == Collectivite_Code.Mayotte:
                _ = match_arg_649.value
                temp_condition_nationalite = True
            if temp_condition_nationalite:
                match_arg_650 = demandeur.nationalite
                if match_arg_650.code == Nationalite_Code.Francaise:
                    _ = match_arg_650.value
                    temp_condition_nationalite_1 = False
                elif match_arg_650.code == Nationalite_Code.Etrangere:
                    conditions = match_arg_650.value
                    temp_condition_nationalite_1 = conditions.satisfait_art_4_ordonnance_2002_mayotte
            else:
                temp_condition_nationalite_1 = dead_value
                raise EmptyError
        except EmptyError:
            match_arg_651 = demandeur.nationalite
            if match_arg_651.code == Nationalite_Code.Francaise:
                _ = match_arg_651.value
                temp_condition_nationalite_1 = True
            elif match_arg_651.code == Nationalite_Code.Etrangere:
                conditions_1 = match_arg_651.value
                temp_condition_nationalite_1 = conditions_1.satisfait_conditions_l512_2_code_securite_sociale
    except EmptyError:
        temp_condition_nationalite_1 = dead_value
        raise NoValueProvided(SourcePosition(filename="examples/aides_logement/prologue.catala_fr",
                                             start_line=310, start_column=11,
                                             end_line=310, end_column=32,
                                             law_headings=["Éligibilité aux aides personnelles au logement",
                                             "Déclarations des champs d'application",
                                             "Prologue : aides au logement"]))
    condition_nationalite = temp_condition_nationalite_1
    try:
        def temp_plafond_individuel_l815_9_secu(_:Unit):
            raise EmptyError
        def temp_plafond_individuel_l815_9_secu_1(_:Unit):
            return False
        def temp_plafond_individuel_l815_9_secu_2(_:Unit):
            if ((date_courante_15 >= date_of_numbers(2021,1,1)) and
                (date_courante_15 <
                date_of_numbers(2022,1,1))):
                return money_of_cents_string("1088175")
            else:
                raise EmptyError
        def temp_plafond_individuel_l815_9_secu_3(_:Unit):
            if ((date_courante_15 >= date_of_numbers(2022,1,1)) and
                (date_courante_15 <
                date_of_numbers(2023,1,1))):
                return money_of_cents_string("1100144")
            else:
                raise EmptyError
        def temp_plafond_individuel_l815_9_secu_4(_:Unit):
            if (date_courante_15 >=
                date_of_numbers(2023,1,1)):
                return money_of_cents_string("1153302")
            else:
                raise EmptyError
        def temp_plafond_individuel_l815_9_secu_5(_:Unit):
            if ((date_courante_15 >= date_of_numbers(2020,1,1)) and
                (date_courante_15 <
                date_of_numbers(2021,1,1))):
                return money_of_cents_string("1083840")
            else:
                raise EmptyError
        def temp_plafond_individuel_l815_9_secu_6(_:Unit):
            if ((date_courante_15 >= date_of_numbers(2019,1,1)) and
                (date_courante_15 <
                date_of_numbers(2020,1,1))):
                return money_of_cents_string("1041840")
            else:
                raise EmptyError
        def temp_plafond_individuel_l815_9_secu_7(_:Unit):
            if ((date_courante_15 >= date_of_numbers(2018,4,1)) and
                (date_courante_15 <
                date_of_numbers(2019,1,1))):
                return money_of_cents_string("999840")
            else:
                raise EmptyError
        temp_plafond_individuel_l815_9_secu_8 = handle_default(SourcePosition(filename="examples/aides_logement/prologue.catala_fr",
                                                               start_line=337,
                                                               start_column=11,
                                                               end_line=337, end_column=41,
                                                               law_headings=["Éligibilité aux aides personnelles au logement",
                                                               "Déclarations des champs d'application",
                                                               "Prologue : aides au logement"]), [temp_plafond_individuel_l815_9_secu_7,
                                                               temp_plafond_individuel_l815_9_secu_6,
                                                               temp_plafond_individuel_l815_9_secu_5,
                                                               temp_plafond_individuel_l815_9_secu_4,
                                                               temp_plafond_individuel_l815_9_secu_3,
                                                               temp_plafond_individuel_l815_9_secu_2],
                                                               temp_plafond_individuel_l815_9_secu_1,
                                                               temp_plafond_individuel_l815_9_secu)
    except EmptyError:
        temp_plafond_individuel_l815_9_secu_8 = dead_value
        raise NoValueProvided(SourcePosition(filename="examples/aides_logement/prologue.catala_fr",
                                             start_line=337, start_column=11,
                                             end_line=337, end_column=41,
                                             law_headings=["Éligibilité aux aides personnelles au logement",
                                             "Déclarations des champs d'application",
                                             "Prologue : aides au logement"]))
    plafond_individuel_l815_9_secu = temp_plafond_individuel_l815_9_secu_8
    try:
        try:
            try:
                match_arg_652 = menage.logement.loue_ou_sous_loue_a_des_tiers
                if match_arg_652.code == LoueOuSousLoueADesTiers_Code.Non:
                    _ = match_arg_652.value
                    temp_condition_logement_location_tiers = True
                elif match_arg_652.code == LoueOuSousLoueADesTiers_Code.Oui:
                    personne_2 = match_arg_652.value
                    try:
                        temp_condition_logement_location_tiers_1 = duration_of_numbers(30,0,0)
                    except EmptyError:
                        temp_condition_logement_location_tiers_1 = dead_value
                        raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_legislatif.catala_fr",
                                                             start_line=227,
                                                             start_column=22,
                                                             end_line=227,
                                                             end_column=27,
                                                             law_headings=["Article L822-4",
                                                             "Chapitre II : Conditions générales d'attribution",
                                                             "Titre II : Dispositions communes aux aides personnelles au logement",
                                                             "Livre VIII : Aides personnelles au logement",
                                                             "Partie législative",
                                                             "Code de la construction et de l'habitation"]))
                    try:
                        temp_condition_logement_location_tiers_2 = date_courante_15
                    except EmptyError:
                        temp_condition_logement_location_tiers_2 = dead_value
                        raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_legislatif.catala_fr",
                                                             start_line=226,
                                                             start_column=29,
                                                             end_line=226,
                                                             end_column=42,
                                                             law_headings=["Article L822-4",
                                                             "Chapitre II : Conditions générales d'attribution",
                                                             "Titre II : Dispositions communes aux aides personnelles au logement",
                                                             "Livre VIII : Aides personnelles au logement",
                                                             "Partie législative",
                                                             "Code de la construction et de l'habitation"]))
                    try:
                        temp_condition_logement_location_tiers_3 = personne_2.date_naissance_personne_sous_location
                    except EmptyError:
                        temp_condition_logement_location_tiers_3 = dead_value
                        raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_legislatif.catala_fr",
                                                             start_line=225,
                                                             start_column=30,
                                                             end_line=225,
                                                             end_column=76,
                                                             law_headings=["Article L822-4",
                                                             "Chapitre II : Conditions générales d'attribution",
                                                             "Titre II : Dispositions communes aux aides personnelles au logement",
                                                             "Livre VIII : Aides personnelles au logement",
                                                             "Partie législative",
                                                             "Code de la construction et de l'habitation"]))
                    temp_condition_logement_location_tiers = (VerificationAgeSuperieurA(est_superieur = verification_age_superieur_a(
                        VerificationAgeSuperieurAIn(date_naissance_in = temp_condition_logement_location_tiers_3,
                        date_courante_in = temp_condition_logement_location_tiers_2,
                        annees_in = temp_condition_logement_location_tiers_1)).est_superieur).est_superieur or
                        personne_2.conforme_article_l442_1)
                if temp_condition_logement_location_tiers:
                    temp_condition_logement_location_tiers_4 = True
                else:
                    temp_condition_logement_location_tiers_4 = dead_value
                    raise EmptyError
            except EmptyError:
                match_arg_653 = menage.logement.loue_ou_sous_loue_a_des_tiers
                if match_arg_653.code == LoueOuSousLoueADesTiers_Code.Non:
                    _ = match_arg_653.value
                    temp_condition_logement_location_tiers_5 = True
                elif match_arg_653.code == LoueOuSousLoueADesTiers_Code.Oui:
                    _ = match_arg_653.value
                    temp_condition_logement_location_tiers_5 = False
                if temp_condition_logement_location_tiers_5:
                    temp_condition_logement_location_tiers_4 = False
                else:
                    temp_condition_logement_location_tiers_4 = dead_value
                    raise EmptyError
        except EmptyError:
            temp_condition_logement_location_tiers_4 = False
    except EmptyError:
        temp_condition_logement_location_tiers_4 = dead_value
        raise NoValueProvided(SourcePosition(filename="examples/aides_logement/prologue.catala_fr",
                                             start_line=313, start_column=11,
                                             end_line=313, end_column=44,
                                             law_headings=["Éligibilité aux aides personnelles au logement",
                                             "Déclarations des champs d'application",
                                             "Prologue : aides au logement"]))
    condition_logement_location_tiers = temp_condition_logement_location_tiers_4
    try:
        temp_prestations_familiales_dot_date_courante = date_courante_15
    except EmptyError:
        temp_prestations_familiales_dot_date_courante = dead_value
        raise NoValueProvided(SourcePosition(filename="examples/aides_logement/prologue.catala_fr",
                                             start_line=380, start_column=14,
                                             end_line=380, end_column=50,
                                             law_headings=["Éligibilité aux aides personnelles au logement",
                                             "Déclarations des champs d'application",
                                             "Prologue : aides au logement"]))
    prestations_familiales_dot_date_courante = temp_prestations_familiales_dot_date_courante
    try:
        temp_prestations_familiales_dot_prestation_courante = ElementPrestationsFamiliales(ElementPrestationsFamiliales_Code.AllocationLogement,
            Unit())
    except EmptyError:
        temp_prestations_familiales_dot_prestation_courante = dead_value
        raise NoValueProvided(SourcePosition(filename="examples/aides_logement/prologue.catala_fr",
                                             start_line=381, start_column=14,
                                             end_line=381, end_column=56,
                                             law_headings=["Éligibilité aux aides personnelles au logement",
                                             "Déclarations des champs d'application",
                                             "Prologue : aides au logement"]))
    prestations_familiales_dot_prestation_courante = temp_prestations_familiales_dot_prestation_courante
    try:
        temp_prestations_familiales_dot_residence = menage.residence
    except EmptyError:
        temp_prestations_familiales_dot_residence = dead_value
        raise NoValueProvided(SourcePosition(filename="examples/aides_logement/prologue.catala_fr",
                                             start_line=383, start_column=14,
                                             end_line=383, end_column=46,
                                             law_headings=["Éligibilité aux aides personnelles au logement",
                                             "Déclarations des champs d'application",
                                             "Prologue : aides au logement"]))
    prestations_familiales_dot_residence = temp_prestations_familiales_dot_residence
    def temp_prestations_familiales_dot_age_l512_3_2(_:Unit):
        try:
            try:
                match_arg_654 = menage.residence
                if match_arg_654.code == Collectivite_Code.Guadeloupe:
                    _ = match_arg_654.value
                    temp_prestations_familiales_dot_age_l512_3_2_1 = False
                elif match_arg_654.code == Collectivite_Code.Guyane:
                    _ = match_arg_654.value
                    temp_prestations_familiales_dot_age_l512_3_2_1 = False
                elif match_arg_654.code == Collectivite_Code.Martinique:
                    _ = match_arg_654.value
                    temp_prestations_familiales_dot_age_l512_3_2_1 = False
                elif match_arg_654.code == Collectivite_Code.LaReunion:
                    _ = match_arg_654.value
                    temp_prestations_familiales_dot_age_l512_3_2_1 = False
                elif match_arg_654.code == Collectivite_Code.SaintBarthelemy:
                    _ = match_arg_654.value
                    temp_prestations_familiales_dot_age_l512_3_2_1 = True
                elif match_arg_654.code == Collectivite_Code.SaintMartin:
                    _ = match_arg_654.value
                    temp_prestations_familiales_dot_age_l512_3_2_1 = True
                elif match_arg_654.code == Collectivite_Code.Metropole:
                    _ = match_arg_654.value
                    temp_prestations_familiales_dot_age_l512_3_2_1 = False
                elif match_arg_654.code == Collectivite_Code.SaintPierreEtMiquelon:
                    _ = match_arg_654.value
                    temp_prestations_familiales_dot_age_l512_3_2_1 = False
                elif match_arg_654.code == Collectivite_Code.Mayotte:
                    _ = match_arg_654.value
                    temp_prestations_familiales_dot_age_l512_3_2_1 = False
                if ((date_courante_15 >=
                    date_entree_vigueur_differee_cch_1) and
                    temp_prestations_familiales_dot_age_l512_3_2_1):
                    temp_prestations_familiales_dot_age_l512_3_2_2 = duration_of_numbers(22,0,0)
                else:
                    temp_prestations_familiales_dot_age_l512_3_2_2 = dead_value
                    raise EmptyError
            except EmptyError:
                match_arg_655 = menage.residence
                if match_arg_655.code == Collectivite_Code.Guadeloupe:
                    _ = match_arg_655.value
                    temp_prestations_familiales_dot_age_l512_3_2_3 = True
                elif match_arg_655.code == Collectivite_Code.Guyane:
                    _ = match_arg_655.value
                    temp_prestations_familiales_dot_age_l512_3_2_3 = True
                elif match_arg_655.code == Collectivite_Code.Martinique:
                    _ = match_arg_655.value
                    temp_prestations_familiales_dot_age_l512_3_2_3 = True
                elif match_arg_655.code == Collectivite_Code.LaReunion:
                    _ = match_arg_655.value
                    temp_prestations_familiales_dot_age_l512_3_2_3 = True
                elif match_arg_655.code == Collectivite_Code.SaintBarthelemy:
                    _ = match_arg_655.value
                    temp_prestations_familiales_dot_age_l512_3_2_3 = False
                elif match_arg_655.code == Collectivite_Code.SaintMartin:
                    _ = match_arg_655.value
                    temp_prestations_familiales_dot_age_l512_3_2_3 = False
                elif match_arg_655.code == Collectivite_Code.Metropole:
                    _ = match_arg_655.value
                    temp_prestations_familiales_dot_age_l512_3_2_3 = False
                elif match_arg_655.code == Collectivite_Code.SaintPierreEtMiquelon:
                    _ = match_arg_655.value
                    temp_prestations_familiales_dot_age_l512_3_2_3 = False
                elif match_arg_655.code == Collectivite_Code.Mayotte:
                    _ = match_arg_655.value
                    temp_prestations_familiales_dot_age_l512_3_2_3 = True
                if temp_prestations_familiales_dot_age_l512_3_2_3:
                    temp_prestations_familiales_dot_age_l512_3_2_2 = duration_of_numbers(22,0,0)
                else:
                    temp_prestations_familiales_dot_age_l512_3_2_2 = dead_value
                    raise EmptyError
        except EmptyError:
            temp_prestations_familiales_dot_age_l512_3_2_2 = duration_of_numbers(21,0,0)
        return temp_prestations_familiales_dot_age_l512_3_2_2
    prestations_familiales_dot_age_l512_3_2 = temp_prestations_familiales_dot_age_l512_3_2
    result_19 = eligibilite_prestations_familiales(EligibilitePrestationsFamilialesIn(date_courante_in = prestations_familiales_dot_date_courante,
                                                   prestation_courante_in = prestations_familiales_dot_prestation_courante,
                                                   residence_in = prestations_familiales_dot_residence,
                                                   age_l512_3_2_in = prestations_familiales_dot_age_l512_3_2))
    prestations_familiales_dot_age_l512_3_2_1 = result_19.age_l512_3_2
    prestations_familiales_dot_droit_ouvert = result_19.droit_ouvert
    prestations_familiales_dot_conditions_hors_age = result_19.conditions_hors_age
    prestations_familiales_dot_regime_outre_mer_l751_1 = result_19.regime_outre_mer_l751_1
    try:
        try:
            try:
                try:
                    match_arg_656 = menage.logement.usufruit
                    if match_arg_656.code == ParentOuAutre_Code.DemandeurOuConjointOuParentOuViaPartsSocietes:
                        parts_2 = match_arg_656.value
                        temp_condition_logement_mode_occupation = parts_2
                    elif match_arg_656.code == ParentOuAutre_Code.Autre:
                        _ = match_arg_656.value
                        temp_condition_logement_mode_occupation = decimal_of_string("0.")
                    match_arg_657 = menage.logement.proprietaire
                    if match_arg_657.code == ParentOuAutre_Code.DemandeurOuConjointOuParentOuViaPartsSocietes:
                        parts_3 = match_arg_657.value
                        temp_condition_logement_mode_occupation_1 = parts_3
                    elif match_arg_657.code == ParentOuAutre_Code.Autre:
                        _ = match_arg_657.value
                        temp_condition_logement_mode_occupation_1 = decimal_of_string("0.")
                    if (usufruit_ou_propriete_famille and
                        ((temp_condition_logement_mode_occupation_1 <
                        seuil_l822_3_parts_propriete) and
                        (temp_condition_logement_mode_occupation <
                        seuil_l822_3_parts_usufruit))):
                        temp_condition_logement_mode_occupation_2 = True
                    else:
                        temp_condition_logement_mode_occupation_2 = dead_value
                        raise EmptyError
                except EmptyError:
                    match_arg_658 = menage.logement.mode_occupation
                    if match_arg_658.code == ModeOccupation_Code.Locataire:
                        _ = match_arg_658.value
                        temp_condition_logement_mode_occupation_3 = usufruit_ou_propriete_famille
                    elif match_arg_658.code == ModeOccupation_Code.ResidentLogementFoyer:
                        _ = match_arg_658.value
                        temp_condition_logement_mode_occupation_3 = False
                    elif match_arg_658.code == ModeOccupation_Code.AccessionProprieteLocalUsageExclusifHabitation:
                        _ = match_arg_658.value
                        temp_condition_logement_mode_occupation_3 = False
                    elif match_arg_658.code == ModeOccupation_Code.SousLocataire:
                        _ = match_arg_658.value
                        temp_condition_logement_mode_occupation_3 = False
                    elif match_arg_658.code == ModeOccupation_Code.LocationAccession:
                        _ = match_arg_658.value
                        temp_condition_logement_mode_occupation_3 = False
                    if temp_condition_logement_mode_occupation_3:
                        temp_condition_logement_mode_occupation_2 = False
                    else:
                        temp_condition_logement_mode_occupation_2 = dead_value
                        raise EmptyError
            except EmptyError:
                match_arg_659 = menage.logement.mode_occupation
                if match_arg_659.code == ModeOccupation_Code.Locataire:
                    _ = match_arg_659.value
                    temp_condition_logement_mode_occupation_4 = True
                elif match_arg_659.code == ModeOccupation_Code.ResidentLogementFoyer:
                    _ = match_arg_659.value
                    temp_condition_logement_mode_occupation_4 = True
                elif match_arg_659.code == ModeOccupation_Code.AccessionProprieteLocalUsageExclusifHabitation:
                    _ = match_arg_659.value
                    temp_condition_logement_mode_occupation_4 = menage.logement.residence_principale
                elif match_arg_659.code == ModeOccupation_Code.SousLocataire:
                    _ = match_arg_659.value
                    temp_condition_logement_mode_occupation_4 = True
                elif match_arg_659.code == ModeOccupation_Code.LocationAccession:
                    _ = match_arg_659.value
                    temp_condition_logement_mode_occupation_4 = True
                if temp_condition_logement_mode_occupation_4:
                    temp_condition_logement_mode_occupation_2 = True
                else:
                    temp_condition_logement_mode_occupation_2 = dead_value
                    raise EmptyError
        except EmptyError:
            temp_condition_logement_mode_occupation_2 = False
    except EmptyError:
        temp_condition_logement_mode_occupation_2 = dead_value
        raise NoValueProvided(SourcePosition(filename="examples/aides_logement/prologue.catala_fr",
                                             start_line=312, start_column=11,
                                             end_line=312, end_column=45,
                                             law_headings=["Éligibilité aux aides personnelles au logement",
                                             "Déclarations des champs d'application",
                                             "Prologue : aides au logement"]))
    condition_logement_mode_occupation = temp_condition_logement_mode_occupation_2
    try:
        try:
            temp_condition_logement_surface = condition_logement_surface(
                Unit())
        except EmptyError:
            try:
                try:
                    try:
                        if (menage.personnes_agees_handicapees_foyer_r844_4 and
                            (nombre_personnes_logement >
                            integer_of_string("2"))):
                            temp_condition_logement_surface = False
                        else:
                            temp_condition_logement_surface = dead_value
                            raise EmptyError
                    except EmptyError:
                        if (nombre_personnes_logement ==
                            integer_of_string("1")):
                            temp_condition_logement_surface_1 = integer_of_string("9")
                        else:
                            temp_condition_logement_surface_1 = integer_of_string("16")
                        if (menage.personnes_agees_handicapees_foyer_r844_4 and
                            (menage.logement.surface_m_carres >=
                            temp_condition_logement_surface_1)):
                            temp_condition_logement_surface = True
                        else:
                            temp_condition_logement_surface = dead_value
                            raise EmptyError
                except EmptyError:
                    match_arg_660 = menage.situation_familiale
                    if match_arg_660.code == SituationFamiliale_Code.Celibataire:
                        _ = match_arg_660.value
                        temp_condition_logement_surface_2 = integer_of_string("9")
                    elif match_arg_660.code == SituationFamiliale_Code.Maries:
                        _ = match_arg_660.value
                        temp_condition_logement_surface_2 = integer_of_string("16")
                    elif match_arg_660.code == SituationFamiliale_Code.Pacses:
                        _ = match_arg_660.value
                        temp_condition_logement_surface_2 = integer_of_string("16")
                    elif match_arg_660.code == SituationFamiliale_Code.Concubins:
                        _ = match_arg_660.value
                        temp_condition_logement_surface_2 = integer_of_string("16")
                    elif match_arg_660.code == SituationFamiliale_Code.CelibataireSepareDeFait:
                        _ = match_arg_660.value
                        temp_condition_logement_surface_2 = integer_of_string("9")
                    elif match_arg_660.code == SituationFamiliale_Code.ConcubinageDontSepareDeFait:
                        _ = match_arg_660.value
                        temp_condition_logement_surface_2 = integer_of_string("16")
                    if (((temp_condition_logement_surface_2 +
                        ((menage.nombre_autres_occupants_logement +
                        list_length(menage.personnes_a_charge)) *
                        integer_of_string("9"))) >=
                        integer_of_string("70")) and
                        (nombre_personnes_logement >=
                        integer_of_string("8"))):
                        temp_condition_logement_surface_3 = (menage.logement.surface_m_carres >=
                            integer_of_string("70"))
                    else:
                        match_arg_661 = menage.situation_familiale
                        if match_arg_661.code == SituationFamiliale_Code.Celibataire:
                            _ = match_arg_661.value
                            temp_condition_logement_surface_4 = integer_of_string("9")
                        elif match_arg_661.code == SituationFamiliale_Code.Maries:
                            _ = match_arg_661.value
                            temp_condition_logement_surface_4 = integer_of_string("16")
                        elif match_arg_661.code == SituationFamiliale_Code.Pacses:
                            _ = match_arg_661.value
                            temp_condition_logement_surface_4 = integer_of_string("16")
                        elif match_arg_661.code == SituationFamiliale_Code.Concubins:
                            _ = match_arg_661.value
                            temp_condition_logement_surface_4 = integer_of_string("16")
                        elif match_arg_661.code == SituationFamiliale_Code.CelibataireSepareDeFait:
                            _ = match_arg_661.value
                            temp_condition_logement_surface_4 = integer_of_string("9")
                        elif match_arg_661.code == SituationFamiliale_Code.ConcubinageDontSepareDeFait:
                            _ = match_arg_661.value
                            temp_condition_logement_surface_4 = integer_of_string("16")
                        temp_condition_logement_surface_3 = (menage.logement.surface_m_carres >=
                            (temp_condition_logement_surface_4 +
                            ((menage.nombre_autres_occupants_logement +
                            list_length(menage.personnes_a_charge)) *
                            integer_of_string("9"))))
                    if temp_condition_logement_surface_3:
                        temp_condition_logement_surface = True
                    else:
                        temp_condition_logement_surface = dead_value
                        raise EmptyError
            except EmptyError:
                temp_condition_logement_surface = False
    except EmptyError:
        temp_condition_logement_surface = dead_value
        raise NoValueProvided(SourcePosition(filename="examples/aides_logement/prologue.catala_fr",
                                             start_line=314, start_column=12,
                                             end_line=314, end_column=38,
                                             law_headings=["Éligibilité aux aides personnelles au logement",
                                             "Déclarations des champs d'application",
                                             "Prologue : aides au logement"]))
    condition_logement_surface_1 = temp_condition_logement_surface
    try:
        temp_age_l161_17_2_secu = ouverture_droits_retraite_dot_age_ouverture_droit
    except EmptyError:
        temp_age_l161_17_2_secu = dead_value
        raise NoValueProvided(SourcePosition(filename="examples/aides_logement/prologue.catala_fr",
                                             start_line=336, start_column=11,
                                             end_line=336, end_column=29,
                                             law_headings=["Éligibilité aux aides personnelles au logement",
                                             "Déclarations des champs d'application",
                                             "Prologue : aides au logement"]))
    age_l161_17_2_secu = temp_age_l161_17_2_secu
    try:
        try:
            try:
                try:
                    if menage.logement.est_ehpad_ou_maison_autonomie_l313_12_asf:
                        temp_patrimoine_pris_en_compte = money_of_cents_string("0")
                    else:
                        temp_patrimoine_pris_en_compte = dead_value
                        raise EmptyError
                except EmptyError:
                    def temp_patrimoine_pris_en_compte_1(acc_1:bool, prestation:PrestationRecue):
                        return (acc_1 or ((prestation ==
                            PrestationRecue(PrestationRecue_Code.AllocationSoutienEnfantHandicape,
                            Unit())) or (prestation ==
                            PrestationRecue(PrestationRecue_Code.AllocationAdulteHandicape,
                            Unit()))))
                    if list_fold_left(temp_patrimoine_pris_en_compte_1,
                                      False, menage.prestations_recues):
                        temp_patrimoine_pris_en_compte = money_of_cents_string("0")
                    else:
                        temp_patrimoine_pris_en_compte = dead_value
                        raise EmptyError
            except EmptyError:
                if (patrimoine_total_demandeur >=
                    seuil_l822_5_patrimoine):
                    temp_patrimoine_pris_en_compte = demandeur.patrimoine.ne_produisant_pas_revenu_periode_r822_3_3_r822_4
                else:
                    temp_patrimoine_pris_en_compte = dead_value
                    raise EmptyError
        except EmptyError:
            if (patrimoine_total_demandeur >
                seuil_l822_5_patrimoine):
                temp_patrimoine_pris_en_compte = patrimoine_total_demandeur
            else:
                temp_patrimoine_pris_en_compte = money_of_cents_string("0")
    except EmptyError:
        temp_patrimoine_pris_en_compte = dead_value
        raise NoValueProvided(SourcePosition(filename="examples/aides_logement/prologue.catala_fr",
                                             start_line=334, start_column=11,
                                             end_line=334, end_column=36,
                                             law_headings=["Éligibilité aux aides personnelles au logement",
                                             "Déclarations des champs d'application",
                                             "Prologue : aides au logement"]))
    patrimoine_pris_en_compte = temp_patrimoine_pris_en_compte
    try:
        try:
            if condition_logement_surface_1:
                temp_condition_ouverture_l822_10_peuplement_logement = True
            else:
                temp_condition_ouverture_l822_10_peuplement_logement = dead_value
                raise EmptyError
        except EmptyError:
            temp_condition_ouverture_l822_10_peuplement_logement = False
    except EmptyError:
        temp_condition_ouverture_l822_10_peuplement_logement = dead_value
        raise NoValueProvided(SourcePosition(filename="examples/aides_logement/prologue.catala_fr",
                                             start_line=317, start_column=11,
                                             end_line=317, end_column=58,
                                             law_headings=["Éligibilité aux aides personnelles au logement",
                                             "Déclarations des champs d'application",
                                             "Prologue : aides au logement"]))
    condition_ouverture_l822_10_peuplement_logement = temp_condition_ouverture_l822_10_peuplement_logement
    try:
        temp_age_l351_8_1_secu = (age_l161_17_2_secu +
            duration_of_numbers(5,0,0))
    except EmptyError:
        temp_age_l351_8_1_secu = dead_value
        raise NoValueProvided(SourcePosition(filename="examples/aides_logement/prologue.catala_fr",
                                             start_line=335, start_column=11,
                                             end_line=335, end_column=28,
                                             law_headings=["Éligibilité aux aides personnelles au logement",
                                             "Déclarations des champs d'application",
                                             "Prologue : aides au logement"]))
    age_l351_8_1_secu = temp_age_l351_8_1_secu
    try:
        try:
            try:
                if (condition_non_ouverture_l822_8 or
                    condition_non_ouverture_l822_9_decence_logement):
                    temp_eligibilite_logement = False
                else:
                    temp_eligibilite_logement = dead_value
                    raise EmptyError
            except EmptyError:
                if (condition_logement_residence_principale_1 and
                    (condition_logement_mode_occupation and
                    (condition_logement_location_tiers and
                    condition_ouverture_l822_10_peuplement_logement))):
                    temp_eligibilite_logement = True
                else:
                    temp_eligibilite_logement = dead_value
                    raise EmptyError
        except EmptyError:
            temp_eligibilite_logement = False
    except EmptyError:
        temp_eligibilite_logement = dead_value
        raise NoValueProvided(SourcePosition(filename="examples/aides_logement/prologue.catala_fr",
                                             start_line=320, start_column=11,
                                             end_line=320, end_column=31,
                                             law_headings=["Éligibilité aux aides personnelles au logement",
                                             "Déclarations des champs d'application",
                                             "Prologue : aides au logement"]))
    eligibilite_logement = temp_eligibilite_logement
    try:
        def temp_condition_2_r823_4(personne_a_charge:PersonneACharge):
            try:
                try:
                    match_arg_662 = personne_a_charge
                    if match_arg_662.code == PersonneACharge_Code.EnfantACharge:
                        enfant_2 = match_arg_662.value
                        temp_condition_2_r823_4_1 = False
                    elif match_arg_662.code == PersonneACharge_Code.AutrePersonneACharge:
                        parent = match_arg_662.value
                        try:
                            temp_condition_2_r823_4_2 = duration_of_numbers(65,0,0)
                        except EmptyError:
                            temp_condition_2_r823_4_2 = dead_value
                            raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                                 start_line=1214,
                                                                 start_column=30,
                                                                 end_line=1214,
                                                                 end_column=35,
                                                                 law_headings=["Article R823-4",
                                                                 "Section 1 : Calcul, liquidation et versement des aides",
                                                                 "Chapitre III : Modalités de liquidation et de versement",
                                                                 "Titre II : Dispositions communes aux aides personnelles au logement",
                                                                 "Livre VIII : Aides personnelles au logement",
                                                                 "Partie réglementaire",
                                                                 "Code de la construction et de l'habitation"]))
                        try:
                            temp_condition_2_r823_4_3 = date_courante_15
                        except EmptyError:
                            temp_condition_2_r823_4_3 = dead_value
                            raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                                 start_line=1213,
                                                                 start_column=37,
                                                                 end_line=1213,
                                                                 end_column=50,
                                                                 law_headings=["Article R823-4",
                                                                 "Section 1 : Calcul, liquidation et versement des aides",
                                                                 "Chapitre III : Modalités de liquidation et de versement",
                                                                 "Titre II : Dispositions communes aux aides personnelles au logement",
                                                                 "Livre VIII : Aides personnelles au logement",
                                                                 "Partie réglementaire",
                                                                 "Code de la construction et de l'habitation"]))
                        try:
                            temp_condition_2_r823_4_4 = parent.date_naissance
                        except EmptyError:
                            temp_condition_2_r823_4_4 = dead_value
                            raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                                 start_line=1212,
                                                                 start_column=38,
                                                                 end_line=1212,
                                                                 end_column=59,
                                                                 law_headings=["Article R823-4",
                                                                 "Section 1 : Calcul, liquidation et versement des aides",
                                                                 "Chapitre III : Modalités de liquidation et de versement",
                                                                 "Titre II : Dispositions communes aux aides personnelles au logement",
                                                                 "Livre VIII : Aides personnelles au logement",
                                                                 "Partie réglementaire",
                                                                 "Code de la construction et de l'habitation"]))
                        temp_condition_2_r823_4_1 = ((parent.parente ==
                            Parente(Parente_Code.Ascendant, Unit())) and
                            ((parent.ressources <=
                            (plafond_individuel_l815_9_secu *
                            decimal_of_string("1.25"))) and
                            ((((parent.date_naissance + age_l351_8_1_secu) <=
                            date_courante_15) or
                            (parent.titulaire_allocation_personne_agee and
                            VerificationAgeInferieurOuEgalA(est_inferieur_ou_egal = verification_age_inferieur_ou_egal_a(
                            VerificationAgeInferieurOuEgalAIn(date_naissance_in = temp_condition_2_r823_4_4,
                            date_courante_in = temp_condition_2_r823_4_3,
                            annees_in = temp_condition_2_r823_4_2)).est_inferieur_ou_egal).est_inferieur_ou_egal)) or
                            (((parent.date_naissance + age_l161_17_2_secu) <=
                            date_courante_15) and
                            parent.beneficiaire_l161_19_l351_8_l643_3_secu))))
                    if temp_condition_2_r823_4_1:
                        return True
                    else:
                        raise EmptyError
                except EmptyError:
                    return False
            except EmptyError:
                raise NoValueProvided(SourcePosition(filename="examples/aides_logement/prologue.catala_fr",
                                                     start_line=346,
                                                     start_column=12,
                                                     end_line=346,
                                                     end_column=30,
                                                     law_headings=["Éligibilité aux aides personnelles au logement",
                                                     "Déclarations des champs d'application",
                                                     "Prologue : aides au logement"]))
    except EmptyError:
        temp_condition_2_r823_4 = dead_value
        raise NoValueProvided(SourcePosition(filename="examples/aides_logement/prologue.catala_fr",
                                             start_line=346, start_column=12,
                                             end_line=346, end_column=30,
                                             law_headings=["Éligibilité aux aides personnelles au logement",
                                             "Déclarations des champs d'application",
                                             "Prologue : aides au logement"]))
    condition_2_r823_4 = temp_condition_2_r823_4
    try:
        try:
            if (condition_nationalite and
                (condition_logement_mode_occupation and
                eligibilite_logement)):
                temp_eligibilite = True
            else:
                temp_eligibilite = dead_value
                raise EmptyError
        except EmptyError:
            temp_eligibilite = False
    except EmptyError:
        temp_eligibilite = dead_value
        raise NoValueProvided(SourcePosition(filename="examples/aides_logement/prologue.catala_fr",
                                             start_line=342, start_column=12,
                                             end_line=342, end_column=23,
                                             law_headings=["Éligibilité aux aides personnelles au logement",
                                             "Déclarations des champs d'application",
                                             "Prologue : aides au logement"]))
    eligibilite = temp_eligibilite
    try:
        def temp_prise_en_compte_personne_a_charge(personne_a_charge_1:PersonneACharge):
            try:
                def temp_prise_en_compte_personne_a_charge_1(_:Unit):
                    return False
                def temp_prise_en_compte_personne_a_charge_2(_:Unit):
                    return True
                def temp_prise_en_compte_personne_a_charge_3(_:Unit):
                    try:
                        try:
                            try:
                                match_arg_663 = personne_a_charge_1
                                if match_arg_663.code == PersonneACharge_Code.EnfantACharge:
                                    enfant_3 = match_arg_663.value
                                    match_arg_664 = enfant_3.obligation_scolaire
                                    if match_arg_664.code == SituationObligationScolaire_Code.Avant:
                                        _ = match_arg_664.value
                                        temp_prise_en_compte_personne_a_charge_4 = False
                                    elif match_arg_664.code == SituationObligationScolaire_Code.Pendant:
                                        _ = match_arg_664.value
                                        temp_prise_en_compte_personne_a_charge_4 = False
                                    elif match_arg_664.code == SituationObligationScolaire_Code.Apres:
                                        _ = match_arg_664.value
                                        temp_prise_en_compte_personne_a_charge_4 = True
                                    temp_prise_en_compte_personne_a_charge_5 = (temp_prise_en_compte_personne_a_charge_4 and
                                        (((enfant_3.date_de_naissance +
                                        prestations_familiales_dot_age_l512_3_2_1) >
                                        date_courante_15) and
                                        enfant_3.etudes_apprentissage_stage_formation_pro_impossibilite_travail))
                                elif match_arg_663.code == PersonneACharge_Code.AutrePersonneACharge:
                                    _ = match_arg_663.value
                                    temp_prise_en_compte_personne_a_charge_5 = False
                                match_arg_665 = menage.residence
                                if match_arg_665.code == Collectivite_Code.Guadeloupe:
                                    _ = match_arg_665.value
                                    temp_prise_en_compte_personne_a_charge_6 = False
                                elif match_arg_665.code == Collectivite_Code.Guyane:
                                    _ = match_arg_665.value
                                    temp_prise_en_compte_personne_a_charge_6 = False
                                elif match_arg_665.code == Collectivite_Code.Martinique:
                                    _ = match_arg_665.value
                                    temp_prise_en_compte_personne_a_charge_6 = False
                                elif match_arg_665.code == Collectivite_Code.LaReunion:
                                    _ = match_arg_665.value
                                    temp_prise_en_compte_personne_a_charge_6 = False
                                elif match_arg_665.code == Collectivite_Code.SaintBarthelemy:
                                    _ = match_arg_665.value
                                    temp_prise_en_compte_personne_a_charge_6 = True
                                elif match_arg_665.code == Collectivite_Code.SaintMartin:
                                    _ = match_arg_665.value
                                    temp_prise_en_compte_personne_a_charge_6 = True
                                elif match_arg_665.code == Collectivite_Code.Metropole:
                                    _ = match_arg_665.value
                                    temp_prise_en_compte_personne_a_charge_6 = False
                                elif match_arg_665.code == Collectivite_Code.SaintPierreEtMiquelon:
                                    _ = match_arg_665.value
                                    temp_prise_en_compte_personne_a_charge_6 = False
                                elif match_arg_665.code == Collectivite_Code.Mayotte:
                                    _ = match_arg_665.value
                                    temp_prise_en_compte_personne_a_charge_6 = False
                                if (temp_prise_en_compte_personne_a_charge_6 and
                                    temp_prise_en_compte_personne_a_charge_5):
                                    return False
                                else:
                                    raise EmptyError
                            except EmptyError:
                                match_arg_666 = personne_a_charge_1
                                if match_arg_666.code == PersonneACharge_Code.EnfantACharge:
                                    enfant_4 = match_arg_666.value
                                    match_arg_667 = enfant_4.obligation_scolaire
                                    if match_arg_667.code == SituationObligationScolaire_Code.Avant:
                                        _ = match_arg_667.value
                                        temp_prise_en_compte_personne_a_charge_7 = False
                                    elif match_arg_667.code == SituationObligationScolaire_Code.Pendant:
                                        _ = match_arg_667.value
                                        temp_prise_en_compte_personne_a_charge_7 = False
                                    elif match_arg_667.code == SituationObligationScolaire_Code.Apres:
                                        _ = match_arg_667.value
                                        temp_prise_en_compte_personne_a_charge_7 = True
                                    temp_prise_en_compte_personne_a_charge_8 = (temp_prise_en_compte_personne_a_charge_7 and
                                        (((enfant_4.date_de_naissance +
                                        prestations_familiales_dot_age_l512_3_2_1) >
                                        date_courante_15) and
                                        enfant_4.etudes_apprentissage_stage_formation_pro_impossibilite_travail))
                                elif match_arg_666.code == PersonneACharge_Code.AutrePersonneACharge:
                                    _ = match_arg_666.value
                                    temp_prise_en_compte_personne_a_charge_8 = False
                                match_arg_668 = menage.residence
                                if match_arg_668.code == Collectivite_Code.Guadeloupe:
                                    _ = match_arg_668.value
                                    temp_prise_en_compte_personne_a_charge_9 = True
                                elif match_arg_668.code == Collectivite_Code.Guyane:
                                    _ = match_arg_668.value
                                    temp_prise_en_compte_personne_a_charge_9 = True
                                elif match_arg_668.code == Collectivite_Code.Martinique:
                                    _ = match_arg_668.value
                                    temp_prise_en_compte_personne_a_charge_9 = True
                                elif match_arg_668.code == Collectivite_Code.LaReunion:
                                    _ = match_arg_668.value
                                    temp_prise_en_compte_personne_a_charge_9 = True
                                elif match_arg_668.code == Collectivite_Code.SaintBarthelemy:
                                    _ = match_arg_668.value
                                    temp_prise_en_compte_personne_a_charge_9 = False
                                elif match_arg_668.code == Collectivite_Code.SaintMartin:
                                    _ = match_arg_668.value
                                    temp_prise_en_compte_personne_a_charge_9 = False
                                elif match_arg_668.code == Collectivite_Code.Metropole:
                                    _ = match_arg_668.value
                                    temp_prise_en_compte_personne_a_charge_9 = False
                                elif match_arg_668.code == Collectivite_Code.SaintPierreEtMiquelon:
                                    _ = match_arg_668.value
                                    temp_prise_en_compte_personne_a_charge_9 = False
                                elif match_arg_668.code == Collectivite_Code.Mayotte:
                                    _ = match_arg_668.value
                                    temp_prise_en_compte_personne_a_charge_9 = True
                                if (temp_prise_en_compte_personne_a_charge_9 and
                                    temp_prise_en_compte_personne_a_charge_8):
                                    return False
                                else:
                                    raise EmptyError
                        except EmptyError:
                            match_arg_669 = personne_a_charge_1
                            if match_arg_669.code == PersonneACharge_Code.EnfantACharge:
                                enfant_5 = match_arg_669.value
                                match_arg_670 = enfant_5.nationalite
                                if match_arg_670.code == Nationalite_Code.Francaise:
                                    _ = match_arg_670.value
                                    temp_prise_en_compte_personne_a_charge_10 = False
                                elif match_arg_670.code == Nationalite_Code.Etrangere:
                                    conditions_2 = match_arg_670.value
                                    temp_prise_en_compte_personne_a_charge_10 = not conditions_2.satisfait_conditions_l512_2_code_securite_sociale
                            elif match_arg_669.code == PersonneACharge_Code.AutrePersonneACharge:
                                _ = match_arg_669.value
                                temp_prise_en_compte_personne_a_charge_10 = False
                            if (septieme_alinea_l823_1_applicable and
                                temp_prise_en_compte_personne_a_charge_10):
                                return False
                            else:
                                raise EmptyError
                    except EmptyError:
                        match_arg_671 = personne_a_charge_1
                        if match_arg_671.code == PersonneACharge_Code.EnfantACharge:
                            enfant_6 = match_arg_671.value
                            match_arg_672 = enfant_6.situation_garde_alternee
                            if match_arg_672.code == SituationGardeAlternee_Code.PasDeGardeAlternee:
                                _ = match_arg_672.value
                                temp_prise_en_compte_personne_a_charge_11 = PriseEnChargeEnfant(PriseEnChargeEnfant_Code.EffectiveEtPermanente,
                                    Unit())
                            elif match_arg_672.code == SituationGardeAlternee_Code.GardeAlterneeCoefficientPriseEnCharge:
                                _ = match_arg_672.value
                                temp_prise_en_compte_personne_a_charge_11 = PriseEnChargeEnfant(PriseEnChargeEnfant_Code.GardeAlterneePartageAllocations,
                                    Unit())
                            temp_prise_en_compte_personne_a_charge_12 = prestations_familiales_dot_droit_ouvert(
                                EnfantPrestationsFamiliales(identifiant = enfant_6.identifiant,
                                obligation_scolaire = enfant_6.obligation_scolaire,
                                remuneration_mensuelle = enfant_6.remuneration_mensuelle,
                                date_de_naissance = enfant_6.date_de_naissance,
                                prise_en_charge = temp_prise_en_compte_personne_a_charge_11,
                                a_deja_ouvert_droit_aux_allocations_familiales = enfant_6.a_deja_ouvert_droit_aux_allocations_familiales,
                                beneficie_titre_personnel_aide_personnelle_logement = enfant_6.beneficie_titre_personnel_aide_personnelle_logement))
                        elif match_arg_671.code == PersonneACharge_Code.AutrePersonneACharge:
                            parent_1 = match_arg_671.value
                            temp_prise_en_compte_personne_a_charge_12 = False
                        if temp_prise_en_compte_personne_a_charge_12:
                            return True
                        else:
                            raise EmptyError
                def temp_prise_en_compte_personne_a_charge_13(_:Unit):
                    try:
                        match_arg_673 = personne_a_charge_1
                        if match_arg_673.code == PersonneACharge_Code.EnfantACharge:
                            enfant_7 = match_arg_673.value
                            temp_prise_en_compte_personne_a_charge_14 = False
                        elif match_arg_673.code == PersonneACharge_Code.AutrePersonneACharge:
                            parent_2 = match_arg_673.value
                            temp_prise_en_compte_personne_a_charge_14 = (parent_2.incapacite_80_pourcent_ou_restriction_emploi and
                                (parent_2.ressources <=
                                (plafond_individuel_l815_9_secu *
                                decimal_of_string("1.25"))))
                        if temp_prise_en_compte_personne_a_charge_14:
                            return True
                        else:
                            raise EmptyError
                    except EmptyError:
                        if condition_2_r823_4(personne_a_charge_1):
                            return True
                        else:
                            raise EmptyError
                return handle_default(SourcePosition(filename="examples/aides_logement/prologue.catala_fr",
                                      start_line=321, start_column=11,
                                      end_line=321, end_column=44,
                                      law_headings=["Éligibilité aux aides personnelles au logement",
                                      "Déclarations des champs d'application",
                                      "Prologue : aides au logement"]), [temp_prise_en_compte_personne_a_charge_13,
                                      temp_prise_en_compte_personne_a_charge_3],
                                      temp_prise_en_compte_personne_a_charge_2,
                                      temp_prise_en_compte_personne_a_charge_1)
            except EmptyError:
                raise NoValueProvided(SourcePosition(filename="examples/aides_logement/prologue.catala_fr",
                                                     start_line=321,
                                                     start_column=11,
                                                     end_line=321,
                                                     end_column=44,
                                                     law_headings=["Éligibilité aux aides personnelles au logement",
                                                     "Déclarations des champs d'application",
                                                     "Prologue : aides au logement"]))
    except EmptyError:
        temp_prise_en_compte_personne_a_charge = dead_value
        raise NoValueProvided(SourcePosition(filename="examples/aides_logement/prologue.catala_fr",
                                             start_line=321, start_column=11,
                                             end_line=321, end_column=44,
                                             law_headings=["Éligibilité aux aides personnelles au logement",
                                             "Déclarations des champs d'application",
                                             "Prologue : aides au logement"]))
    prise_en_compte_personne_a_charge = temp_prise_en_compte_personne_a_charge
    try:
        def temp_personnes_a_charge_prises_en_compte(personne_a_charge_2:PersonneACharge):
            return prise_en_compte_personne_a_charge(personne_a_charge_2)
        temp_personnes_a_charge_prises_en_compte_1 = list_filter(temp_personnes_a_charge_prises_en_compte,
            menage.personnes_a_charge)
    except EmptyError:
        temp_personnes_a_charge_prises_en_compte_1 = dead_value
        raise NoValueProvided(SourcePosition(filename="examples/aides_logement/prologue.catala_fr",
                                             start_line=323, start_column=11,
                                             end_line=323, end_column=46,
                                             law_headings=["Éligibilité aux aides personnelles au logement",
                                             "Déclarations des champs d'application",
                                             "Prologue : aides au logement"]))
    personnes_a_charge_prises_en_compte = temp_personnes_a_charge_prises_en_compte_1
    try:
        def temp_coefficents_enfants_garde_alternee_pris_en_compte(personne_a_charge_3:PersonneACharge):
            match_arg_674 = personne_a_charge_3
            if match_arg_674.code == PersonneACharge_Code.EnfantACharge:
                enfant_8 = match_arg_674.value
                match_arg_675 = enfant_8.situation_garde_alternee
                if match_arg_675.code == SituationGardeAlternee_Code.PasDeGardeAlternee:
                    _ = match_arg_675.value
                    return False
                elif match_arg_675.code == SituationGardeAlternee_Code.GardeAlterneeCoefficientPriseEnCharge:
                    _ = match_arg_675.value
                    return True
            elif match_arg_674.code == PersonneACharge_Code.AutrePersonneACharge:
                _ = match_arg_674.value
                return False
        def temp_coefficents_enfants_garde_alternee_pris_en_compte_1(personne_a_charge_4:PersonneACharge):
            match_arg_676 = personne_a_charge_4
            if match_arg_676.code == PersonneACharge_Code.EnfantACharge:
                enfant_9 = match_arg_676.value
                match_arg_677 = enfant_9.situation_garde_alternee
                if match_arg_677.code == SituationGardeAlternee_Code.PasDeGardeAlternee:
                    _ = match_arg_677.value
                    return decimal_of_string("0.")
                elif match_arg_677.code == SituationGardeAlternee_Code.GardeAlterneeCoefficientPriseEnCharge:
                    coeff = match_arg_677.value
                    return coeff
            elif match_arg_676.code == PersonneACharge_Code.AutrePersonneACharge:
                _ = match_arg_676.value
                return decimal_of_string("0.")
        temp_coefficents_enfants_garde_alternee_pris_en_compte_2 = list_map(temp_coefficents_enfants_garde_alternee_pris_en_compte_1,
            list_filter(temp_coefficents_enfants_garde_alternee_pris_en_compte,
            personnes_a_charge_prises_en_compte))
    except EmptyError:
        temp_coefficents_enfants_garde_alternee_pris_en_compte_2 = dead_value
        raise NoValueProvided(SourcePosition(filename="examples/aides_logement/prologue.catala_fr",
                                             start_line=344, start_column=12,
                                             end_line=344, end_column=61,
                                             law_headings=["Éligibilité aux aides personnelles au logement",
                                             "Déclarations des champs d'application",
                                             "Prologue : aides au logement"]))
    coefficents_enfants_garde_alternee_pris_en_compte = temp_coefficents_enfants_garde_alternee_pris_en_compte_2
    try:
        temp_nombre_personnes_a_charge_prises_en_compte = list_length(personnes_a_charge_prises_en_compte)
    except EmptyError:
        temp_nombre_personnes_a_charge_prises_en_compte = dead_value
        raise NoValueProvided(SourcePosition(filename="examples/aides_logement/prologue.catala_fr",
                                             start_line=343, start_column=12,
                                             end_line=343, end_column=54,
                                             law_headings=["Éligibilité aux aides personnelles au logement",
                                             "Déclarations des champs d'application",
                                             "Prologue : aides au logement"]))
    nombre_personnes_a_charge_prises_en_compte = temp_nombre_personnes_a_charge_prises_en_compte
    try:
        temp___16 = (seuil_l822_3_parts_usufruit < decimal_of_string("0.2"))
    except EmptyError:
        temp___16 = dead_value
        raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_legislatif.catala_fr",
                                             start_line=200, start_column=13,
                                             end_line=200, end_column=47,
                                             law_headings=["Article L822-3",
                                             "Chapitre II : Conditions générales d'attribution",
                                             "Titre II : Dispositions communes aux aides personnelles au logement",
                                             "Livre VIII : Aides personnelles au logement",
                                             "Partie législative",
                                             "Code de la construction et de l'habitation"]))
    if not (temp___16):
        raise AssertionFailure(SourcePosition(filename="examples/aides_logement/code_construction_legislatif.catala_fr",
                                              start_line=200,
                                              start_column=13, end_line=200,
                                              end_column=47,
                                              law_headings=["Article L822-3",
                                                           "Chapitre II : Conditions générales d'attribution",
                                                           "Titre II : Dispositions communes aux aides personnelles au logement",
                                                           "Livre VIII : Aides personnelles au logement",
                                                           "Partie législative",
                                                           "Code de la construction et de l'habitation"]))
    try:
        temp___17 = (seuil_l822_3_parts_propriete < decimal_of_string("0.2"))
    except EmptyError:
        temp___17 = dead_value
        raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_legislatif.catala_fr",
                                             start_line=199, start_column=13,
                                             end_line=199, end_column=48,
                                             law_headings=["Article L822-3",
                                             "Chapitre II : Conditions générales d'attribution",
                                             "Titre II : Dispositions communes aux aides personnelles au logement",
                                             "Livre VIII : Aides personnelles au logement",
                                             "Partie législative",
                                             "Code de la construction et de l'habitation"]))
    if not (temp___17):
        raise AssertionFailure(SourcePosition(filename="examples/aides_logement/code_construction_legislatif.catala_fr",
                                              start_line=199,
                                              start_column=13, end_line=199,
                                              end_column=48,
                                              law_headings=["Article L822-3",
                                                           "Chapitre II : Conditions générales d'attribution",
                                                           "Titre II : Dispositions communes aux aides personnelles au logement",
                                                           "Livre VIII : Aides personnelles au logement",
                                                           "Partie législative",
                                                           "Code de la construction et de l'habitation"]))
    try:
        temp___18 = (date_courante_15 >= date_of_numbers(2018,4,1))
    except EmptyError:
        temp___18 = dead_value
        raise NoValueProvided(SourcePosition(filename="examples/aides_logement/prologue.catala_fr",
                                             start_line=378, start_column=13,
                                             end_line=378, end_column=42,
                                             law_headings=["Éligibilité aux aides personnelles au logement",
                                             "Déclarations des champs d'application",
                                             "Prologue : aides au logement"]))
    if not (temp___18):
        raise AssertionFailure(SourcePosition(filename="examples/aides_logement/prologue.catala_fr",
                                              start_line=378,
                                              start_column=13, end_line=378,
                                              end_column=42,
                                              law_headings=["Éligibilité aux aides personnelles au logement",
                                                           "Déclarations des champs d'application",
                                                           "Prologue : aides au logement"]))
    return EligibiliteAidesPersonnelleLogement(date_courante = date_courante_15,
        eligibilite = eligibilite,
        nombre_personnes_a_charge_prises_en_compte = nombre_personnes_a_charge_prises_en_compte,
        coefficents_enfants_garde_alternee_pris_en_compte = coefficents_enfants_garde_alternee_pris_en_compte,
        condition_2_r823_4 = condition_2_r823_4)

def calcul_allocation_logement(calcul_allocation_logement_in:CalculAllocationLogementIn):
    mode_occupation_3 = calcul_allocation_logement_in.mode_occupation_in
    ressources_menage_sans_arrondi_1 = calcul_allocation_logement_in.ressources_menage_sans_arrondi_in
    situation_familiale_2 = calcul_allocation_logement_in.situation_familiale_in
    nombre_personnes_a_charge_12 = calcul_allocation_logement_in.nombre_personnes_a_charge_in
    zone_7 = calcul_allocation_logement_in.zone_in
    date_courante_16 = calcul_allocation_logement_in.date_courante_in
    type_aide_3 = calcul_allocation_logement_in.type_aide_in
    residence_9 = calcul_allocation_logement_in.residence_in
    try:
        match_arg_678 = mode_occupation_3
        if match_arg_678.code == ModeOccupation_Code.Locataire:
            location_3 = match_arg_678.value
            temp_categorie_calcul_apl_1 = CategorieCalculAPL(CategorieCalculAPL_Code.Location,
                location_3)
        elif match_arg_678.code == ModeOccupation_Code.ResidentLogementFoyer:
            logementfoyer_1 = match_arg_678.value
            temp_categorie_calcul_apl_1 = CategorieCalculAPL(CategorieCalculAPL_Code.LogementFoyer,
                logementfoyer_1)
        elif match_arg_678.code == ModeOccupation_Code.AccessionProprieteLocalUsageExclusifHabitation:
            proprietaire_3 = match_arg_678.value
            temp_categorie_calcul_apl_1 = CategorieCalculAPL(CategorieCalculAPL_Code.AccessionPropriete,
                proprietaire_3)
        elif match_arg_678.code == ModeOccupation_Code.SousLocataire:
            location_4 = match_arg_678.value
            temp_categorie_calcul_apl_1 = CategorieCalculAPL(CategorieCalculAPL_Code.Location,
                location_4)
        elif match_arg_678.code == ModeOccupation_Code.LocationAccession:
            proprietaire_4 = match_arg_678.value
            temp_categorie_calcul_apl_1 = CategorieCalculAPL(CategorieCalculAPL_Code.AccessionPropriete,
                proprietaire_4)
    except EmptyError:
        temp_categorie_calcul_apl_1 = dead_value
        raise NoValueProvided(SourcePosition(filename="examples/aides_logement/prologue.catala_fr",
                                             start_line=1104,
                                             start_column=11, end_line=1104,
                                             end_column=31,
                                             law_headings=["Tous secteurs",
                                             "Secteur logement-foyer",
                                             "Calcul du montant de l'allocation logement",
                                             "Prologue : aides au logement"]))
    categorie_calcul_apl_1 = temp_categorie_calcul_apl_1
    try:
        temp_ressources_menage_avec_arrondi_1 = arrondi_centaine_superieure(
            ressources_menage_sans_arrondi_1)
    except EmptyError:
        temp_ressources_menage_avec_arrondi_1 = dead_value
        raise NoValueProvided(SourcePosition(filename="examples/aides_logement/prologue.catala_fr",
                                             start_line=1096,
                                             start_column=10, end_line=1096,
                                             end_column=22,
                                             law_headings=["Tous secteurs",
                                             "Secteur logement-foyer",
                                             "Calcul du montant de l'allocation logement",
                                             "Prologue : aides au logement"]))
    ressources_menage_avec_arrondi_1 = temp_ressources_menage_avec_arrondi_1
    try:
        match_arg_679 = situation_familiale_2
        if match_arg_679.code == SituationFamiliale_Code.Celibataire:
            _ = match_arg_679.value
            temp_situation_familiale_calcul_apl_1 = SituationFamilialeCalculAPL(SituationFamilialeCalculAPL_Code.PersonneSeule,
                Unit())
        elif match_arg_679.code == SituationFamiliale_Code.Maries:
            _ = match_arg_679.value
            temp_situation_familiale_calcul_apl_1 = SituationFamilialeCalculAPL(SituationFamilialeCalculAPL_Code.Couple,
                Unit())
        elif match_arg_679.code == SituationFamiliale_Code.Pacses:
            _ = match_arg_679.value
            temp_situation_familiale_calcul_apl_1 = SituationFamilialeCalculAPL(SituationFamilialeCalculAPL_Code.Couple,
                Unit())
        elif match_arg_679.code == SituationFamiliale_Code.Concubins:
            _ = match_arg_679.value
            temp_situation_familiale_calcul_apl_1 = SituationFamilialeCalculAPL(SituationFamilialeCalculAPL_Code.Couple,
                Unit())
        elif match_arg_679.code == SituationFamiliale_Code.CelibataireSepareDeFait:
            _ = match_arg_679.value
            temp_situation_familiale_calcul_apl_1 = SituationFamilialeCalculAPL(SituationFamilialeCalculAPL_Code.PersonneSeule,
                Unit())
        elif match_arg_679.code == SituationFamiliale_Code.ConcubinageDontSepareDeFait:
            _ = match_arg_679.value
            temp_situation_familiale_calcul_apl_1 = SituationFamilialeCalculAPL(SituationFamilialeCalculAPL_Code.Couple,
                Unit())
    except EmptyError:
        temp_situation_familiale_calcul_apl_1 = dead_value
        raise NoValueProvided(SourcePosition(filename="examples/aides_logement/prologue.catala_fr",
                                             start_line=1105,
                                             start_column=11, end_line=1105,
                                             end_column=41,
                                             law_headings=["Tous secteurs",
                                             "Secteur logement-foyer",
                                             "Calcul du montant de l'allocation logement",
                                             "Prologue : aides au logement"]))
    situation_familiale_calcul_apl_9 = temp_situation_familiale_calcul_apl_1
    try:
        try:
            match_arg_680 = residence_9
            if match_arg_680.code == Collectivite_Code.Guadeloupe:
                _ = match_arg_680.value
                temp_sous_calcul_traitement_759 = False
            elif match_arg_680.code == Collectivite_Code.Guyane:
                _ = match_arg_680.value
                temp_sous_calcul_traitement_759 = False
            elif match_arg_680.code == Collectivite_Code.Martinique:
                _ = match_arg_680.value
                temp_sous_calcul_traitement_759 = False
            elif match_arg_680.code == Collectivite_Code.LaReunion:
                _ = match_arg_680.value
                temp_sous_calcul_traitement_759 = False
            elif match_arg_680.code == Collectivite_Code.SaintBarthelemy:
                _ = match_arg_680.value
                temp_sous_calcul_traitement_759 = False
            elif match_arg_680.code == Collectivite_Code.SaintMartin:
                _ = match_arg_680.value
                temp_sous_calcul_traitement_759 = False
            elif match_arg_680.code == Collectivite_Code.Metropole:
                _ = match_arg_680.value
                temp_sous_calcul_traitement_759 = False
            elif match_arg_680.code == Collectivite_Code.SaintPierreEtMiquelon:
                _ = match_arg_680.value
                temp_sous_calcul_traitement_759 = True
            elif match_arg_680.code == Collectivite_Code.Mayotte:
                _ = match_arg_680.value
                temp_sous_calcul_traitement_759 = False
            if temp_sous_calcul_traitement_759:
                match_arg_681 = categorie_calcul_apl_1
                if match_arg_681.code == CategorieCalculAPL_Code.Location:
                    _ = match_arg_681.value
                    temp_sous_calcul_traitement_760 = TraitementFormuleAideFinale(aide_finale_formule = money_of_cents_string("0"),
                        traitement_aide_finale = traitement_nul_tout_le_temps)
                elif match_arg_681.code == CategorieCalculAPL_Code.AccessionPropriete:
                    _ = match_arg_681.value
                    temp_sous_calcul_traitement_760 = TraitementFormuleAideFinale(aide_finale_formule = money_of_cents_string("0"),
                        traitement_aide_finale = traitement_nul_tout_le_temps)
                elif match_arg_681.code == CategorieCalculAPL_Code.LogementFoyer:
                    logement_foyer__2 = match_arg_681.value
                    def temp_sous_calcul_traitement_761(param0_8:Money):
                        try:
                            temp_sous_calcul_traitement_762 = logement_foyer__2.redevance
                        except EmptyError:
                            temp_sous_calcul_traitement_762 = dead_value
                            raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                                 start_line=6422,
                                                                 start_column=31,
                                                                 end_line=6422,
                                                                 end_column=56,
                                                                 law_headings=["Article D863-7",
                                                                 "Sous-section III : Modalités de liquidation et de versement",
                                                                 "Section II : Dispositions communes aux aides personnelles au logement",
                                                                 "Chapitre III : Saint-Pierre-et-Miquelon",
                                                                 "Livre VIII : Aides personnelles au logement",
                                                                 "Partie réglementaire",
                                                                 "Code de la construction et de l'habitation"]))
                        try:
                            temp_sous_calcul_traitement_763 = ressources_menage_avec_arrondi_1
                        except EmptyError:
                            temp_sous_calcul_traitement_763 = dead_value
                            raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                                 start_line=6416,
                                                                 start_column=43,
                                                                 end_line=6416,
                                                                 end_column=60,
                                                                 law_headings=["Article D863-7",
                                                                 "Sous-section III : Modalités de liquidation et de versement",
                                                                 "Section II : Dispositions communes aux aides personnelles au logement",
                                                                 "Chapitre III : Saint-Pierre-et-Miquelon",
                                                                 "Livre VIII : Aides personnelles au logement",
                                                                 "Partie réglementaire",
                                                                 "Code de la construction et de l'habitation"]))
                        try:
                            temp_sous_calcul_traitement_764 = logement_foyer__2.beneficiaire_aide_adulte_ou_enfant_handicapes
                        except EmptyError:
                            temp_sous_calcul_traitement_764 = dead_value
                            raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                                 start_line=6424,
                                                                 start_column=15,
                                                                 end_line=6424,
                                                                 end_column=76,
                                                                 law_headings=["Article D863-7",
                                                                 "Sous-section III : Modalités de liquidation et de versement",
                                                                 "Section II : Dispositions communes aux aides personnelles au logement",
                                                                 "Chapitre III : Saint-Pierre-et-Miquelon",
                                                                 "Livre VIII : Aides personnelles au logement",
                                                                 "Partie réglementaire",
                                                                 "Code de la construction et de l'habitation"]))
                        try:
                            temp_sous_calcul_traitement_765 = date_courante_16
                        except EmptyError:
                            temp_sous_calcul_traitement_765 = dead_value
                            raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                                 start_line=6419,
                                                                 start_column=29,
                                                                 end_line=6419,
                                                                 end_column=42,
                                                                 law_headings=["Article D863-7",
                                                                 "Sous-section III : Modalités de liquidation et de versement",
                                                                 "Section II : Dispositions communes aux aides personnelles au logement",
                                                                 "Chapitre III : Saint-Pierre-et-Miquelon",
                                                                 "Livre VIII : Aides personnelles au logement",
                                                                 "Partie réglementaire",
                                                                 "Code de la construction et de l'habitation"]))
                        try:
                            temp_sous_calcul_traitement_766 = nombre_personnes_a_charge_12
                        except EmptyError:
                            temp_sous_calcul_traitement_766 = dead_value
                            raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                                 start_line=6417,
                                                                 start_column=41,
                                                                 end_line=6417,
                                                                 end_column=66,
                                                                 law_headings=["Article D863-7",
                                                                 "Sous-section III : Modalités de liquidation et de versement",
                                                                 "Section II : Dispositions communes aux aides personnelles au logement",
                                                                 "Chapitre III : Saint-Pierre-et-Miquelon",
                                                                 "Livre VIII : Aides personnelles au logement",
                                                                 "Partie réglementaire",
                                                                 "Code de la construction et de l'habitation"]))
                        try:
                            temp_sous_calcul_traitement_767 = situation_familiale_calcul_apl_9
                        except EmptyError:
                            temp_sous_calcul_traitement_767 = dead_value
                            raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                                 start_line=6420,
                                                                 start_column=46,
                                                                 end_line=6420,
                                                                 end_column=76,
                                                                 law_headings=["Article D863-7",
                                                                 "Sous-section III : Modalités de liquidation et de versement",
                                                                 "Section II : Dispositions communes aux aides personnelles au logement",
                                                                 "Chapitre III : Saint-Pierre-et-Miquelon",
                                                                 "Livre VIII : Aides personnelles au logement",
                                                                 "Partie réglementaire",
                                                                 "Code de la construction et de l'habitation"]))
                        try:
                            temp_sous_calcul_traitement_768 = zone_7
                        except EmptyError:
                            temp_sous_calcul_traitement_768 = dead_value
                            raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                                 start_line=6418,
                                                                 start_column=20,
                                                                 end_line=6418,
                                                                 end_column=24,
                                                                 law_headings=["Article D863-7",
                                                                 "Sous-section III : Modalités de liquidation et de versement",
                                                                 "Section II : Dispositions communes aux aides personnelles au logement",
                                                                 "Chapitre III : Saint-Pierre-et-Miquelon",
                                                                 "Livre VIII : Aides personnelles au logement",
                                                                 "Partie réglementaire",
                                                                 "Code de la construction et de l'habitation"]))
                        try:
                            temp_sous_calcul_traitement_769 = True
                        except EmptyError:
                            temp_sous_calcul_traitement_769 = dead_value
                            raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                                 start_line=6428,
                                                                 start_column=36,
                                                                 end_line=6428,
                                                                 end_column=40,
                                                                 law_headings=["Article D863-7",
                                                                 "Sous-section III : Modalités de liquidation et de versement",
                                                                 "Section II : Dispositions communes aux aides personnelles au logement",
                                                                 "Chapitre III : Saint-Pierre-et-Miquelon",
                                                                 "Livre VIII : Aides personnelles au logement",
                                                                 "Partie réglementaire",
                                                                 "Code de la construction et de l'habitation"]))
                        try:
                            temp_sous_calcul_traitement_770 = False
                        except EmptyError:
                            temp_sous_calcul_traitement_770 = dead_value
                            raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                                 start_line=6435,
                                                                 start_column=72,
                                                                 end_line=6435,
                                                                 end_column=76,
                                                                 law_headings=["Article D863-7",
                                                                 "Sous-section III : Modalités de liquidation et de versement",
                                                                 "Section II : Dispositions communes aux aides personnelles au logement",
                                                                 "Chapitre III : Saint-Pierre-et-Miquelon",
                                                                 "Livre VIII : Aides personnelles au logement",
                                                                 "Partie réglementaire",
                                                                 "Code de la construction et de l'habitation"]))
                        try:
                            temp_sous_calcul_traitement_771 = type_aide_3
                        except EmptyError:
                            temp_sous_calcul_traitement_771 = dead_value
                            raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                                 start_line=6436,
                                                                 start_column=25,
                                                                 end_line=6436,
                                                                 end_column=34,
                                                                 law_headings=["Article D863-7",
                                                                 "Sous-section III : Modalités de liquidation et de versement",
                                                                 "Section II : Dispositions communes aux aides personnelles au logement",
                                                                 "Chapitre III : Saint-Pierre-et-Miquelon",
                                                                 "Livre VIII : Aides personnelles au logement",
                                                                 "Partie réglementaire",
                                                                 "Code de la construction et de l'habitation"]))
                        try:
                            temp_sous_calcul_traitement_772 = False
                        except EmptyError:
                            temp_sous_calcul_traitement_772 = dead_value
                            raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                                 start_line=6432,
                                                                 start_column=26,
                                                                 end_line=6432,
                                                                 end_column=30,
                                                                 law_headings=["Article D863-7",
                                                                 "Sous-section III : Modalités de liquidation et de versement",
                                                                 "Section II : Dispositions communes aux aides personnelles au logement",
                                                                 "Chapitre III : Saint-Pierre-et-Miquelon",
                                                                 "Livre VIII : Aides personnelles au logement",
                                                                 "Partie réglementaire",
                                                                 "Code de la construction et de l'habitation"]))
                        try:
                            temp_sous_calcul_traitement_773 = money_of_cents_string("0")
                        except EmptyError:
                            temp_sous_calcul_traitement_773 = dead_value
                            raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                                 start_line=6439,
                                                                 start_column=42,
                                                                 end_line=6439,
                                                                 end_column=45,
                                                                 law_headings=["Article D863-7",
                                                                 "Sous-section III : Modalités de liquidation et de versement",
                                                                 "Section II : Dispositions communes aux aides personnelles au logement",
                                                                 "Chapitre III : Saint-Pierre-et-Miquelon",
                                                                 "Livre VIII : Aides personnelles au logement",
                                                                 "Partie réglementaire",
                                                                 "Code de la construction et de l'habitation"]))
                        try:
                            temp_sous_calcul_traitement_774 = logement_foyer__2.logement_meuble_d842_2
                        except EmptyError:
                            temp_sous_calcul_traitement_774 = dead_value
                            raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                                 start_line=6440,
                                                                 start_column=38,
                                                                 end_line=6440,
                                                                 end_column=76,
                                                                 law_headings=["Article D863-7",
                                                                 "Sous-section III : Modalités de liquidation et de versement",
                                                                 "Section II : Dispositions communes aux aides personnelles au logement",
                                                                 "Chapitre III : Saint-Pierre-et-Miquelon",
                                                                 "Livre VIII : Aides personnelles au logement",
                                                                 "Partie réglementaire",
                                                                 "Code de la construction et de l'habitation"]))
                        try:
                            temp_sous_calcul_traitement_775 = residence_9
                        except EmptyError:
                            temp_sous_calcul_traitement_775 = dead_value
                            raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                                 start_line=6415,
                                                                 start_column=25,
                                                                 end_line=6415,
                                                                 end_column=34,
                                                                 law_headings=["Article D863-7",
                                                                 "Sous-section III : Modalités de liquidation et de versement",
                                                                 "Section II : Dispositions communes aux aides personnelles au logement",
                                                                 "Chapitre III : Saint-Pierre-et-Miquelon",
                                                                 "Livre VIII : Aides personnelles au logement",
                                                                 "Partie réglementaire",
                                                                 "Code de la construction et de l'habitation"]))
                        try:
                            temp_sous_calcul_traitement_776 = ChangementLogementD8424(ChangementLogementD8424_Code.PasDeChangement,
                                Unit())
                        except EmptyError:
                            temp_sous_calcul_traitement_776 = dead_value
                            raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                                 start_line=6441,
                                                                 start_column=42,
                                                                 end_line=6441,
                                                                 end_column=57,
                                                                 law_headings=["Article D863-7",
                                                                 "Sous-section III : Modalités de liquidation et de versement",
                                                                 "Section II : Dispositions communes aux aides personnelles au logement",
                                                                 "Chapitre III : Saint-Pierre-et-Miquelon",
                                                                 "Livre VIII : Aides personnelles au logement",
                                                                 "Partie réglementaire",
                                                                 "Code de la construction et de l'habitation"]))
                        return calcul_allocation_logement_locatif(CalculAllocationLogementLocatifIn(loyer_principal_in = temp_sous_calcul_traitement_762,
                                                                  ressources_menage_arrondies_in = temp_sous_calcul_traitement_763,
                                                                  beneficiaire_aide_adulte_ou_enfant_handicapes_in = temp_sous_calcul_traitement_764,
                                                                  date_courante_in = temp_sous_calcul_traitement_765,
                                                                  nombre_personnes_a_charge_in = temp_sous_calcul_traitement_766,
                                                                  situation_familiale_calcul_apl_in = temp_sous_calcul_traitement_767,
                                                                  zone_in = temp_sous_calcul_traitement_768,
                                                                  logement_est_chambre_in = temp_sous_calcul_traitement_769,
                                                                  agees_ou_handicap_adultes_hebergees_onereux_particuliers_in = temp_sous_calcul_traitement_770,
                                                                  type_aide_in = temp_sous_calcul_traitement_771,
                                                                  colocation_in = temp_sous_calcul_traitement_772,
                                                                  reduction_loyer_solidarite_in = temp_sous_calcul_traitement_773,
                                                                  logement_meuble_d842_2_in = temp_sous_calcul_traitement_774,
                                                                  residence_in = temp_sous_calcul_traitement_775,
                                                                  changement_logement_d842_4_in = temp_sous_calcul_traitement_776)).traitement_aide_finale(
                            param0_8)
                    try:
                        temp_sous_calcul_traitement_777 = logement_foyer__2.redevance
                    except EmptyError:
                        temp_sous_calcul_traitement_777 = dead_value
                        raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                             start_line=6422,
                                                             start_column=31,
                                                             end_line=6422,
                                                             end_column=56,
                                                             law_headings=["Article D863-7",
                                                             "Sous-section III : Modalités de liquidation et de versement",
                                                             "Section II : Dispositions communes aux aides personnelles au logement",
                                                             "Chapitre III : Saint-Pierre-et-Miquelon",
                                                             "Livre VIII : Aides personnelles au logement",
                                                             "Partie réglementaire",
                                                             "Code de la construction et de l'habitation"]))
                    try:
                        temp_sous_calcul_traitement_778 = ressources_menage_avec_arrondi_1
                    except EmptyError:
                        temp_sous_calcul_traitement_778 = dead_value
                        raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                             start_line=6416,
                                                             start_column=43,
                                                             end_line=6416,
                                                             end_column=60,
                                                             law_headings=["Article D863-7",
                                                             "Sous-section III : Modalités de liquidation et de versement",
                                                             "Section II : Dispositions communes aux aides personnelles au logement",
                                                             "Chapitre III : Saint-Pierre-et-Miquelon",
                                                             "Livre VIII : Aides personnelles au logement",
                                                             "Partie réglementaire",
                                                             "Code de la construction et de l'habitation"]))
                    try:
                        temp_sous_calcul_traitement_779 = logement_foyer__2.beneficiaire_aide_adulte_ou_enfant_handicapes
                    except EmptyError:
                        temp_sous_calcul_traitement_779 = dead_value
                        raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                             start_line=6424,
                                                             start_column=15,
                                                             end_line=6424,
                                                             end_column=76,
                                                             law_headings=["Article D863-7",
                                                             "Sous-section III : Modalités de liquidation et de versement",
                                                             "Section II : Dispositions communes aux aides personnelles au logement",
                                                             "Chapitre III : Saint-Pierre-et-Miquelon",
                                                             "Livre VIII : Aides personnelles au logement",
                                                             "Partie réglementaire",
                                                             "Code de la construction et de l'habitation"]))
                    try:
                        temp_sous_calcul_traitement_780 = date_courante_16
                    except EmptyError:
                        temp_sous_calcul_traitement_780 = dead_value
                        raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                             start_line=6419,
                                                             start_column=29,
                                                             end_line=6419,
                                                             end_column=42,
                                                             law_headings=["Article D863-7",
                                                             "Sous-section III : Modalités de liquidation et de versement",
                                                             "Section II : Dispositions communes aux aides personnelles au logement",
                                                             "Chapitre III : Saint-Pierre-et-Miquelon",
                                                             "Livre VIII : Aides personnelles au logement",
                                                             "Partie réglementaire",
                                                             "Code de la construction et de l'habitation"]))
                    try:
                        temp_sous_calcul_traitement_781 = nombre_personnes_a_charge_12
                    except EmptyError:
                        temp_sous_calcul_traitement_781 = dead_value
                        raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                             start_line=6417,
                                                             start_column=41,
                                                             end_line=6417,
                                                             end_column=66,
                                                             law_headings=["Article D863-7",
                                                             "Sous-section III : Modalités de liquidation et de versement",
                                                             "Section II : Dispositions communes aux aides personnelles au logement",
                                                             "Chapitre III : Saint-Pierre-et-Miquelon",
                                                             "Livre VIII : Aides personnelles au logement",
                                                             "Partie réglementaire",
                                                             "Code de la construction et de l'habitation"]))
                    try:
                        temp_sous_calcul_traitement_782 = situation_familiale_calcul_apl_9
                    except EmptyError:
                        temp_sous_calcul_traitement_782 = dead_value
                        raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                             start_line=6420,
                                                             start_column=46,
                                                             end_line=6420,
                                                             end_column=76,
                                                             law_headings=["Article D863-7",
                                                             "Sous-section III : Modalités de liquidation et de versement",
                                                             "Section II : Dispositions communes aux aides personnelles au logement",
                                                             "Chapitre III : Saint-Pierre-et-Miquelon",
                                                             "Livre VIII : Aides personnelles au logement",
                                                             "Partie réglementaire",
                                                             "Code de la construction et de l'habitation"]))
                    try:
                        temp_sous_calcul_traitement_783 = zone_7
                    except EmptyError:
                        temp_sous_calcul_traitement_783 = dead_value
                        raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                             start_line=6418,
                                                             start_column=20,
                                                             end_line=6418,
                                                             end_column=24,
                                                             law_headings=["Article D863-7",
                                                             "Sous-section III : Modalités de liquidation et de versement",
                                                             "Section II : Dispositions communes aux aides personnelles au logement",
                                                             "Chapitre III : Saint-Pierre-et-Miquelon",
                                                             "Livre VIII : Aides personnelles au logement",
                                                             "Partie réglementaire",
                                                             "Code de la construction et de l'habitation"]))
                    try:
                        temp_sous_calcul_traitement_784 = True
                    except EmptyError:
                        temp_sous_calcul_traitement_784 = dead_value
                        raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                             start_line=6428,
                                                             start_column=36,
                                                             end_line=6428,
                                                             end_column=40,
                                                             law_headings=["Article D863-7",
                                                             "Sous-section III : Modalités de liquidation et de versement",
                                                             "Section II : Dispositions communes aux aides personnelles au logement",
                                                             "Chapitre III : Saint-Pierre-et-Miquelon",
                                                             "Livre VIII : Aides personnelles au logement",
                                                             "Partie réglementaire",
                                                             "Code de la construction et de l'habitation"]))
                    try:
                        temp_sous_calcul_traitement_785 = False
                    except EmptyError:
                        temp_sous_calcul_traitement_785 = dead_value
                        raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                             start_line=6435,
                                                             start_column=72,
                                                             end_line=6435,
                                                             end_column=76,
                                                             law_headings=["Article D863-7",
                                                             "Sous-section III : Modalités de liquidation et de versement",
                                                             "Section II : Dispositions communes aux aides personnelles au logement",
                                                             "Chapitre III : Saint-Pierre-et-Miquelon",
                                                             "Livre VIII : Aides personnelles au logement",
                                                             "Partie réglementaire",
                                                             "Code de la construction et de l'habitation"]))
                    try:
                        temp_sous_calcul_traitement_786 = type_aide_3
                    except EmptyError:
                        temp_sous_calcul_traitement_786 = dead_value
                        raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                             start_line=6436,
                                                             start_column=25,
                                                             end_line=6436,
                                                             end_column=34,
                                                             law_headings=["Article D863-7",
                                                             "Sous-section III : Modalités de liquidation et de versement",
                                                             "Section II : Dispositions communes aux aides personnelles au logement",
                                                             "Chapitre III : Saint-Pierre-et-Miquelon",
                                                             "Livre VIII : Aides personnelles au logement",
                                                             "Partie réglementaire",
                                                             "Code de la construction et de l'habitation"]))
                    try:
                        temp_sous_calcul_traitement_787 = False
                    except EmptyError:
                        temp_sous_calcul_traitement_787 = dead_value
                        raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                             start_line=6432,
                                                             start_column=26,
                                                             end_line=6432,
                                                             end_column=30,
                                                             law_headings=["Article D863-7",
                                                             "Sous-section III : Modalités de liquidation et de versement",
                                                             "Section II : Dispositions communes aux aides personnelles au logement",
                                                             "Chapitre III : Saint-Pierre-et-Miquelon",
                                                             "Livre VIII : Aides personnelles au logement",
                                                             "Partie réglementaire",
                                                             "Code de la construction et de l'habitation"]))
                    try:
                        temp_sous_calcul_traitement_788 = money_of_cents_string("0")
                    except EmptyError:
                        temp_sous_calcul_traitement_788 = dead_value
                        raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                             start_line=6439,
                                                             start_column=42,
                                                             end_line=6439,
                                                             end_column=45,
                                                             law_headings=["Article D863-7",
                                                             "Sous-section III : Modalités de liquidation et de versement",
                                                             "Section II : Dispositions communes aux aides personnelles au logement",
                                                             "Chapitre III : Saint-Pierre-et-Miquelon",
                                                             "Livre VIII : Aides personnelles au logement",
                                                             "Partie réglementaire",
                                                             "Code de la construction et de l'habitation"]))
                    try:
                        temp_sous_calcul_traitement_789 = logement_foyer__2.logement_meuble_d842_2
                    except EmptyError:
                        temp_sous_calcul_traitement_789 = dead_value
                        raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                             start_line=6440,
                                                             start_column=38,
                                                             end_line=6440,
                                                             end_column=76,
                                                             law_headings=["Article D863-7",
                                                             "Sous-section III : Modalités de liquidation et de versement",
                                                             "Section II : Dispositions communes aux aides personnelles au logement",
                                                             "Chapitre III : Saint-Pierre-et-Miquelon",
                                                             "Livre VIII : Aides personnelles au logement",
                                                             "Partie réglementaire",
                                                             "Code de la construction et de l'habitation"]))
                    try:
                        temp_sous_calcul_traitement_790 = residence_9
                    except EmptyError:
                        temp_sous_calcul_traitement_790 = dead_value
                        raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                             start_line=6415,
                                                             start_column=25,
                                                             end_line=6415,
                                                             end_column=34,
                                                             law_headings=["Article D863-7",
                                                             "Sous-section III : Modalités de liquidation et de versement",
                                                             "Section II : Dispositions communes aux aides personnelles au logement",
                                                             "Chapitre III : Saint-Pierre-et-Miquelon",
                                                             "Livre VIII : Aides personnelles au logement",
                                                             "Partie réglementaire",
                                                             "Code de la construction et de l'habitation"]))
                    try:
                        temp_sous_calcul_traitement_791 = ChangementLogementD8424(ChangementLogementD8424_Code.PasDeChangement,
                            Unit())
                    except EmptyError:
                        temp_sous_calcul_traitement_791 = dead_value
                        raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                             start_line=6441,
                                                             start_column=42,
                                                             end_line=6441,
                                                             end_column=57,
                                                             law_headings=["Article D863-7",
                                                             "Sous-section III : Modalités de liquidation et de versement",
                                                             "Section II : Dispositions communes aux aides personnelles au logement",
                                                             "Chapitre III : Saint-Pierre-et-Miquelon",
                                                             "Livre VIII : Aides personnelles au logement",
                                                             "Partie réglementaire",
                                                             "Code de la construction et de l'habitation"]))
                    def temp_sous_calcul_traitement_792(param0_9:Money):
                        try:
                            temp_sous_calcul_traitement_793 = logement_foyer__2.redevance
                        except EmptyError:
                            temp_sous_calcul_traitement_793 = dead_value
                            raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                                 start_line=6422,
                                                                 start_column=31,
                                                                 end_line=6422,
                                                                 end_column=56,
                                                                 law_headings=["Article D863-7",
                                                                 "Sous-section III : Modalités de liquidation et de versement",
                                                                 "Section II : Dispositions communes aux aides personnelles au logement",
                                                                 "Chapitre III : Saint-Pierre-et-Miquelon",
                                                                 "Livre VIII : Aides personnelles au logement",
                                                                 "Partie réglementaire",
                                                                 "Code de la construction et de l'habitation"]))
                        try:
                            temp_sous_calcul_traitement_794 = ressources_menage_avec_arrondi_1
                        except EmptyError:
                            temp_sous_calcul_traitement_794 = dead_value
                            raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                                 start_line=6416,
                                                                 start_column=43,
                                                                 end_line=6416,
                                                                 end_column=60,
                                                                 law_headings=["Article D863-7",
                                                                 "Sous-section III : Modalités de liquidation et de versement",
                                                                 "Section II : Dispositions communes aux aides personnelles au logement",
                                                                 "Chapitre III : Saint-Pierre-et-Miquelon",
                                                                 "Livre VIII : Aides personnelles au logement",
                                                                 "Partie réglementaire",
                                                                 "Code de la construction et de l'habitation"]))
                        try:
                            temp_sous_calcul_traitement_795 = logement_foyer__2.beneficiaire_aide_adulte_ou_enfant_handicapes
                        except EmptyError:
                            temp_sous_calcul_traitement_795 = dead_value
                            raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                                 start_line=6424,
                                                                 start_column=15,
                                                                 end_line=6424,
                                                                 end_column=76,
                                                                 law_headings=["Article D863-7",
                                                                 "Sous-section III : Modalités de liquidation et de versement",
                                                                 "Section II : Dispositions communes aux aides personnelles au logement",
                                                                 "Chapitre III : Saint-Pierre-et-Miquelon",
                                                                 "Livre VIII : Aides personnelles au logement",
                                                                 "Partie réglementaire",
                                                                 "Code de la construction et de l'habitation"]))
                        try:
                            temp_sous_calcul_traitement_796 = date_courante_16
                        except EmptyError:
                            temp_sous_calcul_traitement_796 = dead_value
                            raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                                 start_line=6419,
                                                                 start_column=29,
                                                                 end_line=6419,
                                                                 end_column=42,
                                                                 law_headings=["Article D863-7",
                                                                 "Sous-section III : Modalités de liquidation et de versement",
                                                                 "Section II : Dispositions communes aux aides personnelles au logement",
                                                                 "Chapitre III : Saint-Pierre-et-Miquelon",
                                                                 "Livre VIII : Aides personnelles au logement",
                                                                 "Partie réglementaire",
                                                                 "Code de la construction et de l'habitation"]))
                        try:
                            temp_sous_calcul_traitement_797 = nombre_personnes_a_charge_12
                        except EmptyError:
                            temp_sous_calcul_traitement_797 = dead_value
                            raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                                 start_line=6417,
                                                                 start_column=41,
                                                                 end_line=6417,
                                                                 end_column=66,
                                                                 law_headings=["Article D863-7",
                                                                 "Sous-section III : Modalités de liquidation et de versement",
                                                                 "Section II : Dispositions communes aux aides personnelles au logement",
                                                                 "Chapitre III : Saint-Pierre-et-Miquelon",
                                                                 "Livre VIII : Aides personnelles au logement",
                                                                 "Partie réglementaire",
                                                                 "Code de la construction et de l'habitation"]))
                        try:
                            temp_sous_calcul_traitement_798 = situation_familiale_calcul_apl_9
                        except EmptyError:
                            temp_sous_calcul_traitement_798 = dead_value
                            raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                                 start_line=6420,
                                                                 start_column=46,
                                                                 end_line=6420,
                                                                 end_column=76,
                                                                 law_headings=["Article D863-7",
                                                                 "Sous-section III : Modalités de liquidation et de versement",
                                                                 "Section II : Dispositions communes aux aides personnelles au logement",
                                                                 "Chapitre III : Saint-Pierre-et-Miquelon",
                                                                 "Livre VIII : Aides personnelles au logement",
                                                                 "Partie réglementaire",
                                                                 "Code de la construction et de l'habitation"]))
                        try:
                            temp_sous_calcul_traitement_799 = zone_7
                        except EmptyError:
                            temp_sous_calcul_traitement_799 = dead_value
                            raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                                 start_line=6418,
                                                                 start_column=20,
                                                                 end_line=6418,
                                                                 end_column=24,
                                                                 law_headings=["Article D863-7",
                                                                 "Sous-section III : Modalités de liquidation et de versement",
                                                                 "Section II : Dispositions communes aux aides personnelles au logement",
                                                                 "Chapitre III : Saint-Pierre-et-Miquelon",
                                                                 "Livre VIII : Aides personnelles au logement",
                                                                 "Partie réglementaire",
                                                                 "Code de la construction et de l'habitation"]))
                        try:
                            temp_sous_calcul_traitement_800 = True
                        except EmptyError:
                            temp_sous_calcul_traitement_800 = dead_value
                            raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                                 start_line=6428,
                                                                 start_column=36,
                                                                 end_line=6428,
                                                                 end_column=40,
                                                                 law_headings=["Article D863-7",
                                                                 "Sous-section III : Modalités de liquidation et de versement",
                                                                 "Section II : Dispositions communes aux aides personnelles au logement",
                                                                 "Chapitre III : Saint-Pierre-et-Miquelon",
                                                                 "Livre VIII : Aides personnelles au logement",
                                                                 "Partie réglementaire",
                                                                 "Code de la construction et de l'habitation"]))
                        try:
                            temp_sous_calcul_traitement_801 = False
                        except EmptyError:
                            temp_sous_calcul_traitement_801 = dead_value
                            raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                                 start_line=6435,
                                                                 start_column=72,
                                                                 end_line=6435,
                                                                 end_column=76,
                                                                 law_headings=["Article D863-7",
                                                                 "Sous-section III : Modalités de liquidation et de versement",
                                                                 "Section II : Dispositions communes aux aides personnelles au logement",
                                                                 "Chapitre III : Saint-Pierre-et-Miquelon",
                                                                 "Livre VIII : Aides personnelles au logement",
                                                                 "Partie réglementaire",
                                                                 "Code de la construction et de l'habitation"]))
                        try:
                            temp_sous_calcul_traitement_802 = type_aide_3
                        except EmptyError:
                            temp_sous_calcul_traitement_802 = dead_value
                            raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                                 start_line=6436,
                                                                 start_column=25,
                                                                 end_line=6436,
                                                                 end_column=34,
                                                                 law_headings=["Article D863-7",
                                                                 "Sous-section III : Modalités de liquidation et de versement",
                                                                 "Section II : Dispositions communes aux aides personnelles au logement",
                                                                 "Chapitre III : Saint-Pierre-et-Miquelon",
                                                                 "Livre VIII : Aides personnelles au logement",
                                                                 "Partie réglementaire",
                                                                 "Code de la construction et de l'habitation"]))
                        try:
                            temp_sous_calcul_traitement_803 = False
                        except EmptyError:
                            temp_sous_calcul_traitement_803 = dead_value
                            raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                                 start_line=6432,
                                                                 start_column=26,
                                                                 end_line=6432,
                                                                 end_column=30,
                                                                 law_headings=["Article D863-7",
                                                                 "Sous-section III : Modalités de liquidation et de versement",
                                                                 "Section II : Dispositions communes aux aides personnelles au logement",
                                                                 "Chapitre III : Saint-Pierre-et-Miquelon",
                                                                 "Livre VIII : Aides personnelles au logement",
                                                                 "Partie réglementaire",
                                                                 "Code de la construction et de l'habitation"]))
                        try:
                            temp_sous_calcul_traitement_804 = money_of_cents_string("0")
                        except EmptyError:
                            temp_sous_calcul_traitement_804 = dead_value
                            raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                                 start_line=6439,
                                                                 start_column=42,
                                                                 end_line=6439,
                                                                 end_column=45,
                                                                 law_headings=["Article D863-7",
                                                                 "Sous-section III : Modalités de liquidation et de versement",
                                                                 "Section II : Dispositions communes aux aides personnelles au logement",
                                                                 "Chapitre III : Saint-Pierre-et-Miquelon",
                                                                 "Livre VIII : Aides personnelles au logement",
                                                                 "Partie réglementaire",
                                                                 "Code de la construction et de l'habitation"]))
                        try:
                            temp_sous_calcul_traitement_805 = logement_foyer__2.logement_meuble_d842_2
                        except EmptyError:
                            temp_sous_calcul_traitement_805 = dead_value
                            raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                                 start_line=6440,
                                                                 start_column=38,
                                                                 end_line=6440,
                                                                 end_column=76,
                                                                 law_headings=["Article D863-7",
                                                                 "Sous-section III : Modalités de liquidation et de versement",
                                                                 "Section II : Dispositions communes aux aides personnelles au logement",
                                                                 "Chapitre III : Saint-Pierre-et-Miquelon",
                                                                 "Livre VIII : Aides personnelles au logement",
                                                                 "Partie réglementaire",
                                                                 "Code de la construction et de l'habitation"]))
                        try:
                            temp_sous_calcul_traitement_806 = residence_9
                        except EmptyError:
                            temp_sous_calcul_traitement_806 = dead_value
                            raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                                 start_line=6415,
                                                                 start_column=25,
                                                                 end_line=6415,
                                                                 end_column=34,
                                                                 law_headings=["Article D863-7",
                                                                 "Sous-section III : Modalités de liquidation et de versement",
                                                                 "Section II : Dispositions communes aux aides personnelles au logement",
                                                                 "Chapitre III : Saint-Pierre-et-Miquelon",
                                                                 "Livre VIII : Aides personnelles au logement",
                                                                 "Partie réglementaire",
                                                                 "Code de la construction et de l'habitation"]))
                        try:
                            temp_sous_calcul_traitement_807 = ChangementLogementD8424(ChangementLogementD8424_Code.PasDeChangement,
                                Unit())
                        except EmptyError:
                            temp_sous_calcul_traitement_807 = dead_value
                            raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                                 start_line=6441,
                                                                 start_column=42,
                                                                 end_line=6441,
                                                                 end_column=57,
                                                                 law_headings=["Article D863-7",
                                                                 "Sous-section III : Modalités de liquidation et de versement",
                                                                 "Section II : Dispositions communes aux aides personnelles au logement",
                                                                 "Chapitre III : Saint-Pierre-et-Miquelon",
                                                                 "Livre VIII : Aides personnelles au logement",
                                                                 "Partie réglementaire",
                                                                 "Code de la construction et de l'habitation"]))
                        return calcul_allocation_logement_locatif(CalculAllocationLogementLocatifIn(loyer_principal_in = temp_sous_calcul_traitement_793,
                                                                  ressources_menage_arrondies_in = temp_sous_calcul_traitement_794,
                                                                  beneficiaire_aide_adulte_ou_enfant_handicapes_in = temp_sous_calcul_traitement_795,
                                                                  date_courante_in = temp_sous_calcul_traitement_796,
                                                                  nombre_personnes_a_charge_in = temp_sous_calcul_traitement_797,
                                                                  situation_familiale_calcul_apl_in = temp_sous_calcul_traitement_798,
                                                                  zone_in = temp_sous_calcul_traitement_799,
                                                                  logement_est_chambre_in = temp_sous_calcul_traitement_800,
                                                                  agees_ou_handicap_adultes_hebergees_onereux_particuliers_in = temp_sous_calcul_traitement_801,
                                                                  type_aide_in = temp_sous_calcul_traitement_802,
                                                                  colocation_in = temp_sous_calcul_traitement_803,
                                                                  reduction_loyer_solidarite_in = temp_sous_calcul_traitement_804,
                                                                  logement_meuble_d842_2_in = temp_sous_calcul_traitement_805,
                                                                  residence_in = temp_sous_calcul_traitement_806,
                                                                  changement_logement_d842_4_in = temp_sous_calcul_traitement_807)).traitement_aide_finale(
                            param0_9)
                    try:
                        temp_sous_calcul_traitement_808 = logement_foyer__2.redevance
                    except EmptyError:
                        temp_sous_calcul_traitement_808 = dead_value
                        raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                             start_line=6422,
                                                             start_column=31,
                                                             end_line=6422,
                                                             end_column=56,
                                                             law_headings=["Article D863-7",
                                                             "Sous-section III : Modalités de liquidation et de versement",
                                                             "Section II : Dispositions communes aux aides personnelles au logement",
                                                             "Chapitre III : Saint-Pierre-et-Miquelon",
                                                             "Livre VIII : Aides personnelles au logement",
                                                             "Partie réglementaire",
                                                             "Code de la construction et de l'habitation"]))
                    try:
                        temp_sous_calcul_traitement_809 = ressources_menage_avec_arrondi_1
                    except EmptyError:
                        temp_sous_calcul_traitement_809 = dead_value
                        raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                             start_line=6416,
                                                             start_column=43,
                                                             end_line=6416,
                                                             end_column=60,
                                                             law_headings=["Article D863-7",
                                                             "Sous-section III : Modalités de liquidation et de versement",
                                                             "Section II : Dispositions communes aux aides personnelles au logement",
                                                             "Chapitre III : Saint-Pierre-et-Miquelon",
                                                             "Livre VIII : Aides personnelles au logement",
                                                             "Partie réglementaire",
                                                             "Code de la construction et de l'habitation"]))
                    try:
                        temp_sous_calcul_traitement_810 = logement_foyer__2.beneficiaire_aide_adulte_ou_enfant_handicapes
                    except EmptyError:
                        temp_sous_calcul_traitement_810 = dead_value
                        raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                             start_line=6424,
                                                             start_column=15,
                                                             end_line=6424,
                                                             end_column=76,
                                                             law_headings=["Article D863-7",
                                                             "Sous-section III : Modalités de liquidation et de versement",
                                                             "Section II : Dispositions communes aux aides personnelles au logement",
                                                             "Chapitre III : Saint-Pierre-et-Miquelon",
                                                             "Livre VIII : Aides personnelles au logement",
                                                             "Partie réglementaire",
                                                             "Code de la construction et de l'habitation"]))
                    try:
                        temp_sous_calcul_traitement_811 = date_courante_16
                    except EmptyError:
                        temp_sous_calcul_traitement_811 = dead_value
                        raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                             start_line=6419,
                                                             start_column=29,
                                                             end_line=6419,
                                                             end_column=42,
                                                             law_headings=["Article D863-7",
                                                             "Sous-section III : Modalités de liquidation et de versement",
                                                             "Section II : Dispositions communes aux aides personnelles au logement",
                                                             "Chapitre III : Saint-Pierre-et-Miquelon",
                                                             "Livre VIII : Aides personnelles au logement",
                                                             "Partie réglementaire",
                                                             "Code de la construction et de l'habitation"]))
                    try:
                        temp_sous_calcul_traitement_812 = nombre_personnes_a_charge_12
                    except EmptyError:
                        temp_sous_calcul_traitement_812 = dead_value
                        raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                             start_line=6417,
                                                             start_column=41,
                                                             end_line=6417,
                                                             end_column=66,
                                                             law_headings=["Article D863-7",
                                                             "Sous-section III : Modalités de liquidation et de versement",
                                                             "Section II : Dispositions communes aux aides personnelles au logement",
                                                             "Chapitre III : Saint-Pierre-et-Miquelon",
                                                             "Livre VIII : Aides personnelles au logement",
                                                             "Partie réglementaire",
                                                             "Code de la construction et de l'habitation"]))
                    try:
                        temp_sous_calcul_traitement_813 = situation_familiale_calcul_apl_9
                    except EmptyError:
                        temp_sous_calcul_traitement_813 = dead_value
                        raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                             start_line=6420,
                                                             start_column=46,
                                                             end_line=6420,
                                                             end_column=76,
                                                             law_headings=["Article D863-7",
                                                             "Sous-section III : Modalités de liquidation et de versement",
                                                             "Section II : Dispositions communes aux aides personnelles au logement",
                                                             "Chapitre III : Saint-Pierre-et-Miquelon",
                                                             "Livre VIII : Aides personnelles au logement",
                                                             "Partie réglementaire",
                                                             "Code de la construction et de l'habitation"]))
                    try:
                        temp_sous_calcul_traitement_814 = zone_7
                    except EmptyError:
                        temp_sous_calcul_traitement_814 = dead_value
                        raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                             start_line=6418,
                                                             start_column=20,
                                                             end_line=6418,
                                                             end_column=24,
                                                             law_headings=["Article D863-7",
                                                             "Sous-section III : Modalités de liquidation et de versement",
                                                             "Section II : Dispositions communes aux aides personnelles au logement",
                                                             "Chapitre III : Saint-Pierre-et-Miquelon",
                                                             "Livre VIII : Aides personnelles au logement",
                                                             "Partie réglementaire",
                                                             "Code de la construction et de l'habitation"]))
                    try:
                        temp_sous_calcul_traitement_815 = True
                    except EmptyError:
                        temp_sous_calcul_traitement_815 = dead_value
                        raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                             start_line=6428,
                                                             start_column=36,
                                                             end_line=6428,
                                                             end_column=40,
                                                             law_headings=["Article D863-7",
                                                             "Sous-section III : Modalités de liquidation et de versement",
                                                             "Section II : Dispositions communes aux aides personnelles au logement",
                                                             "Chapitre III : Saint-Pierre-et-Miquelon",
                                                             "Livre VIII : Aides personnelles au logement",
                                                             "Partie réglementaire",
                                                             "Code de la construction et de l'habitation"]))
                    try:
                        temp_sous_calcul_traitement_816 = False
                    except EmptyError:
                        temp_sous_calcul_traitement_816 = dead_value
                        raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                             start_line=6435,
                                                             start_column=72,
                                                             end_line=6435,
                                                             end_column=76,
                                                             law_headings=["Article D863-7",
                                                             "Sous-section III : Modalités de liquidation et de versement",
                                                             "Section II : Dispositions communes aux aides personnelles au logement",
                                                             "Chapitre III : Saint-Pierre-et-Miquelon",
                                                             "Livre VIII : Aides personnelles au logement",
                                                             "Partie réglementaire",
                                                             "Code de la construction et de l'habitation"]))
                    try:
                        temp_sous_calcul_traitement_817 = type_aide_3
                    except EmptyError:
                        temp_sous_calcul_traitement_817 = dead_value
                        raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                             start_line=6436,
                                                             start_column=25,
                                                             end_line=6436,
                                                             end_column=34,
                                                             law_headings=["Article D863-7",
                                                             "Sous-section III : Modalités de liquidation et de versement",
                                                             "Section II : Dispositions communes aux aides personnelles au logement",
                                                             "Chapitre III : Saint-Pierre-et-Miquelon",
                                                             "Livre VIII : Aides personnelles au logement",
                                                             "Partie réglementaire",
                                                             "Code de la construction et de l'habitation"]))
                    try:
                        temp_sous_calcul_traitement_818 = False
                    except EmptyError:
                        temp_sous_calcul_traitement_818 = dead_value
                        raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                             start_line=6432,
                                                             start_column=26,
                                                             end_line=6432,
                                                             end_column=30,
                                                             law_headings=["Article D863-7",
                                                             "Sous-section III : Modalités de liquidation et de versement",
                                                             "Section II : Dispositions communes aux aides personnelles au logement",
                                                             "Chapitre III : Saint-Pierre-et-Miquelon",
                                                             "Livre VIII : Aides personnelles au logement",
                                                             "Partie réglementaire",
                                                             "Code de la construction et de l'habitation"]))
                    try:
                        temp_sous_calcul_traitement_819 = money_of_cents_string("0")
                    except EmptyError:
                        temp_sous_calcul_traitement_819 = dead_value
                        raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                             start_line=6439,
                                                             start_column=42,
                                                             end_line=6439,
                                                             end_column=45,
                                                             law_headings=["Article D863-7",
                                                             "Sous-section III : Modalités de liquidation et de versement",
                                                             "Section II : Dispositions communes aux aides personnelles au logement",
                                                             "Chapitre III : Saint-Pierre-et-Miquelon",
                                                             "Livre VIII : Aides personnelles au logement",
                                                             "Partie réglementaire",
                                                             "Code de la construction et de l'habitation"]))
                    try:
                        temp_sous_calcul_traitement_820 = logement_foyer__2.logement_meuble_d842_2
                    except EmptyError:
                        temp_sous_calcul_traitement_820 = dead_value
                        raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                             start_line=6440,
                                                             start_column=38,
                                                             end_line=6440,
                                                             end_column=76,
                                                             law_headings=["Article D863-7",
                                                             "Sous-section III : Modalités de liquidation et de versement",
                                                             "Section II : Dispositions communes aux aides personnelles au logement",
                                                             "Chapitre III : Saint-Pierre-et-Miquelon",
                                                             "Livre VIII : Aides personnelles au logement",
                                                             "Partie réglementaire",
                                                             "Code de la construction et de l'habitation"]))
                    try:
                        temp_sous_calcul_traitement_821 = residence_9
                    except EmptyError:
                        temp_sous_calcul_traitement_821 = dead_value
                        raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                             start_line=6415,
                                                             start_column=25,
                                                             end_line=6415,
                                                             end_column=34,
                                                             law_headings=["Article D863-7",
                                                             "Sous-section III : Modalités de liquidation et de versement",
                                                             "Section II : Dispositions communes aux aides personnelles au logement",
                                                             "Chapitre III : Saint-Pierre-et-Miquelon",
                                                             "Livre VIII : Aides personnelles au logement",
                                                             "Partie réglementaire",
                                                             "Code de la construction et de l'habitation"]))
                    try:
                        temp_sous_calcul_traitement_822 = ChangementLogementD8424(ChangementLogementD8424_Code.PasDeChangement,
                            Unit())
                    except EmptyError:
                        temp_sous_calcul_traitement_822 = dead_value
                        raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                             start_line=6441,
                                                             start_column=42,
                                                             end_line=6441,
                                                             end_column=57,
                                                             law_headings=["Article D863-7",
                                                             "Sous-section III : Modalités de liquidation et de versement",
                                                             "Section II : Dispositions communes aux aides personnelles au logement",
                                                             "Chapitre III : Saint-Pierre-et-Miquelon",
                                                             "Livre VIII : Aides personnelles au logement",
                                                             "Partie réglementaire",
                                                             "Code de la construction et de l'habitation"]))
                    temp_sous_calcul_traitement_760 = TraitementFormuleAideFinale(aide_finale_formule = CalculAllocationLogementLocatif(aide_finale_formule = calcul_allocation_logement_locatif(
                        CalculAllocationLogementLocatifIn(loyer_principal_in = temp_sous_calcul_traitement_777,
                        ressources_menage_arrondies_in = temp_sous_calcul_traitement_778,
                        beneficiaire_aide_adulte_ou_enfant_handicapes_in = temp_sous_calcul_traitement_779,
                        date_courante_in = temp_sous_calcul_traitement_780,
                        nombre_personnes_a_charge_in = temp_sous_calcul_traitement_781,
                        situation_familiale_calcul_apl_in = temp_sous_calcul_traitement_782,
                        zone_in = temp_sous_calcul_traitement_783,
                        logement_est_chambre_in = temp_sous_calcul_traitement_784,
                        agees_ou_handicap_adultes_hebergees_onereux_particuliers_in = temp_sous_calcul_traitement_785,
                        type_aide_in = temp_sous_calcul_traitement_786,
                        colocation_in = temp_sous_calcul_traitement_787,
                        reduction_loyer_solidarite_in = temp_sous_calcul_traitement_788,
                        logement_meuble_d842_2_in = temp_sous_calcul_traitement_789,
                        residence_in = temp_sous_calcul_traitement_790,
                        changement_logement_d842_4_in = temp_sous_calcul_traitement_791)).aide_finale_formule,
                        traitement_aide_finale = temp_sous_calcul_traitement_761).aide_finale_formule,
                        traitement_aide_finale = CalculAllocationLogementLocatif(aide_finale_formule = calcul_allocation_logement_locatif(
                        CalculAllocationLogementLocatifIn(loyer_principal_in = temp_sous_calcul_traitement_808,
                        ressources_menage_arrondies_in = temp_sous_calcul_traitement_809,
                        beneficiaire_aide_adulte_ou_enfant_handicapes_in = temp_sous_calcul_traitement_810,
                        date_courante_in = temp_sous_calcul_traitement_811,
                        nombre_personnes_a_charge_in = temp_sous_calcul_traitement_812,
                        situation_familiale_calcul_apl_in = temp_sous_calcul_traitement_813,
                        zone_in = temp_sous_calcul_traitement_814,
                        logement_est_chambre_in = temp_sous_calcul_traitement_815,
                        agees_ou_handicap_adultes_hebergees_onereux_particuliers_in = temp_sous_calcul_traitement_816,
                        type_aide_in = temp_sous_calcul_traitement_817,
                        colocation_in = temp_sous_calcul_traitement_818,
                        reduction_loyer_solidarite_in = temp_sous_calcul_traitement_819,
                        logement_meuble_d842_2_in = temp_sous_calcul_traitement_820,
                        residence_in = temp_sous_calcul_traitement_821,
                        changement_logement_d842_4_in = temp_sous_calcul_traitement_822)).aide_finale_formule,
                        traitement_aide_finale = temp_sous_calcul_traitement_792).traitement_aide_finale)
            else:
                temp_sous_calcul_traitement_760 = dead_value
                raise EmptyError
        except EmptyError:
            match_arg_682 = categorie_calcul_apl_1
            if match_arg_682.code == CategorieCalculAPL_Code.Location:
                location_5 = match_arg_682.value
                def temp_sous_calcul_traitement_823(param0_10:Money):
                    try:
                        temp_sous_calcul_traitement_824 = location_5.loyer_principal
                    except EmptyError:
                        temp_sous_calcul_traitement_824 = dead_value
                        raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                             start_line=1566,
                                                             start_column=31,
                                                             end_line=1566,
                                                             end_column=55,
                                                             law_headings=["Article D823-9",
                                                             "Section 1 : Calcul, liquidation et versement des aides",
                                                             "Chapitre III : Modalités de liquidation et de versement",
                                                             "Titre II : Dispositions communes aux aides personnelles au logement",
                                                             "Livre VIII : Aides personnelles au logement",
                                                             "Partie réglementaire",
                                                             "Code de la construction et de l'habitation"]))
                    try:
                        temp_sous_calcul_traitement_825 = ressources_menage_avec_arrondi_1
                    except EmptyError:
                        temp_sous_calcul_traitement_825 = dead_value
                        raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                             start_line=1561,
                                                             start_column=43,
                                                             end_line=1561,
                                                             end_column=60,
                                                             law_headings=["Article D823-9",
                                                             "Section 1 : Calcul, liquidation et versement des aides",
                                                             "Chapitre III : Modalités de liquidation et de versement",
                                                             "Titre II : Dispositions communes aux aides personnelles au logement",
                                                             "Livre VIII : Aides personnelles au logement",
                                                             "Partie réglementaire",
                                                             "Code de la construction et de l'habitation"]))
                    try:
                        temp_sous_calcul_traitement_826 = location_5.beneficiaire_aide_adulte_ou_enfant_handicapes
                    except EmptyError:
                        temp_sous_calcul_traitement_826 = dead_value
                        raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                             start_line=1568,
                                                             start_column=15,
                                                             end_line=1568,
                                                             end_column=69,
                                                             law_headings=["Article D823-9",
                                                             "Section 1 : Calcul, liquidation et versement des aides",
                                                             "Chapitre III : Modalités de liquidation et de versement",
                                                             "Titre II : Dispositions communes aux aides personnelles au logement",
                                                             "Livre VIII : Aides personnelles au logement",
                                                             "Partie réglementaire",
                                                             "Code de la construction et de l'habitation"]))
                    try:
                        temp_sous_calcul_traitement_827 = date_courante_16
                    except EmptyError:
                        temp_sous_calcul_traitement_827 = dead_value
                        raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                             start_line=1564,
                                                             start_column=29,
                                                             end_line=1564,
                                                             end_column=42,
                                                             law_headings=["Article D823-9",
                                                             "Section 1 : Calcul, liquidation et versement des aides",
                                                             "Chapitre III : Modalités de liquidation et de versement",
                                                             "Titre II : Dispositions communes aux aides personnelles au logement",
                                                             "Livre VIII : Aides personnelles au logement",
                                                             "Partie réglementaire",
                                                             "Code de la construction et de l'habitation"]))
                    try:
                        temp_sous_calcul_traitement_828 = nombre_personnes_a_charge_12
                    except EmptyError:
                        temp_sous_calcul_traitement_828 = dead_value
                        raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                             start_line=1562,
                                                             start_column=41,
                                                             end_line=1562,
                                                             end_column=66,
                                                             law_headings=["Article D823-9",
                                                             "Section 1 : Calcul, liquidation et versement des aides",
                                                             "Chapitre III : Modalités de liquidation et de versement",
                                                             "Titre II : Dispositions communes aux aides personnelles au logement",
                                                             "Livre VIII : Aides personnelles au logement",
                                                             "Partie réglementaire",
                                                             "Code de la construction et de l'habitation"]))
                    try:
                        temp_sous_calcul_traitement_829 = situation_familiale_calcul_apl_9
                    except EmptyError:
                        temp_sous_calcul_traitement_829 = dead_value
                        raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                             start_line=1565,
                                                             start_column=46,
                                                             end_line=1565,
                                                             end_column=76,
                                                             law_headings=["Article D823-9",
                                                             "Section 1 : Calcul, liquidation et versement des aides",
                                                             "Chapitre III : Modalités de liquidation et de versement",
                                                             "Titre II : Dispositions communes aux aides personnelles au logement",
                                                             "Livre VIII : Aides personnelles au logement",
                                                             "Partie réglementaire",
                                                             "Code de la construction et de l'habitation"]))
                    try:
                        temp_sous_calcul_traitement_830 = zone_7
                    except EmptyError:
                        temp_sous_calcul_traitement_830 = dead_value
                        raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                             start_line=1563,
                                                             start_column=20,
                                                             end_line=1563,
                                                             end_column=24,
                                                             law_headings=["Article D823-9",
                                                             "Section 1 : Calcul, liquidation et versement des aides",
                                                             "Chapitre III : Modalités de liquidation et de versement",
                                                             "Titre II : Dispositions communes aux aides personnelles au logement",
                                                             "Livre VIII : Aides personnelles au logement",
                                                             "Partie réglementaire",
                                                             "Code de la construction et de l'habitation"]))
                    try:
                        temp_sous_calcul_traitement_831 = location_5.logement_est_chambre
                    except EmptyError:
                        temp_sous_calcul_traitement_831 = dead_value
                        raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                             start_line=1569,
                                                             start_column=36,
                                                             end_line=1569,
                                                             end_column=65,
                                                             law_headings=["Article D823-9",
                                                             "Section 1 : Calcul, liquidation et versement des aides",
                                                             "Chapitre III : Modalités de liquidation et de versement",
                                                             "Titre II : Dispositions communes aux aides personnelles au logement",
                                                             "Livre VIII : Aides personnelles au logement",
                                                             "Partie réglementaire",
                                                             "Code de la construction et de l'habitation"]))
                    try:
                        temp_sous_calcul_traitement_832 = location_5.agees_ou_handicap_adultes_hebergees_onereux_particuliers
                    except EmptyError:
                        temp_sous_calcul_traitement_832 = dead_value
                        raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                             start_line=1572,
                                                             start_column=15,
                                                             end_line=1572,
                                                             end_column=80,
                                                             law_headings=["Article D823-9",
                                                             "Section 1 : Calcul, liquidation et versement des aides",
                                                             "Chapitre III : Modalités de liquidation et de versement",
                                                             "Titre II : Dispositions communes aux aides personnelles au logement",
                                                             "Livre VIII : Aides personnelles au logement",
                                                             "Partie réglementaire",
                                                             "Code de la construction et de l'habitation"]))
                    try:
                        temp_sous_calcul_traitement_833 = type_aide_3
                    except EmptyError:
                        temp_sous_calcul_traitement_833 = dead_value
                        raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                             start_line=1573,
                                                             start_column=25,
                                                             end_line=1573,
                                                             end_column=34,
                                                             law_headings=["Article D823-9",
                                                             "Section 1 : Calcul, liquidation et versement des aides",
                                                             "Chapitre III : Modalités de liquidation et de versement",
                                                             "Titre II : Dispositions communes aux aides personnelles au logement",
                                                             "Livre VIII : Aides personnelles au logement",
                                                             "Partie réglementaire",
                                                             "Code de la construction et de l'habitation"]))
                    try:
                        temp_sous_calcul_traitement_834 = location_5.colocation
                    except EmptyError:
                        temp_sous_calcul_traitement_834 = dead_value
                        raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                             start_line=1570,
                                                             start_column=26,
                                                             end_line=1570,
                                                             end_column=45,
                                                             law_headings=["Article D823-9",
                                                             "Section 1 : Calcul, liquidation et versement des aides",
                                                             "Chapitre III : Modalités de liquidation et de versement",
                                                             "Titre II : Dispositions communes aux aides personnelles au logement",
                                                             "Livre VIII : Aides personnelles au logement",
                                                             "Partie réglementaire",
                                                             "Code de la construction et de l'habitation"]))
                    try:
                        match_arg_683 = location_5.bailleur
                        if match_arg_683.code == TypeBailleur_Code.BailleurSocial:
                            bailleur_14 = match_arg_683.value
                            temp_sous_calcul_traitement_835 = bailleur_14.reduction_loyer_solidarite_percue
                        elif match_arg_683.code == TypeBailleur_Code.BailleurPriveAvecConventionnementSocial:
                            _ = match_arg_683.value
                            temp_sous_calcul_traitement_835 = money_of_cents_string("0")
                        elif match_arg_683.code == TypeBailleur_Code.BailleurPrive:
                            _ = match_arg_683.value
                            temp_sous_calcul_traitement_835 = money_of_cents_string("0")
                    except EmptyError:
                        temp_sous_calcul_traitement_835 = dead_value
                        raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                             start_line=1575,
                                                             start_column=16,
                                                             end_line=1578,
                                                             end_column=39,
                                                             law_headings=["Article D823-9",
                                                             "Section 1 : Calcul, liquidation et versement des aides",
                                                             "Chapitre III : Modalités de liquidation et de versement",
                                                             "Titre II : Dispositions communes aux aides personnelles au logement",
                                                             "Livre VIII : Aides personnelles au logement",
                                                             "Partie réglementaire",
                                                             "Code de la construction et de l'habitation"]))
                    try:
                        temp_sous_calcul_traitement_836 = location_5.logement_meuble_d842_2
                    except EmptyError:
                        temp_sous_calcul_traitement_836 = dead_value
                        raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                             start_line=1579,
                                                             start_column=38,
                                                             end_line=1579,
                                                             end_column=69,
                                                             law_headings=["Article D823-9",
                                                             "Section 1 : Calcul, liquidation et versement des aides",
                                                             "Chapitre III : Modalités de liquidation et de versement",
                                                             "Titre II : Dispositions communes aux aides personnelles au logement",
                                                             "Livre VIII : Aides personnelles au logement",
                                                             "Partie réglementaire",
                                                             "Code de la construction et de l'habitation"]))
                    try:
                        temp_sous_calcul_traitement_837 = residence_9
                    except EmptyError:
                        temp_sous_calcul_traitement_837 = dead_value
                        raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                             start_line=1560,
                                                             start_column=25,
                                                             end_line=1560,
                                                             end_column=34,
                                                             law_headings=["Article D823-9",
                                                             "Section 1 : Calcul, liquidation et versement des aides",
                                                             "Chapitre III : Modalités de liquidation et de versement",
                                                             "Titre II : Dispositions communes aux aides personnelles au logement",
                                                             "Livre VIII : Aides personnelles au logement",
                                                             "Partie réglementaire",
                                                             "Code de la construction et de l'habitation"]))
                    try:
                        temp_sous_calcul_traitement_838 = location_5.changement_logement_d842_4
                    except EmptyError:
                        temp_sous_calcul_traitement_838 = dead_value
                        raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                             start_line=1580,
                                                             start_column=42,
                                                             end_line=1580,
                                                             end_column=77,
                                                             law_headings=["Article D823-9",
                                                             "Section 1 : Calcul, liquidation et versement des aides",
                                                             "Chapitre III : Modalités de liquidation et de versement",
                                                             "Titre II : Dispositions communes aux aides personnelles au logement",
                                                             "Livre VIII : Aides personnelles au logement",
                                                             "Partie réglementaire",
                                                             "Code de la construction et de l'habitation"]))
                    return calcul_allocation_logement_locatif(CalculAllocationLogementLocatifIn(loyer_principal_in = temp_sous_calcul_traitement_824,
                                                              ressources_menage_arrondies_in = temp_sous_calcul_traitement_825,
                                                              beneficiaire_aide_adulte_ou_enfant_handicapes_in = temp_sous_calcul_traitement_826,
                                                              date_courante_in = temp_sous_calcul_traitement_827,
                                                              nombre_personnes_a_charge_in = temp_sous_calcul_traitement_828,
                                                              situation_familiale_calcul_apl_in = temp_sous_calcul_traitement_829,
                                                              zone_in = temp_sous_calcul_traitement_830,
                                                              logement_est_chambre_in = temp_sous_calcul_traitement_831,
                                                              agees_ou_handicap_adultes_hebergees_onereux_particuliers_in = temp_sous_calcul_traitement_832,
                                                              type_aide_in = temp_sous_calcul_traitement_833,
                                                              colocation_in = temp_sous_calcul_traitement_834,
                                                              reduction_loyer_solidarite_in = temp_sous_calcul_traitement_835,
                                                              logement_meuble_d842_2_in = temp_sous_calcul_traitement_836,
                                                              residence_in = temp_sous_calcul_traitement_837,
                                                              changement_logement_d842_4_in = temp_sous_calcul_traitement_838)).traitement_aide_finale(
                        param0_10)
                try:
                    temp_sous_calcul_traitement_839 = location_5.loyer_principal
                except EmptyError:
                    temp_sous_calcul_traitement_839 = dead_value
                    raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                         start_line=1566,
                                                         start_column=31,
                                                         end_line=1566,
                                                         end_column=55,
                                                         law_headings=["Article D823-9",
                                                         "Section 1 : Calcul, liquidation et versement des aides",
                                                         "Chapitre III : Modalités de liquidation et de versement",
                                                         "Titre II : Dispositions communes aux aides personnelles au logement",
                                                         "Livre VIII : Aides personnelles au logement",
                                                         "Partie réglementaire",
                                                         "Code de la construction et de l'habitation"]))
                try:
                    temp_sous_calcul_traitement_840 = ressources_menage_avec_arrondi_1
                except EmptyError:
                    temp_sous_calcul_traitement_840 = dead_value
                    raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                         start_line=1561,
                                                         start_column=43,
                                                         end_line=1561,
                                                         end_column=60,
                                                         law_headings=["Article D823-9",
                                                         "Section 1 : Calcul, liquidation et versement des aides",
                                                         "Chapitre III : Modalités de liquidation et de versement",
                                                         "Titre II : Dispositions communes aux aides personnelles au logement",
                                                         "Livre VIII : Aides personnelles au logement",
                                                         "Partie réglementaire",
                                                         "Code de la construction et de l'habitation"]))
                try:
                    temp_sous_calcul_traitement_841 = location_5.beneficiaire_aide_adulte_ou_enfant_handicapes
                except EmptyError:
                    temp_sous_calcul_traitement_841 = dead_value
                    raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                         start_line=1568,
                                                         start_column=15,
                                                         end_line=1568,
                                                         end_column=69,
                                                         law_headings=["Article D823-9",
                                                         "Section 1 : Calcul, liquidation et versement des aides",
                                                         "Chapitre III : Modalités de liquidation et de versement",
                                                         "Titre II : Dispositions communes aux aides personnelles au logement",
                                                         "Livre VIII : Aides personnelles au logement",
                                                         "Partie réglementaire",
                                                         "Code de la construction et de l'habitation"]))
                try:
                    temp_sous_calcul_traitement_842 = date_courante_16
                except EmptyError:
                    temp_sous_calcul_traitement_842 = dead_value
                    raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                         start_line=1564,
                                                         start_column=29,
                                                         end_line=1564,
                                                         end_column=42,
                                                         law_headings=["Article D823-9",
                                                         "Section 1 : Calcul, liquidation et versement des aides",
                                                         "Chapitre III : Modalités de liquidation et de versement",
                                                         "Titre II : Dispositions communes aux aides personnelles au logement",
                                                         "Livre VIII : Aides personnelles au logement",
                                                         "Partie réglementaire",
                                                         "Code de la construction et de l'habitation"]))
                try:
                    temp_sous_calcul_traitement_843 = nombre_personnes_a_charge_12
                except EmptyError:
                    temp_sous_calcul_traitement_843 = dead_value
                    raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                         start_line=1562,
                                                         start_column=41,
                                                         end_line=1562,
                                                         end_column=66,
                                                         law_headings=["Article D823-9",
                                                         "Section 1 : Calcul, liquidation et versement des aides",
                                                         "Chapitre III : Modalités de liquidation et de versement",
                                                         "Titre II : Dispositions communes aux aides personnelles au logement",
                                                         "Livre VIII : Aides personnelles au logement",
                                                         "Partie réglementaire",
                                                         "Code de la construction et de l'habitation"]))
                try:
                    temp_sous_calcul_traitement_844 = situation_familiale_calcul_apl_9
                except EmptyError:
                    temp_sous_calcul_traitement_844 = dead_value
                    raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                         start_line=1565,
                                                         start_column=46,
                                                         end_line=1565,
                                                         end_column=76,
                                                         law_headings=["Article D823-9",
                                                         "Section 1 : Calcul, liquidation et versement des aides",
                                                         "Chapitre III : Modalités de liquidation et de versement",
                                                         "Titre II : Dispositions communes aux aides personnelles au logement",
                                                         "Livre VIII : Aides personnelles au logement",
                                                         "Partie réglementaire",
                                                         "Code de la construction et de l'habitation"]))
                try:
                    temp_sous_calcul_traitement_845 = zone_7
                except EmptyError:
                    temp_sous_calcul_traitement_845 = dead_value
                    raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                         start_line=1563,
                                                         start_column=20,
                                                         end_line=1563,
                                                         end_column=24,
                                                         law_headings=["Article D823-9",
                                                         "Section 1 : Calcul, liquidation et versement des aides",
                                                         "Chapitre III : Modalités de liquidation et de versement",
                                                         "Titre II : Dispositions communes aux aides personnelles au logement",
                                                         "Livre VIII : Aides personnelles au logement",
                                                         "Partie réglementaire",
                                                         "Code de la construction et de l'habitation"]))
                try:
                    temp_sous_calcul_traitement_846 = location_5.logement_est_chambre
                except EmptyError:
                    temp_sous_calcul_traitement_846 = dead_value
                    raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                         start_line=1569,
                                                         start_column=36,
                                                         end_line=1569,
                                                         end_column=65,
                                                         law_headings=["Article D823-9",
                                                         "Section 1 : Calcul, liquidation et versement des aides",
                                                         "Chapitre III : Modalités de liquidation et de versement",
                                                         "Titre II : Dispositions communes aux aides personnelles au logement",
                                                         "Livre VIII : Aides personnelles au logement",
                                                         "Partie réglementaire",
                                                         "Code de la construction et de l'habitation"]))
                try:
                    temp_sous_calcul_traitement_847 = location_5.agees_ou_handicap_adultes_hebergees_onereux_particuliers
                except EmptyError:
                    temp_sous_calcul_traitement_847 = dead_value
                    raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                         start_line=1572,
                                                         start_column=15,
                                                         end_line=1572,
                                                         end_column=80,
                                                         law_headings=["Article D823-9",
                                                         "Section 1 : Calcul, liquidation et versement des aides",
                                                         "Chapitre III : Modalités de liquidation et de versement",
                                                         "Titre II : Dispositions communes aux aides personnelles au logement",
                                                         "Livre VIII : Aides personnelles au logement",
                                                         "Partie réglementaire",
                                                         "Code de la construction et de l'habitation"]))
                try:
                    temp_sous_calcul_traitement_848 = type_aide_3
                except EmptyError:
                    temp_sous_calcul_traitement_848 = dead_value
                    raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                         start_line=1573,
                                                         start_column=25,
                                                         end_line=1573,
                                                         end_column=34,
                                                         law_headings=["Article D823-9",
                                                         "Section 1 : Calcul, liquidation et versement des aides",
                                                         "Chapitre III : Modalités de liquidation et de versement",
                                                         "Titre II : Dispositions communes aux aides personnelles au logement",
                                                         "Livre VIII : Aides personnelles au logement",
                                                         "Partie réglementaire",
                                                         "Code de la construction et de l'habitation"]))
                try:
                    temp_sous_calcul_traitement_849 = location_5.colocation
                except EmptyError:
                    temp_sous_calcul_traitement_849 = dead_value
                    raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                         start_line=1570,
                                                         start_column=26,
                                                         end_line=1570,
                                                         end_column=45,
                                                         law_headings=["Article D823-9",
                                                         "Section 1 : Calcul, liquidation et versement des aides",
                                                         "Chapitre III : Modalités de liquidation et de versement",
                                                         "Titre II : Dispositions communes aux aides personnelles au logement",
                                                         "Livre VIII : Aides personnelles au logement",
                                                         "Partie réglementaire",
                                                         "Code de la construction et de l'habitation"]))
                try:
                    match_arg_684 = location_5.bailleur
                    if match_arg_684.code == TypeBailleur_Code.BailleurSocial:
                        bailleur_15 = match_arg_684.value
                        temp_sous_calcul_traitement_850 = bailleur_15.reduction_loyer_solidarite_percue
                    elif match_arg_684.code == TypeBailleur_Code.BailleurPriveAvecConventionnementSocial:
                        _ = match_arg_684.value
                        temp_sous_calcul_traitement_850 = money_of_cents_string("0")
                    elif match_arg_684.code == TypeBailleur_Code.BailleurPrive:
                        _ = match_arg_684.value
                        temp_sous_calcul_traitement_850 = money_of_cents_string("0")
                except EmptyError:
                    temp_sous_calcul_traitement_850 = dead_value
                    raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                         start_line=1575,
                                                         start_column=16,
                                                         end_line=1578,
                                                         end_column=39,
                                                         law_headings=["Article D823-9",
                                                         "Section 1 : Calcul, liquidation et versement des aides",
                                                         "Chapitre III : Modalités de liquidation et de versement",
                                                         "Titre II : Dispositions communes aux aides personnelles au logement",
                                                         "Livre VIII : Aides personnelles au logement",
                                                         "Partie réglementaire",
                                                         "Code de la construction et de l'habitation"]))
                try:
                    temp_sous_calcul_traitement_851 = location_5.logement_meuble_d842_2
                except EmptyError:
                    temp_sous_calcul_traitement_851 = dead_value
                    raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                         start_line=1579,
                                                         start_column=38,
                                                         end_line=1579,
                                                         end_column=69,
                                                         law_headings=["Article D823-9",
                                                         "Section 1 : Calcul, liquidation et versement des aides",
                                                         "Chapitre III : Modalités de liquidation et de versement",
                                                         "Titre II : Dispositions communes aux aides personnelles au logement",
                                                         "Livre VIII : Aides personnelles au logement",
                                                         "Partie réglementaire",
                                                         "Code de la construction et de l'habitation"]))
                try:
                    temp_sous_calcul_traitement_852 = residence_9
                except EmptyError:
                    temp_sous_calcul_traitement_852 = dead_value
                    raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                         start_line=1560,
                                                         start_column=25,
                                                         end_line=1560,
                                                         end_column=34,
                                                         law_headings=["Article D823-9",
                                                         "Section 1 : Calcul, liquidation et versement des aides",
                                                         "Chapitre III : Modalités de liquidation et de versement",
                                                         "Titre II : Dispositions communes aux aides personnelles au logement",
                                                         "Livre VIII : Aides personnelles au logement",
                                                         "Partie réglementaire",
                                                         "Code de la construction et de l'habitation"]))
                try:
                    temp_sous_calcul_traitement_853 = location_5.changement_logement_d842_4
                except EmptyError:
                    temp_sous_calcul_traitement_853 = dead_value
                    raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                         start_line=1580,
                                                         start_column=42,
                                                         end_line=1580,
                                                         end_column=77,
                                                         law_headings=["Article D823-9",
                                                         "Section 1 : Calcul, liquidation et versement des aides",
                                                         "Chapitre III : Modalités de liquidation et de versement",
                                                         "Titre II : Dispositions communes aux aides personnelles au logement",
                                                         "Livre VIII : Aides personnelles au logement",
                                                         "Partie réglementaire",
                                                         "Code de la construction et de l'habitation"]))
                def temp_sous_calcul_traitement_854(param0_11:Money):
                    try:
                        temp_sous_calcul_traitement_855 = location_5.loyer_principal
                    except EmptyError:
                        temp_sous_calcul_traitement_855 = dead_value
                        raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                             start_line=1566,
                                                             start_column=31,
                                                             end_line=1566,
                                                             end_column=55,
                                                             law_headings=["Article D823-9",
                                                             "Section 1 : Calcul, liquidation et versement des aides",
                                                             "Chapitre III : Modalités de liquidation et de versement",
                                                             "Titre II : Dispositions communes aux aides personnelles au logement",
                                                             "Livre VIII : Aides personnelles au logement",
                                                             "Partie réglementaire",
                                                             "Code de la construction et de l'habitation"]))
                    try:
                        temp_sous_calcul_traitement_856 = ressources_menage_avec_arrondi_1
                    except EmptyError:
                        temp_sous_calcul_traitement_856 = dead_value
                        raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                             start_line=1561,
                                                             start_column=43,
                                                             end_line=1561,
                                                             end_column=60,
                                                             law_headings=["Article D823-9",
                                                             "Section 1 : Calcul, liquidation et versement des aides",
                                                             "Chapitre III : Modalités de liquidation et de versement",
                                                             "Titre II : Dispositions communes aux aides personnelles au logement",
                                                             "Livre VIII : Aides personnelles au logement",
                                                             "Partie réglementaire",
                                                             "Code de la construction et de l'habitation"]))
                    try:
                        temp_sous_calcul_traitement_857 = location_5.beneficiaire_aide_adulte_ou_enfant_handicapes
                    except EmptyError:
                        temp_sous_calcul_traitement_857 = dead_value
                        raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                             start_line=1568,
                                                             start_column=15,
                                                             end_line=1568,
                                                             end_column=69,
                                                             law_headings=["Article D823-9",
                                                             "Section 1 : Calcul, liquidation et versement des aides",
                                                             "Chapitre III : Modalités de liquidation et de versement",
                                                             "Titre II : Dispositions communes aux aides personnelles au logement",
                                                             "Livre VIII : Aides personnelles au logement",
                                                             "Partie réglementaire",
                                                             "Code de la construction et de l'habitation"]))
                    try:
                        temp_sous_calcul_traitement_858 = date_courante_16
                    except EmptyError:
                        temp_sous_calcul_traitement_858 = dead_value
                        raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                             start_line=1564,
                                                             start_column=29,
                                                             end_line=1564,
                                                             end_column=42,
                                                             law_headings=["Article D823-9",
                                                             "Section 1 : Calcul, liquidation et versement des aides",
                                                             "Chapitre III : Modalités de liquidation et de versement",
                                                             "Titre II : Dispositions communes aux aides personnelles au logement",
                                                             "Livre VIII : Aides personnelles au logement",
                                                             "Partie réglementaire",
                                                             "Code de la construction et de l'habitation"]))
                    try:
                        temp_sous_calcul_traitement_859 = nombre_personnes_a_charge_12
                    except EmptyError:
                        temp_sous_calcul_traitement_859 = dead_value
                        raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                             start_line=1562,
                                                             start_column=41,
                                                             end_line=1562,
                                                             end_column=66,
                                                             law_headings=["Article D823-9",
                                                             "Section 1 : Calcul, liquidation et versement des aides",
                                                             "Chapitre III : Modalités de liquidation et de versement",
                                                             "Titre II : Dispositions communes aux aides personnelles au logement",
                                                             "Livre VIII : Aides personnelles au logement",
                                                             "Partie réglementaire",
                                                             "Code de la construction et de l'habitation"]))
                    try:
                        temp_sous_calcul_traitement_860 = situation_familiale_calcul_apl_9
                    except EmptyError:
                        temp_sous_calcul_traitement_860 = dead_value
                        raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                             start_line=1565,
                                                             start_column=46,
                                                             end_line=1565,
                                                             end_column=76,
                                                             law_headings=["Article D823-9",
                                                             "Section 1 : Calcul, liquidation et versement des aides",
                                                             "Chapitre III : Modalités de liquidation et de versement",
                                                             "Titre II : Dispositions communes aux aides personnelles au logement",
                                                             "Livre VIII : Aides personnelles au logement",
                                                             "Partie réglementaire",
                                                             "Code de la construction et de l'habitation"]))
                    try:
                        temp_sous_calcul_traitement_861 = zone_7
                    except EmptyError:
                        temp_sous_calcul_traitement_861 = dead_value
                        raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                             start_line=1563,
                                                             start_column=20,
                                                             end_line=1563,
                                                             end_column=24,
                                                             law_headings=["Article D823-9",
                                                             "Section 1 : Calcul, liquidation et versement des aides",
                                                             "Chapitre III : Modalités de liquidation et de versement",
                                                             "Titre II : Dispositions communes aux aides personnelles au logement",
                                                             "Livre VIII : Aides personnelles au logement",
                                                             "Partie réglementaire",
                                                             "Code de la construction et de l'habitation"]))
                    try:
                        temp_sous_calcul_traitement_862 = location_5.logement_est_chambre
                    except EmptyError:
                        temp_sous_calcul_traitement_862 = dead_value
                        raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                             start_line=1569,
                                                             start_column=36,
                                                             end_line=1569,
                                                             end_column=65,
                                                             law_headings=["Article D823-9",
                                                             "Section 1 : Calcul, liquidation et versement des aides",
                                                             "Chapitre III : Modalités de liquidation et de versement",
                                                             "Titre II : Dispositions communes aux aides personnelles au logement",
                                                             "Livre VIII : Aides personnelles au logement",
                                                             "Partie réglementaire",
                                                             "Code de la construction et de l'habitation"]))
                    try:
                        temp_sous_calcul_traitement_863 = location_5.agees_ou_handicap_adultes_hebergees_onereux_particuliers
                    except EmptyError:
                        temp_sous_calcul_traitement_863 = dead_value
                        raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                             start_line=1572,
                                                             start_column=15,
                                                             end_line=1572,
                                                             end_column=80,
                                                             law_headings=["Article D823-9",
                                                             "Section 1 : Calcul, liquidation et versement des aides",
                                                             "Chapitre III : Modalités de liquidation et de versement",
                                                             "Titre II : Dispositions communes aux aides personnelles au logement",
                                                             "Livre VIII : Aides personnelles au logement",
                                                             "Partie réglementaire",
                                                             "Code de la construction et de l'habitation"]))
                    try:
                        temp_sous_calcul_traitement_864 = type_aide_3
                    except EmptyError:
                        temp_sous_calcul_traitement_864 = dead_value
                        raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                             start_line=1573,
                                                             start_column=25,
                                                             end_line=1573,
                                                             end_column=34,
                                                             law_headings=["Article D823-9",
                                                             "Section 1 : Calcul, liquidation et versement des aides",
                                                             "Chapitre III : Modalités de liquidation et de versement",
                                                             "Titre II : Dispositions communes aux aides personnelles au logement",
                                                             "Livre VIII : Aides personnelles au logement",
                                                             "Partie réglementaire",
                                                             "Code de la construction et de l'habitation"]))
                    try:
                        temp_sous_calcul_traitement_865 = location_5.colocation
                    except EmptyError:
                        temp_sous_calcul_traitement_865 = dead_value
                        raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                             start_line=1570,
                                                             start_column=26,
                                                             end_line=1570,
                                                             end_column=45,
                                                             law_headings=["Article D823-9",
                                                             "Section 1 : Calcul, liquidation et versement des aides",
                                                             "Chapitre III : Modalités de liquidation et de versement",
                                                             "Titre II : Dispositions communes aux aides personnelles au logement",
                                                             "Livre VIII : Aides personnelles au logement",
                                                             "Partie réglementaire",
                                                             "Code de la construction et de l'habitation"]))
                    try:
                        match_arg_685 = location_5.bailleur
                        if match_arg_685.code == TypeBailleur_Code.BailleurSocial:
                            bailleur_16 = match_arg_685.value
                            temp_sous_calcul_traitement_866 = bailleur_16.reduction_loyer_solidarite_percue
                        elif match_arg_685.code == TypeBailleur_Code.BailleurPriveAvecConventionnementSocial:
                            _ = match_arg_685.value
                            temp_sous_calcul_traitement_866 = money_of_cents_string("0")
                        elif match_arg_685.code == TypeBailleur_Code.BailleurPrive:
                            _ = match_arg_685.value
                            temp_sous_calcul_traitement_866 = money_of_cents_string("0")
                    except EmptyError:
                        temp_sous_calcul_traitement_866 = dead_value
                        raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                             start_line=1575,
                                                             start_column=16,
                                                             end_line=1578,
                                                             end_column=39,
                                                             law_headings=["Article D823-9",
                                                             "Section 1 : Calcul, liquidation et versement des aides",
                                                             "Chapitre III : Modalités de liquidation et de versement",
                                                             "Titre II : Dispositions communes aux aides personnelles au logement",
                                                             "Livre VIII : Aides personnelles au logement",
                                                             "Partie réglementaire",
                                                             "Code de la construction et de l'habitation"]))
                    try:
                        temp_sous_calcul_traitement_867 = location_5.logement_meuble_d842_2
                    except EmptyError:
                        temp_sous_calcul_traitement_867 = dead_value
                        raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                             start_line=1579,
                                                             start_column=38,
                                                             end_line=1579,
                                                             end_column=69,
                                                             law_headings=["Article D823-9",
                                                             "Section 1 : Calcul, liquidation et versement des aides",
                                                             "Chapitre III : Modalités de liquidation et de versement",
                                                             "Titre II : Dispositions communes aux aides personnelles au logement",
                                                             "Livre VIII : Aides personnelles au logement",
                                                             "Partie réglementaire",
                                                             "Code de la construction et de l'habitation"]))
                    try:
                        temp_sous_calcul_traitement_868 = residence_9
                    except EmptyError:
                        temp_sous_calcul_traitement_868 = dead_value
                        raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                             start_line=1560,
                                                             start_column=25,
                                                             end_line=1560,
                                                             end_column=34,
                                                             law_headings=["Article D823-9",
                                                             "Section 1 : Calcul, liquidation et versement des aides",
                                                             "Chapitre III : Modalités de liquidation et de versement",
                                                             "Titre II : Dispositions communes aux aides personnelles au logement",
                                                             "Livre VIII : Aides personnelles au logement",
                                                             "Partie réglementaire",
                                                             "Code de la construction et de l'habitation"]))
                    try:
                        temp_sous_calcul_traitement_869 = location_5.changement_logement_d842_4
                    except EmptyError:
                        temp_sous_calcul_traitement_869 = dead_value
                        raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                             start_line=1580,
                                                             start_column=42,
                                                             end_line=1580,
                                                             end_column=77,
                                                             law_headings=["Article D823-9",
                                                             "Section 1 : Calcul, liquidation et versement des aides",
                                                             "Chapitre III : Modalités de liquidation et de versement",
                                                             "Titre II : Dispositions communes aux aides personnelles au logement",
                                                             "Livre VIII : Aides personnelles au logement",
                                                             "Partie réglementaire",
                                                             "Code de la construction et de l'habitation"]))
                    return calcul_allocation_logement_locatif(CalculAllocationLogementLocatifIn(loyer_principal_in = temp_sous_calcul_traitement_855,
                                                              ressources_menage_arrondies_in = temp_sous_calcul_traitement_856,
                                                              beneficiaire_aide_adulte_ou_enfant_handicapes_in = temp_sous_calcul_traitement_857,
                                                              date_courante_in = temp_sous_calcul_traitement_858,
                                                              nombre_personnes_a_charge_in = temp_sous_calcul_traitement_859,
                                                              situation_familiale_calcul_apl_in = temp_sous_calcul_traitement_860,
                                                              zone_in = temp_sous_calcul_traitement_861,
                                                              logement_est_chambre_in = temp_sous_calcul_traitement_862,
                                                              agees_ou_handicap_adultes_hebergees_onereux_particuliers_in = temp_sous_calcul_traitement_863,
                                                              type_aide_in = temp_sous_calcul_traitement_864,
                                                              colocation_in = temp_sous_calcul_traitement_865,
                                                              reduction_loyer_solidarite_in = temp_sous_calcul_traitement_866,
                                                              logement_meuble_d842_2_in = temp_sous_calcul_traitement_867,
                                                              residence_in = temp_sous_calcul_traitement_868,
                                                              changement_logement_d842_4_in = temp_sous_calcul_traitement_869)).traitement_aide_finale(
                        param0_11)
                try:
                    temp_sous_calcul_traitement_870 = location_5.loyer_principal
                except EmptyError:
                    temp_sous_calcul_traitement_870 = dead_value
                    raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                         start_line=1566,
                                                         start_column=31,
                                                         end_line=1566,
                                                         end_column=55,
                                                         law_headings=["Article D823-9",
                                                         "Section 1 : Calcul, liquidation et versement des aides",
                                                         "Chapitre III : Modalités de liquidation et de versement",
                                                         "Titre II : Dispositions communes aux aides personnelles au logement",
                                                         "Livre VIII : Aides personnelles au logement",
                                                         "Partie réglementaire",
                                                         "Code de la construction et de l'habitation"]))
                try:
                    temp_sous_calcul_traitement_871 = ressources_menage_avec_arrondi_1
                except EmptyError:
                    temp_sous_calcul_traitement_871 = dead_value
                    raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                         start_line=1561,
                                                         start_column=43,
                                                         end_line=1561,
                                                         end_column=60,
                                                         law_headings=["Article D823-9",
                                                         "Section 1 : Calcul, liquidation et versement des aides",
                                                         "Chapitre III : Modalités de liquidation et de versement",
                                                         "Titre II : Dispositions communes aux aides personnelles au logement",
                                                         "Livre VIII : Aides personnelles au logement",
                                                         "Partie réglementaire",
                                                         "Code de la construction et de l'habitation"]))
                try:
                    temp_sous_calcul_traitement_872 = location_5.beneficiaire_aide_adulte_ou_enfant_handicapes
                except EmptyError:
                    temp_sous_calcul_traitement_872 = dead_value
                    raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                         start_line=1568,
                                                         start_column=15,
                                                         end_line=1568,
                                                         end_column=69,
                                                         law_headings=["Article D823-9",
                                                         "Section 1 : Calcul, liquidation et versement des aides",
                                                         "Chapitre III : Modalités de liquidation et de versement",
                                                         "Titre II : Dispositions communes aux aides personnelles au logement",
                                                         "Livre VIII : Aides personnelles au logement",
                                                         "Partie réglementaire",
                                                         "Code de la construction et de l'habitation"]))
                try:
                    temp_sous_calcul_traitement_873 = date_courante_16
                except EmptyError:
                    temp_sous_calcul_traitement_873 = dead_value
                    raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                         start_line=1564,
                                                         start_column=29,
                                                         end_line=1564,
                                                         end_column=42,
                                                         law_headings=["Article D823-9",
                                                         "Section 1 : Calcul, liquidation et versement des aides",
                                                         "Chapitre III : Modalités de liquidation et de versement",
                                                         "Titre II : Dispositions communes aux aides personnelles au logement",
                                                         "Livre VIII : Aides personnelles au logement",
                                                         "Partie réglementaire",
                                                         "Code de la construction et de l'habitation"]))
                try:
                    temp_sous_calcul_traitement_874 = nombre_personnes_a_charge_12
                except EmptyError:
                    temp_sous_calcul_traitement_874 = dead_value
                    raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                         start_line=1562,
                                                         start_column=41,
                                                         end_line=1562,
                                                         end_column=66,
                                                         law_headings=["Article D823-9",
                                                         "Section 1 : Calcul, liquidation et versement des aides",
                                                         "Chapitre III : Modalités de liquidation et de versement",
                                                         "Titre II : Dispositions communes aux aides personnelles au logement",
                                                         "Livre VIII : Aides personnelles au logement",
                                                         "Partie réglementaire",
                                                         "Code de la construction et de l'habitation"]))
                try:
                    temp_sous_calcul_traitement_875 = situation_familiale_calcul_apl_9
                except EmptyError:
                    temp_sous_calcul_traitement_875 = dead_value
                    raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                         start_line=1565,
                                                         start_column=46,
                                                         end_line=1565,
                                                         end_column=76,
                                                         law_headings=["Article D823-9",
                                                         "Section 1 : Calcul, liquidation et versement des aides",
                                                         "Chapitre III : Modalités de liquidation et de versement",
                                                         "Titre II : Dispositions communes aux aides personnelles au logement",
                                                         "Livre VIII : Aides personnelles au logement",
                                                         "Partie réglementaire",
                                                         "Code de la construction et de l'habitation"]))
                try:
                    temp_sous_calcul_traitement_876 = zone_7
                except EmptyError:
                    temp_sous_calcul_traitement_876 = dead_value
                    raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                         start_line=1563,
                                                         start_column=20,
                                                         end_line=1563,
                                                         end_column=24,
                                                         law_headings=["Article D823-9",
                                                         "Section 1 : Calcul, liquidation et versement des aides",
                                                         "Chapitre III : Modalités de liquidation et de versement",
                                                         "Titre II : Dispositions communes aux aides personnelles au logement",
                                                         "Livre VIII : Aides personnelles au logement",
                                                         "Partie réglementaire",
                                                         "Code de la construction et de l'habitation"]))
                try:
                    temp_sous_calcul_traitement_877 = location_5.logement_est_chambre
                except EmptyError:
                    temp_sous_calcul_traitement_877 = dead_value
                    raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                         start_line=1569,
                                                         start_column=36,
                                                         end_line=1569,
                                                         end_column=65,
                                                         law_headings=["Article D823-9",
                                                         "Section 1 : Calcul, liquidation et versement des aides",
                                                         "Chapitre III : Modalités de liquidation et de versement",
                                                         "Titre II : Dispositions communes aux aides personnelles au logement",
                                                         "Livre VIII : Aides personnelles au logement",
                                                         "Partie réglementaire",
                                                         "Code de la construction et de l'habitation"]))
                try:
                    temp_sous_calcul_traitement_878 = location_5.agees_ou_handicap_adultes_hebergees_onereux_particuliers
                except EmptyError:
                    temp_sous_calcul_traitement_878 = dead_value
                    raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                         start_line=1572,
                                                         start_column=15,
                                                         end_line=1572,
                                                         end_column=80,
                                                         law_headings=["Article D823-9",
                                                         "Section 1 : Calcul, liquidation et versement des aides",
                                                         "Chapitre III : Modalités de liquidation et de versement",
                                                         "Titre II : Dispositions communes aux aides personnelles au logement",
                                                         "Livre VIII : Aides personnelles au logement",
                                                         "Partie réglementaire",
                                                         "Code de la construction et de l'habitation"]))
                try:
                    temp_sous_calcul_traitement_879 = type_aide_3
                except EmptyError:
                    temp_sous_calcul_traitement_879 = dead_value
                    raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                         start_line=1573,
                                                         start_column=25,
                                                         end_line=1573,
                                                         end_column=34,
                                                         law_headings=["Article D823-9",
                                                         "Section 1 : Calcul, liquidation et versement des aides",
                                                         "Chapitre III : Modalités de liquidation et de versement",
                                                         "Titre II : Dispositions communes aux aides personnelles au logement",
                                                         "Livre VIII : Aides personnelles au logement",
                                                         "Partie réglementaire",
                                                         "Code de la construction et de l'habitation"]))
                try:
                    temp_sous_calcul_traitement_880 = location_5.colocation
                except EmptyError:
                    temp_sous_calcul_traitement_880 = dead_value
                    raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                         start_line=1570,
                                                         start_column=26,
                                                         end_line=1570,
                                                         end_column=45,
                                                         law_headings=["Article D823-9",
                                                         "Section 1 : Calcul, liquidation et versement des aides",
                                                         "Chapitre III : Modalités de liquidation et de versement",
                                                         "Titre II : Dispositions communes aux aides personnelles au logement",
                                                         "Livre VIII : Aides personnelles au logement",
                                                         "Partie réglementaire",
                                                         "Code de la construction et de l'habitation"]))
                try:
                    match_arg_686 = location_5.bailleur
                    if match_arg_686.code == TypeBailleur_Code.BailleurSocial:
                        bailleur_17 = match_arg_686.value
                        temp_sous_calcul_traitement_881 = bailleur_17.reduction_loyer_solidarite_percue
                    elif match_arg_686.code == TypeBailleur_Code.BailleurPriveAvecConventionnementSocial:
                        _ = match_arg_686.value
                        temp_sous_calcul_traitement_881 = money_of_cents_string("0")
                    elif match_arg_686.code == TypeBailleur_Code.BailleurPrive:
                        _ = match_arg_686.value
                        temp_sous_calcul_traitement_881 = money_of_cents_string("0")
                except EmptyError:
                    temp_sous_calcul_traitement_881 = dead_value
                    raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                         start_line=1575,
                                                         start_column=16,
                                                         end_line=1578,
                                                         end_column=39,
                                                         law_headings=["Article D823-9",
                                                         "Section 1 : Calcul, liquidation et versement des aides",
                                                         "Chapitre III : Modalités de liquidation et de versement",
                                                         "Titre II : Dispositions communes aux aides personnelles au logement",
                                                         "Livre VIII : Aides personnelles au logement",
                                                         "Partie réglementaire",
                                                         "Code de la construction et de l'habitation"]))
                try:
                    temp_sous_calcul_traitement_882 = location_5.logement_meuble_d842_2
                except EmptyError:
                    temp_sous_calcul_traitement_882 = dead_value
                    raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                         start_line=1579,
                                                         start_column=38,
                                                         end_line=1579,
                                                         end_column=69,
                                                         law_headings=["Article D823-9",
                                                         "Section 1 : Calcul, liquidation et versement des aides",
                                                         "Chapitre III : Modalités de liquidation et de versement",
                                                         "Titre II : Dispositions communes aux aides personnelles au logement",
                                                         "Livre VIII : Aides personnelles au logement",
                                                         "Partie réglementaire",
                                                         "Code de la construction et de l'habitation"]))
                try:
                    temp_sous_calcul_traitement_883 = residence_9
                except EmptyError:
                    temp_sous_calcul_traitement_883 = dead_value
                    raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                         start_line=1560,
                                                         start_column=25,
                                                         end_line=1560,
                                                         end_column=34,
                                                         law_headings=["Article D823-9",
                                                         "Section 1 : Calcul, liquidation et versement des aides",
                                                         "Chapitre III : Modalités de liquidation et de versement",
                                                         "Titre II : Dispositions communes aux aides personnelles au logement",
                                                         "Livre VIII : Aides personnelles au logement",
                                                         "Partie réglementaire",
                                                         "Code de la construction et de l'habitation"]))
                try:
                    temp_sous_calcul_traitement_884 = location_5.changement_logement_d842_4
                except EmptyError:
                    temp_sous_calcul_traitement_884 = dead_value
                    raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                         start_line=1580,
                                                         start_column=42,
                                                         end_line=1580,
                                                         end_column=77,
                                                         law_headings=["Article D823-9",
                                                         "Section 1 : Calcul, liquidation et versement des aides",
                                                         "Chapitre III : Modalités de liquidation et de versement",
                                                         "Titre II : Dispositions communes aux aides personnelles au logement",
                                                         "Livre VIII : Aides personnelles au logement",
                                                         "Partie réglementaire",
                                                         "Code de la construction et de l'habitation"]))
                temp_sous_calcul_traitement_760 = TraitementFormuleAideFinale(aide_finale_formule = CalculAllocationLogementLocatif(aide_finale_formule = calcul_allocation_logement_locatif(
                    CalculAllocationLogementLocatifIn(loyer_principal_in = temp_sous_calcul_traitement_839,
                    ressources_menage_arrondies_in = temp_sous_calcul_traitement_840,
                    beneficiaire_aide_adulte_ou_enfant_handicapes_in = temp_sous_calcul_traitement_841,
                    date_courante_in = temp_sous_calcul_traitement_842,
                    nombre_personnes_a_charge_in = temp_sous_calcul_traitement_843,
                    situation_familiale_calcul_apl_in = temp_sous_calcul_traitement_844,
                    zone_in = temp_sous_calcul_traitement_845,
                    logement_est_chambre_in = temp_sous_calcul_traitement_846,
                    agees_ou_handicap_adultes_hebergees_onereux_particuliers_in = temp_sous_calcul_traitement_847,
                    type_aide_in = temp_sous_calcul_traitement_848,
                    colocation_in = temp_sous_calcul_traitement_849,
                    reduction_loyer_solidarite_in = temp_sous_calcul_traitement_850,
                    logement_meuble_d842_2_in = temp_sous_calcul_traitement_851,
                    residence_in = temp_sous_calcul_traitement_852,
                    changement_logement_d842_4_in = temp_sous_calcul_traitement_853)).aide_finale_formule,
                    traitement_aide_finale = temp_sous_calcul_traitement_823).aide_finale_formule,
                    traitement_aide_finale = CalculAllocationLogementLocatif(aide_finale_formule = calcul_allocation_logement_locatif(
                    CalculAllocationLogementLocatifIn(loyer_principal_in = temp_sous_calcul_traitement_870,
                    ressources_menage_arrondies_in = temp_sous_calcul_traitement_871,
                    beneficiaire_aide_adulte_ou_enfant_handicapes_in = temp_sous_calcul_traitement_872,
                    date_courante_in = temp_sous_calcul_traitement_873,
                    nombre_personnes_a_charge_in = temp_sous_calcul_traitement_874,
                    situation_familiale_calcul_apl_in = temp_sous_calcul_traitement_875,
                    zone_in = temp_sous_calcul_traitement_876,
                    logement_est_chambre_in = temp_sous_calcul_traitement_877,
                    agees_ou_handicap_adultes_hebergees_onereux_particuliers_in = temp_sous_calcul_traitement_878,
                    type_aide_in = temp_sous_calcul_traitement_879,
                    colocation_in = temp_sous_calcul_traitement_880,
                    reduction_loyer_solidarite_in = temp_sous_calcul_traitement_881,
                    logement_meuble_d842_2_in = temp_sous_calcul_traitement_882,
                    residence_in = temp_sous_calcul_traitement_883,
                    changement_logement_d842_4_in = temp_sous_calcul_traitement_884)).aide_finale_formule,
                    traitement_aide_finale = temp_sous_calcul_traitement_854).traitement_aide_finale)
            elif match_arg_682.code == CategorieCalculAPL_Code.AccessionPropriete:
                proprietaire_5 = match_arg_682.value
                def temp_sous_calcul_traitement_885(param0_12:Money):
                    try:
                        temp_sous_calcul_traitement_886 = ressources_menage_avec_arrondi_1
                    except EmptyError:
                        temp_sous_calcul_traitement_886 = dead_value
                        raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                             start_line=1615,
                                                             start_column=44,
                                                             end_line=1615,
                                                             end_column=61,
                                                             law_headings=["Article D823-9",
                                                             "Section 1 : Calcul, liquidation et versement des aides",
                                                             "Chapitre III : Modalités de liquidation et de versement",
                                                             "Titre II : Dispositions communes aux aides personnelles au logement",
                                                             "Livre VIII : Aides personnelles au logement",
                                                             "Partie réglementaire",
                                                             "Code de la construction et de l'habitation"]))
                    try:
                        temp_sous_calcul_traitement_887 = nombre_personnes_a_charge_12
                    except EmptyError:
                        temp_sous_calcul_traitement_887 = dead_value
                        raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                             start_line=1616,
                                                             start_column=42,
                                                             end_line=1616,
                                                             end_column=67,
                                                             law_headings=["Article D823-9",
                                                             "Section 1 : Calcul, liquidation et versement des aides",
                                                             "Chapitre III : Modalités de liquidation et de versement",
                                                             "Titre II : Dispositions communes aux aides personnelles au logement",
                                                             "Livre VIII : Aides personnelles au logement",
                                                             "Partie réglementaire",
                                                             "Code de la construction et de l'habitation"]))
                    try:
                        temp_sous_calcul_traitement_888 = situation_familiale_calcul_apl_9
                    except EmptyError:
                        temp_sous_calcul_traitement_888 = dead_value
                        raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                             start_line=1623,
                                                             start_column=47,
                                                             end_line=1623,
                                                             end_column=77,
                                                             law_headings=["Article D823-9",
                                                             "Section 1 : Calcul, liquidation et versement des aides",
                                                             "Chapitre III : Modalités de liquidation et de versement",
                                                             "Titre II : Dispositions communes aux aides personnelles au logement",
                                                             "Livre VIII : Aides personnelles au logement",
                                                             "Partie réglementaire",
                                                             "Code de la construction et de l'habitation"]))
                    try:
                        temp_sous_calcul_traitement_889 = zone_7
                    except EmptyError:
                        temp_sous_calcul_traitement_889 = dead_value
                        raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                             start_line=1617,
                                                             start_column=21,
                                                             end_line=1617,
                                                             end_column=25,
                                                             law_headings=["Article D823-9",
                                                             "Section 1 : Calcul, liquidation et versement des aides",
                                                             "Chapitre III : Modalités de liquidation et de versement",
                                                             "Titre II : Dispositions communes aux aides personnelles au logement",
                                                             "Livre VIII : Aides personnelles au logement",
                                                             "Partie réglementaire",
                                                             "Code de la construction et de l'habitation"]))
                    try:
                        temp_sous_calcul_traitement_890 = residence_9
                    except EmptyError:
                        temp_sous_calcul_traitement_890 = dead_value
                        raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                             start_line=1618,
                                                             start_column=26,
                                                             end_line=1618,
                                                             end_column=35,
                                                             law_headings=["Article D823-9",
                                                             "Section 1 : Calcul, liquidation et versement des aides",
                                                             "Chapitre III : Modalités de liquidation et de versement",
                                                             "Titre II : Dispositions communes aux aides personnelles au logement",
                                                             "Livre VIII : Aides personnelles au logement",
                                                             "Partie réglementaire",
                                                             "Code de la construction et de l'habitation"]))
                    try:
                        temp_sous_calcul_traitement_891 = date_courante_16
                    except EmptyError:
                        temp_sous_calcul_traitement_891 = dead_value
                        raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                             start_line=1622,
                                                             start_column=30,
                                                             end_line=1622,
                                                             end_column=43,
                                                             law_headings=["Article D823-9",
                                                             "Section 1 : Calcul, liquidation et versement des aides",
                                                             "Chapitre III : Modalités de liquidation et de versement",
                                                             "Titre II : Dispositions communes aux aides personnelles au logement",
                                                             "Livre VIII : Aides personnelles au logement",
                                                             "Partie réglementaire",
                                                             "Code de la construction et de l'habitation"]))
                    try:
                        temp_sous_calcul_traitement_892 = proprietaire_5.mensualite_principale
                    except EmptyError:
                        temp_sous_calcul_traitement_892 = dead_value
                        raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                             start_line=1624,
                                                             start_column=38,
                                                             end_line=1624,
                                                             end_column=72,
                                                             law_headings=["Article D823-9",
                                                             "Section 1 : Calcul, liquidation et versement des aides",
                                                             "Chapitre III : Modalités de liquidation et de versement",
                                                             "Titre II : Dispositions communes aux aides personnelles au logement",
                                                             "Livre VIII : Aides personnelles au logement",
                                                             "Partie réglementaire",
                                                             "Code de la construction et de l'habitation"]))
                    try:
                        temp_sous_calcul_traitement_893 = proprietaire_5.situation_r822_11_13_17
                    except EmptyError:
                        temp_sous_calcul_traitement_893 = dead_value
                        raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                             start_line=1632,
                                                             start_column=40,
                                                             end_line=1632,
                                                             end_column=76,
                                                             law_headings=["Article D823-9",
                                                             "Section 1 : Calcul, liquidation et versement des aides",
                                                             "Chapitre III : Modalités de liquidation et de versement",
                                                             "Titre II : Dispositions communes aux aides personnelles au logement",
                                                             "Livre VIII : Aides personnelles au logement",
                                                             "Partie réglementaire",
                                                             "Code de la construction et de l'habitation"]))
                    try:
                        temp_sous_calcul_traitement_894 = proprietaire_5.pret.date_signature
                    except EmptyError:
                        temp_sous_calcul_traitement_894 = dead_value
                        raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                             start_line=1627,
                                                             start_column=36,
                                                             end_line=1627,
                                                             end_column=68,
                                                             law_headings=["Article D823-9",
                                                             "Section 1 : Calcul, liquidation et versement des aides",
                                                             "Chapitre III : Modalités de liquidation et de versement",
                                                             "Titre II : Dispositions communes aux aides personnelles au logement",
                                                             "Livre VIII : Aides personnelles au logement",
                                                             "Partie réglementaire",
                                                             "Code de la construction et de l'habitation"]))
                    try:
                        temp_sous_calcul_traitement_895 = proprietaire_5.type_travaux_logement_r842_5
                    except EmptyError:
                        temp_sous_calcul_traitement_895 = dead_value
                        raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                             start_line=1626,
                                                             start_column=38,
                                                             end_line=1626,
                                                             end_column=79,
                                                             law_headings=["Article D823-9",
                                                             "Section 1 : Calcul, liquidation et versement des aides",
                                                             "Chapitre III : Modalités de liquidation et de versement",
                                                             "Titre II : Dispositions communes aux aides personnelles au logement",
                                                             "Livre VIII : Aides personnelles au logement",
                                                             "Partie réglementaire",
                                                             "Code de la construction et de l'habitation"]))
                    try:
                        temp_sous_calcul_traitement_896 = proprietaire_5.local_habite_premiere_fois_beneficiaire
                    except EmptyError:
                        temp_sous_calcul_traitement_896 = dead_value
                        raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                             start_line=1629,
                                                             start_column=14,
                                                             end_line=1629,
                                                             end_column=66,
                                                             law_headings=["Article D823-9",
                                                             "Section 1 : Calcul, liquidation et versement des aides",
                                                             "Chapitre III : Modalités de liquidation et de versement",
                                                             "Titre II : Dispositions communes aux aides personnelles au logement",
                                                             "Livre VIII : Aides personnelles au logement",
                                                             "Partie réglementaire",
                                                             "Code de la construction et de l'habitation"]))
                    try:
                        temp_sous_calcul_traitement_897 = proprietaire_5.date_entree_logement
                    except EmptyError:
                        temp_sous_calcul_traitement_897 = dead_value
                        raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                             start_line=1630,
                                                             start_column=37,
                                                             end_line=1630,
                                                             end_column=70,
                                                             law_headings=["Article D823-9",
                                                             "Section 1 : Calcul, liquidation et versement des aides",
                                                             "Chapitre III : Modalités de liquidation et de versement",
                                                             "Titre II : Dispositions communes aux aides personnelles au logement",
                                                             "Livre VIII : Aides personnelles au logement",
                                                             "Partie réglementaire",
                                                             "Code de la construction et de l'habitation"]))
                    try:
                        temp_sous_calcul_traitement_898 = proprietaire_5.charges_mensuelles_pret
                    except EmptyError:
                        temp_sous_calcul_traitement_898 = dead_value
                        raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                             start_line=1625,
                                                             start_column=40,
                                                             end_line=1625,
                                                             end_column=76,
                                                             law_headings=["Article D823-9",
                                                             "Section 1 : Calcul, liquidation et versement des aides",
                                                             "Chapitre III : Modalités de liquidation et de versement",
                                                             "Titre II : Dispositions communes aux aides personnelles au logement",
                                                             "Livre VIII : Aides personnelles au logement",
                                                             "Partie réglementaire",
                                                             "Code de la construction et de l'habitation"]))
                    try:
                        temp_sous_calcul_traitement_899 = proprietaire_5.copropriete
                    except EmptyError:
                        temp_sous_calcul_traitement_899 = dead_value
                        raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                             start_line=1631,
                                                             start_column=28,
                                                             end_line=1631,
                                                             end_column=52,
                                                             law_headings=["Article D823-9",
                                                             "Section 1 : Calcul, liquidation et versement des aides",
                                                             "Chapitre III : Modalités de liquidation et de versement",
                                                             "Titre II : Dispositions communes aux aides personnelles au logement",
                                                             "Livre VIII : Aides personnelles au logement",
                                                             "Partie réglementaire",
                                                             "Code de la construction et de l'habitation"]))
                    try:
                        temp_sous_calcul_traitement_900 = proprietaire_5.operations_logement_evolutifs_sociaux_accession_propriete_aidee_Etat
                    except EmptyError:
                        temp_sous_calcul_traitement_900 = dead_value
                        raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                             start_line=1620,
                                                             start_column=11,
                                                             end_line=1621,
                                                             end_column=81,
                                                             law_headings=["Article D823-9",
                                                             "Section 1 : Calcul, liquidation et versement des aides",
                                                             "Chapitre III : Modalités de liquidation et de versement",
                                                             "Titre II : Dispositions communes aux aides personnelles au logement",
                                                             "Livre VIII : Aides personnelles au logement",
                                                             "Partie réglementaire",
                                                             "Code de la construction et de l'habitation"]))
                    return calcul_allocation_logement_accession_propriete(
                        CalculAllocationLogementAccessionProprieteIn(ressources_menage_arrondies_base_in = temp_sous_calcul_traitement_886,
                        nombre_personnes_a_charge_in = temp_sous_calcul_traitement_887,
                        situation_familiale_calcul_apl_in = temp_sous_calcul_traitement_888,
                        zone_in = temp_sous_calcul_traitement_889,
                        residence_in = temp_sous_calcul_traitement_890,
                        date_courante_in = temp_sous_calcul_traitement_891,
                        mensualite_principale_in = temp_sous_calcul_traitement_892,
                        situation_r822_11_13_17_in = temp_sous_calcul_traitement_893,
                        date_signature_pret_in = temp_sous_calcul_traitement_894,
                        type_travaux_logement_in = temp_sous_calcul_traitement_895,
                        local_habite_premiere_fois_beneficiaire_in = temp_sous_calcul_traitement_896,
                        date_entree_logement_in = temp_sous_calcul_traitement_897,
                        charges_mensuelles_pret_in = temp_sous_calcul_traitement_898,
                        copropriete_in = temp_sous_calcul_traitement_899,
                        operations_logement_evolutifs_sociaux_accession_propriete_aidee_Etat_in = temp_sous_calcul_traitement_900)).traitement_aide_finale(
                        param0_12)
                try:
                    temp_sous_calcul_traitement_901 = ressources_menage_avec_arrondi_1
                except EmptyError:
                    temp_sous_calcul_traitement_901 = dead_value
                    raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                         start_line=1615,
                                                         start_column=44,
                                                         end_line=1615,
                                                         end_column=61,
                                                         law_headings=["Article D823-9",
                                                         "Section 1 : Calcul, liquidation et versement des aides",
                                                         "Chapitre III : Modalités de liquidation et de versement",
                                                         "Titre II : Dispositions communes aux aides personnelles au logement",
                                                         "Livre VIII : Aides personnelles au logement",
                                                         "Partie réglementaire",
                                                         "Code de la construction et de l'habitation"]))
                try:
                    temp_sous_calcul_traitement_902 = nombre_personnes_a_charge_12
                except EmptyError:
                    temp_sous_calcul_traitement_902 = dead_value
                    raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                         start_line=1616,
                                                         start_column=42,
                                                         end_line=1616,
                                                         end_column=67,
                                                         law_headings=["Article D823-9",
                                                         "Section 1 : Calcul, liquidation et versement des aides",
                                                         "Chapitre III : Modalités de liquidation et de versement",
                                                         "Titre II : Dispositions communes aux aides personnelles au logement",
                                                         "Livre VIII : Aides personnelles au logement",
                                                         "Partie réglementaire",
                                                         "Code de la construction et de l'habitation"]))
                try:
                    temp_sous_calcul_traitement_903 = situation_familiale_calcul_apl_9
                except EmptyError:
                    temp_sous_calcul_traitement_903 = dead_value
                    raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                         start_line=1623,
                                                         start_column=47,
                                                         end_line=1623,
                                                         end_column=77,
                                                         law_headings=["Article D823-9",
                                                         "Section 1 : Calcul, liquidation et versement des aides",
                                                         "Chapitre III : Modalités de liquidation et de versement",
                                                         "Titre II : Dispositions communes aux aides personnelles au logement",
                                                         "Livre VIII : Aides personnelles au logement",
                                                         "Partie réglementaire",
                                                         "Code de la construction et de l'habitation"]))
                try:
                    temp_sous_calcul_traitement_904 = zone_7
                except EmptyError:
                    temp_sous_calcul_traitement_904 = dead_value
                    raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                         start_line=1617,
                                                         start_column=21,
                                                         end_line=1617,
                                                         end_column=25,
                                                         law_headings=["Article D823-9",
                                                         "Section 1 : Calcul, liquidation et versement des aides",
                                                         "Chapitre III : Modalités de liquidation et de versement",
                                                         "Titre II : Dispositions communes aux aides personnelles au logement",
                                                         "Livre VIII : Aides personnelles au logement",
                                                         "Partie réglementaire",
                                                         "Code de la construction et de l'habitation"]))
                try:
                    temp_sous_calcul_traitement_905 = residence_9
                except EmptyError:
                    temp_sous_calcul_traitement_905 = dead_value
                    raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                         start_line=1618,
                                                         start_column=26,
                                                         end_line=1618,
                                                         end_column=35,
                                                         law_headings=["Article D823-9",
                                                         "Section 1 : Calcul, liquidation et versement des aides",
                                                         "Chapitre III : Modalités de liquidation et de versement",
                                                         "Titre II : Dispositions communes aux aides personnelles au logement",
                                                         "Livre VIII : Aides personnelles au logement",
                                                         "Partie réglementaire",
                                                         "Code de la construction et de l'habitation"]))
                try:
                    temp_sous_calcul_traitement_906 = date_courante_16
                except EmptyError:
                    temp_sous_calcul_traitement_906 = dead_value
                    raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                         start_line=1622,
                                                         start_column=30,
                                                         end_line=1622,
                                                         end_column=43,
                                                         law_headings=["Article D823-9",
                                                         "Section 1 : Calcul, liquidation et versement des aides",
                                                         "Chapitre III : Modalités de liquidation et de versement",
                                                         "Titre II : Dispositions communes aux aides personnelles au logement",
                                                         "Livre VIII : Aides personnelles au logement",
                                                         "Partie réglementaire",
                                                         "Code de la construction et de l'habitation"]))
                try:
                    temp_sous_calcul_traitement_907 = proprietaire_5.mensualite_principale
                except EmptyError:
                    temp_sous_calcul_traitement_907 = dead_value
                    raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                         start_line=1624,
                                                         start_column=38,
                                                         end_line=1624,
                                                         end_column=72,
                                                         law_headings=["Article D823-9",
                                                         "Section 1 : Calcul, liquidation et versement des aides",
                                                         "Chapitre III : Modalités de liquidation et de versement",
                                                         "Titre II : Dispositions communes aux aides personnelles au logement",
                                                         "Livre VIII : Aides personnelles au logement",
                                                         "Partie réglementaire",
                                                         "Code de la construction et de l'habitation"]))
                try:
                    temp_sous_calcul_traitement_908 = proprietaire_5.situation_r822_11_13_17
                except EmptyError:
                    temp_sous_calcul_traitement_908 = dead_value
                    raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                         start_line=1632,
                                                         start_column=40,
                                                         end_line=1632,
                                                         end_column=76,
                                                         law_headings=["Article D823-9",
                                                         "Section 1 : Calcul, liquidation et versement des aides",
                                                         "Chapitre III : Modalités de liquidation et de versement",
                                                         "Titre II : Dispositions communes aux aides personnelles au logement",
                                                         "Livre VIII : Aides personnelles au logement",
                                                         "Partie réglementaire",
                                                         "Code de la construction et de l'habitation"]))
                try:
                    temp_sous_calcul_traitement_909 = proprietaire_5.pret.date_signature
                except EmptyError:
                    temp_sous_calcul_traitement_909 = dead_value
                    raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                         start_line=1627,
                                                         start_column=36,
                                                         end_line=1627,
                                                         end_column=68,
                                                         law_headings=["Article D823-9",
                                                         "Section 1 : Calcul, liquidation et versement des aides",
                                                         "Chapitre III : Modalités de liquidation et de versement",
                                                         "Titre II : Dispositions communes aux aides personnelles au logement",
                                                         "Livre VIII : Aides personnelles au logement",
                                                         "Partie réglementaire",
                                                         "Code de la construction et de l'habitation"]))
                try:
                    temp_sous_calcul_traitement_910 = proprietaire_5.type_travaux_logement_r842_5
                except EmptyError:
                    temp_sous_calcul_traitement_910 = dead_value
                    raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                         start_line=1626,
                                                         start_column=38,
                                                         end_line=1626,
                                                         end_column=79,
                                                         law_headings=["Article D823-9",
                                                         "Section 1 : Calcul, liquidation et versement des aides",
                                                         "Chapitre III : Modalités de liquidation et de versement",
                                                         "Titre II : Dispositions communes aux aides personnelles au logement",
                                                         "Livre VIII : Aides personnelles au logement",
                                                         "Partie réglementaire",
                                                         "Code de la construction et de l'habitation"]))
                try:
                    temp_sous_calcul_traitement_911 = proprietaire_5.local_habite_premiere_fois_beneficiaire
                except EmptyError:
                    temp_sous_calcul_traitement_911 = dead_value
                    raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                         start_line=1629,
                                                         start_column=14,
                                                         end_line=1629,
                                                         end_column=66,
                                                         law_headings=["Article D823-9",
                                                         "Section 1 : Calcul, liquidation et versement des aides",
                                                         "Chapitre III : Modalités de liquidation et de versement",
                                                         "Titre II : Dispositions communes aux aides personnelles au logement",
                                                         "Livre VIII : Aides personnelles au logement",
                                                         "Partie réglementaire",
                                                         "Code de la construction et de l'habitation"]))
                try:
                    temp_sous_calcul_traitement_912 = proprietaire_5.date_entree_logement
                except EmptyError:
                    temp_sous_calcul_traitement_912 = dead_value
                    raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                         start_line=1630,
                                                         start_column=37,
                                                         end_line=1630,
                                                         end_column=70,
                                                         law_headings=["Article D823-9",
                                                         "Section 1 : Calcul, liquidation et versement des aides",
                                                         "Chapitre III : Modalités de liquidation et de versement",
                                                         "Titre II : Dispositions communes aux aides personnelles au logement",
                                                         "Livre VIII : Aides personnelles au logement",
                                                         "Partie réglementaire",
                                                         "Code de la construction et de l'habitation"]))
                try:
                    temp_sous_calcul_traitement_913 = proprietaire_5.charges_mensuelles_pret
                except EmptyError:
                    temp_sous_calcul_traitement_913 = dead_value
                    raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                         start_line=1625,
                                                         start_column=40,
                                                         end_line=1625,
                                                         end_column=76,
                                                         law_headings=["Article D823-9",
                                                         "Section 1 : Calcul, liquidation et versement des aides",
                                                         "Chapitre III : Modalités de liquidation et de versement",
                                                         "Titre II : Dispositions communes aux aides personnelles au logement",
                                                         "Livre VIII : Aides personnelles au logement",
                                                         "Partie réglementaire",
                                                         "Code de la construction et de l'habitation"]))
                try:
                    temp_sous_calcul_traitement_914 = proprietaire_5.copropriete
                except EmptyError:
                    temp_sous_calcul_traitement_914 = dead_value
                    raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                         start_line=1631,
                                                         start_column=28,
                                                         end_line=1631,
                                                         end_column=52,
                                                         law_headings=["Article D823-9",
                                                         "Section 1 : Calcul, liquidation et versement des aides",
                                                         "Chapitre III : Modalités de liquidation et de versement",
                                                         "Titre II : Dispositions communes aux aides personnelles au logement",
                                                         "Livre VIII : Aides personnelles au logement",
                                                         "Partie réglementaire",
                                                         "Code de la construction et de l'habitation"]))
                try:
                    temp_sous_calcul_traitement_915 = proprietaire_5.operations_logement_evolutifs_sociaux_accession_propriete_aidee_Etat
                except EmptyError:
                    temp_sous_calcul_traitement_915 = dead_value
                    raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                         start_line=1620,
                                                         start_column=11,
                                                         end_line=1621,
                                                         end_column=81,
                                                         law_headings=["Article D823-9",
                                                         "Section 1 : Calcul, liquidation et versement des aides",
                                                         "Chapitre III : Modalités de liquidation et de versement",
                                                         "Titre II : Dispositions communes aux aides personnelles au logement",
                                                         "Livre VIII : Aides personnelles au logement",
                                                         "Partie réglementaire",
                                                         "Code de la construction et de l'habitation"]))
                try:
                    temp_sous_calcul_traitement_916 = ressources_menage_avec_arrondi_1
                except EmptyError:
                    temp_sous_calcul_traitement_916 = dead_value
                    raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                         start_line=1615,
                                                         start_column=44,
                                                         end_line=1615,
                                                         end_column=61,
                                                         law_headings=["Article D823-9",
                                                         "Section 1 : Calcul, liquidation et versement des aides",
                                                         "Chapitre III : Modalités de liquidation et de versement",
                                                         "Titre II : Dispositions communes aux aides personnelles au logement",
                                                         "Livre VIII : Aides personnelles au logement",
                                                         "Partie réglementaire",
                                                         "Code de la construction et de l'habitation"]))
                try:
                    temp_sous_calcul_traitement_917 = nombre_personnes_a_charge_12
                except EmptyError:
                    temp_sous_calcul_traitement_917 = dead_value
                    raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                         start_line=1616,
                                                         start_column=42,
                                                         end_line=1616,
                                                         end_column=67,
                                                         law_headings=["Article D823-9",
                                                         "Section 1 : Calcul, liquidation et versement des aides",
                                                         "Chapitre III : Modalités de liquidation et de versement",
                                                         "Titre II : Dispositions communes aux aides personnelles au logement",
                                                         "Livre VIII : Aides personnelles au logement",
                                                         "Partie réglementaire",
                                                         "Code de la construction et de l'habitation"]))
                try:
                    temp_sous_calcul_traitement_918 = situation_familiale_calcul_apl_9
                except EmptyError:
                    temp_sous_calcul_traitement_918 = dead_value
                    raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                         start_line=1623,
                                                         start_column=47,
                                                         end_line=1623,
                                                         end_column=77,
                                                         law_headings=["Article D823-9",
                                                         "Section 1 : Calcul, liquidation et versement des aides",
                                                         "Chapitre III : Modalités de liquidation et de versement",
                                                         "Titre II : Dispositions communes aux aides personnelles au logement",
                                                         "Livre VIII : Aides personnelles au logement",
                                                         "Partie réglementaire",
                                                         "Code de la construction et de l'habitation"]))
                try:
                    temp_sous_calcul_traitement_919 = zone_7
                except EmptyError:
                    temp_sous_calcul_traitement_919 = dead_value
                    raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                         start_line=1617,
                                                         start_column=21,
                                                         end_line=1617,
                                                         end_column=25,
                                                         law_headings=["Article D823-9",
                                                         "Section 1 : Calcul, liquidation et versement des aides",
                                                         "Chapitre III : Modalités de liquidation et de versement",
                                                         "Titre II : Dispositions communes aux aides personnelles au logement",
                                                         "Livre VIII : Aides personnelles au logement",
                                                         "Partie réglementaire",
                                                         "Code de la construction et de l'habitation"]))
                try:
                    temp_sous_calcul_traitement_920 = residence_9
                except EmptyError:
                    temp_sous_calcul_traitement_920 = dead_value
                    raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                         start_line=1618,
                                                         start_column=26,
                                                         end_line=1618,
                                                         end_column=35,
                                                         law_headings=["Article D823-9",
                                                         "Section 1 : Calcul, liquidation et versement des aides",
                                                         "Chapitre III : Modalités de liquidation et de versement",
                                                         "Titre II : Dispositions communes aux aides personnelles au logement",
                                                         "Livre VIII : Aides personnelles au logement",
                                                         "Partie réglementaire",
                                                         "Code de la construction et de l'habitation"]))
                try:
                    temp_sous_calcul_traitement_921 = date_courante_16
                except EmptyError:
                    temp_sous_calcul_traitement_921 = dead_value
                    raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                         start_line=1622,
                                                         start_column=30,
                                                         end_line=1622,
                                                         end_column=43,
                                                         law_headings=["Article D823-9",
                                                         "Section 1 : Calcul, liquidation et versement des aides",
                                                         "Chapitre III : Modalités de liquidation et de versement",
                                                         "Titre II : Dispositions communes aux aides personnelles au logement",
                                                         "Livre VIII : Aides personnelles au logement",
                                                         "Partie réglementaire",
                                                         "Code de la construction et de l'habitation"]))
                try:
                    temp_sous_calcul_traitement_922 = proprietaire_5.mensualite_principale
                except EmptyError:
                    temp_sous_calcul_traitement_922 = dead_value
                    raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                         start_line=1624,
                                                         start_column=38,
                                                         end_line=1624,
                                                         end_column=72,
                                                         law_headings=["Article D823-9",
                                                         "Section 1 : Calcul, liquidation et versement des aides",
                                                         "Chapitre III : Modalités de liquidation et de versement",
                                                         "Titre II : Dispositions communes aux aides personnelles au logement",
                                                         "Livre VIII : Aides personnelles au logement",
                                                         "Partie réglementaire",
                                                         "Code de la construction et de l'habitation"]))
                try:
                    temp_sous_calcul_traitement_923 = proprietaire_5.situation_r822_11_13_17
                except EmptyError:
                    temp_sous_calcul_traitement_923 = dead_value
                    raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                         start_line=1632,
                                                         start_column=40,
                                                         end_line=1632,
                                                         end_column=76,
                                                         law_headings=["Article D823-9",
                                                         "Section 1 : Calcul, liquidation et versement des aides",
                                                         "Chapitre III : Modalités de liquidation et de versement",
                                                         "Titre II : Dispositions communes aux aides personnelles au logement",
                                                         "Livre VIII : Aides personnelles au logement",
                                                         "Partie réglementaire",
                                                         "Code de la construction et de l'habitation"]))
                try:
                    temp_sous_calcul_traitement_924 = proprietaire_5.pret.date_signature
                except EmptyError:
                    temp_sous_calcul_traitement_924 = dead_value
                    raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                         start_line=1627,
                                                         start_column=36,
                                                         end_line=1627,
                                                         end_column=68,
                                                         law_headings=["Article D823-9",
                                                         "Section 1 : Calcul, liquidation et versement des aides",
                                                         "Chapitre III : Modalités de liquidation et de versement",
                                                         "Titre II : Dispositions communes aux aides personnelles au logement",
                                                         "Livre VIII : Aides personnelles au logement",
                                                         "Partie réglementaire",
                                                         "Code de la construction et de l'habitation"]))
                try:
                    temp_sous_calcul_traitement_925 = proprietaire_5.type_travaux_logement_r842_5
                except EmptyError:
                    temp_sous_calcul_traitement_925 = dead_value
                    raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                         start_line=1626,
                                                         start_column=38,
                                                         end_line=1626,
                                                         end_column=79,
                                                         law_headings=["Article D823-9",
                                                         "Section 1 : Calcul, liquidation et versement des aides",
                                                         "Chapitre III : Modalités de liquidation et de versement",
                                                         "Titre II : Dispositions communes aux aides personnelles au logement",
                                                         "Livre VIII : Aides personnelles au logement",
                                                         "Partie réglementaire",
                                                         "Code de la construction et de l'habitation"]))
                try:
                    temp_sous_calcul_traitement_926 = proprietaire_5.local_habite_premiere_fois_beneficiaire
                except EmptyError:
                    temp_sous_calcul_traitement_926 = dead_value
                    raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                         start_line=1629,
                                                         start_column=14,
                                                         end_line=1629,
                                                         end_column=66,
                                                         law_headings=["Article D823-9",
                                                         "Section 1 : Calcul, liquidation et versement des aides",
                                                         "Chapitre III : Modalités de liquidation et de versement",
                                                         "Titre II : Dispositions communes aux aides personnelles au logement",
                                                         "Livre VIII : Aides personnelles au logement",
                                                         "Partie réglementaire",
                                                         "Code de la construction et de l'habitation"]))
                try:
                    temp_sous_calcul_traitement_927 = proprietaire_5.date_entree_logement
                except EmptyError:
                    temp_sous_calcul_traitement_927 = dead_value
                    raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                         start_line=1630,
                                                         start_column=37,
                                                         end_line=1630,
                                                         end_column=70,
                                                         law_headings=["Article D823-9",
                                                         "Section 1 : Calcul, liquidation et versement des aides",
                                                         "Chapitre III : Modalités de liquidation et de versement",
                                                         "Titre II : Dispositions communes aux aides personnelles au logement",
                                                         "Livre VIII : Aides personnelles au logement",
                                                         "Partie réglementaire",
                                                         "Code de la construction et de l'habitation"]))
                try:
                    temp_sous_calcul_traitement_928 = proprietaire_5.charges_mensuelles_pret
                except EmptyError:
                    temp_sous_calcul_traitement_928 = dead_value
                    raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                         start_line=1625,
                                                         start_column=40,
                                                         end_line=1625,
                                                         end_column=76,
                                                         law_headings=["Article D823-9",
                                                         "Section 1 : Calcul, liquidation et versement des aides",
                                                         "Chapitre III : Modalités de liquidation et de versement",
                                                         "Titre II : Dispositions communes aux aides personnelles au logement",
                                                         "Livre VIII : Aides personnelles au logement",
                                                         "Partie réglementaire",
                                                         "Code de la construction et de l'habitation"]))
                try:
                    temp_sous_calcul_traitement_929 = proprietaire_5.copropriete
                except EmptyError:
                    temp_sous_calcul_traitement_929 = dead_value
                    raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                         start_line=1631,
                                                         start_column=28,
                                                         end_line=1631,
                                                         end_column=52,
                                                         law_headings=["Article D823-9",
                                                         "Section 1 : Calcul, liquidation et versement des aides",
                                                         "Chapitre III : Modalités de liquidation et de versement",
                                                         "Titre II : Dispositions communes aux aides personnelles au logement",
                                                         "Livre VIII : Aides personnelles au logement",
                                                         "Partie réglementaire",
                                                         "Code de la construction et de l'habitation"]))
                try:
                    temp_sous_calcul_traitement_930 = proprietaire_5.operations_logement_evolutifs_sociaux_accession_propriete_aidee_Etat
                except EmptyError:
                    temp_sous_calcul_traitement_930 = dead_value
                    raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                         start_line=1620,
                                                         start_column=11,
                                                         end_line=1621,
                                                         end_column=81,
                                                         law_headings=["Article D823-9",
                                                         "Section 1 : Calcul, liquidation et versement des aides",
                                                         "Chapitre III : Modalités de liquidation et de versement",
                                                         "Titre II : Dispositions communes aux aides personnelles au logement",
                                                         "Livre VIII : Aides personnelles au logement",
                                                         "Partie réglementaire",
                                                         "Code de la construction et de l'habitation"]))
                try:
                    temp_sous_calcul_traitement_931 = ressources_menage_avec_arrondi_1
                except EmptyError:
                    temp_sous_calcul_traitement_931 = dead_value
                    raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                         start_line=1615,
                                                         start_column=44,
                                                         end_line=1615,
                                                         end_column=61,
                                                         law_headings=["Article D823-9",
                                                         "Section 1 : Calcul, liquidation et versement des aides",
                                                         "Chapitre III : Modalités de liquidation et de versement",
                                                         "Titre II : Dispositions communes aux aides personnelles au logement",
                                                         "Livre VIII : Aides personnelles au logement",
                                                         "Partie réglementaire",
                                                         "Code de la construction et de l'habitation"]))
                try:
                    temp_sous_calcul_traitement_932 = nombre_personnes_a_charge_12
                except EmptyError:
                    temp_sous_calcul_traitement_932 = dead_value
                    raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                         start_line=1616,
                                                         start_column=42,
                                                         end_line=1616,
                                                         end_column=67,
                                                         law_headings=["Article D823-9",
                                                         "Section 1 : Calcul, liquidation et versement des aides",
                                                         "Chapitre III : Modalités de liquidation et de versement",
                                                         "Titre II : Dispositions communes aux aides personnelles au logement",
                                                         "Livre VIII : Aides personnelles au logement",
                                                         "Partie réglementaire",
                                                         "Code de la construction et de l'habitation"]))
                try:
                    temp_sous_calcul_traitement_933 = situation_familiale_calcul_apl_9
                except EmptyError:
                    temp_sous_calcul_traitement_933 = dead_value
                    raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                         start_line=1623,
                                                         start_column=47,
                                                         end_line=1623,
                                                         end_column=77,
                                                         law_headings=["Article D823-9",
                                                         "Section 1 : Calcul, liquidation et versement des aides",
                                                         "Chapitre III : Modalités de liquidation et de versement",
                                                         "Titre II : Dispositions communes aux aides personnelles au logement",
                                                         "Livre VIII : Aides personnelles au logement",
                                                         "Partie réglementaire",
                                                         "Code de la construction et de l'habitation"]))
                try:
                    temp_sous_calcul_traitement_934 = zone_7
                except EmptyError:
                    temp_sous_calcul_traitement_934 = dead_value
                    raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                         start_line=1617,
                                                         start_column=21,
                                                         end_line=1617,
                                                         end_column=25,
                                                         law_headings=["Article D823-9",
                                                         "Section 1 : Calcul, liquidation et versement des aides",
                                                         "Chapitre III : Modalités de liquidation et de versement",
                                                         "Titre II : Dispositions communes aux aides personnelles au logement",
                                                         "Livre VIII : Aides personnelles au logement",
                                                         "Partie réglementaire",
                                                         "Code de la construction et de l'habitation"]))
                try:
                    temp_sous_calcul_traitement_935 = residence_9
                except EmptyError:
                    temp_sous_calcul_traitement_935 = dead_value
                    raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                         start_line=1618,
                                                         start_column=26,
                                                         end_line=1618,
                                                         end_column=35,
                                                         law_headings=["Article D823-9",
                                                         "Section 1 : Calcul, liquidation et versement des aides",
                                                         "Chapitre III : Modalités de liquidation et de versement",
                                                         "Titre II : Dispositions communes aux aides personnelles au logement",
                                                         "Livre VIII : Aides personnelles au logement",
                                                         "Partie réglementaire",
                                                         "Code de la construction et de l'habitation"]))
                try:
                    temp_sous_calcul_traitement_936 = date_courante_16
                except EmptyError:
                    temp_sous_calcul_traitement_936 = dead_value
                    raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                         start_line=1622,
                                                         start_column=30,
                                                         end_line=1622,
                                                         end_column=43,
                                                         law_headings=["Article D823-9",
                                                         "Section 1 : Calcul, liquidation et versement des aides",
                                                         "Chapitre III : Modalités de liquidation et de versement",
                                                         "Titre II : Dispositions communes aux aides personnelles au logement",
                                                         "Livre VIII : Aides personnelles au logement",
                                                         "Partie réglementaire",
                                                         "Code de la construction et de l'habitation"]))
                try:
                    temp_sous_calcul_traitement_937 = proprietaire_5.mensualite_principale
                except EmptyError:
                    temp_sous_calcul_traitement_937 = dead_value
                    raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                         start_line=1624,
                                                         start_column=38,
                                                         end_line=1624,
                                                         end_column=72,
                                                         law_headings=["Article D823-9",
                                                         "Section 1 : Calcul, liquidation et versement des aides",
                                                         "Chapitre III : Modalités de liquidation et de versement",
                                                         "Titre II : Dispositions communes aux aides personnelles au logement",
                                                         "Livre VIII : Aides personnelles au logement",
                                                         "Partie réglementaire",
                                                         "Code de la construction et de l'habitation"]))
                try:
                    temp_sous_calcul_traitement_938 = proprietaire_5.situation_r822_11_13_17
                except EmptyError:
                    temp_sous_calcul_traitement_938 = dead_value
                    raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                         start_line=1632,
                                                         start_column=40,
                                                         end_line=1632,
                                                         end_column=76,
                                                         law_headings=["Article D823-9",
                                                         "Section 1 : Calcul, liquidation et versement des aides",
                                                         "Chapitre III : Modalités de liquidation et de versement",
                                                         "Titre II : Dispositions communes aux aides personnelles au logement",
                                                         "Livre VIII : Aides personnelles au logement",
                                                         "Partie réglementaire",
                                                         "Code de la construction et de l'habitation"]))
                try:
                    temp_sous_calcul_traitement_939 = proprietaire_5.pret.date_signature
                except EmptyError:
                    temp_sous_calcul_traitement_939 = dead_value
                    raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                         start_line=1627,
                                                         start_column=36,
                                                         end_line=1627,
                                                         end_column=68,
                                                         law_headings=["Article D823-9",
                                                         "Section 1 : Calcul, liquidation et versement des aides",
                                                         "Chapitre III : Modalités de liquidation et de versement",
                                                         "Titre II : Dispositions communes aux aides personnelles au logement",
                                                         "Livre VIII : Aides personnelles au logement",
                                                         "Partie réglementaire",
                                                         "Code de la construction et de l'habitation"]))
                try:
                    temp_sous_calcul_traitement_940 = proprietaire_5.type_travaux_logement_r842_5
                except EmptyError:
                    temp_sous_calcul_traitement_940 = dead_value
                    raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                         start_line=1626,
                                                         start_column=38,
                                                         end_line=1626,
                                                         end_column=79,
                                                         law_headings=["Article D823-9",
                                                         "Section 1 : Calcul, liquidation et versement des aides",
                                                         "Chapitre III : Modalités de liquidation et de versement",
                                                         "Titre II : Dispositions communes aux aides personnelles au logement",
                                                         "Livre VIII : Aides personnelles au logement",
                                                         "Partie réglementaire",
                                                         "Code de la construction et de l'habitation"]))
                try:
                    temp_sous_calcul_traitement_941 = proprietaire_5.local_habite_premiere_fois_beneficiaire
                except EmptyError:
                    temp_sous_calcul_traitement_941 = dead_value
                    raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                         start_line=1629,
                                                         start_column=14,
                                                         end_line=1629,
                                                         end_column=66,
                                                         law_headings=["Article D823-9",
                                                         "Section 1 : Calcul, liquidation et versement des aides",
                                                         "Chapitre III : Modalités de liquidation et de versement",
                                                         "Titre II : Dispositions communes aux aides personnelles au logement",
                                                         "Livre VIII : Aides personnelles au logement",
                                                         "Partie réglementaire",
                                                         "Code de la construction et de l'habitation"]))
                try:
                    temp_sous_calcul_traitement_942 = proprietaire_5.date_entree_logement
                except EmptyError:
                    temp_sous_calcul_traitement_942 = dead_value
                    raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                         start_line=1630,
                                                         start_column=37,
                                                         end_line=1630,
                                                         end_column=70,
                                                         law_headings=["Article D823-9",
                                                         "Section 1 : Calcul, liquidation et versement des aides",
                                                         "Chapitre III : Modalités de liquidation et de versement",
                                                         "Titre II : Dispositions communes aux aides personnelles au logement",
                                                         "Livre VIII : Aides personnelles au logement",
                                                         "Partie réglementaire",
                                                         "Code de la construction et de l'habitation"]))
                try:
                    temp_sous_calcul_traitement_943 = proprietaire_5.charges_mensuelles_pret
                except EmptyError:
                    temp_sous_calcul_traitement_943 = dead_value
                    raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                         start_line=1625,
                                                         start_column=40,
                                                         end_line=1625,
                                                         end_column=76,
                                                         law_headings=["Article D823-9",
                                                         "Section 1 : Calcul, liquidation et versement des aides",
                                                         "Chapitre III : Modalités de liquidation et de versement",
                                                         "Titre II : Dispositions communes aux aides personnelles au logement",
                                                         "Livre VIII : Aides personnelles au logement",
                                                         "Partie réglementaire",
                                                         "Code de la construction et de l'habitation"]))
                try:
                    temp_sous_calcul_traitement_944 = proprietaire_5.copropriete
                except EmptyError:
                    temp_sous_calcul_traitement_944 = dead_value
                    raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                         start_line=1631,
                                                         start_column=28,
                                                         end_line=1631,
                                                         end_column=52,
                                                         law_headings=["Article D823-9",
                                                         "Section 1 : Calcul, liquidation et versement des aides",
                                                         "Chapitre III : Modalités de liquidation et de versement",
                                                         "Titre II : Dispositions communes aux aides personnelles au logement",
                                                         "Livre VIII : Aides personnelles au logement",
                                                         "Partie réglementaire",
                                                         "Code de la construction et de l'habitation"]))
                try:
                    temp_sous_calcul_traitement_945 = proprietaire_5.operations_logement_evolutifs_sociaux_accession_propriete_aidee_Etat
                except EmptyError:
                    temp_sous_calcul_traitement_945 = dead_value
                    raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                         start_line=1620,
                                                         start_column=11,
                                                         end_line=1621,
                                                         end_column=81,
                                                         law_headings=["Article D823-9",
                                                         "Section 1 : Calcul, liquidation et versement des aides",
                                                         "Chapitre III : Modalités de liquidation et de versement",
                                                         "Titre II : Dispositions communes aux aides personnelles au logement",
                                                         "Livre VIII : Aides personnelles au logement",
                                                         "Partie réglementaire",
                                                         "Code de la construction et de l'habitation"]))
                try:
                    temp_sous_calcul_traitement_946 = ressources_menage_avec_arrondi_1
                except EmptyError:
                    temp_sous_calcul_traitement_946 = dead_value
                    raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                         start_line=1615,
                                                         start_column=44,
                                                         end_line=1615,
                                                         end_column=61,
                                                         law_headings=["Article D823-9",
                                                         "Section 1 : Calcul, liquidation et versement des aides",
                                                         "Chapitre III : Modalités de liquidation et de versement",
                                                         "Titre II : Dispositions communes aux aides personnelles au logement",
                                                         "Livre VIII : Aides personnelles au logement",
                                                         "Partie réglementaire",
                                                         "Code de la construction et de l'habitation"]))
                try:
                    temp_sous_calcul_traitement_947 = nombre_personnes_a_charge_12
                except EmptyError:
                    temp_sous_calcul_traitement_947 = dead_value
                    raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                         start_line=1616,
                                                         start_column=42,
                                                         end_line=1616,
                                                         end_column=67,
                                                         law_headings=["Article D823-9",
                                                         "Section 1 : Calcul, liquidation et versement des aides",
                                                         "Chapitre III : Modalités de liquidation et de versement",
                                                         "Titre II : Dispositions communes aux aides personnelles au logement",
                                                         "Livre VIII : Aides personnelles au logement",
                                                         "Partie réglementaire",
                                                         "Code de la construction et de l'habitation"]))
                try:
                    temp_sous_calcul_traitement_948 = situation_familiale_calcul_apl_9
                except EmptyError:
                    temp_sous_calcul_traitement_948 = dead_value
                    raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                         start_line=1623,
                                                         start_column=47,
                                                         end_line=1623,
                                                         end_column=77,
                                                         law_headings=["Article D823-9",
                                                         "Section 1 : Calcul, liquidation et versement des aides",
                                                         "Chapitre III : Modalités de liquidation et de versement",
                                                         "Titre II : Dispositions communes aux aides personnelles au logement",
                                                         "Livre VIII : Aides personnelles au logement",
                                                         "Partie réglementaire",
                                                         "Code de la construction et de l'habitation"]))
                try:
                    temp_sous_calcul_traitement_949 = zone_7
                except EmptyError:
                    temp_sous_calcul_traitement_949 = dead_value
                    raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                         start_line=1617,
                                                         start_column=21,
                                                         end_line=1617,
                                                         end_column=25,
                                                         law_headings=["Article D823-9",
                                                         "Section 1 : Calcul, liquidation et versement des aides",
                                                         "Chapitre III : Modalités de liquidation et de versement",
                                                         "Titre II : Dispositions communes aux aides personnelles au logement",
                                                         "Livre VIII : Aides personnelles au logement",
                                                         "Partie réglementaire",
                                                         "Code de la construction et de l'habitation"]))
                try:
                    temp_sous_calcul_traitement_950 = residence_9
                except EmptyError:
                    temp_sous_calcul_traitement_950 = dead_value
                    raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                         start_line=1618,
                                                         start_column=26,
                                                         end_line=1618,
                                                         end_column=35,
                                                         law_headings=["Article D823-9",
                                                         "Section 1 : Calcul, liquidation et versement des aides",
                                                         "Chapitre III : Modalités de liquidation et de versement",
                                                         "Titre II : Dispositions communes aux aides personnelles au logement",
                                                         "Livre VIII : Aides personnelles au logement",
                                                         "Partie réglementaire",
                                                         "Code de la construction et de l'habitation"]))
                try:
                    temp_sous_calcul_traitement_951 = date_courante_16
                except EmptyError:
                    temp_sous_calcul_traitement_951 = dead_value
                    raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                         start_line=1622,
                                                         start_column=30,
                                                         end_line=1622,
                                                         end_column=43,
                                                         law_headings=["Article D823-9",
                                                         "Section 1 : Calcul, liquidation et versement des aides",
                                                         "Chapitre III : Modalités de liquidation et de versement",
                                                         "Titre II : Dispositions communes aux aides personnelles au logement",
                                                         "Livre VIII : Aides personnelles au logement",
                                                         "Partie réglementaire",
                                                         "Code de la construction et de l'habitation"]))
                try:
                    temp_sous_calcul_traitement_952 = proprietaire_5.mensualite_principale
                except EmptyError:
                    temp_sous_calcul_traitement_952 = dead_value
                    raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                         start_line=1624,
                                                         start_column=38,
                                                         end_line=1624,
                                                         end_column=72,
                                                         law_headings=["Article D823-9",
                                                         "Section 1 : Calcul, liquidation et versement des aides",
                                                         "Chapitre III : Modalités de liquidation et de versement",
                                                         "Titre II : Dispositions communes aux aides personnelles au logement",
                                                         "Livre VIII : Aides personnelles au logement",
                                                         "Partie réglementaire",
                                                         "Code de la construction et de l'habitation"]))
                try:
                    temp_sous_calcul_traitement_953 = proprietaire_5.situation_r822_11_13_17
                except EmptyError:
                    temp_sous_calcul_traitement_953 = dead_value
                    raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                         start_line=1632,
                                                         start_column=40,
                                                         end_line=1632,
                                                         end_column=76,
                                                         law_headings=["Article D823-9",
                                                         "Section 1 : Calcul, liquidation et versement des aides",
                                                         "Chapitre III : Modalités de liquidation et de versement",
                                                         "Titre II : Dispositions communes aux aides personnelles au logement",
                                                         "Livre VIII : Aides personnelles au logement",
                                                         "Partie réglementaire",
                                                         "Code de la construction et de l'habitation"]))
                try:
                    temp_sous_calcul_traitement_954 = proprietaire_5.pret.date_signature
                except EmptyError:
                    temp_sous_calcul_traitement_954 = dead_value
                    raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                         start_line=1627,
                                                         start_column=36,
                                                         end_line=1627,
                                                         end_column=68,
                                                         law_headings=["Article D823-9",
                                                         "Section 1 : Calcul, liquidation et versement des aides",
                                                         "Chapitre III : Modalités de liquidation et de versement",
                                                         "Titre II : Dispositions communes aux aides personnelles au logement",
                                                         "Livre VIII : Aides personnelles au logement",
                                                         "Partie réglementaire",
                                                         "Code de la construction et de l'habitation"]))
                try:
                    temp_sous_calcul_traitement_955 = proprietaire_5.type_travaux_logement_r842_5
                except EmptyError:
                    temp_sous_calcul_traitement_955 = dead_value
                    raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                         start_line=1626,
                                                         start_column=38,
                                                         end_line=1626,
                                                         end_column=79,
                                                         law_headings=["Article D823-9",
                                                         "Section 1 : Calcul, liquidation et versement des aides",
                                                         "Chapitre III : Modalités de liquidation et de versement",
                                                         "Titre II : Dispositions communes aux aides personnelles au logement",
                                                         "Livre VIII : Aides personnelles au logement",
                                                         "Partie réglementaire",
                                                         "Code de la construction et de l'habitation"]))
                try:
                    temp_sous_calcul_traitement_956 = proprietaire_5.local_habite_premiere_fois_beneficiaire
                except EmptyError:
                    temp_sous_calcul_traitement_956 = dead_value
                    raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                         start_line=1629,
                                                         start_column=14,
                                                         end_line=1629,
                                                         end_column=66,
                                                         law_headings=["Article D823-9",
                                                         "Section 1 : Calcul, liquidation et versement des aides",
                                                         "Chapitre III : Modalités de liquidation et de versement",
                                                         "Titre II : Dispositions communes aux aides personnelles au logement",
                                                         "Livre VIII : Aides personnelles au logement",
                                                         "Partie réglementaire",
                                                         "Code de la construction et de l'habitation"]))
                try:
                    temp_sous_calcul_traitement_957 = proprietaire_5.date_entree_logement
                except EmptyError:
                    temp_sous_calcul_traitement_957 = dead_value
                    raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                         start_line=1630,
                                                         start_column=37,
                                                         end_line=1630,
                                                         end_column=70,
                                                         law_headings=["Article D823-9",
                                                         "Section 1 : Calcul, liquidation et versement des aides",
                                                         "Chapitre III : Modalités de liquidation et de versement",
                                                         "Titre II : Dispositions communes aux aides personnelles au logement",
                                                         "Livre VIII : Aides personnelles au logement",
                                                         "Partie réglementaire",
                                                         "Code de la construction et de l'habitation"]))
                try:
                    temp_sous_calcul_traitement_958 = proprietaire_5.charges_mensuelles_pret
                except EmptyError:
                    temp_sous_calcul_traitement_958 = dead_value
                    raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                         start_line=1625,
                                                         start_column=40,
                                                         end_line=1625,
                                                         end_column=76,
                                                         law_headings=["Article D823-9",
                                                         "Section 1 : Calcul, liquidation et versement des aides",
                                                         "Chapitre III : Modalités de liquidation et de versement",
                                                         "Titre II : Dispositions communes aux aides personnelles au logement",
                                                         "Livre VIII : Aides personnelles au logement",
                                                         "Partie réglementaire",
                                                         "Code de la construction et de l'habitation"]))
                try:
                    temp_sous_calcul_traitement_959 = proprietaire_5.copropriete
                except EmptyError:
                    temp_sous_calcul_traitement_959 = dead_value
                    raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                         start_line=1631,
                                                         start_column=28,
                                                         end_line=1631,
                                                         end_column=52,
                                                         law_headings=["Article D823-9",
                                                         "Section 1 : Calcul, liquidation et versement des aides",
                                                         "Chapitre III : Modalités de liquidation et de versement",
                                                         "Titre II : Dispositions communes aux aides personnelles au logement",
                                                         "Livre VIII : Aides personnelles au logement",
                                                         "Partie réglementaire",
                                                         "Code de la construction et de l'habitation"]))
                try:
                    temp_sous_calcul_traitement_960 = proprietaire_5.operations_logement_evolutifs_sociaux_accession_propriete_aidee_Etat
                except EmptyError:
                    temp_sous_calcul_traitement_960 = dead_value
                    raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                         start_line=1620,
                                                         start_column=11,
                                                         end_line=1621,
                                                         end_column=81,
                                                         law_headings=["Article D823-9",
                                                         "Section 1 : Calcul, liquidation et versement des aides",
                                                         "Chapitre III : Modalités de liquidation et de versement",
                                                         "Titre II : Dispositions communes aux aides personnelles au logement",
                                                         "Livre VIII : Aides personnelles au logement",
                                                         "Partie réglementaire",
                                                         "Code de la construction et de l'habitation"]))
                def temp_sous_calcul_traitement_961(param0_13:Money):
                    try:
                        temp_sous_calcul_traitement_962 = ressources_menage_avec_arrondi_1
                    except EmptyError:
                        temp_sous_calcul_traitement_962 = dead_value
                        raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                             start_line=1615,
                                                             start_column=44,
                                                             end_line=1615,
                                                             end_column=61,
                                                             law_headings=["Article D823-9",
                                                             "Section 1 : Calcul, liquidation et versement des aides",
                                                             "Chapitre III : Modalités de liquidation et de versement",
                                                             "Titre II : Dispositions communes aux aides personnelles au logement",
                                                             "Livre VIII : Aides personnelles au logement",
                                                             "Partie réglementaire",
                                                             "Code de la construction et de l'habitation"]))
                    try:
                        temp_sous_calcul_traitement_963 = nombre_personnes_a_charge_12
                    except EmptyError:
                        temp_sous_calcul_traitement_963 = dead_value
                        raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                             start_line=1616,
                                                             start_column=42,
                                                             end_line=1616,
                                                             end_column=67,
                                                             law_headings=["Article D823-9",
                                                             "Section 1 : Calcul, liquidation et versement des aides",
                                                             "Chapitre III : Modalités de liquidation et de versement",
                                                             "Titre II : Dispositions communes aux aides personnelles au logement",
                                                             "Livre VIII : Aides personnelles au logement",
                                                             "Partie réglementaire",
                                                             "Code de la construction et de l'habitation"]))
                    try:
                        temp_sous_calcul_traitement_964 = situation_familiale_calcul_apl_9
                    except EmptyError:
                        temp_sous_calcul_traitement_964 = dead_value
                        raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                             start_line=1623,
                                                             start_column=47,
                                                             end_line=1623,
                                                             end_column=77,
                                                             law_headings=["Article D823-9",
                                                             "Section 1 : Calcul, liquidation et versement des aides",
                                                             "Chapitre III : Modalités de liquidation et de versement",
                                                             "Titre II : Dispositions communes aux aides personnelles au logement",
                                                             "Livre VIII : Aides personnelles au logement",
                                                             "Partie réglementaire",
                                                             "Code de la construction et de l'habitation"]))
                    try:
                        temp_sous_calcul_traitement_965 = zone_7
                    except EmptyError:
                        temp_sous_calcul_traitement_965 = dead_value
                        raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                             start_line=1617,
                                                             start_column=21,
                                                             end_line=1617,
                                                             end_column=25,
                                                             law_headings=["Article D823-9",
                                                             "Section 1 : Calcul, liquidation et versement des aides",
                                                             "Chapitre III : Modalités de liquidation et de versement",
                                                             "Titre II : Dispositions communes aux aides personnelles au logement",
                                                             "Livre VIII : Aides personnelles au logement",
                                                             "Partie réglementaire",
                                                             "Code de la construction et de l'habitation"]))
                    try:
                        temp_sous_calcul_traitement_966 = residence_9
                    except EmptyError:
                        temp_sous_calcul_traitement_966 = dead_value
                        raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                             start_line=1618,
                                                             start_column=26,
                                                             end_line=1618,
                                                             end_column=35,
                                                             law_headings=["Article D823-9",
                                                             "Section 1 : Calcul, liquidation et versement des aides",
                                                             "Chapitre III : Modalités de liquidation et de versement",
                                                             "Titre II : Dispositions communes aux aides personnelles au logement",
                                                             "Livre VIII : Aides personnelles au logement",
                                                             "Partie réglementaire",
                                                             "Code de la construction et de l'habitation"]))
                    try:
                        temp_sous_calcul_traitement_967 = date_courante_16
                    except EmptyError:
                        temp_sous_calcul_traitement_967 = dead_value
                        raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                             start_line=1622,
                                                             start_column=30,
                                                             end_line=1622,
                                                             end_column=43,
                                                             law_headings=["Article D823-9",
                                                             "Section 1 : Calcul, liquidation et versement des aides",
                                                             "Chapitre III : Modalités de liquidation et de versement",
                                                             "Titre II : Dispositions communes aux aides personnelles au logement",
                                                             "Livre VIII : Aides personnelles au logement",
                                                             "Partie réglementaire",
                                                             "Code de la construction et de l'habitation"]))
                    try:
                        temp_sous_calcul_traitement_968 = proprietaire_5.mensualite_principale
                    except EmptyError:
                        temp_sous_calcul_traitement_968 = dead_value
                        raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                             start_line=1624,
                                                             start_column=38,
                                                             end_line=1624,
                                                             end_column=72,
                                                             law_headings=["Article D823-9",
                                                             "Section 1 : Calcul, liquidation et versement des aides",
                                                             "Chapitre III : Modalités de liquidation et de versement",
                                                             "Titre II : Dispositions communes aux aides personnelles au logement",
                                                             "Livre VIII : Aides personnelles au logement",
                                                             "Partie réglementaire",
                                                             "Code de la construction et de l'habitation"]))
                    try:
                        temp_sous_calcul_traitement_969 = proprietaire_5.situation_r822_11_13_17
                    except EmptyError:
                        temp_sous_calcul_traitement_969 = dead_value
                        raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                             start_line=1632,
                                                             start_column=40,
                                                             end_line=1632,
                                                             end_column=76,
                                                             law_headings=["Article D823-9",
                                                             "Section 1 : Calcul, liquidation et versement des aides",
                                                             "Chapitre III : Modalités de liquidation et de versement",
                                                             "Titre II : Dispositions communes aux aides personnelles au logement",
                                                             "Livre VIII : Aides personnelles au logement",
                                                             "Partie réglementaire",
                                                             "Code de la construction et de l'habitation"]))
                    try:
                        temp_sous_calcul_traitement_970 = proprietaire_5.pret.date_signature
                    except EmptyError:
                        temp_sous_calcul_traitement_970 = dead_value
                        raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                             start_line=1627,
                                                             start_column=36,
                                                             end_line=1627,
                                                             end_column=68,
                                                             law_headings=["Article D823-9",
                                                             "Section 1 : Calcul, liquidation et versement des aides",
                                                             "Chapitre III : Modalités de liquidation et de versement",
                                                             "Titre II : Dispositions communes aux aides personnelles au logement",
                                                             "Livre VIII : Aides personnelles au logement",
                                                             "Partie réglementaire",
                                                             "Code de la construction et de l'habitation"]))
                    try:
                        temp_sous_calcul_traitement_971 = proprietaire_5.type_travaux_logement_r842_5
                    except EmptyError:
                        temp_sous_calcul_traitement_971 = dead_value
                        raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                             start_line=1626,
                                                             start_column=38,
                                                             end_line=1626,
                                                             end_column=79,
                                                             law_headings=["Article D823-9",
                                                             "Section 1 : Calcul, liquidation et versement des aides",
                                                             "Chapitre III : Modalités de liquidation et de versement",
                                                             "Titre II : Dispositions communes aux aides personnelles au logement",
                                                             "Livre VIII : Aides personnelles au logement",
                                                             "Partie réglementaire",
                                                             "Code de la construction et de l'habitation"]))
                    try:
                        temp_sous_calcul_traitement_972 = proprietaire_5.local_habite_premiere_fois_beneficiaire
                    except EmptyError:
                        temp_sous_calcul_traitement_972 = dead_value
                        raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                             start_line=1629,
                                                             start_column=14,
                                                             end_line=1629,
                                                             end_column=66,
                                                             law_headings=["Article D823-9",
                                                             "Section 1 : Calcul, liquidation et versement des aides",
                                                             "Chapitre III : Modalités de liquidation et de versement",
                                                             "Titre II : Dispositions communes aux aides personnelles au logement",
                                                             "Livre VIII : Aides personnelles au logement",
                                                             "Partie réglementaire",
                                                             "Code de la construction et de l'habitation"]))
                    try:
                        temp_sous_calcul_traitement_973 = proprietaire_5.date_entree_logement
                    except EmptyError:
                        temp_sous_calcul_traitement_973 = dead_value
                        raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                             start_line=1630,
                                                             start_column=37,
                                                             end_line=1630,
                                                             end_column=70,
                                                             law_headings=["Article D823-9",
                                                             "Section 1 : Calcul, liquidation et versement des aides",
                                                             "Chapitre III : Modalités de liquidation et de versement",
                                                             "Titre II : Dispositions communes aux aides personnelles au logement",
                                                             "Livre VIII : Aides personnelles au logement",
                                                             "Partie réglementaire",
                                                             "Code de la construction et de l'habitation"]))
                    try:
                        temp_sous_calcul_traitement_974 = proprietaire_5.charges_mensuelles_pret
                    except EmptyError:
                        temp_sous_calcul_traitement_974 = dead_value
                        raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                             start_line=1625,
                                                             start_column=40,
                                                             end_line=1625,
                                                             end_column=76,
                                                             law_headings=["Article D823-9",
                                                             "Section 1 : Calcul, liquidation et versement des aides",
                                                             "Chapitre III : Modalités de liquidation et de versement",
                                                             "Titre II : Dispositions communes aux aides personnelles au logement",
                                                             "Livre VIII : Aides personnelles au logement",
                                                             "Partie réglementaire",
                                                             "Code de la construction et de l'habitation"]))
                    try:
                        temp_sous_calcul_traitement_975 = proprietaire_5.copropriete
                    except EmptyError:
                        temp_sous_calcul_traitement_975 = dead_value
                        raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                             start_line=1631,
                                                             start_column=28,
                                                             end_line=1631,
                                                             end_column=52,
                                                             law_headings=["Article D823-9",
                                                             "Section 1 : Calcul, liquidation et versement des aides",
                                                             "Chapitre III : Modalités de liquidation et de versement",
                                                             "Titre II : Dispositions communes aux aides personnelles au logement",
                                                             "Livre VIII : Aides personnelles au logement",
                                                             "Partie réglementaire",
                                                             "Code de la construction et de l'habitation"]))
                    try:
                        temp_sous_calcul_traitement_976 = proprietaire_5.operations_logement_evolutifs_sociaux_accession_propriete_aidee_Etat
                    except EmptyError:
                        temp_sous_calcul_traitement_976 = dead_value
                        raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                             start_line=1620,
                                                             start_column=11,
                                                             end_line=1621,
                                                             end_column=81,
                                                             law_headings=["Article D823-9",
                                                             "Section 1 : Calcul, liquidation et versement des aides",
                                                             "Chapitre III : Modalités de liquidation et de versement",
                                                             "Titre II : Dispositions communes aux aides personnelles au logement",
                                                             "Livre VIII : Aides personnelles au logement",
                                                             "Partie réglementaire",
                                                             "Code de la construction et de l'habitation"]))
                    return calcul_allocation_logement_accession_propriete(
                        CalculAllocationLogementAccessionProprieteIn(ressources_menage_arrondies_base_in = temp_sous_calcul_traitement_962,
                        nombre_personnes_a_charge_in = temp_sous_calcul_traitement_963,
                        situation_familiale_calcul_apl_in = temp_sous_calcul_traitement_964,
                        zone_in = temp_sous_calcul_traitement_965,
                        residence_in = temp_sous_calcul_traitement_966,
                        date_courante_in = temp_sous_calcul_traitement_967,
                        mensualite_principale_in = temp_sous_calcul_traitement_968,
                        situation_r822_11_13_17_in = temp_sous_calcul_traitement_969,
                        date_signature_pret_in = temp_sous_calcul_traitement_970,
                        type_travaux_logement_in = temp_sous_calcul_traitement_971,
                        local_habite_premiere_fois_beneficiaire_in = temp_sous_calcul_traitement_972,
                        date_entree_logement_in = temp_sous_calcul_traitement_973,
                        charges_mensuelles_pret_in = temp_sous_calcul_traitement_974,
                        copropriete_in = temp_sous_calcul_traitement_975,
                        operations_logement_evolutifs_sociaux_accession_propriete_aidee_Etat_in = temp_sous_calcul_traitement_976)).traitement_aide_finale(
                        param0_13)
                try:
                    temp_sous_calcul_traitement_977 = ressources_menage_avec_arrondi_1
                except EmptyError:
                    temp_sous_calcul_traitement_977 = dead_value
                    raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                         start_line=1615,
                                                         start_column=44,
                                                         end_line=1615,
                                                         end_column=61,
                                                         law_headings=["Article D823-9",
                                                         "Section 1 : Calcul, liquidation et versement des aides",
                                                         "Chapitre III : Modalités de liquidation et de versement",
                                                         "Titre II : Dispositions communes aux aides personnelles au logement",
                                                         "Livre VIII : Aides personnelles au logement",
                                                         "Partie réglementaire",
                                                         "Code de la construction et de l'habitation"]))
                try:
                    temp_sous_calcul_traitement_978 = nombre_personnes_a_charge_12
                except EmptyError:
                    temp_sous_calcul_traitement_978 = dead_value
                    raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                         start_line=1616,
                                                         start_column=42,
                                                         end_line=1616,
                                                         end_column=67,
                                                         law_headings=["Article D823-9",
                                                         "Section 1 : Calcul, liquidation et versement des aides",
                                                         "Chapitre III : Modalités de liquidation et de versement",
                                                         "Titre II : Dispositions communes aux aides personnelles au logement",
                                                         "Livre VIII : Aides personnelles au logement",
                                                         "Partie réglementaire",
                                                         "Code de la construction et de l'habitation"]))
                try:
                    temp_sous_calcul_traitement_979 = situation_familiale_calcul_apl_9
                except EmptyError:
                    temp_sous_calcul_traitement_979 = dead_value
                    raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                         start_line=1623,
                                                         start_column=47,
                                                         end_line=1623,
                                                         end_column=77,
                                                         law_headings=["Article D823-9",
                                                         "Section 1 : Calcul, liquidation et versement des aides",
                                                         "Chapitre III : Modalités de liquidation et de versement",
                                                         "Titre II : Dispositions communes aux aides personnelles au logement",
                                                         "Livre VIII : Aides personnelles au logement",
                                                         "Partie réglementaire",
                                                         "Code de la construction et de l'habitation"]))
                try:
                    temp_sous_calcul_traitement_980 = zone_7
                except EmptyError:
                    temp_sous_calcul_traitement_980 = dead_value
                    raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                         start_line=1617,
                                                         start_column=21,
                                                         end_line=1617,
                                                         end_column=25,
                                                         law_headings=["Article D823-9",
                                                         "Section 1 : Calcul, liquidation et versement des aides",
                                                         "Chapitre III : Modalités de liquidation et de versement",
                                                         "Titre II : Dispositions communes aux aides personnelles au logement",
                                                         "Livre VIII : Aides personnelles au logement",
                                                         "Partie réglementaire",
                                                         "Code de la construction et de l'habitation"]))
                try:
                    temp_sous_calcul_traitement_981 = residence_9
                except EmptyError:
                    temp_sous_calcul_traitement_981 = dead_value
                    raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                         start_line=1618,
                                                         start_column=26,
                                                         end_line=1618,
                                                         end_column=35,
                                                         law_headings=["Article D823-9",
                                                         "Section 1 : Calcul, liquidation et versement des aides",
                                                         "Chapitre III : Modalités de liquidation et de versement",
                                                         "Titre II : Dispositions communes aux aides personnelles au logement",
                                                         "Livre VIII : Aides personnelles au logement",
                                                         "Partie réglementaire",
                                                         "Code de la construction et de l'habitation"]))
                try:
                    temp_sous_calcul_traitement_982 = date_courante_16
                except EmptyError:
                    temp_sous_calcul_traitement_982 = dead_value
                    raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                         start_line=1622,
                                                         start_column=30,
                                                         end_line=1622,
                                                         end_column=43,
                                                         law_headings=["Article D823-9",
                                                         "Section 1 : Calcul, liquidation et versement des aides",
                                                         "Chapitre III : Modalités de liquidation et de versement",
                                                         "Titre II : Dispositions communes aux aides personnelles au logement",
                                                         "Livre VIII : Aides personnelles au logement",
                                                         "Partie réglementaire",
                                                         "Code de la construction et de l'habitation"]))
                try:
                    temp_sous_calcul_traitement_983 = proprietaire_5.mensualite_principale
                except EmptyError:
                    temp_sous_calcul_traitement_983 = dead_value
                    raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                         start_line=1624,
                                                         start_column=38,
                                                         end_line=1624,
                                                         end_column=72,
                                                         law_headings=["Article D823-9",
                                                         "Section 1 : Calcul, liquidation et versement des aides",
                                                         "Chapitre III : Modalités de liquidation et de versement",
                                                         "Titre II : Dispositions communes aux aides personnelles au logement",
                                                         "Livre VIII : Aides personnelles au logement",
                                                         "Partie réglementaire",
                                                         "Code de la construction et de l'habitation"]))
                try:
                    temp_sous_calcul_traitement_984 = proprietaire_5.situation_r822_11_13_17
                except EmptyError:
                    temp_sous_calcul_traitement_984 = dead_value
                    raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                         start_line=1632,
                                                         start_column=40,
                                                         end_line=1632,
                                                         end_column=76,
                                                         law_headings=["Article D823-9",
                                                         "Section 1 : Calcul, liquidation et versement des aides",
                                                         "Chapitre III : Modalités de liquidation et de versement",
                                                         "Titre II : Dispositions communes aux aides personnelles au logement",
                                                         "Livre VIII : Aides personnelles au logement",
                                                         "Partie réglementaire",
                                                         "Code de la construction et de l'habitation"]))
                try:
                    temp_sous_calcul_traitement_985 = proprietaire_5.pret.date_signature
                except EmptyError:
                    temp_sous_calcul_traitement_985 = dead_value
                    raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                         start_line=1627,
                                                         start_column=36,
                                                         end_line=1627,
                                                         end_column=68,
                                                         law_headings=["Article D823-9",
                                                         "Section 1 : Calcul, liquidation et versement des aides",
                                                         "Chapitre III : Modalités de liquidation et de versement",
                                                         "Titre II : Dispositions communes aux aides personnelles au logement",
                                                         "Livre VIII : Aides personnelles au logement",
                                                         "Partie réglementaire",
                                                         "Code de la construction et de l'habitation"]))
                try:
                    temp_sous_calcul_traitement_986 = proprietaire_5.type_travaux_logement_r842_5
                except EmptyError:
                    temp_sous_calcul_traitement_986 = dead_value
                    raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                         start_line=1626,
                                                         start_column=38,
                                                         end_line=1626,
                                                         end_column=79,
                                                         law_headings=["Article D823-9",
                                                         "Section 1 : Calcul, liquidation et versement des aides",
                                                         "Chapitre III : Modalités de liquidation et de versement",
                                                         "Titre II : Dispositions communes aux aides personnelles au logement",
                                                         "Livre VIII : Aides personnelles au logement",
                                                         "Partie réglementaire",
                                                         "Code de la construction et de l'habitation"]))
                try:
                    temp_sous_calcul_traitement_987 = proprietaire_5.local_habite_premiere_fois_beneficiaire
                except EmptyError:
                    temp_sous_calcul_traitement_987 = dead_value
                    raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                         start_line=1629,
                                                         start_column=14,
                                                         end_line=1629,
                                                         end_column=66,
                                                         law_headings=["Article D823-9",
                                                         "Section 1 : Calcul, liquidation et versement des aides",
                                                         "Chapitre III : Modalités de liquidation et de versement",
                                                         "Titre II : Dispositions communes aux aides personnelles au logement",
                                                         "Livre VIII : Aides personnelles au logement",
                                                         "Partie réglementaire",
                                                         "Code de la construction et de l'habitation"]))
                try:
                    temp_sous_calcul_traitement_988 = proprietaire_5.date_entree_logement
                except EmptyError:
                    temp_sous_calcul_traitement_988 = dead_value
                    raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                         start_line=1630,
                                                         start_column=37,
                                                         end_line=1630,
                                                         end_column=70,
                                                         law_headings=["Article D823-9",
                                                         "Section 1 : Calcul, liquidation et versement des aides",
                                                         "Chapitre III : Modalités de liquidation et de versement",
                                                         "Titre II : Dispositions communes aux aides personnelles au logement",
                                                         "Livre VIII : Aides personnelles au logement",
                                                         "Partie réglementaire",
                                                         "Code de la construction et de l'habitation"]))
                try:
                    temp_sous_calcul_traitement_989 = proprietaire_5.charges_mensuelles_pret
                except EmptyError:
                    temp_sous_calcul_traitement_989 = dead_value
                    raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                         start_line=1625,
                                                         start_column=40,
                                                         end_line=1625,
                                                         end_column=76,
                                                         law_headings=["Article D823-9",
                                                         "Section 1 : Calcul, liquidation et versement des aides",
                                                         "Chapitre III : Modalités de liquidation et de versement",
                                                         "Titre II : Dispositions communes aux aides personnelles au logement",
                                                         "Livre VIII : Aides personnelles au logement",
                                                         "Partie réglementaire",
                                                         "Code de la construction et de l'habitation"]))
                try:
                    temp_sous_calcul_traitement_990 = proprietaire_5.copropriete
                except EmptyError:
                    temp_sous_calcul_traitement_990 = dead_value
                    raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                         start_line=1631,
                                                         start_column=28,
                                                         end_line=1631,
                                                         end_column=52,
                                                         law_headings=["Article D823-9",
                                                         "Section 1 : Calcul, liquidation et versement des aides",
                                                         "Chapitre III : Modalités de liquidation et de versement",
                                                         "Titre II : Dispositions communes aux aides personnelles au logement",
                                                         "Livre VIII : Aides personnelles au logement",
                                                         "Partie réglementaire",
                                                         "Code de la construction et de l'habitation"]))
                try:
                    temp_sous_calcul_traitement_991 = proprietaire_5.operations_logement_evolutifs_sociaux_accession_propriete_aidee_Etat
                except EmptyError:
                    temp_sous_calcul_traitement_991 = dead_value
                    raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                         start_line=1620,
                                                         start_column=11,
                                                         end_line=1621,
                                                         end_column=81,
                                                         law_headings=["Article D823-9",
                                                         "Section 1 : Calcul, liquidation et versement des aides",
                                                         "Chapitre III : Modalités de liquidation et de versement",
                                                         "Titre II : Dispositions communes aux aides personnelles au logement",
                                                         "Livre VIII : Aides personnelles au logement",
                                                         "Partie réglementaire",
                                                         "Code de la construction et de l'habitation"]))
                try:
                    temp_sous_calcul_traitement_992 = ressources_menage_avec_arrondi_1
                except EmptyError:
                    temp_sous_calcul_traitement_992 = dead_value
                    raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                         start_line=1615,
                                                         start_column=44,
                                                         end_line=1615,
                                                         end_column=61,
                                                         law_headings=["Article D823-9",
                                                         "Section 1 : Calcul, liquidation et versement des aides",
                                                         "Chapitre III : Modalités de liquidation et de versement",
                                                         "Titre II : Dispositions communes aux aides personnelles au logement",
                                                         "Livre VIII : Aides personnelles au logement",
                                                         "Partie réglementaire",
                                                         "Code de la construction et de l'habitation"]))
                try:
                    temp_sous_calcul_traitement_993 = nombre_personnes_a_charge_12
                except EmptyError:
                    temp_sous_calcul_traitement_993 = dead_value
                    raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                         start_line=1616,
                                                         start_column=42,
                                                         end_line=1616,
                                                         end_column=67,
                                                         law_headings=["Article D823-9",
                                                         "Section 1 : Calcul, liquidation et versement des aides",
                                                         "Chapitre III : Modalités de liquidation et de versement",
                                                         "Titre II : Dispositions communes aux aides personnelles au logement",
                                                         "Livre VIII : Aides personnelles au logement",
                                                         "Partie réglementaire",
                                                         "Code de la construction et de l'habitation"]))
                try:
                    temp_sous_calcul_traitement_994 = situation_familiale_calcul_apl_9
                except EmptyError:
                    temp_sous_calcul_traitement_994 = dead_value
                    raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                         start_line=1623,
                                                         start_column=47,
                                                         end_line=1623,
                                                         end_column=77,
                                                         law_headings=["Article D823-9",
                                                         "Section 1 : Calcul, liquidation et versement des aides",
                                                         "Chapitre III : Modalités de liquidation et de versement",
                                                         "Titre II : Dispositions communes aux aides personnelles au logement",
                                                         "Livre VIII : Aides personnelles au logement",
                                                         "Partie réglementaire",
                                                         "Code de la construction et de l'habitation"]))
                try:
                    temp_sous_calcul_traitement_995 = zone_7
                except EmptyError:
                    temp_sous_calcul_traitement_995 = dead_value
                    raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                         start_line=1617,
                                                         start_column=21,
                                                         end_line=1617,
                                                         end_column=25,
                                                         law_headings=["Article D823-9",
                                                         "Section 1 : Calcul, liquidation et versement des aides",
                                                         "Chapitre III : Modalités de liquidation et de versement",
                                                         "Titre II : Dispositions communes aux aides personnelles au logement",
                                                         "Livre VIII : Aides personnelles au logement",
                                                         "Partie réglementaire",
                                                         "Code de la construction et de l'habitation"]))
                try:
                    temp_sous_calcul_traitement_996 = residence_9
                except EmptyError:
                    temp_sous_calcul_traitement_996 = dead_value
                    raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                         start_line=1618,
                                                         start_column=26,
                                                         end_line=1618,
                                                         end_column=35,
                                                         law_headings=["Article D823-9",
                                                         "Section 1 : Calcul, liquidation et versement des aides",
                                                         "Chapitre III : Modalités de liquidation et de versement",
                                                         "Titre II : Dispositions communes aux aides personnelles au logement",
                                                         "Livre VIII : Aides personnelles au logement",
                                                         "Partie réglementaire",
                                                         "Code de la construction et de l'habitation"]))
                try:
                    temp_sous_calcul_traitement_997 = date_courante_16
                except EmptyError:
                    temp_sous_calcul_traitement_997 = dead_value
                    raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                         start_line=1622,
                                                         start_column=30,
                                                         end_line=1622,
                                                         end_column=43,
                                                         law_headings=["Article D823-9",
                                                         "Section 1 : Calcul, liquidation et versement des aides",
                                                         "Chapitre III : Modalités de liquidation et de versement",
                                                         "Titre II : Dispositions communes aux aides personnelles au logement",
                                                         "Livre VIII : Aides personnelles au logement",
                                                         "Partie réglementaire",
                                                         "Code de la construction et de l'habitation"]))
                try:
                    temp_sous_calcul_traitement_998 = proprietaire_5.mensualite_principale
                except EmptyError:
                    temp_sous_calcul_traitement_998 = dead_value
                    raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                         start_line=1624,
                                                         start_column=38,
                                                         end_line=1624,
                                                         end_column=72,
                                                         law_headings=["Article D823-9",
                                                         "Section 1 : Calcul, liquidation et versement des aides",
                                                         "Chapitre III : Modalités de liquidation et de versement",
                                                         "Titre II : Dispositions communes aux aides personnelles au logement",
                                                         "Livre VIII : Aides personnelles au logement",
                                                         "Partie réglementaire",
                                                         "Code de la construction et de l'habitation"]))
                try:
                    temp_sous_calcul_traitement_999 = proprietaire_5.situation_r822_11_13_17
                except EmptyError:
                    temp_sous_calcul_traitement_999 = dead_value
                    raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                         start_line=1632,
                                                         start_column=40,
                                                         end_line=1632,
                                                         end_column=76,
                                                         law_headings=["Article D823-9",
                                                         "Section 1 : Calcul, liquidation et versement des aides",
                                                         "Chapitre III : Modalités de liquidation et de versement",
                                                         "Titre II : Dispositions communes aux aides personnelles au logement",
                                                         "Livre VIII : Aides personnelles au logement",
                                                         "Partie réglementaire",
                                                         "Code de la construction et de l'habitation"]))
                try:
                    temp_sous_calcul_traitement_1000 = proprietaire_5.pret.date_signature
                except EmptyError:
                    temp_sous_calcul_traitement_1000 = dead_value
                    raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                         start_line=1627,
                                                         start_column=36,
                                                         end_line=1627,
                                                         end_column=68,
                                                         law_headings=["Article D823-9",
                                                         "Section 1 : Calcul, liquidation et versement des aides",
                                                         "Chapitre III : Modalités de liquidation et de versement",
                                                         "Titre II : Dispositions communes aux aides personnelles au logement",
                                                         "Livre VIII : Aides personnelles au logement",
                                                         "Partie réglementaire",
                                                         "Code de la construction et de l'habitation"]))
                try:
                    temp_sous_calcul_traitement_1001 = proprietaire_5.type_travaux_logement_r842_5
                except EmptyError:
                    temp_sous_calcul_traitement_1001 = dead_value
                    raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                         start_line=1626,
                                                         start_column=38,
                                                         end_line=1626,
                                                         end_column=79,
                                                         law_headings=["Article D823-9",
                                                         "Section 1 : Calcul, liquidation et versement des aides",
                                                         "Chapitre III : Modalités de liquidation et de versement",
                                                         "Titre II : Dispositions communes aux aides personnelles au logement",
                                                         "Livre VIII : Aides personnelles au logement",
                                                         "Partie réglementaire",
                                                         "Code de la construction et de l'habitation"]))
                try:
                    temp_sous_calcul_traitement_1002 = proprietaire_5.local_habite_premiere_fois_beneficiaire
                except EmptyError:
                    temp_sous_calcul_traitement_1002 = dead_value
                    raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                         start_line=1629,
                                                         start_column=14,
                                                         end_line=1629,
                                                         end_column=66,
                                                         law_headings=["Article D823-9",
                                                         "Section 1 : Calcul, liquidation et versement des aides",
                                                         "Chapitre III : Modalités de liquidation et de versement",
                                                         "Titre II : Dispositions communes aux aides personnelles au logement",
                                                         "Livre VIII : Aides personnelles au logement",
                                                         "Partie réglementaire",
                                                         "Code de la construction et de l'habitation"]))
                try:
                    temp_sous_calcul_traitement_1003 = proprietaire_5.date_entree_logement
                except EmptyError:
                    temp_sous_calcul_traitement_1003 = dead_value
                    raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                         start_line=1630,
                                                         start_column=37,
                                                         end_line=1630,
                                                         end_column=70,
                                                         law_headings=["Article D823-9",
                                                         "Section 1 : Calcul, liquidation et versement des aides",
                                                         "Chapitre III : Modalités de liquidation et de versement",
                                                         "Titre II : Dispositions communes aux aides personnelles au logement",
                                                         "Livre VIII : Aides personnelles au logement",
                                                         "Partie réglementaire",
                                                         "Code de la construction et de l'habitation"]))
                try:
                    temp_sous_calcul_traitement_1004 = proprietaire_5.charges_mensuelles_pret
                except EmptyError:
                    temp_sous_calcul_traitement_1004 = dead_value
                    raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                         start_line=1625,
                                                         start_column=40,
                                                         end_line=1625,
                                                         end_column=76,
                                                         law_headings=["Article D823-9",
                                                         "Section 1 : Calcul, liquidation et versement des aides",
                                                         "Chapitre III : Modalités de liquidation et de versement",
                                                         "Titre II : Dispositions communes aux aides personnelles au logement",
                                                         "Livre VIII : Aides personnelles au logement",
                                                         "Partie réglementaire",
                                                         "Code de la construction et de l'habitation"]))
                try:
                    temp_sous_calcul_traitement_1005 = proprietaire_5.copropriete
                except EmptyError:
                    temp_sous_calcul_traitement_1005 = dead_value
                    raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                         start_line=1631,
                                                         start_column=28,
                                                         end_line=1631,
                                                         end_column=52,
                                                         law_headings=["Article D823-9",
                                                         "Section 1 : Calcul, liquidation et versement des aides",
                                                         "Chapitre III : Modalités de liquidation et de versement",
                                                         "Titre II : Dispositions communes aux aides personnelles au logement",
                                                         "Livre VIII : Aides personnelles au logement",
                                                         "Partie réglementaire",
                                                         "Code de la construction et de l'habitation"]))
                try:
                    temp_sous_calcul_traitement_1006 = proprietaire_5.operations_logement_evolutifs_sociaux_accession_propriete_aidee_Etat
                except EmptyError:
                    temp_sous_calcul_traitement_1006 = dead_value
                    raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                         start_line=1620,
                                                         start_column=11,
                                                         end_line=1621,
                                                         end_column=81,
                                                         law_headings=["Article D823-9",
                                                         "Section 1 : Calcul, liquidation et versement des aides",
                                                         "Chapitre III : Modalités de liquidation et de versement",
                                                         "Titre II : Dispositions communes aux aides personnelles au logement",
                                                         "Livre VIII : Aides personnelles au logement",
                                                         "Partie réglementaire",
                                                         "Code de la construction et de l'habitation"]))
                try:
                    temp_sous_calcul_traitement_1007 = ressources_menage_avec_arrondi_1
                except EmptyError:
                    temp_sous_calcul_traitement_1007 = dead_value
                    raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                         start_line=1615,
                                                         start_column=44,
                                                         end_line=1615,
                                                         end_column=61,
                                                         law_headings=["Article D823-9",
                                                         "Section 1 : Calcul, liquidation et versement des aides",
                                                         "Chapitre III : Modalités de liquidation et de versement",
                                                         "Titre II : Dispositions communes aux aides personnelles au logement",
                                                         "Livre VIII : Aides personnelles au logement",
                                                         "Partie réglementaire",
                                                         "Code de la construction et de l'habitation"]))
                try:
                    temp_sous_calcul_traitement_1008 = nombre_personnes_a_charge_12
                except EmptyError:
                    temp_sous_calcul_traitement_1008 = dead_value
                    raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                         start_line=1616,
                                                         start_column=42,
                                                         end_line=1616,
                                                         end_column=67,
                                                         law_headings=["Article D823-9",
                                                         "Section 1 : Calcul, liquidation et versement des aides",
                                                         "Chapitre III : Modalités de liquidation et de versement",
                                                         "Titre II : Dispositions communes aux aides personnelles au logement",
                                                         "Livre VIII : Aides personnelles au logement",
                                                         "Partie réglementaire",
                                                         "Code de la construction et de l'habitation"]))
                try:
                    temp_sous_calcul_traitement_1009 = situation_familiale_calcul_apl_9
                except EmptyError:
                    temp_sous_calcul_traitement_1009 = dead_value
                    raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                         start_line=1623,
                                                         start_column=47,
                                                         end_line=1623,
                                                         end_column=77,
                                                         law_headings=["Article D823-9",
                                                         "Section 1 : Calcul, liquidation et versement des aides",
                                                         "Chapitre III : Modalités de liquidation et de versement",
                                                         "Titre II : Dispositions communes aux aides personnelles au logement",
                                                         "Livre VIII : Aides personnelles au logement",
                                                         "Partie réglementaire",
                                                         "Code de la construction et de l'habitation"]))
                try:
                    temp_sous_calcul_traitement_1010 = zone_7
                except EmptyError:
                    temp_sous_calcul_traitement_1010 = dead_value
                    raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                         start_line=1617,
                                                         start_column=21,
                                                         end_line=1617,
                                                         end_column=25,
                                                         law_headings=["Article D823-9",
                                                         "Section 1 : Calcul, liquidation et versement des aides",
                                                         "Chapitre III : Modalités de liquidation et de versement",
                                                         "Titre II : Dispositions communes aux aides personnelles au logement",
                                                         "Livre VIII : Aides personnelles au logement",
                                                         "Partie réglementaire",
                                                         "Code de la construction et de l'habitation"]))
                try:
                    temp_sous_calcul_traitement_1011 = residence_9
                except EmptyError:
                    temp_sous_calcul_traitement_1011 = dead_value
                    raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                         start_line=1618,
                                                         start_column=26,
                                                         end_line=1618,
                                                         end_column=35,
                                                         law_headings=["Article D823-9",
                                                         "Section 1 : Calcul, liquidation et versement des aides",
                                                         "Chapitre III : Modalités de liquidation et de versement",
                                                         "Titre II : Dispositions communes aux aides personnelles au logement",
                                                         "Livre VIII : Aides personnelles au logement",
                                                         "Partie réglementaire",
                                                         "Code de la construction et de l'habitation"]))
                try:
                    temp_sous_calcul_traitement_1012 = date_courante_16
                except EmptyError:
                    temp_sous_calcul_traitement_1012 = dead_value
                    raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                         start_line=1622,
                                                         start_column=30,
                                                         end_line=1622,
                                                         end_column=43,
                                                         law_headings=["Article D823-9",
                                                         "Section 1 : Calcul, liquidation et versement des aides",
                                                         "Chapitre III : Modalités de liquidation et de versement",
                                                         "Titre II : Dispositions communes aux aides personnelles au logement",
                                                         "Livre VIII : Aides personnelles au logement",
                                                         "Partie réglementaire",
                                                         "Code de la construction et de l'habitation"]))
                try:
                    temp_sous_calcul_traitement_1013 = proprietaire_5.mensualite_principale
                except EmptyError:
                    temp_sous_calcul_traitement_1013 = dead_value
                    raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                         start_line=1624,
                                                         start_column=38,
                                                         end_line=1624,
                                                         end_column=72,
                                                         law_headings=["Article D823-9",
                                                         "Section 1 : Calcul, liquidation et versement des aides",
                                                         "Chapitre III : Modalités de liquidation et de versement",
                                                         "Titre II : Dispositions communes aux aides personnelles au logement",
                                                         "Livre VIII : Aides personnelles au logement",
                                                         "Partie réglementaire",
                                                         "Code de la construction et de l'habitation"]))
                try:
                    temp_sous_calcul_traitement_1014 = proprietaire_5.situation_r822_11_13_17
                except EmptyError:
                    temp_sous_calcul_traitement_1014 = dead_value
                    raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                         start_line=1632,
                                                         start_column=40,
                                                         end_line=1632,
                                                         end_column=76,
                                                         law_headings=["Article D823-9",
                                                         "Section 1 : Calcul, liquidation et versement des aides",
                                                         "Chapitre III : Modalités de liquidation et de versement",
                                                         "Titre II : Dispositions communes aux aides personnelles au logement",
                                                         "Livre VIII : Aides personnelles au logement",
                                                         "Partie réglementaire",
                                                         "Code de la construction et de l'habitation"]))
                try:
                    temp_sous_calcul_traitement_1015 = proprietaire_5.pret.date_signature
                except EmptyError:
                    temp_sous_calcul_traitement_1015 = dead_value
                    raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                         start_line=1627,
                                                         start_column=36,
                                                         end_line=1627,
                                                         end_column=68,
                                                         law_headings=["Article D823-9",
                                                         "Section 1 : Calcul, liquidation et versement des aides",
                                                         "Chapitre III : Modalités de liquidation et de versement",
                                                         "Titre II : Dispositions communes aux aides personnelles au logement",
                                                         "Livre VIII : Aides personnelles au logement",
                                                         "Partie réglementaire",
                                                         "Code de la construction et de l'habitation"]))
                try:
                    temp_sous_calcul_traitement_1016 = proprietaire_5.type_travaux_logement_r842_5
                except EmptyError:
                    temp_sous_calcul_traitement_1016 = dead_value
                    raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                         start_line=1626,
                                                         start_column=38,
                                                         end_line=1626,
                                                         end_column=79,
                                                         law_headings=["Article D823-9",
                                                         "Section 1 : Calcul, liquidation et versement des aides",
                                                         "Chapitre III : Modalités de liquidation et de versement",
                                                         "Titre II : Dispositions communes aux aides personnelles au logement",
                                                         "Livre VIII : Aides personnelles au logement",
                                                         "Partie réglementaire",
                                                         "Code de la construction et de l'habitation"]))
                try:
                    temp_sous_calcul_traitement_1017 = proprietaire_5.local_habite_premiere_fois_beneficiaire
                except EmptyError:
                    temp_sous_calcul_traitement_1017 = dead_value
                    raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                         start_line=1629,
                                                         start_column=14,
                                                         end_line=1629,
                                                         end_column=66,
                                                         law_headings=["Article D823-9",
                                                         "Section 1 : Calcul, liquidation et versement des aides",
                                                         "Chapitre III : Modalités de liquidation et de versement",
                                                         "Titre II : Dispositions communes aux aides personnelles au logement",
                                                         "Livre VIII : Aides personnelles au logement",
                                                         "Partie réglementaire",
                                                         "Code de la construction et de l'habitation"]))
                try:
                    temp_sous_calcul_traitement_1018 = proprietaire_5.date_entree_logement
                except EmptyError:
                    temp_sous_calcul_traitement_1018 = dead_value
                    raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                         start_line=1630,
                                                         start_column=37,
                                                         end_line=1630,
                                                         end_column=70,
                                                         law_headings=["Article D823-9",
                                                         "Section 1 : Calcul, liquidation et versement des aides",
                                                         "Chapitre III : Modalités de liquidation et de versement",
                                                         "Titre II : Dispositions communes aux aides personnelles au logement",
                                                         "Livre VIII : Aides personnelles au logement",
                                                         "Partie réglementaire",
                                                         "Code de la construction et de l'habitation"]))
                try:
                    temp_sous_calcul_traitement_1019 = proprietaire_5.charges_mensuelles_pret
                except EmptyError:
                    temp_sous_calcul_traitement_1019 = dead_value
                    raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                         start_line=1625,
                                                         start_column=40,
                                                         end_line=1625,
                                                         end_column=76,
                                                         law_headings=["Article D823-9",
                                                         "Section 1 : Calcul, liquidation et versement des aides",
                                                         "Chapitre III : Modalités de liquidation et de versement",
                                                         "Titre II : Dispositions communes aux aides personnelles au logement",
                                                         "Livre VIII : Aides personnelles au logement",
                                                         "Partie réglementaire",
                                                         "Code de la construction et de l'habitation"]))
                try:
                    temp_sous_calcul_traitement_1020 = proprietaire_5.copropriete
                except EmptyError:
                    temp_sous_calcul_traitement_1020 = dead_value
                    raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                         start_line=1631,
                                                         start_column=28,
                                                         end_line=1631,
                                                         end_column=52,
                                                         law_headings=["Article D823-9",
                                                         "Section 1 : Calcul, liquidation et versement des aides",
                                                         "Chapitre III : Modalités de liquidation et de versement",
                                                         "Titre II : Dispositions communes aux aides personnelles au logement",
                                                         "Livre VIII : Aides personnelles au logement",
                                                         "Partie réglementaire",
                                                         "Code de la construction et de l'habitation"]))
                try:
                    temp_sous_calcul_traitement_1021 = proprietaire_5.operations_logement_evolutifs_sociaux_accession_propriete_aidee_Etat
                except EmptyError:
                    temp_sous_calcul_traitement_1021 = dead_value
                    raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                         start_line=1620,
                                                         start_column=11,
                                                         end_line=1621,
                                                         end_column=81,
                                                         law_headings=["Article D823-9",
                                                         "Section 1 : Calcul, liquidation et versement des aides",
                                                         "Chapitre III : Modalités de liquidation et de versement",
                                                         "Titre II : Dispositions communes aux aides personnelles au logement",
                                                         "Livre VIII : Aides personnelles au logement",
                                                         "Partie réglementaire",
                                                         "Code de la construction et de l'habitation"]))
                try:
                    temp_sous_calcul_traitement_1022 = ressources_menage_avec_arrondi_1
                except EmptyError:
                    temp_sous_calcul_traitement_1022 = dead_value
                    raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                         start_line=1615,
                                                         start_column=44,
                                                         end_line=1615,
                                                         end_column=61,
                                                         law_headings=["Article D823-9",
                                                         "Section 1 : Calcul, liquidation et versement des aides",
                                                         "Chapitre III : Modalités de liquidation et de versement",
                                                         "Titre II : Dispositions communes aux aides personnelles au logement",
                                                         "Livre VIII : Aides personnelles au logement",
                                                         "Partie réglementaire",
                                                         "Code de la construction et de l'habitation"]))
                try:
                    temp_sous_calcul_traitement_1023 = nombre_personnes_a_charge_12
                except EmptyError:
                    temp_sous_calcul_traitement_1023 = dead_value
                    raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                         start_line=1616,
                                                         start_column=42,
                                                         end_line=1616,
                                                         end_column=67,
                                                         law_headings=["Article D823-9",
                                                         "Section 1 : Calcul, liquidation et versement des aides",
                                                         "Chapitre III : Modalités de liquidation et de versement",
                                                         "Titre II : Dispositions communes aux aides personnelles au logement",
                                                         "Livre VIII : Aides personnelles au logement",
                                                         "Partie réglementaire",
                                                         "Code de la construction et de l'habitation"]))
                try:
                    temp_sous_calcul_traitement_1024 = situation_familiale_calcul_apl_9
                except EmptyError:
                    temp_sous_calcul_traitement_1024 = dead_value
                    raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                         start_line=1623,
                                                         start_column=47,
                                                         end_line=1623,
                                                         end_column=77,
                                                         law_headings=["Article D823-9",
                                                         "Section 1 : Calcul, liquidation et versement des aides",
                                                         "Chapitre III : Modalités de liquidation et de versement",
                                                         "Titre II : Dispositions communes aux aides personnelles au logement",
                                                         "Livre VIII : Aides personnelles au logement",
                                                         "Partie réglementaire",
                                                         "Code de la construction et de l'habitation"]))
                try:
                    temp_sous_calcul_traitement_1025 = zone_7
                except EmptyError:
                    temp_sous_calcul_traitement_1025 = dead_value
                    raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                         start_line=1617,
                                                         start_column=21,
                                                         end_line=1617,
                                                         end_column=25,
                                                         law_headings=["Article D823-9",
                                                         "Section 1 : Calcul, liquidation et versement des aides",
                                                         "Chapitre III : Modalités de liquidation et de versement",
                                                         "Titre II : Dispositions communes aux aides personnelles au logement",
                                                         "Livre VIII : Aides personnelles au logement",
                                                         "Partie réglementaire",
                                                         "Code de la construction et de l'habitation"]))
                try:
                    temp_sous_calcul_traitement_1026 = residence_9
                except EmptyError:
                    temp_sous_calcul_traitement_1026 = dead_value
                    raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                         start_line=1618,
                                                         start_column=26,
                                                         end_line=1618,
                                                         end_column=35,
                                                         law_headings=["Article D823-9",
                                                         "Section 1 : Calcul, liquidation et versement des aides",
                                                         "Chapitre III : Modalités de liquidation et de versement",
                                                         "Titre II : Dispositions communes aux aides personnelles au logement",
                                                         "Livre VIII : Aides personnelles au logement",
                                                         "Partie réglementaire",
                                                         "Code de la construction et de l'habitation"]))
                try:
                    temp_sous_calcul_traitement_1027 = date_courante_16
                except EmptyError:
                    temp_sous_calcul_traitement_1027 = dead_value
                    raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                         start_line=1622,
                                                         start_column=30,
                                                         end_line=1622,
                                                         end_column=43,
                                                         law_headings=["Article D823-9",
                                                         "Section 1 : Calcul, liquidation et versement des aides",
                                                         "Chapitre III : Modalités de liquidation et de versement",
                                                         "Titre II : Dispositions communes aux aides personnelles au logement",
                                                         "Livre VIII : Aides personnelles au logement",
                                                         "Partie réglementaire",
                                                         "Code de la construction et de l'habitation"]))
                try:
                    temp_sous_calcul_traitement_1028 = proprietaire_5.mensualite_principale
                except EmptyError:
                    temp_sous_calcul_traitement_1028 = dead_value
                    raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                         start_line=1624,
                                                         start_column=38,
                                                         end_line=1624,
                                                         end_column=72,
                                                         law_headings=["Article D823-9",
                                                         "Section 1 : Calcul, liquidation et versement des aides",
                                                         "Chapitre III : Modalités de liquidation et de versement",
                                                         "Titre II : Dispositions communes aux aides personnelles au logement",
                                                         "Livre VIII : Aides personnelles au logement",
                                                         "Partie réglementaire",
                                                         "Code de la construction et de l'habitation"]))
                try:
                    temp_sous_calcul_traitement_1029 = proprietaire_5.situation_r822_11_13_17
                except EmptyError:
                    temp_sous_calcul_traitement_1029 = dead_value
                    raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                         start_line=1632,
                                                         start_column=40,
                                                         end_line=1632,
                                                         end_column=76,
                                                         law_headings=["Article D823-9",
                                                         "Section 1 : Calcul, liquidation et versement des aides",
                                                         "Chapitre III : Modalités de liquidation et de versement",
                                                         "Titre II : Dispositions communes aux aides personnelles au logement",
                                                         "Livre VIII : Aides personnelles au logement",
                                                         "Partie réglementaire",
                                                         "Code de la construction et de l'habitation"]))
                try:
                    temp_sous_calcul_traitement_1030 = proprietaire_5.pret.date_signature
                except EmptyError:
                    temp_sous_calcul_traitement_1030 = dead_value
                    raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                         start_line=1627,
                                                         start_column=36,
                                                         end_line=1627,
                                                         end_column=68,
                                                         law_headings=["Article D823-9",
                                                         "Section 1 : Calcul, liquidation et versement des aides",
                                                         "Chapitre III : Modalités de liquidation et de versement",
                                                         "Titre II : Dispositions communes aux aides personnelles au logement",
                                                         "Livre VIII : Aides personnelles au logement",
                                                         "Partie réglementaire",
                                                         "Code de la construction et de l'habitation"]))
                try:
                    temp_sous_calcul_traitement_1031 = proprietaire_5.type_travaux_logement_r842_5
                except EmptyError:
                    temp_sous_calcul_traitement_1031 = dead_value
                    raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                         start_line=1626,
                                                         start_column=38,
                                                         end_line=1626,
                                                         end_column=79,
                                                         law_headings=["Article D823-9",
                                                         "Section 1 : Calcul, liquidation et versement des aides",
                                                         "Chapitre III : Modalités de liquidation et de versement",
                                                         "Titre II : Dispositions communes aux aides personnelles au logement",
                                                         "Livre VIII : Aides personnelles au logement",
                                                         "Partie réglementaire",
                                                         "Code de la construction et de l'habitation"]))
                try:
                    temp_sous_calcul_traitement_1032 = proprietaire_5.local_habite_premiere_fois_beneficiaire
                except EmptyError:
                    temp_sous_calcul_traitement_1032 = dead_value
                    raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                         start_line=1629,
                                                         start_column=14,
                                                         end_line=1629,
                                                         end_column=66,
                                                         law_headings=["Article D823-9",
                                                         "Section 1 : Calcul, liquidation et versement des aides",
                                                         "Chapitre III : Modalités de liquidation et de versement",
                                                         "Titre II : Dispositions communes aux aides personnelles au logement",
                                                         "Livre VIII : Aides personnelles au logement",
                                                         "Partie réglementaire",
                                                         "Code de la construction et de l'habitation"]))
                try:
                    temp_sous_calcul_traitement_1033 = proprietaire_5.date_entree_logement
                except EmptyError:
                    temp_sous_calcul_traitement_1033 = dead_value
                    raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                         start_line=1630,
                                                         start_column=37,
                                                         end_line=1630,
                                                         end_column=70,
                                                         law_headings=["Article D823-9",
                                                         "Section 1 : Calcul, liquidation et versement des aides",
                                                         "Chapitre III : Modalités de liquidation et de versement",
                                                         "Titre II : Dispositions communes aux aides personnelles au logement",
                                                         "Livre VIII : Aides personnelles au logement",
                                                         "Partie réglementaire",
                                                         "Code de la construction et de l'habitation"]))
                try:
                    temp_sous_calcul_traitement_1034 = proprietaire_5.charges_mensuelles_pret
                except EmptyError:
                    temp_sous_calcul_traitement_1034 = dead_value
                    raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                         start_line=1625,
                                                         start_column=40,
                                                         end_line=1625,
                                                         end_column=76,
                                                         law_headings=["Article D823-9",
                                                         "Section 1 : Calcul, liquidation et versement des aides",
                                                         "Chapitre III : Modalités de liquidation et de versement",
                                                         "Titre II : Dispositions communes aux aides personnelles au logement",
                                                         "Livre VIII : Aides personnelles au logement",
                                                         "Partie réglementaire",
                                                         "Code de la construction et de l'habitation"]))
                try:
                    temp_sous_calcul_traitement_1035 = proprietaire_5.copropriete
                except EmptyError:
                    temp_sous_calcul_traitement_1035 = dead_value
                    raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                         start_line=1631,
                                                         start_column=28,
                                                         end_line=1631,
                                                         end_column=52,
                                                         law_headings=["Article D823-9",
                                                         "Section 1 : Calcul, liquidation et versement des aides",
                                                         "Chapitre III : Modalités de liquidation et de versement",
                                                         "Titre II : Dispositions communes aux aides personnelles au logement",
                                                         "Livre VIII : Aides personnelles au logement",
                                                         "Partie réglementaire",
                                                         "Code de la construction et de l'habitation"]))
                try:
                    temp_sous_calcul_traitement_1036 = proprietaire_5.operations_logement_evolutifs_sociaux_accession_propriete_aidee_Etat
                except EmptyError:
                    temp_sous_calcul_traitement_1036 = dead_value
                    raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                         start_line=1620,
                                                         start_column=11,
                                                         end_line=1621,
                                                         end_column=81,
                                                         law_headings=["Article D823-9",
                                                         "Section 1 : Calcul, liquidation et versement des aides",
                                                         "Chapitre III : Modalités de liquidation et de versement",
                                                         "Titre II : Dispositions communes aux aides personnelles au logement",
                                                         "Livre VIII : Aides personnelles au logement",
                                                         "Partie réglementaire",
                                                         "Code de la construction et de l'habitation"]))
                temp_sous_calcul_traitement_760 = TraitementFormuleAideFinale(aide_finale_formule = CalculAllocationLogementAccessionPropriete(mensualite_eligible = calcul_allocation_logement_accession_propriete(
                    CalculAllocationLogementAccessionProprieteIn(ressources_menage_arrondies_base_in = temp_sous_calcul_traitement_946,
                    nombre_personnes_a_charge_in = temp_sous_calcul_traitement_947,
                    situation_familiale_calcul_apl_in = temp_sous_calcul_traitement_948,
                    zone_in = temp_sous_calcul_traitement_949,
                    residence_in = temp_sous_calcul_traitement_950,
                    date_courante_in = temp_sous_calcul_traitement_951,
                    mensualite_principale_in = temp_sous_calcul_traitement_952,
                    situation_r822_11_13_17_in = temp_sous_calcul_traitement_953,
                    date_signature_pret_in = temp_sous_calcul_traitement_954,
                    type_travaux_logement_in = temp_sous_calcul_traitement_955,
                    local_habite_premiere_fois_beneficiaire_in = temp_sous_calcul_traitement_956,
                    date_entree_logement_in = temp_sous_calcul_traitement_957,
                    charges_mensuelles_pret_in = temp_sous_calcul_traitement_958,
                    copropriete_in = temp_sous_calcul_traitement_959,
                    operations_logement_evolutifs_sociaux_accession_propriete_aidee_Etat_in = temp_sous_calcul_traitement_960)).mensualite_eligible,
                    mensualite_minimale = calcul_allocation_logement_accession_propriete(
                    CalculAllocationLogementAccessionProprieteIn(ressources_menage_arrondies_base_in = temp_sous_calcul_traitement_931,
                    nombre_personnes_a_charge_in = temp_sous_calcul_traitement_932,
                    situation_familiale_calcul_apl_in = temp_sous_calcul_traitement_933,
                    zone_in = temp_sous_calcul_traitement_934,
                    residence_in = temp_sous_calcul_traitement_935,
                    date_courante_in = temp_sous_calcul_traitement_936,
                    mensualite_principale_in = temp_sous_calcul_traitement_937,
                    situation_r822_11_13_17_in = temp_sous_calcul_traitement_938,
                    date_signature_pret_in = temp_sous_calcul_traitement_939,
                    type_travaux_logement_in = temp_sous_calcul_traitement_940,
                    local_habite_premiere_fois_beneficiaire_in = temp_sous_calcul_traitement_941,
                    date_entree_logement_in = temp_sous_calcul_traitement_942,
                    charges_mensuelles_pret_in = temp_sous_calcul_traitement_943,
                    copropriete_in = temp_sous_calcul_traitement_944,
                    operations_logement_evolutifs_sociaux_accession_propriete_aidee_Etat_in = temp_sous_calcul_traitement_945)).mensualite_minimale,
                    coefficient_prise_en_charge = calcul_allocation_logement_accession_propriete(
                    CalculAllocationLogementAccessionProprieteIn(ressources_menage_arrondies_base_in = temp_sous_calcul_traitement_916,
                    nombre_personnes_a_charge_in = temp_sous_calcul_traitement_917,
                    situation_familiale_calcul_apl_in = temp_sous_calcul_traitement_918,
                    zone_in = temp_sous_calcul_traitement_919,
                    residence_in = temp_sous_calcul_traitement_920,
                    date_courante_in = temp_sous_calcul_traitement_921,
                    mensualite_principale_in = temp_sous_calcul_traitement_922,
                    situation_r822_11_13_17_in = temp_sous_calcul_traitement_923,
                    date_signature_pret_in = temp_sous_calcul_traitement_924,
                    type_travaux_logement_in = temp_sous_calcul_traitement_925,
                    local_habite_premiere_fois_beneficiaire_in = temp_sous_calcul_traitement_926,
                    date_entree_logement_in = temp_sous_calcul_traitement_927,
                    charges_mensuelles_pret_in = temp_sous_calcul_traitement_928,
                    copropriete_in = temp_sous_calcul_traitement_929,
                    operations_logement_evolutifs_sociaux_accession_propriete_aidee_Etat_in = temp_sous_calcul_traitement_930)).coefficient_prise_en_charge,
                    aide_finale_formule = calcul_allocation_logement_accession_propriete(
                    CalculAllocationLogementAccessionProprieteIn(ressources_menage_arrondies_base_in = temp_sous_calcul_traitement_901,
                    nombre_personnes_a_charge_in = temp_sous_calcul_traitement_902,
                    situation_familiale_calcul_apl_in = temp_sous_calcul_traitement_903,
                    zone_in = temp_sous_calcul_traitement_904,
                    residence_in = temp_sous_calcul_traitement_905,
                    date_courante_in = temp_sous_calcul_traitement_906,
                    mensualite_principale_in = temp_sous_calcul_traitement_907,
                    situation_r822_11_13_17_in = temp_sous_calcul_traitement_908,
                    date_signature_pret_in = temp_sous_calcul_traitement_909,
                    type_travaux_logement_in = temp_sous_calcul_traitement_910,
                    local_habite_premiere_fois_beneficiaire_in = temp_sous_calcul_traitement_911,
                    date_entree_logement_in = temp_sous_calcul_traitement_912,
                    charges_mensuelles_pret_in = temp_sous_calcul_traitement_913,
                    copropriete_in = temp_sous_calcul_traitement_914,
                    operations_logement_evolutifs_sociaux_accession_propriete_aidee_Etat_in = temp_sous_calcul_traitement_915)).aide_finale_formule,
                    traitement_aide_finale = temp_sous_calcul_traitement_885).aide_finale_formule,
                    traitement_aide_finale = CalculAllocationLogementAccessionPropriete(mensualite_eligible = calcul_allocation_logement_accession_propriete(
                    CalculAllocationLogementAccessionProprieteIn(ressources_menage_arrondies_base_in = temp_sous_calcul_traitement_1022,
                    nombre_personnes_a_charge_in = temp_sous_calcul_traitement_1023,
                    situation_familiale_calcul_apl_in = temp_sous_calcul_traitement_1024,
                    zone_in = temp_sous_calcul_traitement_1025,
                    residence_in = temp_sous_calcul_traitement_1026,
                    date_courante_in = temp_sous_calcul_traitement_1027,
                    mensualite_principale_in = temp_sous_calcul_traitement_1028,
                    situation_r822_11_13_17_in = temp_sous_calcul_traitement_1029,
                    date_signature_pret_in = temp_sous_calcul_traitement_1030,
                    type_travaux_logement_in = temp_sous_calcul_traitement_1031,
                    local_habite_premiere_fois_beneficiaire_in = temp_sous_calcul_traitement_1032,
                    date_entree_logement_in = temp_sous_calcul_traitement_1033,
                    charges_mensuelles_pret_in = temp_sous_calcul_traitement_1034,
                    copropriete_in = temp_sous_calcul_traitement_1035,
                    operations_logement_evolutifs_sociaux_accession_propriete_aidee_Etat_in = temp_sous_calcul_traitement_1036)).mensualite_eligible,
                    mensualite_minimale = calcul_allocation_logement_accession_propriete(
                    CalculAllocationLogementAccessionProprieteIn(ressources_menage_arrondies_base_in = temp_sous_calcul_traitement_1007,
                    nombre_personnes_a_charge_in = temp_sous_calcul_traitement_1008,
                    situation_familiale_calcul_apl_in = temp_sous_calcul_traitement_1009,
                    zone_in = temp_sous_calcul_traitement_1010,
                    residence_in = temp_sous_calcul_traitement_1011,
                    date_courante_in = temp_sous_calcul_traitement_1012,
                    mensualite_principale_in = temp_sous_calcul_traitement_1013,
                    situation_r822_11_13_17_in = temp_sous_calcul_traitement_1014,
                    date_signature_pret_in = temp_sous_calcul_traitement_1015,
                    type_travaux_logement_in = temp_sous_calcul_traitement_1016,
                    local_habite_premiere_fois_beneficiaire_in = temp_sous_calcul_traitement_1017,
                    date_entree_logement_in = temp_sous_calcul_traitement_1018,
                    charges_mensuelles_pret_in = temp_sous_calcul_traitement_1019,
                    copropriete_in = temp_sous_calcul_traitement_1020,
                    operations_logement_evolutifs_sociaux_accession_propriete_aidee_Etat_in = temp_sous_calcul_traitement_1021)).mensualite_minimale,
                    coefficient_prise_en_charge = calcul_allocation_logement_accession_propriete(
                    CalculAllocationLogementAccessionProprieteIn(ressources_menage_arrondies_base_in = temp_sous_calcul_traitement_992,
                    nombre_personnes_a_charge_in = temp_sous_calcul_traitement_993,
                    situation_familiale_calcul_apl_in = temp_sous_calcul_traitement_994,
                    zone_in = temp_sous_calcul_traitement_995,
                    residence_in = temp_sous_calcul_traitement_996,
                    date_courante_in = temp_sous_calcul_traitement_997,
                    mensualite_principale_in = temp_sous_calcul_traitement_998,
                    situation_r822_11_13_17_in = temp_sous_calcul_traitement_999,
                    date_signature_pret_in = temp_sous_calcul_traitement_1000,
                    type_travaux_logement_in = temp_sous_calcul_traitement_1001,
                    local_habite_premiere_fois_beneficiaire_in = temp_sous_calcul_traitement_1002,
                    date_entree_logement_in = temp_sous_calcul_traitement_1003,
                    charges_mensuelles_pret_in = temp_sous_calcul_traitement_1004,
                    copropriete_in = temp_sous_calcul_traitement_1005,
                    operations_logement_evolutifs_sociaux_accession_propriete_aidee_Etat_in = temp_sous_calcul_traitement_1006)).coefficient_prise_en_charge,
                    aide_finale_formule = calcul_allocation_logement_accession_propriete(
                    CalculAllocationLogementAccessionProprieteIn(ressources_menage_arrondies_base_in = temp_sous_calcul_traitement_977,
                    nombre_personnes_a_charge_in = temp_sous_calcul_traitement_978,
                    situation_familiale_calcul_apl_in = temp_sous_calcul_traitement_979,
                    zone_in = temp_sous_calcul_traitement_980,
                    residence_in = temp_sous_calcul_traitement_981,
                    date_courante_in = temp_sous_calcul_traitement_982,
                    mensualite_principale_in = temp_sous_calcul_traitement_983,
                    situation_r822_11_13_17_in = temp_sous_calcul_traitement_984,
                    date_signature_pret_in = temp_sous_calcul_traitement_985,
                    type_travaux_logement_in = temp_sous_calcul_traitement_986,
                    local_habite_premiere_fois_beneficiaire_in = temp_sous_calcul_traitement_987,
                    date_entree_logement_in = temp_sous_calcul_traitement_988,
                    charges_mensuelles_pret_in = temp_sous_calcul_traitement_989,
                    copropriete_in = temp_sous_calcul_traitement_990,
                    operations_logement_evolutifs_sociaux_accession_propriete_aidee_Etat_in = temp_sous_calcul_traitement_991)).aide_finale_formule,
                    traitement_aide_finale = temp_sous_calcul_traitement_961).traitement_aide_finale)
            elif match_arg_682.code == CategorieCalculAPL_Code.LogementFoyer:
                logement_foyer__3 = match_arg_682.value
                def temp_sous_calcul_traitement_1037(param0_14:Money):
                    try:
                        temp_sous_calcul_traitement_1038 = logement_foyer__3.type
                    except EmptyError:
                        temp_sous_calcul_traitement_1038 = dead_value
                        raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                             start_line=1602,
                                                             start_column=35,
                                                             end_line=1602,
                                                             end_column=55,
                                                             law_headings=["Article D823-9",
                                                             "Section 1 : Calcul, liquidation et versement des aides",
                                                             "Chapitre III : Modalités de liquidation et de versement",
                                                             "Titre II : Dispositions communes aux aides personnelles au logement",
                                                             "Livre VIII : Aides personnelles au logement",
                                                             "Partie réglementaire",
                                                             "Code de la construction et de l'habitation"]))
                    try:
                        temp_sous_calcul_traitement_1039 = logement_foyer__3.date_conventionnement
                    except EmptyError:
                        temp_sous_calcul_traitement_1039 = dead_value
                        raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                             start_line=1603,
                                                             start_column=37,
                                                             end_line=1603,
                                                             end_column=74,
                                                             law_headings=["Article D823-9",
                                                             "Section 1 : Calcul, liquidation et versement des aides",
                                                             "Chapitre III : Modalités de liquidation et de versement",
                                                             "Titre II : Dispositions communes aux aides personnelles au logement",
                                                             "Livre VIII : Aides personnelles au logement",
                                                             "Partie réglementaire",
                                                             "Code de la construction et de l'habitation"]))
                    try:
                        temp_sous_calcul_traitement_1040 = residence_9
                    except EmptyError:
                        temp_sous_calcul_traitement_1040 = dead_value
                        raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                             start_line=1595,
                                                             start_column=25,
                                                             end_line=1595,
                                                             end_column=34,
                                                             law_headings=["Article D823-9",
                                                             "Section 1 : Calcul, liquidation et versement des aides",
                                                             "Chapitre III : Modalités de liquidation et de versement",
                                                             "Titre II : Dispositions communes aux aides personnelles au logement",
                                                             "Livre VIII : Aides personnelles au logement",
                                                             "Partie réglementaire",
                                                             "Code de la construction et de l'habitation"]))
                    try:
                        temp_sous_calcul_traitement_1041 = logement_foyer__3.redevance
                    except EmptyError:
                        temp_sous_calcul_traitement_1041 = dead_value
                        raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                             start_line=1599,
                                                             start_column=25,
                                                             end_line=1599,
                                                             end_column=50,
                                                             law_headings=["Article D823-9",
                                                             "Section 1 : Calcul, liquidation et versement des aides",
                                                             "Chapitre III : Modalités de liquidation et de versement",
                                                             "Titre II : Dispositions communes aux aides personnelles au logement",
                                                             "Livre VIII : Aides personnelles au logement",
                                                             "Partie réglementaire",
                                                             "Code de la construction et de l'habitation"]))
                    try:
                        temp_sous_calcul_traitement_1042 = ressources_menage_avec_arrondi_1
                    except EmptyError:
                        temp_sous_calcul_traitement_1042 = dead_value
                        raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                             start_line=1593,
                                                             start_column=43,
                                                             end_line=1593,
                                                             end_column=60,
                                                             law_headings=["Article D823-9",
                                                             "Section 1 : Calcul, liquidation et versement des aides",
                                                             "Chapitre III : Modalités de liquidation et de versement",
                                                             "Titre II : Dispositions communes aux aides personnelles au logement",
                                                             "Livre VIII : Aides personnelles au logement",
                                                             "Partie réglementaire",
                                                             "Code de la construction et de l'habitation"]))
                    try:
                        temp_sous_calcul_traitement_1043 = nombre_personnes_a_charge_12
                    except EmptyError:
                        temp_sous_calcul_traitement_1043 = dead_value
                        raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                             start_line=1594,
                                                             start_column=41,
                                                             end_line=1594,
                                                             end_column=66,
                                                             law_headings=["Article D823-9",
                                                             "Section 1 : Calcul, liquidation et versement des aides",
                                                             "Chapitre III : Modalités de liquidation et de versement",
                                                             "Titre II : Dispositions communes aux aides personnelles au logement",
                                                             "Livre VIII : Aides personnelles au logement",
                                                             "Partie réglementaire",
                                                             "Code de la construction et de l'habitation"]))
                    try:
                        temp_sous_calcul_traitement_1044 = situation_familiale_calcul_apl_9
                    except EmptyError:
                        temp_sous_calcul_traitement_1044 = dead_value
                        raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                             start_line=1598,
                                                             start_column=46,
                                                             end_line=1598,
                                                             end_column=76,
                                                             law_headings=["Article D823-9",
                                                             "Section 1 : Calcul, liquidation et versement des aides",
                                                             "Chapitre III : Modalités de liquidation et de versement",
                                                             "Titre II : Dispositions communes aux aides personnelles au logement",
                                                             "Livre VIII : Aides personnelles au logement",
                                                             "Partie réglementaire",
                                                             "Code de la construction et de l'habitation"]))
                    try:
                        temp_sous_calcul_traitement_1045 = zone_7
                    except EmptyError:
                        temp_sous_calcul_traitement_1045 = dead_value
                        raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                             start_line=1596,
                                                             start_column=20,
                                                             end_line=1596,
                                                             end_column=24,
                                                             law_headings=["Article D823-9",
                                                             "Section 1 : Calcul, liquidation et versement des aides",
                                                             "Chapitre III : Modalités de liquidation et de versement",
                                                             "Titre II : Dispositions communes aux aides personnelles au logement",
                                                             "Livre VIII : Aides personnelles au logement",
                                                             "Partie réglementaire",
                                                             "Code de la construction et de l'habitation"]))
                    try:
                        temp_sous_calcul_traitement_1046 = date_courante_16
                    except EmptyError:
                        temp_sous_calcul_traitement_1046 = dead_value
                        raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                             start_line=1597,
                                                             start_column=29,
                                                             end_line=1597,
                                                             end_column=42,
                                                             law_headings=["Article D823-9",
                                                             "Section 1 : Calcul, liquidation et versement des aides",
                                                             "Chapitre III : Modalités de liquidation et de versement",
                                                             "Titre II : Dispositions communes aux aides personnelles au logement",
                                                             "Livre VIII : Aides personnelles au logement",
                                                             "Partie réglementaire",
                                                             "Code de la construction et de l'habitation"]))
                    try:
                        temp_sous_calcul_traitement_1047 = logement_foyer__3.categorie_equivalence_loyer_d842_16
                    except EmptyError:
                        temp_sous_calcul_traitement_1047 = dead_value
                        raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                             start_line=1601,
                                                             start_column=13,
                                                             end_line=1601,
                                                             end_column=64,
                                                             law_headings=["Article D823-9",
                                                             "Section 1 : Calcul, liquidation et versement des aides",
                                                             "Chapitre III : Modalités de liquidation et de versement",
                                                             "Titre II : Dispositions communes aux aides personnelles au logement",
                                                             "Livre VIII : Aides personnelles au logement",
                                                             "Partie réglementaire",
                                                             "Code de la construction et de l'habitation"]))
                    return calcul_allocation_logement_foyer(CalculAllocationLogementFoyerIn(type_logement_foyer_in = temp_sous_calcul_traitement_1038,
                                                            date_conventionnement_in = temp_sous_calcul_traitement_1039,
                                                            residence_in = temp_sous_calcul_traitement_1040,
                                                            redevance_in = temp_sous_calcul_traitement_1041,
                                                            ressources_menage_arrondies_in = temp_sous_calcul_traitement_1042,
                                                            nombre_personnes_a_charge_in = temp_sous_calcul_traitement_1043,
                                                            situation_familiale_calcul_apl_in = temp_sous_calcul_traitement_1044,
                                                            zone_in = temp_sous_calcul_traitement_1045,
                                                            date_courante_in = temp_sous_calcul_traitement_1046,
                                                            categorie_equivalence_loyer_d842_16_in = temp_sous_calcul_traitement_1047)).traitement_aide_finale(
                        param0_14)
                try:
                    temp_sous_calcul_traitement_1048 = logement_foyer__3.type
                except EmptyError:
                    temp_sous_calcul_traitement_1048 = dead_value
                    raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                         start_line=1602,
                                                         start_column=35,
                                                         end_line=1602,
                                                         end_column=55,
                                                         law_headings=["Article D823-9",
                                                         "Section 1 : Calcul, liquidation et versement des aides",
                                                         "Chapitre III : Modalités de liquidation et de versement",
                                                         "Titre II : Dispositions communes aux aides personnelles au logement",
                                                         "Livre VIII : Aides personnelles au logement",
                                                         "Partie réglementaire",
                                                         "Code de la construction et de l'habitation"]))
                try:
                    temp_sous_calcul_traitement_1049 = logement_foyer__3.date_conventionnement
                except EmptyError:
                    temp_sous_calcul_traitement_1049 = dead_value
                    raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                         start_line=1603,
                                                         start_column=37,
                                                         end_line=1603,
                                                         end_column=74,
                                                         law_headings=["Article D823-9",
                                                         "Section 1 : Calcul, liquidation et versement des aides",
                                                         "Chapitre III : Modalités de liquidation et de versement",
                                                         "Titre II : Dispositions communes aux aides personnelles au logement",
                                                         "Livre VIII : Aides personnelles au logement",
                                                         "Partie réglementaire",
                                                         "Code de la construction et de l'habitation"]))
                try:
                    temp_sous_calcul_traitement_1050 = residence_9
                except EmptyError:
                    temp_sous_calcul_traitement_1050 = dead_value
                    raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                         start_line=1595,
                                                         start_column=25,
                                                         end_line=1595,
                                                         end_column=34,
                                                         law_headings=["Article D823-9",
                                                         "Section 1 : Calcul, liquidation et versement des aides",
                                                         "Chapitre III : Modalités de liquidation et de versement",
                                                         "Titre II : Dispositions communes aux aides personnelles au logement",
                                                         "Livre VIII : Aides personnelles au logement",
                                                         "Partie réglementaire",
                                                         "Code de la construction et de l'habitation"]))
                try:
                    temp_sous_calcul_traitement_1051 = logement_foyer__3.redevance
                except EmptyError:
                    temp_sous_calcul_traitement_1051 = dead_value
                    raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                         start_line=1599,
                                                         start_column=25,
                                                         end_line=1599,
                                                         end_column=50,
                                                         law_headings=["Article D823-9",
                                                         "Section 1 : Calcul, liquidation et versement des aides",
                                                         "Chapitre III : Modalités de liquidation et de versement",
                                                         "Titre II : Dispositions communes aux aides personnelles au logement",
                                                         "Livre VIII : Aides personnelles au logement",
                                                         "Partie réglementaire",
                                                         "Code de la construction et de l'habitation"]))
                try:
                    temp_sous_calcul_traitement_1052 = ressources_menage_avec_arrondi_1
                except EmptyError:
                    temp_sous_calcul_traitement_1052 = dead_value
                    raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                         start_line=1593,
                                                         start_column=43,
                                                         end_line=1593,
                                                         end_column=60,
                                                         law_headings=["Article D823-9",
                                                         "Section 1 : Calcul, liquidation et versement des aides",
                                                         "Chapitre III : Modalités de liquidation et de versement",
                                                         "Titre II : Dispositions communes aux aides personnelles au logement",
                                                         "Livre VIII : Aides personnelles au logement",
                                                         "Partie réglementaire",
                                                         "Code de la construction et de l'habitation"]))
                try:
                    temp_sous_calcul_traitement_1053 = nombre_personnes_a_charge_12
                except EmptyError:
                    temp_sous_calcul_traitement_1053 = dead_value
                    raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                         start_line=1594,
                                                         start_column=41,
                                                         end_line=1594,
                                                         end_column=66,
                                                         law_headings=["Article D823-9",
                                                         "Section 1 : Calcul, liquidation et versement des aides",
                                                         "Chapitre III : Modalités de liquidation et de versement",
                                                         "Titre II : Dispositions communes aux aides personnelles au logement",
                                                         "Livre VIII : Aides personnelles au logement",
                                                         "Partie réglementaire",
                                                         "Code de la construction et de l'habitation"]))
                try:
                    temp_sous_calcul_traitement_1054 = situation_familiale_calcul_apl_9
                except EmptyError:
                    temp_sous_calcul_traitement_1054 = dead_value
                    raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                         start_line=1598,
                                                         start_column=46,
                                                         end_line=1598,
                                                         end_column=76,
                                                         law_headings=["Article D823-9",
                                                         "Section 1 : Calcul, liquidation et versement des aides",
                                                         "Chapitre III : Modalités de liquidation et de versement",
                                                         "Titre II : Dispositions communes aux aides personnelles au logement",
                                                         "Livre VIII : Aides personnelles au logement",
                                                         "Partie réglementaire",
                                                         "Code de la construction et de l'habitation"]))
                try:
                    temp_sous_calcul_traitement_1055 = zone_7
                except EmptyError:
                    temp_sous_calcul_traitement_1055 = dead_value
                    raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                         start_line=1596,
                                                         start_column=20,
                                                         end_line=1596,
                                                         end_column=24,
                                                         law_headings=["Article D823-9",
                                                         "Section 1 : Calcul, liquidation et versement des aides",
                                                         "Chapitre III : Modalités de liquidation et de versement",
                                                         "Titre II : Dispositions communes aux aides personnelles au logement",
                                                         "Livre VIII : Aides personnelles au logement",
                                                         "Partie réglementaire",
                                                         "Code de la construction et de l'habitation"]))
                try:
                    temp_sous_calcul_traitement_1056 = date_courante_16
                except EmptyError:
                    temp_sous_calcul_traitement_1056 = dead_value
                    raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                         start_line=1597,
                                                         start_column=29,
                                                         end_line=1597,
                                                         end_column=42,
                                                         law_headings=["Article D823-9",
                                                         "Section 1 : Calcul, liquidation et versement des aides",
                                                         "Chapitre III : Modalités de liquidation et de versement",
                                                         "Titre II : Dispositions communes aux aides personnelles au logement",
                                                         "Livre VIII : Aides personnelles au logement",
                                                         "Partie réglementaire",
                                                         "Code de la construction et de l'habitation"]))
                try:
                    temp_sous_calcul_traitement_1057 = logement_foyer__3.categorie_equivalence_loyer_d842_16
                except EmptyError:
                    temp_sous_calcul_traitement_1057 = dead_value
                    raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                         start_line=1601,
                                                         start_column=13,
                                                         end_line=1601,
                                                         end_column=64,
                                                         law_headings=["Article D823-9",
                                                         "Section 1 : Calcul, liquidation et versement des aides",
                                                         "Chapitre III : Modalités de liquidation et de versement",
                                                         "Titre II : Dispositions communes aux aides personnelles au logement",
                                                         "Livre VIII : Aides personnelles au logement",
                                                         "Partie réglementaire",
                                                         "Code de la construction et de l'habitation"]))
                try:
                    temp_sous_calcul_traitement_1058 = logement_foyer__3.type
                except EmptyError:
                    temp_sous_calcul_traitement_1058 = dead_value
                    raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                         start_line=1602,
                                                         start_column=35,
                                                         end_line=1602,
                                                         end_column=55,
                                                         law_headings=["Article D823-9",
                                                         "Section 1 : Calcul, liquidation et versement des aides",
                                                         "Chapitre III : Modalités de liquidation et de versement",
                                                         "Titre II : Dispositions communes aux aides personnelles au logement",
                                                         "Livre VIII : Aides personnelles au logement",
                                                         "Partie réglementaire",
                                                         "Code de la construction et de l'habitation"]))
                try:
                    temp_sous_calcul_traitement_1059 = logement_foyer__3.date_conventionnement
                except EmptyError:
                    temp_sous_calcul_traitement_1059 = dead_value
                    raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                         start_line=1603,
                                                         start_column=37,
                                                         end_line=1603,
                                                         end_column=74,
                                                         law_headings=["Article D823-9",
                                                         "Section 1 : Calcul, liquidation et versement des aides",
                                                         "Chapitre III : Modalités de liquidation et de versement",
                                                         "Titre II : Dispositions communes aux aides personnelles au logement",
                                                         "Livre VIII : Aides personnelles au logement",
                                                         "Partie réglementaire",
                                                         "Code de la construction et de l'habitation"]))
                try:
                    temp_sous_calcul_traitement_1060 = residence_9
                except EmptyError:
                    temp_sous_calcul_traitement_1060 = dead_value
                    raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                         start_line=1595,
                                                         start_column=25,
                                                         end_line=1595,
                                                         end_column=34,
                                                         law_headings=["Article D823-9",
                                                         "Section 1 : Calcul, liquidation et versement des aides",
                                                         "Chapitre III : Modalités de liquidation et de versement",
                                                         "Titre II : Dispositions communes aux aides personnelles au logement",
                                                         "Livre VIII : Aides personnelles au logement",
                                                         "Partie réglementaire",
                                                         "Code de la construction et de l'habitation"]))
                try:
                    temp_sous_calcul_traitement_1061 = logement_foyer__3.redevance
                except EmptyError:
                    temp_sous_calcul_traitement_1061 = dead_value
                    raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                         start_line=1599,
                                                         start_column=25,
                                                         end_line=1599,
                                                         end_column=50,
                                                         law_headings=["Article D823-9",
                                                         "Section 1 : Calcul, liquidation et versement des aides",
                                                         "Chapitre III : Modalités de liquidation et de versement",
                                                         "Titre II : Dispositions communes aux aides personnelles au logement",
                                                         "Livre VIII : Aides personnelles au logement",
                                                         "Partie réglementaire",
                                                         "Code de la construction et de l'habitation"]))
                try:
                    temp_sous_calcul_traitement_1062 = ressources_menage_avec_arrondi_1
                except EmptyError:
                    temp_sous_calcul_traitement_1062 = dead_value
                    raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                         start_line=1593,
                                                         start_column=43,
                                                         end_line=1593,
                                                         end_column=60,
                                                         law_headings=["Article D823-9",
                                                         "Section 1 : Calcul, liquidation et versement des aides",
                                                         "Chapitre III : Modalités de liquidation et de versement",
                                                         "Titre II : Dispositions communes aux aides personnelles au logement",
                                                         "Livre VIII : Aides personnelles au logement",
                                                         "Partie réglementaire",
                                                         "Code de la construction et de l'habitation"]))
                try:
                    temp_sous_calcul_traitement_1063 = nombre_personnes_a_charge_12
                except EmptyError:
                    temp_sous_calcul_traitement_1063 = dead_value
                    raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                         start_line=1594,
                                                         start_column=41,
                                                         end_line=1594,
                                                         end_column=66,
                                                         law_headings=["Article D823-9",
                                                         "Section 1 : Calcul, liquidation et versement des aides",
                                                         "Chapitre III : Modalités de liquidation et de versement",
                                                         "Titre II : Dispositions communes aux aides personnelles au logement",
                                                         "Livre VIII : Aides personnelles au logement",
                                                         "Partie réglementaire",
                                                         "Code de la construction et de l'habitation"]))
                try:
                    temp_sous_calcul_traitement_1064 = situation_familiale_calcul_apl_9
                except EmptyError:
                    temp_sous_calcul_traitement_1064 = dead_value
                    raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                         start_line=1598,
                                                         start_column=46,
                                                         end_line=1598,
                                                         end_column=76,
                                                         law_headings=["Article D823-9",
                                                         "Section 1 : Calcul, liquidation et versement des aides",
                                                         "Chapitre III : Modalités de liquidation et de versement",
                                                         "Titre II : Dispositions communes aux aides personnelles au logement",
                                                         "Livre VIII : Aides personnelles au logement",
                                                         "Partie réglementaire",
                                                         "Code de la construction et de l'habitation"]))
                try:
                    temp_sous_calcul_traitement_1065 = zone_7
                except EmptyError:
                    temp_sous_calcul_traitement_1065 = dead_value
                    raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                         start_line=1596,
                                                         start_column=20,
                                                         end_line=1596,
                                                         end_column=24,
                                                         law_headings=["Article D823-9",
                                                         "Section 1 : Calcul, liquidation et versement des aides",
                                                         "Chapitre III : Modalités de liquidation et de versement",
                                                         "Titre II : Dispositions communes aux aides personnelles au logement",
                                                         "Livre VIII : Aides personnelles au logement",
                                                         "Partie réglementaire",
                                                         "Code de la construction et de l'habitation"]))
                try:
                    temp_sous_calcul_traitement_1066 = date_courante_16
                except EmptyError:
                    temp_sous_calcul_traitement_1066 = dead_value
                    raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                         start_line=1597,
                                                         start_column=29,
                                                         end_line=1597,
                                                         end_column=42,
                                                         law_headings=["Article D823-9",
                                                         "Section 1 : Calcul, liquidation et versement des aides",
                                                         "Chapitre III : Modalités de liquidation et de versement",
                                                         "Titre II : Dispositions communes aux aides personnelles au logement",
                                                         "Livre VIII : Aides personnelles au logement",
                                                         "Partie réglementaire",
                                                         "Code de la construction et de l'habitation"]))
                try:
                    temp_sous_calcul_traitement_1067 = logement_foyer__3.categorie_equivalence_loyer_d842_16
                except EmptyError:
                    temp_sous_calcul_traitement_1067 = dead_value
                    raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                         start_line=1601,
                                                         start_column=13,
                                                         end_line=1601,
                                                         end_column=64,
                                                         law_headings=["Article D823-9",
                                                         "Section 1 : Calcul, liquidation et versement des aides",
                                                         "Chapitre III : Modalités de liquidation et de versement",
                                                         "Titre II : Dispositions communes aux aides personnelles au logement",
                                                         "Livre VIII : Aides personnelles au logement",
                                                         "Partie réglementaire",
                                                         "Code de la construction et de l'habitation"]))
                try:
                    temp_sous_calcul_traitement_1068 = logement_foyer__3.type
                except EmptyError:
                    temp_sous_calcul_traitement_1068 = dead_value
                    raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                         start_line=1602,
                                                         start_column=35,
                                                         end_line=1602,
                                                         end_column=55,
                                                         law_headings=["Article D823-9",
                                                         "Section 1 : Calcul, liquidation et versement des aides",
                                                         "Chapitre III : Modalités de liquidation et de versement",
                                                         "Titre II : Dispositions communes aux aides personnelles au logement",
                                                         "Livre VIII : Aides personnelles au logement",
                                                         "Partie réglementaire",
                                                         "Code de la construction et de l'habitation"]))
                try:
                    temp_sous_calcul_traitement_1069 = logement_foyer__3.date_conventionnement
                except EmptyError:
                    temp_sous_calcul_traitement_1069 = dead_value
                    raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                         start_line=1603,
                                                         start_column=37,
                                                         end_line=1603,
                                                         end_column=74,
                                                         law_headings=["Article D823-9",
                                                         "Section 1 : Calcul, liquidation et versement des aides",
                                                         "Chapitre III : Modalités de liquidation et de versement",
                                                         "Titre II : Dispositions communes aux aides personnelles au logement",
                                                         "Livre VIII : Aides personnelles au logement",
                                                         "Partie réglementaire",
                                                         "Code de la construction et de l'habitation"]))
                try:
                    temp_sous_calcul_traitement_1070 = residence_9
                except EmptyError:
                    temp_sous_calcul_traitement_1070 = dead_value
                    raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                         start_line=1595,
                                                         start_column=25,
                                                         end_line=1595,
                                                         end_column=34,
                                                         law_headings=["Article D823-9",
                                                         "Section 1 : Calcul, liquidation et versement des aides",
                                                         "Chapitre III : Modalités de liquidation et de versement",
                                                         "Titre II : Dispositions communes aux aides personnelles au logement",
                                                         "Livre VIII : Aides personnelles au logement",
                                                         "Partie réglementaire",
                                                         "Code de la construction et de l'habitation"]))
                try:
                    temp_sous_calcul_traitement_1071 = logement_foyer__3.redevance
                except EmptyError:
                    temp_sous_calcul_traitement_1071 = dead_value
                    raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                         start_line=1599,
                                                         start_column=25,
                                                         end_line=1599,
                                                         end_column=50,
                                                         law_headings=["Article D823-9",
                                                         "Section 1 : Calcul, liquidation et versement des aides",
                                                         "Chapitre III : Modalités de liquidation et de versement",
                                                         "Titre II : Dispositions communes aux aides personnelles au logement",
                                                         "Livre VIII : Aides personnelles au logement",
                                                         "Partie réglementaire",
                                                         "Code de la construction et de l'habitation"]))
                try:
                    temp_sous_calcul_traitement_1072 = ressources_menage_avec_arrondi_1
                except EmptyError:
                    temp_sous_calcul_traitement_1072 = dead_value
                    raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                         start_line=1593,
                                                         start_column=43,
                                                         end_line=1593,
                                                         end_column=60,
                                                         law_headings=["Article D823-9",
                                                         "Section 1 : Calcul, liquidation et versement des aides",
                                                         "Chapitre III : Modalités de liquidation et de versement",
                                                         "Titre II : Dispositions communes aux aides personnelles au logement",
                                                         "Livre VIII : Aides personnelles au logement",
                                                         "Partie réglementaire",
                                                         "Code de la construction et de l'habitation"]))
                try:
                    temp_sous_calcul_traitement_1073 = nombre_personnes_a_charge_12
                except EmptyError:
                    temp_sous_calcul_traitement_1073 = dead_value
                    raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                         start_line=1594,
                                                         start_column=41,
                                                         end_line=1594,
                                                         end_column=66,
                                                         law_headings=["Article D823-9",
                                                         "Section 1 : Calcul, liquidation et versement des aides",
                                                         "Chapitre III : Modalités de liquidation et de versement",
                                                         "Titre II : Dispositions communes aux aides personnelles au logement",
                                                         "Livre VIII : Aides personnelles au logement",
                                                         "Partie réglementaire",
                                                         "Code de la construction et de l'habitation"]))
                try:
                    temp_sous_calcul_traitement_1074 = situation_familiale_calcul_apl_9
                except EmptyError:
                    temp_sous_calcul_traitement_1074 = dead_value
                    raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                         start_line=1598,
                                                         start_column=46,
                                                         end_line=1598,
                                                         end_column=76,
                                                         law_headings=["Article D823-9",
                                                         "Section 1 : Calcul, liquidation et versement des aides",
                                                         "Chapitre III : Modalités de liquidation et de versement",
                                                         "Titre II : Dispositions communes aux aides personnelles au logement",
                                                         "Livre VIII : Aides personnelles au logement",
                                                         "Partie réglementaire",
                                                         "Code de la construction et de l'habitation"]))
                try:
                    temp_sous_calcul_traitement_1075 = zone_7
                except EmptyError:
                    temp_sous_calcul_traitement_1075 = dead_value
                    raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                         start_line=1596,
                                                         start_column=20,
                                                         end_line=1596,
                                                         end_column=24,
                                                         law_headings=["Article D823-9",
                                                         "Section 1 : Calcul, liquidation et versement des aides",
                                                         "Chapitre III : Modalités de liquidation et de versement",
                                                         "Titre II : Dispositions communes aux aides personnelles au logement",
                                                         "Livre VIII : Aides personnelles au logement",
                                                         "Partie réglementaire",
                                                         "Code de la construction et de l'habitation"]))
                try:
                    temp_sous_calcul_traitement_1076 = date_courante_16
                except EmptyError:
                    temp_sous_calcul_traitement_1076 = dead_value
                    raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                         start_line=1597,
                                                         start_column=29,
                                                         end_line=1597,
                                                         end_column=42,
                                                         law_headings=["Article D823-9",
                                                         "Section 1 : Calcul, liquidation et versement des aides",
                                                         "Chapitre III : Modalités de liquidation et de versement",
                                                         "Titre II : Dispositions communes aux aides personnelles au logement",
                                                         "Livre VIII : Aides personnelles au logement",
                                                         "Partie réglementaire",
                                                         "Code de la construction et de l'habitation"]))
                try:
                    temp_sous_calcul_traitement_1077 = logement_foyer__3.categorie_equivalence_loyer_d842_16
                except EmptyError:
                    temp_sous_calcul_traitement_1077 = dead_value
                    raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                         start_line=1601,
                                                         start_column=13,
                                                         end_line=1601,
                                                         end_column=64,
                                                         law_headings=["Article D823-9",
                                                         "Section 1 : Calcul, liquidation et versement des aides",
                                                         "Chapitre III : Modalités de liquidation et de versement",
                                                         "Titre II : Dispositions communes aux aides personnelles au logement",
                                                         "Livre VIII : Aides personnelles au logement",
                                                         "Partie réglementaire",
                                                         "Code de la construction et de l'habitation"]))
                try:
                    temp_sous_calcul_traitement_1078 = logement_foyer__3.type
                except EmptyError:
                    temp_sous_calcul_traitement_1078 = dead_value
                    raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                         start_line=1602,
                                                         start_column=35,
                                                         end_line=1602,
                                                         end_column=55,
                                                         law_headings=["Article D823-9",
                                                         "Section 1 : Calcul, liquidation et versement des aides",
                                                         "Chapitre III : Modalités de liquidation et de versement",
                                                         "Titre II : Dispositions communes aux aides personnelles au logement",
                                                         "Livre VIII : Aides personnelles au logement",
                                                         "Partie réglementaire",
                                                         "Code de la construction et de l'habitation"]))
                try:
                    temp_sous_calcul_traitement_1079 = logement_foyer__3.date_conventionnement
                except EmptyError:
                    temp_sous_calcul_traitement_1079 = dead_value
                    raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                         start_line=1603,
                                                         start_column=37,
                                                         end_line=1603,
                                                         end_column=74,
                                                         law_headings=["Article D823-9",
                                                         "Section 1 : Calcul, liquidation et versement des aides",
                                                         "Chapitre III : Modalités de liquidation et de versement",
                                                         "Titre II : Dispositions communes aux aides personnelles au logement",
                                                         "Livre VIII : Aides personnelles au logement",
                                                         "Partie réglementaire",
                                                         "Code de la construction et de l'habitation"]))
                try:
                    temp_sous_calcul_traitement_1080 = residence_9
                except EmptyError:
                    temp_sous_calcul_traitement_1080 = dead_value
                    raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                         start_line=1595,
                                                         start_column=25,
                                                         end_line=1595,
                                                         end_column=34,
                                                         law_headings=["Article D823-9",
                                                         "Section 1 : Calcul, liquidation et versement des aides",
                                                         "Chapitre III : Modalités de liquidation et de versement",
                                                         "Titre II : Dispositions communes aux aides personnelles au logement",
                                                         "Livre VIII : Aides personnelles au logement",
                                                         "Partie réglementaire",
                                                         "Code de la construction et de l'habitation"]))
                try:
                    temp_sous_calcul_traitement_1081 = logement_foyer__3.redevance
                except EmptyError:
                    temp_sous_calcul_traitement_1081 = dead_value
                    raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                         start_line=1599,
                                                         start_column=25,
                                                         end_line=1599,
                                                         end_column=50,
                                                         law_headings=["Article D823-9",
                                                         "Section 1 : Calcul, liquidation et versement des aides",
                                                         "Chapitre III : Modalités de liquidation et de versement",
                                                         "Titre II : Dispositions communes aux aides personnelles au logement",
                                                         "Livre VIII : Aides personnelles au logement",
                                                         "Partie réglementaire",
                                                         "Code de la construction et de l'habitation"]))
                try:
                    temp_sous_calcul_traitement_1082 = ressources_menage_avec_arrondi_1
                except EmptyError:
                    temp_sous_calcul_traitement_1082 = dead_value
                    raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                         start_line=1593,
                                                         start_column=43,
                                                         end_line=1593,
                                                         end_column=60,
                                                         law_headings=["Article D823-9",
                                                         "Section 1 : Calcul, liquidation et versement des aides",
                                                         "Chapitre III : Modalités de liquidation et de versement",
                                                         "Titre II : Dispositions communes aux aides personnelles au logement",
                                                         "Livre VIII : Aides personnelles au logement",
                                                         "Partie réglementaire",
                                                         "Code de la construction et de l'habitation"]))
                try:
                    temp_sous_calcul_traitement_1083 = nombre_personnes_a_charge_12
                except EmptyError:
                    temp_sous_calcul_traitement_1083 = dead_value
                    raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                         start_line=1594,
                                                         start_column=41,
                                                         end_line=1594,
                                                         end_column=66,
                                                         law_headings=["Article D823-9",
                                                         "Section 1 : Calcul, liquidation et versement des aides",
                                                         "Chapitre III : Modalités de liquidation et de versement",
                                                         "Titre II : Dispositions communes aux aides personnelles au logement",
                                                         "Livre VIII : Aides personnelles au logement",
                                                         "Partie réglementaire",
                                                         "Code de la construction et de l'habitation"]))
                try:
                    temp_sous_calcul_traitement_1084 = situation_familiale_calcul_apl_9
                except EmptyError:
                    temp_sous_calcul_traitement_1084 = dead_value
                    raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                         start_line=1598,
                                                         start_column=46,
                                                         end_line=1598,
                                                         end_column=76,
                                                         law_headings=["Article D823-9",
                                                         "Section 1 : Calcul, liquidation et versement des aides",
                                                         "Chapitre III : Modalités de liquidation et de versement",
                                                         "Titre II : Dispositions communes aux aides personnelles au logement",
                                                         "Livre VIII : Aides personnelles au logement",
                                                         "Partie réglementaire",
                                                         "Code de la construction et de l'habitation"]))
                try:
                    temp_sous_calcul_traitement_1085 = zone_7
                except EmptyError:
                    temp_sous_calcul_traitement_1085 = dead_value
                    raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                         start_line=1596,
                                                         start_column=20,
                                                         end_line=1596,
                                                         end_column=24,
                                                         law_headings=["Article D823-9",
                                                         "Section 1 : Calcul, liquidation et versement des aides",
                                                         "Chapitre III : Modalités de liquidation et de versement",
                                                         "Titre II : Dispositions communes aux aides personnelles au logement",
                                                         "Livre VIII : Aides personnelles au logement",
                                                         "Partie réglementaire",
                                                         "Code de la construction et de l'habitation"]))
                try:
                    temp_sous_calcul_traitement_1086 = date_courante_16
                except EmptyError:
                    temp_sous_calcul_traitement_1086 = dead_value
                    raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                         start_line=1597,
                                                         start_column=29,
                                                         end_line=1597,
                                                         end_column=42,
                                                         law_headings=["Article D823-9",
                                                         "Section 1 : Calcul, liquidation et versement des aides",
                                                         "Chapitre III : Modalités de liquidation et de versement",
                                                         "Titre II : Dispositions communes aux aides personnelles au logement",
                                                         "Livre VIII : Aides personnelles au logement",
                                                         "Partie réglementaire",
                                                         "Code de la construction et de l'habitation"]))
                try:
                    temp_sous_calcul_traitement_1087 = logement_foyer__3.categorie_equivalence_loyer_d842_16
                except EmptyError:
                    temp_sous_calcul_traitement_1087 = dead_value
                    raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                         start_line=1601,
                                                         start_column=13,
                                                         end_line=1601,
                                                         end_column=64,
                                                         law_headings=["Article D823-9",
                                                         "Section 1 : Calcul, liquidation et versement des aides",
                                                         "Chapitre III : Modalités de liquidation et de versement",
                                                         "Titre II : Dispositions communes aux aides personnelles au logement",
                                                         "Livre VIII : Aides personnelles au logement",
                                                         "Partie réglementaire",
                                                         "Code de la construction et de l'habitation"]))
                try:
                    temp_sous_calcul_traitement_1088 = logement_foyer__3.type
                except EmptyError:
                    temp_sous_calcul_traitement_1088 = dead_value
                    raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                         start_line=1602,
                                                         start_column=35,
                                                         end_line=1602,
                                                         end_column=55,
                                                         law_headings=["Article D823-9",
                                                         "Section 1 : Calcul, liquidation et versement des aides",
                                                         "Chapitre III : Modalités de liquidation et de versement",
                                                         "Titre II : Dispositions communes aux aides personnelles au logement",
                                                         "Livre VIII : Aides personnelles au logement",
                                                         "Partie réglementaire",
                                                         "Code de la construction et de l'habitation"]))
                try:
                    temp_sous_calcul_traitement_1089 = logement_foyer__3.date_conventionnement
                except EmptyError:
                    temp_sous_calcul_traitement_1089 = dead_value
                    raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                         start_line=1603,
                                                         start_column=37,
                                                         end_line=1603,
                                                         end_column=74,
                                                         law_headings=["Article D823-9",
                                                         "Section 1 : Calcul, liquidation et versement des aides",
                                                         "Chapitre III : Modalités de liquidation et de versement",
                                                         "Titre II : Dispositions communes aux aides personnelles au logement",
                                                         "Livre VIII : Aides personnelles au logement",
                                                         "Partie réglementaire",
                                                         "Code de la construction et de l'habitation"]))
                try:
                    temp_sous_calcul_traitement_1090 = residence_9
                except EmptyError:
                    temp_sous_calcul_traitement_1090 = dead_value
                    raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                         start_line=1595,
                                                         start_column=25,
                                                         end_line=1595,
                                                         end_column=34,
                                                         law_headings=["Article D823-9",
                                                         "Section 1 : Calcul, liquidation et versement des aides",
                                                         "Chapitre III : Modalités de liquidation et de versement",
                                                         "Titre II : Dispositions communes aux aides personnelles au logement",
                                                         "Livre VIII : Aides personnelles au logement",
                                                         "Partie réglementaire",
                                                         "Code de la construction et de l'habitation"]))
                try:
                    temp_sous_calcul_traitement_1091 = logement_foyer__3.redevance
                except EmptyError:
                    temp_sous_calcul_traitement_1091 = dead_value
                    raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                         start_line=1599,
                                                         start_column=25,
                                                         end_line=1599,
                                                         end_column=50,
                                                         law_headings=["Article D823-9",
                                                         "Section 1 : Calcul, liquidation et versement des aides",
                                                         "Chapitre III : Modalités de liquidation et de versement",
                                                         "Titre II : Dispositions communes aux aides personnelles au logement",
                                                         "Livre VIII : Aides personnelles au logement",
                                                         "Partie réglementaire",
                                                         "Code de la construction et de l'habitation"]))
                try:
                    temp_sous_calcul_traitement_1092 = ressources_menage_avec_arrondi_1
                except EmptyError:
                    temp_sous_calcul_traitement_1092 = dead_value
                    raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                         start_line=1593,
                                                         start_column=43,
                                                         end_line=1593,
                                                         end_column=60,
                                                         law_headings=["Article D823-9",
                                                         "Section 1 : Calcul, liquidation et versement des aides",
                                                         "Chapitre III : Modalités de liquidation et de versement",
                                                         "Titre II : Dispositions communes aux aides personnelles au logement",
                                                         "Livre VIII : Aides personnelles au logement",
                                                         "Partie réglementaire",
                                                         "Code de la construction et de l'habitation"]))
                try:
                    temp_sous_calcul_traitement_1093 = nombre_personnes_a_charge_12
                except EmptyError:
                    temp_sous_calcul_traitement_1093 = dead_value
                    raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                         start_line=1594,
                                                         start_column=41,
                                                         end_line=1594,
                                                         end_column=66,
                                                         law_headings=["Article D823-9",
                                                         "Section 1 : Calcul, liquidation et versement des aides",
                                                         "Chapitre III : Modalités de liquidation et de versement",
                                                         "Titre II : Dispositions communes aux aides personnelles au logement",
                                                         "Livre VIII : Aides personnelles au logement",
                                                         "Partie réglementaire",
                                                         "Code de la construction et de l'habitation"]))
                try:
                    temp_sous_calcul_traitement_1094 = situation_familiale_calcul_apl_9
                except EmptyError:
                    temp_sous_calcul_traitement_1094 = dead_value
                    raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                         start_line=1598,
                                                         start_column=46,
                                                         end_line=1598,
                                                         end_column=76,
                                                         law_headings=["Article D823-9",
                                                         "Section 1 : Calcul, liquidation et versement des aides",
                                                         "Chapitre III : Modalités de liquidation et de versement",
                                                         "Titre II : Dispositions communes aux aides personnelles au logement",
                                                         "Livre VIII : Aides personnelles au logement",
                                                         "Partie réglementaire",
                                                         "Code de la construction et de l'habitation"]))
                try:
                    temp_sous_calcul_traitement_1095 = zone_7
                except EmptyError:
                    temp_sous_calcul_traitement_1095 = dead_value
                    raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                         start_line=1596,
                                                         start_column=20,
                                                         end_line=1596,
                                                         end_column=24,
                                                         law_headings=["Article D823-9",
                                                         "Section 1 : Calcul, liquidation et versement des aides",
                                                         "Chapitre III : Modalités de liquidation et de versement",
                                                         "Titre II : Dispositions communes aux aides personnelles au logement",
                                                         "Livre VIII : Aides personnelles au logement",
                                                         "Partie réglementaire",
                                                         "Code de la construction et de l'habitation"]))
                try:
                    temp_sous_calcul_traitement_1096 = date_courante_16
                except EmptyError:
                    temp_sous_calcul_traitement_1096 = dead_value
                    raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                         start_line=1597,
                                                         start_column=29,
                                                         end_line=1597,
                                                         end_column=42,
                                                         law_headings=["Article D823-9",
                                                         "Section 1 : Calcul, liquidation et versement des aides",
                                                         "Chapitre III : Modalités de liquidation et de versement",
                                                         "Titre II : Dispositions communes aux aides personnelles au logement",
                                                         "Livre VIII : Aides personnelles au logement",
                                                         "Partie réglementaire",
                                                         "Code de la construction et de l'habitation"]))
                try:
                    temp_sous_calcul_traitement_1097 = logement_foyer__3.categorie_equivalence_loyer_d842_16
                except EmptyError:
                    temp_sous_calcul_traitement_1097 = dead_value
                    raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                         start_line=1601,
                                                         start_column=13,
                                                         end_line=1601,
                                                         end_column=64,
                                                         law_headings=["Article D823-9",
                                                         "Section 1 : Calcul, liquidation et versement des aides",
                                                         "Chapitre III : Modalités de liquidation et de versement",
                                                         "Titre II : Dispositions communes aux aides personnelles au logement",
                                                         "Livre VIII : Aides personnelles au logement",
                                                         "Partie réglementaire",
                                                         "Code de la construction et de l'habitation"]))
                def temp_sous_calcul_traitement_1098(param0_15:Money):
                    try:
                        temp_sous_calcul_traitement_1099 = logement_foyer__3.type
                    except EmptyError:
                        temp_sous_calcul_traitement_1099 = dead_value
                        raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                             start_line=1602,
                                                             start_column=35,
                                                             end_line=1602,
                                                             end_column=55,
                                                             law_headings=["Article D823-9",
                                                             "Section 1 : Calcul, liquidation et versement des aides",
                                                             "Chapitre III : Modalités de liquidation et de versement",
                                                             "Titre II : Dispositions communes aux aides personnelles au logement",
                                                             "Livre VIII : Aides personnelles au logement",
                                                             "Partie réglementaire",
                                                             "Code de la construction et de l'habitation"]))
                    try:
                        temp_sous_calcul_traitement_1100 = logement_foyer__3.date_conventionnement
                    except EmptyError:
                        temp_sous_calcul_traitement_1100 = dead_value
                        raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                             start_line=1603,
                                                             start_column=37,
                                                             end_line=1603,
                                                             end_column=74,
                                                             law_headings=["Article D823-9",
                                                             "Section 1 : Calcul, liquidation et versement des aides",
                                                             "Chapitre III : Modalités de liquidation et de versement",
                                                             "Titre II : Dispositions communes aux aides personnelles au logement",
                                                             "Livre VIII : Aides personnelles au logement",
                                                             "Partie réglementaire",
                                                             "Code de la construction et de l'habitation"]))
                    try:
                        temp_sous_calcul_traitement_1101 = residence_9
                    except EmptyError:
                        temp_sous_calcul_traitement_1101 = dead_value
                        raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                             start_line=1595,
                                                             start_column=25,
                                                             end_line=1595,
                                                             end_column=34,
                                                             law_headings=["Article D823-9",
                                                             "Section 1 : Calcul, liquidation et versement des aides",
                                                             "Chapitre III : Modalités de liquidation et de versement",
                                                             "Titre II : Dispositions communes aux aides personnelles au logement",
                                                             "Livre VIII : Aides personnelles au logement",
                                                             "Partie réglementaire",
                                                             "Code de la construction et de l'habitation"]))
                    try:
                        temp_sous_calcul_traitement_1102 = logement_foyer__3.redevance
                    except EmptyError:
                        temp_sous_calcul_traitement_1102 = dead_value
                        raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                             start_line=1599,
                                                             start_column=25,
                                                             end_line=1599,
                                                             end_column=50,
                                                             law_headings=["Article D823-9",
                                                             "Section 1 : Calcul, liquidation et versement des aides",
                                                             "Chapitre III : Modalités de liquidation et de versement",
                                                             "Titre II : Dispositions communes aux aides personnelles au logement",
                                                             "Livre VIII : Aides personnelles au logement",
                                                             "Partie réglementaire",
                                                             "Code de la construction et de l'habitation"]))
                    try:
                        temp_sous_calcul_traitement_1103 = ressources_menage_avec_arrondi_1
                    except EmptyError:
                        temp_sous_calcul_traitement_1103 = dead_value
                        raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                             start_line=1593,
                                                             start_column=43,
                                                             end_line=1593,
                                                             end_column=60,
                                                             law_headings=["Article D823-9",
                                                             "Section 1 : Calcul, liquidation et versement des aides",
                                                             "Chapitre III : Modalités de liquidation et de versement",
                                                             "Titre II : Dispositions communes aux aides personnelles au logement",
                                                             "Livre VIII : Aides personnelles au logement",
                                                             "Partie réglementaire",
                                                             "Code de la construction et de l'habitation"]))
                    try:
                        temp_sous_calcul_traitement_1104 = nombre_personnes_a_charge_12
                    except EmptyError:
                        temp_sous_calcul_traitement_1104 = dead_value
                        raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                             start_line=1594,
                                                             start_column=41,
                                                             end_line=1594,
                                                             end_column=66,
                                                             law_headings=["Article D823-9",
                                                             "Section 1 : Calcul, liquidation et versement des aides",
                                                             "Chapitre III : Modalités de liquidation et de versement",
                                                             "Titre II : Dispositions communes aux aides personnelles au logement",
                                                             "Livre VIII : Aides personnelles au logement",
                                                             "Partie réglementaire",
                                                             "Code de la construction et de l'habitation"]))
                    try:
                        temp_sous_calcul_traitement_1105 = situation_familiale_calcul_apl_9
                    except EmptyError:
                        temp_sous_calcul_traitement_1105 = dead_value
                        raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                             start_line=1598,
                                                             start_column=46,
                                                             end_line=1598,
                                                             end_column=76,
                                                             law_headings=["Article D823-9",
                                                             "Section 1 : Calcul, liquidation et versement des aides",
                                                             "Chapitre III : Modalités de liquidation et de versement",
                                                             "Titre II : Dispositions communes aux aides personnelles au logement",
                                                             "Livre VIII : Aides personnelles au logement",
                                                             "Partie réglementaire",
                                                             "Code de la construction et de l'habitation"]))
                    try:
                        temp_sous_calcul_traitement_1106 = zone_7
                    except EmptyError:
                        temp_sous_calcul_traitement_1106 = dead_value
                        raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                             start_line=1596,
                                                             start_column=20,
                                                             end_line=1596,
                                                             end_column=24,
                                                             law_headings=["Article D823-9",
                                                             "Section 1 : Calcul, liquidation et versement des aides",
                                                             "Chapitre III : Modalités de liquidation et de versement",
                                                             "Titre II : Dispositions communes aux aides personnelles au logement",
                                                             "Livre VIII : Aides personnelles au logement",
                                                             "Partie réglementaire",
                                                             "Code de la construction et de l'habitation"]))
                    try:
                        temp_sous_calcul_traitement_1107 = date_courante_16
                    except EmptyError:
                        temp_sous_calcul_traitement_1107 = dead_value
                        raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                             start_line=1597,
                                                             start_column=29,
                                                             end_line=1597,
                                                             end_column=42,
                                                             law_headings=["Article D823-9",
                                                             "Section 1 : Calcul, liquidation et versement des aides",
                                                             "Chapitre III : Modalités de liquidation et de versement",
                                                             "Titre II : Dispositions communes aux aides personnelles au logement",
                                                             "Livre VIII : Aides personnelles au logement",
                                                             "Partie réglementaire",
                                                             "Code de la construction et de l'habitation"]))
                    try:
                        temp_sous_calcul_traitement_1108 = logement_foyer__3.categorie_equivalence_loyer_d842_16
                    except EmptyError:
                        temp_sous_calcul_traitement_1108 = dead_value
                        raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                             start_line=1601,
                                                             start_column=13,
                                                             end_line=1601,
                                                             end_column=64,
                                                             law_headings=["Article D823-9",
                                                             "Section 1 : Calcul, liquidation et versement des aides",
                                                             "Chapitre III : Modalités de liquidation et de versement",
                                                             "Titre II : Dispositions communes aux aides personnelles au logement",
                                                             "Livre VIII : Aides personnelles au logement",
                                                             "Partie réglementaire",
                                                             "Code de la construction et de l'habitation"]))
                    return calcul_allocation_logement_foyer(CalculAllocationLogementFoyerIn(type_logement_foyer_in = temp_sous_calcul_traitement_1099,
                                                            date_conventionnement_in = temp_sous_calcul_traitement_1100,
                                                            residence_in = temp_sous_calcul_traitement_1101,
                                                            redevance_in = temp_sous_calcul_traitement_1102,
                                                            ressources_menage_arrondies_in = temp_sous_calcul_traitement_1103,
                                                            nombre_personnes_a_charge_in = temp_sous_calcul_traitement_1104,
                                                            situation_familiale_calcul_apl_in = temp_sous_calcul_traitement_1105,
                                                            zone_in = temp_sous_calcul_traitement_1106,
                                                            date_courante_in = temp_sous_calcul_traitement_1107,
                                                            categorie_equivalence_loyer_d842_16_in = temp_sous_calcul_traitement_1108)).traitement_aide_finale(
                        param0_15)
                try:
                    temp_sous_calcul_traitement_1109 = logement_foyer__3.type
                except EmptyError:
                    temp_sous_calcul_traitement_1109 = dead_value
                    raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                         start_line=1602,
                                                         start_column=35,
                                                         end_line=1602,
                                                         end_column=55,
                                                         law_headings=["Article D823-9",
                                                         "Section 1 : Calcul, liquidation et versement des aides",
                                                         "Chapitre III : Modalités de liquidation et de versement",
                                                         "Titre II : Dispositions communes aux aides personnelles au logement",
                                                         "Livre VIII : Aides personnelles au logement",
                                                         "Partie réglementaire",
                                                         "Code de la construction et de l'habitation"]))
                try:
                    temp_sous_calcul_traitement_1110 = logement_foyer__3.date_conventionnement
                except EmptyError:
                    temp_sous_calcul_traitement_1110 = dead_value
                    raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                         start_line=1603,
                                                         start_column=37,
                                                         end_line=1603,
                                                         end_column=74,
                                                         law_headings=["Article D823-9",
                                                         "Section 1 : Calcul, liquidation et versement des aides",
                                                         "Chapitre III : Modalités de liquidation et de versement",
                                                         "Titre II : Dispositions communes aux aides personnelles au logement",
                                                         "Livre VIII : Aides personnelles au logement",
                                                         "Partie réglementaire",
                                                         "Code de la construction et de l'habitation"]))
                try:
                    temp_sous_calcul_traitement_1111 = residence_9
                except EmptyError:
                    temp_sous_calcul_traitement_1111 = dead_value
                    raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                         start_line=1595,
                                                         start_column=25,
                                                         end_line=1595,
                                                         end_column=34,
                                                         law_headings=["Article D823-9",
                                                         "Section 1 : Calcul, liquidation et versement des aides",
                                                         "Chapitre III : Modalités de liquidation et de versement",
                                                         "Titre II : Dispositions communes aux aides personnelles au logement",
                                                         "Livre VIII : Aides personnelles au logement",
                                                         "Partie réglementaire",
                                                         "Code de la construction et de l'habitation"]))
                try:
                    temp_sous_calcul_traitement_1112 = logement_foyer__3.redevance
                except EmptyError:
                    temp_sous_calcul_traitement_1112 = dead_value
                    raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                         start_line=1599,
                                                         start_column=25,
                                                         end_line=1599,
                                                         end_column=50,
                                                         law_headings=["Article D823-9",
                                                         "Section 1 : Calcul, liquidation et versement des aides",
                                                         "Chapitre III : Modalités de liquidation et de versement",
                                                         "Titre II : Dispositions communes aux aides personnelles au logement",
                                                         "Livre VIII : Aides personnelles au logement",
                                                         "Partie réglementaire",
                                                         "Code de la construction et de l'habitation"]))
                try:
                    temp_sous_calcul_traitement_1113 = ressources_menage_avec_arrondi_1
                except EmptyError:
                    temp_sous_calcul_traitement_1113 = dead_value
                    raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                         start_line=1593,
                                                         start_column=43,
                                                         end_line=1593,
                                                         end_column=60,
                                                         law_headings=["Article D823-9",
                                                         "Section 1 : Calcul, liquidation et versement des aides",
                                                         "Chapitre III : Modalités de liquidation et de versement",
                                                         "Titre II : Dispositions communes aux aides personnelles au logement",
                                                         "Livre VIII : Aides personnelles au logement",
                                                         "Partie réglementaire",
                                                         "Code de la construction et de l'habitation"]))
                try:
                    temp_sous_calcul_traitement_1114 = nombre_personnes_a_charge_12
                except EmptyError:
                    temp_sous_calcul_traitement_1114 = dead_value
                    raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                         start_line=1594,
                                                         start_column=41,
                                                         end_line=1594,
                                                         end_column=66,
                                                         law_headings=["Article D823-9",
                                                         "Section 1 : Calcul, liquidation et versement des aides",
                                                         "Chapitre III : Modalités de liquidation et de versement",
                                                         "Titre II : Dispositions communes aux aides personnelles au logement",
                                                         "Livre VIII : Aides personnelles au logement",
                                                         "Partie réglementaire",
                                                         "Code de la construction et de l'habitation"]))
                try:
                    temp_sous_calcul_traitement_1115 = situation_familiale_calcul_apl_9
                except EmptyError:
                    temp_sous_calcul_traitement_1115 = dead_value
                    raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                         start_line=1598,
                                                         start_column=46,
                                                         end_line=1598,
                                                         end_column=76,
                                                         law_headings=["Article D823-9",
                                                         "Section 1 : Calcul, liquidation et versement des aides",
                                                         "Chapitre III : Modalités de liquidation et de versement",
                                                         "Titre II : Dispositions communes aux aides personnelles au logement",
                                                         "Livre VIII : Aides personnelles au logement",
                                                         "Partie réglementaire",
                                                         "Code de la construction et de l'habitation"]))
                try:
                    temp_sous_calcul_traitement_1116 = zone_7
                except EmptyError:
                    temp_sous_calcul_traitement_1116 = dead_value
                    raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                         start_line=1596,
                                                         start_column=20,
                                                         end_line=1596,
                                                         end_column=24,
                                                         law_headings=["Article D823-9",
                                                         "Section 1 : Calcul, liquidation et versement des aides",
                                                         "Chapitre III : Modalités de liquidation et de versement",
                                                         "Titre II : Dispositions communes aux aides personnelles au logement",
                                                         "Livre VIII : Aides personnelles au logement",
                                                         "Partie réglementaire",
                                                         "Code de la construction et de l'habitation"]))
                try:
                    temp_sous_calcul_traitement_1117 = date_courante_16
                except EmptyError:
                    temp_sous_calcul_traitement_1117 = dead_value
                    raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                         start_line=1597,
                                                         start_column=29,
                                                         end_line=1597,
                                                         end_column=42,
                                                         law_headings=["Article D823-9",
                                                         "Section 1 : Calcul, liquidation et versement des aides",
                                                         "Chapitre III : Modalités de liquidation et de versement",
                                                         "Titre II : Dispositions communes aux aides personnelles au logement",
                                                         "Livre VIII : Aides personnelles au logement",
                                                         "Partie réglementaire",
                                                         "Code de la construction et de l'habitation"]))
                try:
                    temp_sous_calcul_traitement_1118 = logement_foyer__3.categorie_equivalence_loyer_d842_16
                except EmptyError:
                    temp_sous_calcul_traitement_1118 = dead_value
                    raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                         start_line=1601,
                                                         start_column=13,
                                                         end_line=1601,
                                                         end_column=64,
                                                         law_headings=["Article D823-9",
                                                         "Section 1 : Calcul, liquidation et versement des aides",
                                                         "Chapitre III : Modalités de liquidation et de versement",
                                                         "Titre II : Dispositions communes aux aides personnelles au logement",
                                                         "Livre VIII : Aides personnelles au logement",
                                                         "Partie réglementaire",
                                                         "Code de la construction et de l'habitation"]))
                try:
                    temp_sous_calcul_traitement_1119 = logement_foyer__3.type
                except EmptyError:
                    temp_sous_calcul_traitement_1119 = dead_value
                    raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                         start_line=1602,
                                                         start_column=35,
                                                         end_line=1602,
                                                         end_column=55,
                                                         law_headings=["Article D823-9",
                                                         "Section 1 : Calcul, liquidation et versement des aides",
                                                         "Chapitre III : Modalités de liquidation et de versement",
                                                         "Titre II : Dispositions communes aux aides personnelles au logement",
                                                         "Livre VIII : Aides personnelles au logement",
                                                         "Partie réglementaire",
                                                         "Code de la construction et de l'habitation"]))
                try:
                    temp_sous_calcul_traitement_1120 = logement_foyer__3.date_conventionnement
                except EmptyError:
                    temp_sous_calcul_traitement_1120 = dead_value
                    raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                         start_line=1603,
                                                         start_column=37,
                                                         end_line=1603,
                                                         end_column=74,
                                                         law_headings=["Article D823-9",
                                                         "Section 1 : Calcul, liquidation et versement des aides",
                                                         "Chapitre III : Modalités de liquidation et de versement",
                                                         "Titre II : Dispositions communes aux aides personnelles au logement",
                                                         "Livre VIII : Aides personnelles au logement",
                                                         "Partie réglementaire",
                                                         "Code de la construction et de l'habitation"]))
                try:
                    temp_sous_calcul_traitement_1121 = residence_9
                except EmptyError:
                    temp_sous_calcul_traitement_1121 = dead_value
                    raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                         start_line=1595,
                                                         start_column=25,
                                                         end_line=1595,
                                                         end_column=34,
                                                         law_headings=["Article D823-9",
                                                         "Section 1 : Calcul, liquidation et versement des aides",
                                                         "Chapitre III : Modalités de liquidation et de versement",
                                                         "Titre II : Dispositions communes aux aides personnelles au logement",
                                                         "Livre VIII : Aides personnelles au logement",
                                                         "Partie réglementaire",
                                                         "Code de la construction et de l'habitation"]))
                try:
                    temp_sous_calcul_traitement_1122 = logement_foyer__3.redevance
                except EmptyError:
                    temp_sous_calcul_traitement_1122 = dead_value
                    raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                         start_line=1599,
                                                         start_column=25,
                                                         end_line=1599,
                                                         end_column=50,
                                                         law_headings=["Article D823-9",
                                                         "Section 1 : Calcul, liquidation et versement des aides",
                                                         "Chapitre III : Modalités de liquidation et de versement",
                                                         "Titre II : Dispositions communes aux aides personnelles au logement",
                                                         "Livre VIII : Aides personnelles au logement",
                                                         "Partie réglementaire",
                                                         "Code de la construction et de l'habitation"]))
                try:
                    temp_sous_calcul_traitement_1123 = ressources_menage_avec_arrondi_1
                except EmptyError:
                    temp_sous_calcul_traitement_1123 = dead_value
                    raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                         start_line=1593,
                                                         start_column=43,
                                                         end_line=1593,
                                                         end_column=60,
                                                         law_headings=["Article D823-9",
                                                         "Section 1 : Calcul, liquidation et versement des aides",
                                                         "Chapitre III : Modalités de liquidation et de versement",
                                                         "Titre II : Dispositions communes aux aides personnelles au logement",
                                                         "Livre VIII : Aides personnelles au logement",
                                                         "Partie réglementaire",
                                                         "Code de la construction et de l'habitation"]))
                try:
                    temp_sous_calcul_traitement_1124 = nombre_personnes_a_charge_12
                except EmptyError:
                    temp_sous_calcul_traitement_1124 = dead_value
                    raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                         start_line=1594,
                                                         start_column=41,
                                                         end_line=1594,
                                                         end_column=66,
                                                         law_headings=["Article D823-9",
                                                         "Section 1 : Calcul, liquidation et versement des aides",
                                                         "Chapitre III : Modalités de liquidation et de versement",
                                                         "Titre II : Dispositions communes aux aides personnelles au logement",
                                                         "Livre VIII : Aides personnelles au logement",
                                                         "Partie réglementaire",
                                                         "Code de la construction et de l'habitation"]))
                try:
                    temp_sous_calcul_traitement_1125 = situation_familiale_calcul_apl_9
                except EmptyError:
                    temp_sous_calcul_traitement_1125 = dead_value
                    raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                         start_line=1598,
                                                         start_column=46,
                                                         end_line=1598,
                                                         end_column=76,
                                                         law_headings=["Article D823-9",
                                                         "Section 1 : Calcul, liquidation et versement des aides",
                                                         "Chapitre III : Modalités de liquidation et de versement",
                                                         "Titre II : Dispositions communes aux aides personnelles au logement",
                                                         "Livre VIII : Aides personnelles au logement",
                                                         "Partie réglementaire",
                                                         "Code de la construction et de l'habitation"]))
                try:
                    temp_sous_calcul_traitement_1126 = zone_7
                except EmptyError:
                    temp_sous_calcul_traitement_1126 = dead_value
                    raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                         start_line=1596,
                                                         start_column=20,
                                                         end_line=1596,
                                                         end_column=24,
                                                         law_headings=["Article D823-9",
                                                         "Section 1 : Calcul, liquidation et versement des aides",
                                                         "Chapitre III : Modalités de liquidation et de versement",
                                                         "Titre II : Dispositions communes aux aides personnelles au logement",
                                                         "Livre VIII : Aides personnelles au logement",
                                                         "Partie réglementaire",
                                                         "Code de la construction et de l'habitation"]))
                try:
                    temp_sous_calcul_traitement_1127 = date_courante_16
                except EmptyError:
                    temp_sous_calcul_traitement_1127 = dead_value
                    raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                         start_line=1597,
                                                         start_column=29,
                                                         end_line=1597,
                                                         end_column=42,
                                                         law_headings=["Article D823-9",
                                                         "Section 1 : Calcul, liquidation et versement des aides",
                                                         "Chapitre III : Modalités de liquidation et de versement",
                                                         "Titre II : Dispositions communes aux aides personnelles au logement",
                                                         "Livre VIII : Aides personnelles au logement",
                                                         "Partie réglementaire",
                                                         "Code de la construction et de l'habitation"]))
                try:
                    temp_sous_calcul_traitement_1128 = logement_foyer__3.categorie_equivalence_loyer_d842_16
                except EmptyError:
                    temp_sous_calcul_traitement_1128 = dead_value
                    raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                         start_line=1601,
                                                         start_column=13,
                                                         end_line=1601,
                                                         end_column=64,
                                                         law_headings=["Article D823-9",
                                                         "Section 1 : Calcul, liquidation et versement des aides",
                                                         "Chapitre III : Modalités de liquidation et de versement",
                                                         "Titre II : Dispositions communes aux aides personnelles au logement",
                                                         "Livre VIII : Aides personnelles au logement",
                                                         "Partie réglementaire",
                                                         "Code de la construction et de l'habitation"]))
                try:
                    temp_sous_calcul_traitement_1129 = logement_foyer__3.type
                except EmptyError:
                    temp_sous_calcul_traitement_1129 = dead_value
                    raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                         start_line=1602,
                                                         start_column=35,
                                                         end_line=1602,
                                                         end_column=55,
                                                         law_headings=["Article D823-9",
                                                         "Section 1 : Calcul, liquidation et versement des aides",
                                                         "Chapitre III : Modalités de liquidation et de versement",
                                                         "Titre II : Dispositions communes aux aides personnelles au logement",
                                                         "Livre VIII : Aides personnelles au logement",
                                                         "Partie réglementaire",
                                                         "Code de la construction et de l'habitation"]))
                try:
                    temp_sous_calcul_traitement_1130 = logement_foyer__3.date_conventionnement
                except EmptyError:
                    temp_sous_calcul_traitement_1130 = dead_value
                    raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                         start_line=1603,
                                                         start_column=37,
                                                         end_line=1603,
                                                         end_column=74,
                                                         law_headings=["Article D823-9",
                                                         "Section 1 : Calcul, liquidation et versement des aides",
                                                         "Chapitre III : Modalités de liquidation et de versement",
                                                         "Titre II : Dispositions communes aux aides personnelles au logement",
                                                         "Livre VIII : Aides personnelles au logement",
                                                         "Partie réglementaire",
                                                         "Code de la construction et de l'habitation"]))
                try:
                    temp_sous_calcul_traitement_1131 = residence_9
                except EmptyError:
                    temp_sous_calcul_traitement_1131 = dead_value
                    raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                         start_line=1595,
                                                         start_column=25,
                                                         end_line=1595,
                                                         end_column=34,
                                                         law_headings=["Article D823-9",
                                                         "Section 1 : Calcul, liquidation et versement des aides",
                                                         "Chapitre III : Modalités de liquidation et de versement",
                                                         "Titre II : Dispositions communes aux aides personnelles au logement",
                                                         "Livre VIII : Aides personnelles au logement",
                                                         "Partie réglementaire",
                                                         "Code de la construction et de l'habitation"]))
                try:
                    temp_sous_calcul_traitement_1132 = logement_foyer__3.redevance
                except EmptyError:
                    temp_sous_calcul_traitement_1132 = dead_value
                    raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                         start_line=1599,
                                                         start_column=25,
                                                         end_line=1599,
                                                         end_column=50,
                                                         law_headings=["Article D823-9",
                                                         "Section 1 : Calcul, liquidation et versement des aides",
                                                         "Chapitre III : Modalités de liquidation et de versement",
                                                         "Titre II : Dispositions communes aux aides personnelles au logement",
                                                         "Livre VIII : Aides personnelles au logement",
                                                         "Partie réglementaire",
                                                         "Code de la construction et de l'habitation"]))
                try:
                    temp_sous_calcul_traitement_1133 = ressources_menage_avec_arrondi_1
                except EmptyError:
                    temp_sous_calcul_traitement_1133 = dead_value
                    raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                         start_line=1593,
                                                         start_column=43,
                                                         end_line=1593,
                                                         end_column=60,
                                                         law_headings=["Article D823-9",
                                                         "Section 1 : Calcul, liquidation et versement des aides",
                                                         "Chapitre III : Modalités de liquidation et de versement",
                                                         "Titre II : Dispositions communes aux aides personnelles au logement",
                                                         "Livre VIII : Aides personnelles au logement",
                                                         "Partie réglementaire",
                                                         "Code de la construction et de l'habitation"]))
                try:
                    temp_sous_calcul_traitement_1134 = nombre_personnes_a_charge_12
                except EmptyError:
                    temp_sous_calcul_traitement_1134 = dead_value
                    raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                         start_line=1594,
                                                         start_column=41,
                                                         end_line=1594,
                                                         end_column=66,
                                                         law_headings=["Article D823-9",
                                                         "Section 1 : Calcul, liquidation et versement des aides",
                                                         "Chapitre III : Modalités de liquidation et de versement",
                                                         "Titre II : Dispositions communes aux aides personnelles au logement",
                                                         "Livre VIII : Aides personnelles au logement",
                                                         "Partie réglementaire",
                                                         "Code de la construction et de l'habitation"]))
                try:
                    temp_sous_calcul_traitement_1135 = situation_familiale_calcul_apl_9
                except EmptyError:
                    temp_sous_calcul_traitement_1135 = dead_value
                    raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                         start_line=1598,
                                                         start_column=46,
                                                         end_line=1598,
                                                         end_column=76,
                                                         law_headings=["Article D823-9",
                                                         "Section 1 : Calcul, liquidation et versement des aides",
                                                         "Chapitre III : Modalités de liquidation et de versement",
                                                         "Titre II : Dispositions communes aux aides personnelles au logement",
                                                         "Livre VIII : Aides personnelles au logement",
                                                         "Partie réglementaire",
                                                         "Code de la construction et de l'habitation"]))
                try:
                    temp_sous_calcul_traitement_1136 = zone_7
                except EmptyError:
                    temp_sous_calcul_traitement_1136 = dead_value
                    raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                         start_line=1596,
                                                         start_column=20,
                                                         end_line=1596,
                                                         end_column=24,
                                                         law_headings=["Article D823-9",
                                                         "Section 1 : Calcul, liquidation et versement des aides",
                                                         "Chapitre III : Modalités de liquidation et de versement",
                                                         "Titre II : Dispositions communes aux aides personnelles au logement",
                                                         "Livre VIII : Aides personnelles au logement",
                                                         "Partie réglementaire",
                                                         "Code de la construction et de l'habitation"]))
                try:
                    temp_sous_calcul_traitement_1137 = date_courante_16
                except EmptyError:
                    temp_sous_calcul_traitement_1137 = dead_value
                    raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                         start_line=1597,
                                                         start_column=29,
                                                         end_line=1597,
                                                         end_column=42,
                                                         law_headings=["Article D823-9",
                                                         "Section 1 : Calcul, liquidation et versement des aides",
                                                         "Chapitre III : Modalités de liquidation et de versement",
                                                         "Titre II : Dispositions communes aux aides personnelles au logement",
                                                         "Livre VIII : Aides personnelles au logement",
                                                         "Partie réglementaire",
                                                         "Code de la construction et de l'habitation"]))
                try:
                    temp_sous_calcul_traitement_1138 = logement_foyer__3.categorie_equivalence_loyer_d842_16
                except EmptyError:
                    temp_sous_calcul_traitement_1138 = dead_value
                    raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                         start_line=1601,
                                                         start_column=13,
                                                         end_line=1601,
                                                         end_column=64,
                                                         law_headings=["Article D823-9",
                                                         "Section 1 : Calcul, liquidation et versement des aides",
                                                         "Chapitre III : Modalités de liquidation et de versement",
                                                         "Titre II : Dispositions communes aux aides personnelles au logement",
                                                         "Livre VIII : Aides personnelles au logement",
                                                         "Partie réglementaire",
                                                         "Code de la construction et de l'habitation"]))
                try:
                    temp_sous_calcul_traitement_1139 = logement_foyer__3.type
                except EmptyError:
                    temp_sous_calcul_traitement_1139 = dead_value
                    raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                         start_line=1602,
                                                         start_column=35,
                                                         end_line=1602,
                                                         end_column=55,
                                                         law_headings=["Article D823-9",
                                                         "Section 1 : Calcul, liquidation et versement des aides",
                                                         "Chapitre III : Modalités de liquidation et de versement",
                                                         "Titre II : Dispositions communes aux aides personnelles au logement",
                                                         "Livre VIII : Aides personnelles au logement",
                                                         "Partie réglementaire",
                                                         "Code de la construction et de l'habitation"]))
                try:
                    temp_sous_calcul_traitement_1140 = logement_foyer__3.date_conventionnement
                except EmptyError:
                    temp_sous_calcul_traitement_1140 = dead_value
                    raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                         start_line=1603,
                                                         start_column=37,
                                                         end_line=1603,
                                                         end_column=74,
                                                         law_headings=["Article D823-9",
                                                         "Section 1 : Calcul, liquidation et versement des aides",
                                                         "Chapitre III : Modalités de liquidation et de versement",
                                                         "Titre II : Dispositions communes aux aides personnelles au logement",
                                                         "Livre VIII : Aides personnelles au logement",
                                                         "Partie réglementaire",
                                                         "Code de la construction et de l'habitation"]))
                try:
                    temp_sous_calcul_traitement_1141 = residence_9
                except EmptyError:
                    temp_sous_calcul_traitement_1141 = dead_value
                    raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                         start_line=1595,
                                                         start_column=25,
                                                         end_line=1595,
                                                         end_column=34,
                                                         law_headings=["Article D823-9",
                                                         "Section 1 : Calcul, liquidation et versement des aides",
                                                         "Chapitre III : Modalités de liquidation et de versement",
                                                         "Titre II : Dispositions communes aux aides personnelles au logement",
                                                         "Livre VIII : Aides personnelles au logement",
                                                         "Partie réglementaire",
                                                         "Code de la construction et de l'habitation"]))
                try:
                    temp_sous_calcul_traitement_1142 = logement_foyer__3.redevance
                except EmptyError:
                    temp_sous_calcul_traitement_1142 = dead_value
                    raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                         start_line=1599,
                                                         start_column=25,
                                                         end_line=1599,
                                                         end_column=50,
                                                         law_headings=["Article D823-9",
                                                         "Section 1 : Calcul, liquidation et versement des aides",
                                                         "Chapitre III : Modalités de liquidation et de versement",
                                                         "Titre II : Dispositions communes aux aides personnelles au logement",
                                                         "Livre VIII : Aides personnelles au logement",
                                                         "Partie réglementaire",
                                                         "Code de la construction et de l'habitation"]))
                try:
                    temp_sous_calcul_traitement_1143 = ressources_menage_avec_arrondi_1
                except EmptyError:
                    temp_sous_calcul_traitement_1143 = dead_value
                    raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                         start_line=1593,
                                                         start_column=43,
                                                         end_line=1593,
                                                         end_column=60,
                                                         law_headings=["Article D823-9",
                                                         "Section 1 : Calcul, liquidation et versement des aides",
                                                         "Chapitre III : Modalités de liquidation et de versement",
                                                         "Titre II : Dispositions communes aux aides personnelles au logement",
                                                         "Livre VIII : Aides personnelles au logement",
                                                         "Partie réglementaire",
                                                         "Code de la construction et de l'habitation"]))
                try:
                    temp_sous_calcul_traitement_1144 = nombre_personnes_a_charge_12
                except EmptyError:
                    temp_sous_calcul_traitement_1144 = dead_value
                    raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                         start_line=1594,
                                                         start_column=41,
                                                         end_line=1594,
                                                         end_column=66,
                                                         law_headings=["Article D823-9",
                                                         "Section 1 : Calcul, liquidation et versement des aides",
                                                         "Chapitre III : Modalités de liquidation et de versement",
                                                         "Titre II : Dispositions communes aux aides personnelles au logement",
                                                         "Livre VIII : Aides personnelles au logement",
                                                         "Partie réglementaire",
                                                         "Code de la construction et de l'habitation"]))
                try:
                    temp_sous_calcul_traitement_1145 = situation_familiale_calcul_apl_9
                except EmptyError:
                    temp_sous_calcul_traitement_1145 = dead_value
                    raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                         start_line=1598,
                                                         start_column=46,
                                                         end_line=1598,
                                                         end_column=76,
                                                         law_headings=["Article D823-9",
                                                         "Section 1 : Calcul, liquidation et versement des aides",
                                                         "Chapitre III : Modalités de liquidation et de versement",
                                                         "Titre II : Dispositions communes aux aides personnelles au logement",
                                                         "Livre VIII : Aides personnelles au logement",
                                                         "Partie réglementaire",
                                                         "Code de la construction et de l'habitation"]))
                try:
                    temp_sous_calcul_traitement_1146 = zone_7
                except EmptyError:
                    temp_sous_calcul_traitement_1146 = dead_value
                    raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                         start_line=1596,
                                                         start_column=20,
                                                         end_line=1596,
                                                         end_column=24,
                                                         law_headings=["Article D823-9",
                                                         "Section 1 : Calcul, liquidation et versement des aides",
                                                         "Chapitre III : Modalités de liquidation et de versement",
                                                         "Titre II : Dispositions communes aux aides personnelles au logement",
                                                         "Livre VIII : Aides personnelles au logement",
                                                         "Partie réglementaire",
                                                         "Code de la construction et de l'habitation"]))
                try:
                    temp_sous_calcul_traitement_1147 = date_courante_16
                except EmptyError:
                    temp_sous_calcul_traitement_1147 = dead_value
                    raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                         start_line=1597,
                                                         start_column=29,
                                                         end_line=1597,
                                                         end_column=42,
                                                         law_headings=["Article D823-9",
                                                         "Section 1 : Calcul, liquidation et versement des aides",
                                                         "Chapitre III : Modalités de liquidation et de versement",
                                                         "Titre II : Dispositions communes aux aides personnelles au logement",
                                                         "Livre VIII : Aides personnelles au logement",
                                                         "Partie réglementaire",
                                                         "Code de la construction et de l'habitation"]))
                try:
                    temp_sous_calcul_traitement_1148 = logement_foyer__3.categorie_equivalence_loyer_d842_16
                except EmptyError:
                    temp_sous_calcul_traitement_1148 = dead_value
                    raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                         start_line=1601,
                                                         start_column=13,
                                                         end_line=1601,
                                                         end_column=64,
                                                         law_headings=["Article D823-9",
                                                         "Section 1 : Calcul, liquidation et versement des aides",
                                                         "Chapitre III : Modalités de liquidation et de versement",
                                                         "Titre II : Dispositions communes aux aides personnelles au logement",
                                                         "Livre VIII : Aides personnelles au logement",
                                                         "Partie réglementaire",
                                                         "Code de la construction et de l'habitation"]))
                try:
                    temp_sous_calcul_traitement_1149 = logement_foyer__3.type
                except EmptyError:
                    temp_sous_calcul_traitement_1149 = dead_value
                    raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                         start_line=1602,
                                                         start_column=35,
                                                         end_line=1602,
                                                         end_column=55,
                                                         law_headings=["Article D823-9",
                                                         "Section 1 : Calcul, liquidation et versement des aides",
                                                         "Chapitre III : Modalités de liquidation et de versement",
                                                         "Titre II : Dispositions communes aux aides personnelles au logement",
                                                         "Livre VIII : Aides personnelles au logement",
                                                         "Partie réglementaire",
                                                         "Code de la construction et de l'habitation"]))
                try:
                    temp_sous_calcul_traitement_1150 = logement_foyer__3.date_conventionnement
                except EmptyError:
                    temp_sous_calcul_traitement_1150 = dead_value
                    raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                         start_line=1603,
                                                         start_column=37,
                                                         end_line=1603,
                                                         end_column=74,
                                                         law_headings=["Article D823-9",
                                                         "Section 1 : Calcul, liquidation et versement des aides",
                                                         "Chapitre III : Modalités de liquidation et de versement",
                                                         "Titre II : Dispositions communes aux aides personnelles au logement",
                                                         "Livre VIII : Aides personnelles au logement",
                                                         "Partie réglementaire",
                                                         "Code de la construction et de l'habitation"]))
                try:
                    temp_sous_calcul_traitement_1151 = residence_9
                except EmptyError:
                    temp_sous_calcul_traitement_1151 = dead_value
                    raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                         start_line=1595,
                                                         start_column=25,
                                                         end_line=1595,
                                                         end_column=34,
                                                         law_headings=["Article D823-9",
                                                         "Section 1 : Calcul, liquidation et versement des aides",
                                                         "Chapitre III : Modalités de liquidation et de versement",
                                                         "Titre II : Dispositions communes aux aides personnelles au logement",
                                                         "Livre VIII : Aides personnelles au logement",
                                                         "Partie réglementaire",
                                                         "Code de la construction et de l'habitation"]))
                try:
                    temp_sous_calcul_traitement_1152 = logement_foyer__3.redevance
                except EmptyError:
                    temp_sous_calcul_traitement_1152 = dead_value
                    raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                         start_line=1599,
                                                         start_column=25,
                                                         end_line=1599,
                                                         end_column=50,
                                                         law_headings=["Article D823-9",
                                                         "Section 1 : Calcul, liquidation et versement des aides",
                                                         "Chapitre III : Modalités de liquidation et de versement",
                                                         "Titre II : Dispositions communes aux aides personnelles au logement",
                                                         "Livre VIII : Aides personnelles au logement",
                                                         "Partie réglementaire",
                                                         "Code de la construction et de l'habitation"]))
                try:
                    temp_sous_calcul_traitement_1153 = ressources_menage_avec_arrondi_1
                except EmptyError:
                    temp_sous_calcul_traitement_1153 = dead_value
                    raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                         start_line=1593,
                                                         start_column=43,
                                                         end_line=1593,
                                                         end_column=60,
                                                         law_headings=["Article D823-9",
                                                         "Section 1 : Calcul, liquidation et versement des aides",
                                                         "Chapitre III : Modalités de liquidation et de versement",
                                                         "Titre II : Dispositions communes aux aides personnelles au logement",
                                                         "Livre VIII : Aides personnelles au logement",
                                                         "Partie réglementaire",
                                                         "Code de la construction et de l'habitation"]))
                try:
                    temp_sous_calcul_traitement_1154 = nombre_personnes_a_charge_12
                except EmptyError:
                    temp_sous_calcul_traitement_1154 = dead_value
                    raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                         start_line=1594,
                                                         start_column=41,
                                                         end_line=1594,
                                                         end_column=66,
                                                         law_headings=["Article D823-9",
                                                         "Section 1 : Calcul, liquidation et versement des aides",
                                                         "Chapitre III : Modalités de liquidation et de versement",
                                                         "Titre II : Dispositions communes aux aides personnelles au logement",
                                                         "Livre VIII : Aides personnelles au logement",
                                                         "Partie réglementaire",
                                                         "Code de la construction et de l'habitation"]))
                try:
                    temp_sous_calcul_traitement_1155 = situation_familiale_calcul_apl_9
                except EmptyError:
                    temp_sous_calcul_traitement_1155 = dead_value
                    raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                         start_line=1598,
                                                         start_column=46,
                                                         end_line=1598,
                                                         end_column=76,
                                                         law_headings=["Article D823-9",
                                                         "Section 1 : Calcul, liquidation et versement des aides",
                                                         "Chapitre III : Modalités de liquidation et de versement",
                                                         "Titre II : Dispositions communes aux aides personnelles au logement",
                                                         "Livre VIII : Aides personnelles au logement",
                                                         "Partie réglementaire",
                                                         "Code de la construction et de l'habitation"]))
                try:
                    temp_sous_calcul_traitement_1156 = zone_7
                except EmptyError:
                    temp_sous_calcul_traitement_1156 = dead_value
                    raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                         start_line=1596,
                                                         start_column=20,
                                                         end_line=1596,
                                                         end_column=24,
                                                         law_headings=["Article D823-9",
                                                         "Section 1 : Calcul, liquidation et versement des aides",
                                                         "Chapitre III : Modalités de liquidation et de versement",
                                                         "Titre II : Dispositions communes aux aides personnelles au logement",
                                                         "Livre VIII : Aides personnelles au logement",
                                                         "Partie réglementaire",
                                                         "Code de la construction et de l'habitation"]))
                try:
                    temp_sous_calcul_traitement_1157 = date_courante_16
                except EmptyError:
                    temp_sous_calcul_traitement_1157 = dead_value
                    raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                         start_line=1597,
                                                         start_column=29,
                                                         end_line=1597,
                                                         end_column=42,
                                                         law_headings=["Article D823-9",
                                                         "Section 1 : Calcul, liquidation et versement des aides",
                                                         "Chapitre III : Modalités de liquidation et de versement",
                                                         "Titre II : Dispositions communes aux aides personnelles au logement",
                                                         "Livre VIII : Aides personnelles au logement",
                                                         "Partie réglementaire",
                                                         "Code de la construction et de l'habitation"]))
                try:
                    temp_sous_calcul_traitement_1158 = logement_foyer__3.categorie_equivalence_loyer_d842_16
                except EmptyError:
                    temp_sous_calcul_traitement_1158 = dead_value
                    raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_reglementaire.catala_fr",
                                                         start_line=1601,
                                                         start_column=13,
                                                         end_line=1601,
                                                         end_column=64,
                                                         law_headings=["Article D823-9",
                                                         "Section 1 : Calcul, liquidation et versement des aides",
                                                         "Chapitre III : Modalités de liquidation et de versement",
                                                         "Titre II : Dispositions communes aux aides personnelles au logement",
                                                         "Livre VIII : Aides personnelles au logement",
                                                         "Partie réglementaire",
                                                         "Code de la construction et de l'habitation"]))
                temp_sous_calcul_traitement_760 = TraitementFormuleAideFinale(aide_finale_formule = CalculAllocationLogementFoyer(coefficient_prise_en_charge = calcul_allocation_logement_foyer(
                    CalculAllocationLogementFoyerIn(type_logement_foyer_in = temp_sous_calcul_traitement_1088,
                    date_conventionnement_in = temp_sous_calcul_traitement_1089,
                    residence_in = temp_sous_calcul_traitement_1090,
                    redevance_in = temp_sous_calcul_traitement_1091,
                    ressources_menage_arrondies_in = temp_sous_calcul_traitement_1092,
                    nombre_personnes_a_charge_in = temp_sous_calcul_traitement_1093,
                    situation_familiale_calcul_apl_in = temp_sous_calcul_traitement_1094,
                    zone_in = temp_sous_calcul_traitement_1095,
                    date_courante_in = temp_sous_calcul_traitement_1096,
                    categorie_equivalence_loyer_d842_16_in = temp_sous_calcul_traitement_1097)).coefficient_prise_en_charge,
                    equivalence_loyer = calcul_allocation_logement_foyer(
                    CalculAllocationLogementFoyerIn(type_logement_foyer_in = temp_sous_calcul_traitement_1078,
                    date_conventionnement_in = temp_sous_calcul_traitement_1079,
                    residence_in = temp_sous_calcul_traitement_1080,
                    redevance_in = temp_sous_calcul_traitement_1081,
                    ressources_menage_arrondies_in = temp_sous_calcul_traitement_1082,
                    nombre_personnes_a_charge_in = temp_sous_calcul_traitement_1083,
                    situation_familiale_calcul_apl_in = temp_sous_calcul_traitement_1084,
                    zone_in = temp_sous_calcul_traitement_1085,
                    date_courante_in = temp_sous_calcul_traitement_1086,
                    categorie_equivalence_loyer_d842_16_in = temp_sous_calcul_traitement_1087)).equivalence_loyer,
                    montant_forfaitaire_charges = calcul_allocation_logement_foyer(
                    CalculAllocationLogementFoyerIn(type_logement_foyer_in = temp_sous_calcul_traitement_1068,
                    date_conventionnement_in = temp_sous_calcul_traitement_1069,
                    residence_in = temp_sous_calcul_traitement_1070,
                    redevance_in = temp_sous_calcul_traitement_1071,
                    ressources_menage_arrondies_in = temp_sous_calcul_traitement_1072,
                    nombre_personnes_a_charge_in = temp_sous_calcul_traitement_1073,
                    situation_familiale_calcul_apl_in = temp_sous_calcul_traitement_1074,
                    zone_in = temp_sous_calcul_traitement_1075,
                    date_courante_in = temp_sous_calcul_traitement_1076,
                    categorie_equivalence_loyer_d842_16_in = temp_sous_calcul_traitement_1077)).montant_forfaitaire_charges,
                    loyer_minimal = calcul_allocation_logement_foyer(
                    CalculAllocationLogementFoyerIn(type_logement_foyer_in = temp_sous_calcul_traitement_1058,
                    date_conventionnement_in = temp_sous_calcul_traitement_1059,
                    residence_in = temp_sous_calcul_traitement_1060,
                    redevance_in = temp_sous_calcul_traitement_1061,
                    ressources_menage_arrondies_in = temp_sous_calcul_traitement_1062,
                    nombre_personnes_a_charge_in = temp_sous_calcul_traitement_1063,
                    situation_familiale_calcul_apl_in = temp_sous_calcul_traitement_1064,
                    zone_in = temp_sous_calcul_traitement_1065,
                    date_courante_in = temp_sous_calcul_traitement_1066,
                    categorie_equivalence_loyer_d842_16_in = temp_sous_calcul_traitement_1067)).loyer_minimal,
                    aide_finale_formule = calcul_allocation_logement_foyer(
                    CalculAllocationLogementFoyerIn(type_logement_foyer_in = temp_sous_calcul_traitement_1048,
                    date_conventionnement_in = temp_sous_calcul_traitement_1049,
                    residence_in = temp_sous_calcul_traitement_1050,
                    redevance_in = temp_sous_calcul_traitement_1051,
                    ressources_menage_arrondies_in = temp_sous_calcul_traitement_1052,
                    nombre_personnes_a_charge_in = temp_sous_calcul_traitement_1053,
                    situation_familiale_calcul_apl_in = temp_sous_calcul_traitement_1054,
                    zone_in = temp_sous_calcul_traitement_1055,
                    date_courante_in = temp_sous_calcul_traitement_1056,
                    categorie_equivalence_loyer_d842_16_in = temp_sous_calcul_traitement_1057)).aide_finale_formule,
                    traitement_aide_finale = temp_sous_calcul_traitement_1037).aide_finale_formule,
                    traitement_aide_finale = CalculAllocationLogementFoyer(coefficient_prise_en_charge = calcul_allocation_logement_foyer(
                    CalculAllocationLogementFoyerIn(type_logement_foyer_in = temp_sous_calcul_traitement_1149,
                    date_conventionnement_in = temp_sous_calcul_traitement_1150,
                    residence_in = temp_sous_calcul_traitement_1151,
                    redevance_in = temp_sous_calcul_traitement_1152,
                    ressources_menage_arrondies_in = temp_sous_calcul_traitement_1153,
                    nombre_personnes_a_charge_in = temp_sous_calcul_traitement_1154,
                    situation_familiale_calcul_apl_in = temp_sous_calcul_traitement_1155,
                    zone_in = temp_sous_calcul_traitement_1156,
                    date_courante_in = temp_sous_calcul_traitement_1157,
                    categorie_equivalence_loyer_d842_16_in = temp_sous_calcul_traitement_1158)).coefficient_prise_en_charge,
                    equivalence_loyer = calcul_allocation_logement_foyer(
                    CalculAllocationLogementFoyerIn(type_logement_foyer_in = temp_sous_calcul_traitement_1139,
                    date_conventionnement_in = temp_sous_calcul_traitement_1140,
                    residence_in = temp_sous_calcul_traitement_1141,
                    redevance_in = temp_sous_calcul_traitement_1142,
                    ressources_menage_arrondies_in = temp_sous_calcul_traitement_1143,
                    nombre_personnes_a_charge_in = temp_sous_calcul_traitement_1144,
                    situation_familiale_calcul_apl_in = temp_sous_calcul_traitement_1145,
                    zone_in = temp_sous_calcul_traitement_1146,
                    date_courante_in = temp_sous_calcul_traitement_1147,
                    categorie_equivalence_loyer_d842_16_in = temp_sous_calcul_traitement_1148)).equivalence_loyer,
                    montant_forfaitaire_charges = calcul_allocation_logement_foyer(
                    CalculAllocationLogementFoyerIn(type_logement_foyer_in = temp_sous_calcul_traitement_1129,
                    date_conventionnement_in = temp_sous_calcul_traitement_1130,
                    residence_in = temp_sous_calcul_traitement_1131,
                    redevance_in = temp_sous_calcul_traitement_1132,
                    ressources_menage_arrondies_in = temp_sous_calcul_traitement_1133,
                    nombre_personnes_a_charge_in = temp_sous_calcul_traitement_1134,
                    situation_familiale_calcul_apl_in = temp_sous_calcul_traitement_1135,
                    zone_in = temp_sous_calcul_traitement_1136,
                    date_courante_in = temp_sous_calcul_traitement_1137,
                    categorie_equivalence_loyer_d842_16_in = temp_sous_calcul_traitement_1138)).montant_forfaitaire_charges,
                    loyer_minimal = calcul_allocation_logement_foyer(
                    CalculAllocationLogementFoyerIn(type_logement_foyer_in = temp_sous_calcul_traitement_1119,
                    date_conventionnement_in = temp_sous_calcul_traitement_1120,
                    residence_in = temp_sous_calcul_traitement_1121,
                    redevance_in = temp_sous_calcul_traitement_1122,
                    ressources_menage_arrondies_in = temp_sous_calcul_traitement_1123,
                    nombre_personnes_a_charge_in = temp_sous_calcul_traitement_1124,
                    situation_familiale_calcul_apl_in = temp_sous_calcul_traitement_1125,
                    zone_in = temp_sous_calcul_traitement_1126,
                    date_courante_in = temp_sous_calcul_traitement_1127,
                    categorie_equivalence_loyer_d842_16_in = temp_sous_calcul_traitement_1128)).loyer_minimal,
                    aide_finale_formule = calcul_allocation_logement_foyer(
                    CalculAllocationLogementFoyerIn(type_logement_foyer_in = temp_sous_calcul_traitement_1109,
                    date_conventionnement_in = temp_sous_calcul_traitement_1110,
                    residence_in = temp_sous_calcul_traitement_1111,
                    redevance_in = temp_sous_calcul_traitement_1112,
                    ressources_menage_arrondies_in = temp_sous_calcul_traitement_1113,
                    nombre_personnes_a_charge_in = temp_sous_calcul_traitement_1114,
                    situation_familiale_calcul_apl_in = temp_sous_calcul_traitement_1115,
                    zone_in = temp_sous_calcul_traitement_1116,
                    date_courante_in = temp_sous_calcul_traitement_1117,
                    categorie_equivalence_loyer_d842_16_in = temp_sous_calcul_traitement_1118)).aide_finale_formule,
                    traitement_aide_finale = temp_sous_calcul_traitement_1098).traitement_aide_finale)
    except EmptyError:
        temp_sous_calcul_traitement_760 = dead_value
        raise NoValueProvided(SourcePosition(filename="examples/aides_logement/prologue.catala_fr",
                                             start_line=1107,
                                             start_column=11, end_line=1107,
                                             end_column=33,
                                             law_headings=["Tous secteurs",
                                             "Secteur logement-foyer",
                                             "Calcul du montant de l'allocation logement",
                                             "Prologue : aides au logement"]))
    sous_calcul_traitement_1 = temp_sous_calcul_traitement_760
    try:
        def temp_traitement_aide_finale_3(arg_1:Money):
            try:
                return sous_calcul_traitement_1.traitement_aide_finale(arg_1)
            except EmptyError:
                raise NoValueProvided(SourcePosition(filename="examples/aides_logement/prologue.catala_fr",
                                                     start_line=1110,
                                                     start_column=12,
                                                     end_line=1110,
                                                     end_column=34,
                                                     law_headings=["Tous secteurs",
                                                     "Secteur logement-foyer",
                                                     "Calcul du montant de l'allocation logement",
                                                     "Prologue : aides au logement"]))
    except EmptyError:
        temp_traitement_aide_finale_3 = dead_value
        raise NoValueProvided(SourcePosition(filename="examples/aides_logement/prologue.catala_fr",
                                             start_line=1110,
                                             start_column=12, end_line=1110,
                                             end_column=34,
                                             law_headings=["Tous secteurs",
                                             "Secteur logement-foyer",
                                             "Calcul du montant de l'allocation logement",
                                             "Prologue : aides au logement"]))
    traitement_aide_finale_2 = temp_traitement_aide_finale_3
    try:
        try:
            match_arg_687 = residence_9
            if match_arg_687.code == Collectivite_Code.Guadeloupe:
                _ = match_arg_687.value
                temp_aide_finale_formule_8 = False
            elif match_arg_687.code == Collectivite_Code.Guyane:
                _ = match_arg_687.value
                temp_aide_finale_formule_8 = False
            elif match_arg_687.code == Collectivite_Code.Martinique:
                _ = match_arg_687.value
                temp_aide_finale_formule_8 = False
            elif match_arg_687.code == Collectivite_Code.LaReunion:
                _ = match_arg_687.value
                temp_aide_finale_formule_8 = False
            elif match_arg_687.code == Collectivite_Code.SaintBarthelemy:
                _ = match_arg_687.value
                temp_aide_finale_formule_8 = False
            elif match_arg_687.code == Collectivite_Code.SaintMartin:
                _ = match_arg_687.value
                temp_aide_finale_formule_8 = False
            elif match_arg_687.code == Collectivite_Code.Metropole:
                _ = match_arg_687.value
                temp_aide_finale_formule_8 = False
            elif match_arg_687.code == Collectivite_Code.SaintPierreEtMiquelon:
                _ = match_arg_687.value
                temp_aide_finale_formule_8 = True
            elif match_arg_687.code == Collectivite_Code.Mayotte:
                _ = match_arg_687.value
                temp_aide_finale_formule_8 = False
            if (temp_aide_finale_formule_8 and (date_courante_16 >=
                date_of_numbers(2022,1,1))):
                temp_aide_finale_formule_9 = (sous_calcul_traitement_1.aide_finale_formule *
                    (decimal_of_integer((integer_of_string("2026") -
                    year_of_date(date_courante_16))) /
                    decimal_of_string("8.")))
            else:
                temp_aide_finale_formule_9 = dead_value
                raise EmptyError
        except EmptyError:
            temp_aide_finale_formule_9 = sous_calcul_traitement_1.aide_finale_formule
    except EmptyError:
        temp_aide_finale_formule_9 = dead_value
        raise NoValueProvided(SourcePosition(filename="examples/aides_logement/prologue.catala_fr",
                                             start_line=1109,
                                             start_column=12, end_line=1109,
                                             end_column=31,
                                             law_headings=["Tous secteurs",
                                             "Secteur logement-foyer",
                                             "Calcul du montant de l'allocation logement",
                                             "Prologue : aides au logement"]))
    aide_finale_formule_7 = temp_aide_finale_formule_9
    return CalculAllocationLogement(aide_finale_formule = aide_finale_formule_7,
        traitement_aide_finale = traitement_aide_finale_2)

def eligibilite_prime_de_demenagement(eligibilite_prime_de_demenagement_in:EligibilitePrimeDeDemenagementIn):
    informations = eligibilite_prime_de_demenagement_in.informations_in
    date_emmenagement = eligibilite_prime_de_demenagement_in.date_emmenagement_in
    menage_1 = eligibilite_prime_de_demenagement_in.menage_in
    demandeur_1 = eligibilite_prime_de_demenagement_in.demandeur_in
    date_courante_17 = eligibilite_prime_de_demenagement_in.date_courante_in
    depenses_justifiees_reellement_engagees = eligibilite_prime_de_demenagement_in.depenses_justifiees_reellement_engagees_in
    try:
        temp_delai_apres_emmenagement_l823_8_2 = duration_of_numbers(0,6,0)
    except EmptyError:
        temp_delai_apres_emmenagement_l823_8_2 = dead_value
        raise NoValueProvided(SourcePosition(filename="examples/aides_logement/prologue.catala_fr",
                                             start_line=494, start_column=11,
                                             end_line=494, end_column=44,
                                             law_headings=["Éligibilité à la prime de déménagement",
                                             "Déclarations des champs d'application",
                                             "Prologue : aides au logement"]))
    delai_apres_emmenagement_l823_8_2 = temp_delai_apres_emmenagement_l823_8_2
    try:
        try:
            def temp_condition_rang_enfant(personne_a_charge_5:PersonneACharge):
                match_arg_688 = personne_a_charge_5
                if match_arg_688.code == PersonneACharge_Code.EnfantACharge:
                    _ = match_arg_688.value
                    return True
                elif match_arg_688.code == PersonneACharge_Code.AutrePersonneACharge:
                    _ = match_arg_688.value
                    return False
            if ((list_length(list_filter(temp_condition_rang_enfant,
                menage_1.personnes_a_charge)) +
                informations.nombre_enfants_a_naitre_apres_troisieme_mois_grossesse) >=
                integer_of_string("3")):
                temp_condition_rang_enfant_1 = True
            else:
                temp_condition_rang_enfant_1 = dead_value
                raise EmptyError
        except EmptyError:
            temp_condition_rang_enfant_1 = False
    except EmptyError:
        temp_condition_rang_enfant_1 = dead_value
        raise NoValueProvided(SourcePosition(filename="examples/aides_logement/prologue.catala_fr",
                                             start_line=491, start_column=11,
                                             end_line=491, end_column=32,
                                             law_headings=["Éligibilité à la prime de déménagement",
                                             "Déclarations des champs d'application",
                                             "Prologue : aides au logement"]))
    condition_rang_enfant = temp_condition_rang_enfant_1
    try:
        temp_base_mensuelle_allocations_familiales_dot_date_courante_1 = date_courante_17
    except EmptyError:
        temp_base_mensuelle_allocations_familiales_dot_date_courante_1 = dead_value
        raise NoValueProvided(SourcePosition(filename="examples/aides_logement/prologue.catala_fr",
                                             start_line=508, start_column=14,
                                             end_line=508, end_column=65,
                                             law_headings=["Éligibilité à la prime de déménagement",
                                             "Déclarations des champs d'application",
                                             "Prologue : aides au logement"]))
    base_mensuelle_allocations_familiales_dot_date_courante_1 = temp_base_mensuelle_allocations_familiales_dot_date_courante_1
    result_20 = base_mensuelle_allocations_familiales(BaseMensuelleAllocationsFamilialesIn(date_courante_in = base_mensuelle_allocations_familiales_dot_date_courante_1))
    base_mensuelle_allocations_familiales_dot_montant_1 = result_20.montant
    try:
        temp_eligibilite_apl_dot_menage = menage_1
    except EmptyError:
        temp_eligibilite_apl_dot_menage = dead_value
        raise NoValueProvided(SourcePosition(filename="examples/aides_logement/prologue.catala_fr",
                                             start_line=504, start_column=14,
                                             end_line=504, end_column=36,
                                             law_headings=["Éligibilité à la prime de déménagement",
                                             "Déclarations des champs d'application",
                                             "Prologue : aides au logement"]))
    eligibilite_apl_dot_menage = temp_eligibilite_apl_dot_menage
    try:
        temp_eligibilite_apl_dot_demandeur = demandeur_1
    except EmptyError:
        temp_eligibilite_apl_dot_demandeur = dead_value
        raise NoValueProvided(SourcePosition(filename="examples/aides_logement/prologue.catala_fr",
                                             start_line=505, start_column=14,
                                             end_line=505, end_column=39,
                                             law_headings=["Éligibilité à la prime de déménagement",
                                             "Déclarations des champs d'application",
                                             "Prologue : aides au logement"]))
    eligibilite_apl_dot_demandeur = temp_eligibilite_apl_dot_demandeur
    try:
        temp_eligibilite_apl_dot_date_courante = date_courante_17
    except EmptyError:
        temp_eligibilite_apl_dot_date_courante = dead_value
        raise NoValueProvided(SourcePosition(filename="examples/aides_logement/prologue.catala_fr",
                                             start_line=506, start_column=14,
                                             end_line=506, end_column=43,
                                             law_headings=["Éligibilité à la prime de déménagement",
                                             "Déclarations des champs d'application",
                                             "Prologue : aides au logement"]))
    eligibilite_apl_dot_date_courante = temp_eligibilite_apl_dot_date_courante
    def temp_eligibilite_apl_dot_condition_logement_residence_principale(_:Unit):
        temp_eligibilite_apl_dot_condition_logement_residence_principale_1 = dead_value
        raise EmptyError
        return temp_eligibilite_apl_dot_condition_logement_residence_principale_1
    eligibilite_apl_dot_condition_logement_residence_principale = temp_eligibilite_apl_dot_condition_logement_residence_principale
    def temp_eligibilite_apl_dot_condition_logement_surface(_:Unit):
        temp_eligibilite_apl_dot_condition_logement_surface_1 = dead_value
        raise EmptyError
        return temp_eligibilite_apl_dot_condition_logement_surface_1
    eligibilite_apl_dot_condition_logement_surface = temp_eligibilite_apl_dot_condition_logement_surface
    def temp_eligibilite_apl_dot_date_entree_vigueur_differee_cch(_:Unit):
        temp_eligibilite_apl_dot_date_entree_vigueur_differee_cch_1 = dead_value
        raise EmptyError
        return temp_eligibilite_apl_dot_date_entree_vigueur_differee_cch_1
    eligibilite_apl_dot_date_entree_vigueur_differee_cch = temp_eligibilite_apl_dot_date_entree_vigueur_differee_cch
    result_21 = eligibilite_aides_personnelle_logement(EligibiliteAidesPersonnelleLogementIn(menage_in = eligibilite_apl_dot_menage,
                                                       demandeur_in = eligibilite_apl_dot_demandeur,
                                                       date_courante_in = eligibilite_apl_dot_date_courante,
                                                       condition_logement_residence_principale_in = eligibilite_apl_dot_condition_logement_residence_principale,
                                                       condition_logement_surface_in = eligibilite_apl_dot_condition_logement_surface,
                                                       date_entree_vigueur_differee_cch_in = eligibilite_apl_dot_date_entree_vigueur_differee_cch))
    eligibilite_apl_dot_date_courante_1 = result_21.date_courante
    eligibilite_apl_dot_eligibilite = result_21.eligibilite
    eligibilite_apl_dot_nombre_personnes_a_charge_prises_en_compte = result_21.nombre_personnes_a_charge_prises_en_compte
    eligibilite_apl_dot_coefficents_enfants_garde_alternee_pris_en_compte = result_21.coefficents_enfants_garde_alternee_pris_en_compte
    eligibilite_apl_dot_condition_2_r823_4 = result_21.condition_2_r823_4
    try:
        try:
            match_arg_689 = informations.date_naissance_troisieme_enfant_ou_dernier_si_plus
            if match_arg_689.code == DateNaissanceTroisiemeOuDernierPlusEnfant_Code.MoinsDeTroisEnfants:
                _ = match_arg_689.value
                temp_condition_periode_demenagement = False
            elif match_arg_689.code == DateNaissanceTroisiemeOuDernierPlusEnfant_Code.PlusDeTroisEnfants:
                date_naissance_ou_grossesse = match_arg_689.value
                match_arg_690 = date_naissance_ou_grossesse
                if match_arg_690.code == DateDeNaissanceOuMoisDeGrossesse_Code.DateDeNaissance:
                    date_naissance_2 = match_arg_690.value
                    temp_condition_periode_demenagement = (date_courante_17 <=
                        (first_day_of_month((date_naissance_2 +
                        duration_of_numbers(2,0,0))) +
                        duration_of_numbers(0,0,-1)))
                elif match_arg_690.code == DateDeNaissanceOuMoisDeGrossesse_Code.AvantPremierJourMoisCivilTroisiemeMoisDeGrossesse:
                    _ = match_arg_690.value
                    temp_condition_periode_demenagement = False
                elif match_arg_690.code == DateDeNaissanceOuMoisDeGrossesse_Code.ApresPremierJourMoisCivilTroisiemeMoisDeGrossesse:
                    _ = match_arg_690.value
                    temp_condition_periode_demenagement = True
            if temp_condition_periode_demenagement:
                temp_condition_periode_demenagement_1 = True
            else:
                temp_condition_periode_demenagement_1 = dead_value
                raise EmptyError
        except EmptyError:
            temp_condition_periode_demenagement_1 = False
    except EmptyError:
        temp_condition_periode_demenagement_1 = dead_value
        raise NoValueProvided(SourcePosition(filename="examples/aides_logement/prologue.catala_fr",
                                             start_line=492, start_column=11,
                                             end_line=492, end_column=41,
                                             law_headings=["Éligibilité à la prime de déménagement",
                                             "Déclarations des champs d'application",
                                             "Prologue : aides au logement"]))
    condition_periode_demenagement = temp_condition_periode_demenagement_1
    try:
        if (date_courante_17 >=
            date_of_numbers(2019,10,1)):
            def temp_plafond_d823_22(personne_a_charge_6:PersonneACharge):
                match_arg_691 = personne_a_charge_6
                if match_arg_691.code == PersonneACharge_Code.EnfantACharge:
                    _ = match_arg_691.value
                    return True
                elif match_arg_691.code == PersonneACharge_Code.AutrePersonneACharge:
                    _ = match_arg_691.value
                    return False
            if (list_length(list_filter(temp_plafond_d823_22,
                menage_1.personnes_a_charge)) >
                integer_of_string("3")):
                def temp_plafond_d823_22_1(personne_a_charge_7:PersonneACharge):
                    match_arg_692 = personne_a_charge_7
                    if match_arg_692.code == PersonneACharge_Code.EnfantACharge:
                        _ = match_arg_692.value
                        return True
                    elif match_arg_692.code == PersonneACharge_Code.AutrePersonneACharge:
                        _ = match_arg_692.value
                        return False
                temp_plafond_d823_22_2 = (base_mensuelle_allocations_familiales_dot_montant_1 *
                    (decimal_of_integer((list_length(list_filter(temp_plafond_d823_22_1,
                    menage_1.personnes_a_charge)) -
                    integer_of_string("3"))) * decimal_of_string("0.2")))
            else:
                temp_plafond_d823_22_2 = money_of_cents_string("0")
            temp_plafond_d823_22_3 = ((base_mensuelle_allocations_familiales_dot_montant_1 *
                decimal_of_string("2.4")) + temp_plafond_d823_22_2)
        else:
            temp_plafond_d823_22_3 = dead_value
            raise EmptyError
    except EmptyError:
        temp_plafond_d823_22_3 = dead_value
        raise NoValueProvided(SourcePosition(filename="examples/aides_logement/prologue.catala_fr",
                                             start_line=495, start_column=11,
                                             end_line=495, end_column=26,
                                             law_headings=["Éligibilité à la prime de déménagement",
                                             "Déclarations des champs d'application",
                                             "Prologue : aides au logement"]))
    plafond_d823_22 = temp_plafond_d823_22_3
    try:
        try:
            try:
                try:
                    try:
                        match_arg_693 = menage_1.residence
                        if match_arg_693.code == Collectivite_Code.Guadeloupe:
                            _ = match_arg_693.value
                            temp_eligibilite_logement_1 = False
                        elif match_arg_693.code == Collectivite_Code.Guyane:
                            _ = match_arg_693.value
                            temp_eligibilite_logement_1 = False
                        elif match_arg_693.code == Collectivite_Code.Martinique:
                            _ = match_arg_693.value
                            temp_eligibilite_logement_1 = False
                        elif match_arg_693.code == Collectivite_Code.LaReunion:
                            _ = match_arg_693.value
                            temp_eligibilite_logement_1 = False
                        elif match_arg_693.code == Collectivite_Code.SaintBarthelemy:
                            _ = match_arg_693.value
                            temp_eligibilite_logement_1 = False
                        elif match_arg_693.code == Collectivite_Code.SaintMartin:
                            _ = match_arg_693.value
                            temp_eligibilite_logement_1 = False
                        elif match_arg_693.code == Collectivite_Code.Metropole:
                            _ = match_arg_693.value
                            temp_eligibilite_logement_1 = False
                        elif match_arg_693.code == Collectivite_Code.SaintPierreEtMiquelon:
                            _ = match_arg_693.value
                            temp_eligibilite_logement_1 = False
                        elif match_arg_693.code == Collectivite_Code.Mayotte:
                            _ = match_arg_693.value
                            temp_eligibilite_logement_1 = True
                        if ((date_courante_17 >=
                            date_of_numbers(2022,1,1)) and
                            temp_eligibilite_logement_1):
                            temp_eligibilite_logement_2 = False
                        else:
                            temp_eligibilite_logement_2 = dead_value
                            raise EmptyError
                    except EmptyError:
                        match_arg_694 = menage_1.residence
                        if match_arg_694.code == Collectivite_Code.Guadeloupe:
                            _ = match_arg_694.value
                            temp_eligibilite_logement_3 = False
                        elif match_arg_694.code == Collectivite_Code.Guyane:
                            _ = match_arg_694.value
                            temp_eligibilite_logement_3 = False
                        elif match_arg_694.code == Collectivite_Code.Martinique:
                            _ = match_arg_694.value
                            temp_eligibilite_logement_3 = False
                        elif match_arg_694.code == Collectivite_Code.LaReunion:
                            _ = match_arg_694.value
                            temp_eligibilite_logement_3 = False
                        elif match_arg_694.code == Collectivite_Code.SaintBarthelemy:
                            _ = match_arg_694.value
                            temp_eligibilite_logement_3 = False
                        elif match_arg_694.code == Collectivite_Code.SaintMartin:
                            _ = match_arg_694.value
                            temp_eligibilite_logement_3 = False
                        elif match_arg_694.code == Collectivite_Code.Metropole:
                            _ = match_arg_694.value
                            temp_eligibilite_logement_3 = False
                        elif match_arg_694.code == Collectivite_Code.SaintPierreEtMiquelon:
                            _ = match_arg_694.value
                            temp_eligibilite_logement_3 = True
                        elif match_arg_694.code == Collectivite_Code.Mayotte:
                            _ = match_arg_694.value
                            temp_eligibilite_logement_3 = False
                        if ((date_courante_17 >=
                            date_of_numbers(2022,1,1)) and
                            temp_eligibilite_logement_3):
                            temp_eligibilite_logement_2 = False
                        else:
                            temp_eligibilite_logement_2 = dead_value
                            raise EmptyError
                except EmptyError:
                    match_arg_695 = menage_1.residence
                    if match_arg_695.code == Collectivite_Code.Guadeloupe:
                        _ = match_arg_695.value
                        temp_eligibilite_logement_4 = False
                    elif match_arg_695.code == Collectivite_Code.Guyane:
                        _ = match_arg_695.value
                        temp_eligibilite_logement_4 = False
                    elif match_arg_695.code == Collectivite_Code.Martinique:
                        _ = match_arg_695.value
                        temp_eligibilite_logement_4 = False
                    elif match_arg_695.code == Collectivite_Code.LaReunion:
                        _ = match_arg_695.value
                        temp_eligibilite_logement_4 = False
                    elif match_arg_695.code == Collectivite_Code.SaintBarthelemy:
                        _ = match_arg_695.value
                        temp_eligibilite_logement_4 = False
                    elif match_arg_695.code == Collectivite_Code.SaintMartin:
                        _ = match_arg_695.value
                        temp_eligibilite_logement_4 = False
                    elif match_arg_695.code == Collectivite_Code.Metropole:
                        _ = match_arg_695.value
                        temp_eligibilite_logement_4 = False
                    elif match_arg_695.code == Collectivite_Code.SaintPierreEtMiquelon:
                        _ = match_arg_695.value
                        temp_eligibilite_logement_4 = False
                    elif match_arg_695.code == Collectivite_Code.Mayotte:
                        _ = match_arg_695.value
                        temp_eligibilite_logement_4 = True
                    if temp_eligibilite_logement_4:
                        temp_eligibilite_logement_2 = False
                    else:
                        temp_eligibilite_logement_2 = dead_value
                        raise EmptyError
            except EmptyError:
                if (eligibilite_apl_dot_eligibilite and
                    (condition_rang_enfant and
                    (condition_periode_demenagement and
                    ((eligibilite_apl_dot_date_courante_1 -
                    date_emmenagement) <=
                    delai_apres_emmenagement_l823_8_2)))):
                    temp_eligibilite_logement_2 = True
                else:
                    temp_eligibilite_logement_2 = dead_value
                    raise EmptyError
        except EmptyError:
            temp_eligibilite_logement_2 = False
    except EmptyError:
        temp_eligibilite_logement_2 = dead_value
        raise NoValueProvided(SourcePosition(filename="examples/aides_logement/prologue.catala_fr",
                                             start_line=493, start_column=11,
                                             end_line=493, end_column=31,
                                             law_headings=["Éligibilité à la prime de déménagement",
                                             "Déclarations des champs d'application",
                                             "Prologue : aides au logement"]))
    eligibilite_logement_1 = temp_eligibilite_logement_2
    try:
        if (depenses_justifiees_reellement_engagees <=
            plafond_d823_22):
            temp_montant_prime_demenagement = depenses_justifiees_reellement_engagees
        else:
            temp_montant_prime_demenagement = plafond_d823_22
    except EmptyError:
        temp_montant_prime_demenagement = dead_value
        raise NoValueProvided(SourcePosition(filename="examples/aides_logement/prologue.catala_fr",
                                             start_line=501, start_column=12,
                                             end_line=501, end_column=38,
                                             law_headings=["Éligibilité à la prime de déménagement",
                                             "Déclarations des champs d'application",
                                             "Prologue : aides au logement"]))
    montant_prime_demenagement = temp_montant_prime_demenagement
    return EligibilitePrimeDeDemenagement(montant_prime_demenagement = montant_prime_demenagement)

def eligibilite_allocation_logement(eligibilite_allocation_logement_in:EligibiliteAllocationLogementIn):
    date_courante_18 = eligibilite_allocation_logement_in.date_courante_in
    menage_2 = eligibilite_allocation_logement_in.menage_in
    demandeur_2 = eligibilite_allocation_logement_in.demandeur_in
    beneficie_aide_personnalisee_logement = eligibilite_allocation_logement_in.beneficie_aide_personnalisee_logement_in
    try:
        temp_duree_l841_1_3 = duration_of_numbers(5,0,0)
    except EmptyError:
        temp_duree_l841_1_3 = dead_value
        raise NoValueProvided(SourcePosition(filename="examples/aides_logement/prologue.catala_fr",
                                             start_line=443, start_column=11,
                                             end_line=443, end_column=25,
                                             law_headings=["Éligibilité aux allocations de logement",
                                             "Déclarations des champs d'application",
                                             "Prologue : aides au logement"]))
    duree_l841_1_3 = temp_duree_l841_1_3
    try:
        temp_prestations_familiales_dot_date_courante_1 = date_courante_18
    except EmptyError:
        temp_prestations_familiales_dot_date_courante_1 = dead_value
        raise NoValueProvided(SourcePosition(filename="examples/aides_logement/prologue.catala_fr",
                                             start_line=459, start_column=14,
                                             end_line=459, end_column=50,
                                             law_headings=["Éligibilité aux allocations de logement",
                                             "Déclarations des champs d'application",
                                             "Prologue : aides au logement"]))
    prestations_familiales_dot_date_courante_1 = temp_prestations_familiales_dot_date_courante_1
    try:
        temp_prestations_familiales_dot_prestation_courante_1 = ElementPrestationsFamiliales(ElementPrestationsFamiliales_Code.AllocationLogement,
            Unit())
    except EmptyError:
        temp_prestations_familiales_dot_prestation_courante_1 = dead_value
        raise NoValueProvided(SourcePosition(filename="examples/aides_logement/prologue.catala_fr",
                                             start_line=460, start_column=14,
                                             end_line=460, end_column=56,
                                             law_headings=["Éligibilité aux allocations de logement",
                                             "Déclarations des champs d'application",
                                             "Prologue : aides au logement"]))
    prestations_familiales_dot_prestation_courante_1 = temp_prestations_familiales_dot_prestation_courante_1
    try:
        temp_prestations_familiales_dot_residence_1 = menage_2.residence
    except EmptyError:
        temp_prestations_familiales_dot_residence_1 = dead_value
        raise NoValueProvided(SourcePosition(filename="examples/aides_logement/prologue.catala_fr",
                                             start_line=462, start_column=14,
                                             end_line=462, end_column=46,
                                             law_headings=["Éligibilité aux allocations de logement",
                                             "Déclarations des champs d'application",
                                             "Prologue : aides au logement"]))
    prestations_familiales_dot_residence_1 = temp_prestations_familiales_dot_residence_1
    def temp_prestations_familiales_dot_age_l512_3_2_4(_:Unit):
        temp_prestations_familiales_dot_age_l512_3_2_5 = dead_value
        raise EmptyError
        return temp_prestations_familiales_dot_age_l512_3_2_5
    prestations_familiales_dot_age_l512_3_2_2 = temp_prestations_familiales_dot_age_l512_3_2_4
    result_22 = eligibilite_prestations_familiales(EligibilitePrestationsFamilialesIn(date_courante_in = prestations_familiales_dot_date_courante_1,
                                                   prestation_courante_in = prestations_familiales_dot_prestation_courante_1,
                                                   residence_in = prestations_familiales_dot_residence_1,
                                                   age_l512_3_2_in = prestations_familiales_dot_age_l512_3_2_2))
    prestations_familiales_dot_age_l512_3_2_3 = result_22.age_l512_3_2
    prestations_familiales_dot_droit_ouvert_1 = result_22.droit_ouvert
    prestations_familiales_dot_conditions_hors_age_1 = result_22.conditions_hors_age
    prestations_familiales_dot_regime_outre_mer_l751_1_1 = result_22.regime_outre_mer_l751_1
    try:
        try:
            def temp_l_841_1_6_applicable(_:Unit):
                raise EmptyError
            def temp_l_841_1_6_applicable_1(_:Unit):
                return False
            def temp_l_841_1_6_applicable_2(_:Unit):
                try:
                    match_arg_696 = menage_2.residence
                    if match_arg_696.code == Collectivite_Code.Guadeloupe:
                        _ = match_arg_696.value
                        temp_l_841_1_6_applicable_3 = False
                    elif match_arg_696.code == Collectivite_Code.Guyane:
                        _ = match_arg_696.value
                        temp_l_841_1_6_applicable_3 = False
                    elif match_arg_696.code == Collectivite_Code.Martinique:
                        _ = match_arg_696.value
                        temp_l_841_1_6_applicable_3 = False
                    elif match_arg_696.code == Collectivite_Code.LaReunion:
                        _ = match_arg_696.value
                        temp_l_841_1_6_applicable_3 = False
                    elif match_arg_696.code == Collectivite_Code.SaintBarthelemy:
                        _ = match_arg_696.value
                        temp_l_841_1_6_applicable_3 = True
                    elif match_arg_696.code == Collectivite_Code.SaintMartin:
                        _ = match_arg_696.value
                        temp_l_841_1_6_applicable_3 = True
                    elif match_arg_696.code == Collectivite_Code.Metropole:
                        _ = match_arg_696.value
                        temp_l_841_1_6_applicable_3 = False
                    elif match_arg_696.code == Collectivite_Code.SaintPierreEtMiquelon:
                        _ = match_arg_696.value
                        temp_l_841_1_6_applicable_3 = False
                    elif match_arg_696.code == Collectivite_Code.Mayotte:
                        _ = match_arg_696.value
                        temp_l_841_1_6_applicable_3 = False
                    if temp_l_841_1_6_applicable_3:
                        return False
                    else:
                        raise EmptyError
                except EmptyError:
                    match_arg_697 = menage_2.residence
                    if match_arg_697.code == Collectivite_Code.Guadeloupe:
                        _ = match_arg_697.value
                        temp_l_841_1_6_applicable_4 = True
                    elif match_arg_697.code == Collectivite_Code.Guyane:
                        _ = match_arg_697.value
                        temp_l_841_1_6_applicable_4 = True
                    elif match_arg_697.code == Collectivite_Code.Martinique:
                        _ = match_arg_697.value
                        temp_l_841_1_6_applicable_4 = True
                    elif match_arg_697.code == Collectivite_Code.LaReunion:
                        _ = match_arg_697.value
                        temp_l_841_1_6_applicable_4 = True
                    elif match_arg_697.code == Collectivite_Code.SaintBarthelemy:
                        _ = match_arg_697.value
                        temp_l_841_1_6_applicable_4 = False
                    elif match_arg_697.code == Collectivite_Code.SaintMartin:
                        _ = match_arg_697.value
                        temp_l_841_1_6_applicable_4 = False
                    elif match_arg_697.code == Collectivite_Code.Metropole:
                        _ = match_arg_697.value
                        temp_l_841_1_6_applicable_4 = False
                    elif match_arg_697.code == Collectivite_Code.SaintPierreEtMiquelon:
                        _ = match_arg_697.value
                        temp_l_841_1_6_applicable_4 = False
                    elif match_arg_697.code == Collectivite_Code.Mayotte:
                        _ = match_arg_697.value
                        temp_l_841_1_6_applicable_4 = True
                    if temp_l_841_1_6_applicable_4:
                        return False
                    else:
                        raise EmptyError
            def temp_l_841_1_6_applicable_5(_:Unit):
                return True
            temp_l_841_1_6_applicable_6 = handle_default(SourcePosition(filename="examples/aides_logement/prologue.catala_fr",
                                                         start_line=440,
                                                         start_column=11,
                                                         end_line=440, end_column=31,
                                                         law_headings=["Éligibilité aux allocations de logement",
                                                         "Déclarations des champs d'application",
                                                         "Prologue : aides au logement"]), [temp_l_841_1_6_applicable_5,
                                                         temp_l_841_1_6_applicable_2],
                                                         temp_l_841_1_6_applicable_1,
                                                         temp_l_841_1_6_applicable)
        except EmptyError:
            temp_l_841_1_6_applicable_6 = False
    except EmptyError:
        temp_l_841_1_6_applicable_6 = dead_value
        raise NoValueProvided(SourcePosition(filename="examples/aides_logement/prologue.catala_fr",
                                             start_line=440, start_column=11,
                                             end_line=440, end_column=31,
                                             law_headings=["Éligibilité aux allocations de logement",
                                             "Déclarations des champs d'application",
                                             "Prologue : aides au logement"]))
    l_841_1_6_applicable = temp_l_841_1_6_applicable_6
    try:
        try:
            def temp_l_841_1_2_applicable(_:Unit):
                raise EmptyError
            def temp_l_841_1_2_applicable_1(_:Unit):
                return False
            def temp_l_841_1_2_applicable_2(_:Unit):
                try:
                    match_arg_698 = menage_2.residence
                    if match_arg_698.code == Collectivite_Code.Guadeloupe:
                        _ = match_arg_698.value
                        temp_l_841_1_2_applicable_3 = False
                    elif match_arg_698.code == Collectivite_Code.Guyane:
                        _ = match_arg_698.value
                        temp_l_841_1_2_applicable_3 = False
                    elif match_arg_698.code == Collectivite_Code.Martinique:
                        _ = match_arg_698.value
                        temp_l_841_1_2_applicable_3 = False
                    elif match_arg_698.code == Collectivite_Code.LaReunion:
                        _ = match_arg_698.value
                        temp_l_841_1_2_applicable_3 = False
                    elif match_arg_698.code == Collectivite_Code.SaintBarthelemy:
                        _ = match_arg_698.value
                        temp_l_841_1_2_applicable_3 = True
                    elif match_arg_698.code == Collectivite_Code.SaintMartin:
                        _ = match_arg_698.value
                        temp_l_841_1_2_applicable_3 = True
                    elif match_arg_698.code == Collectivite_Code.Metropole:
                        _ = match_arg_698.value
                        temp_l_841_1_2_applicable_3 = False
                    elif match_arg_698.code == Collectivite_Code.SaintPierreEtMiquelon:
                        _ = match_arg_698.value
                        temp_l_841_1_2_applicable_3 = False
                    elif match_arg_698.code == Collectivite_Code.Mayotte:
                        _ = match_arg_698.value
                        temp_l_841_1_2_applicable_3 = False
                    if temp_l_841_1_2_applicable_3:
                        return False
                    else:
                        raise EmptyError
                except EmptyError:
                    match_arg_699 = menage_2.residence
                    if match_arg_699.code == Collectivite_Code.Guadeloupe:
                        _ = match_arg_699.value
                        temp_l_841_1_2_applicable_4 = True
                    elif match_arg_699.code == Collectivite_Code.Guyane:
                        _ = match_arg_699.value
                        temp_l_841_1_2_applicable_4 = True
                    elif match_arg_699.code == Collectivite_Code.Martinique:
                        _ = match_arg_699.value
                        temp_l_841_1_2_applicable_4 = True
                    elif match_arg_699.code == Collectivite_Code.LaReunion:
                        _ = match_arg_699.value
                        temp_l_841_1_2_applicable_4 = True
                    elif match_arg_699.code == Collectivite_Code.SaintBarthelemy:
                        _ = match_arg_699.value
                        temp_l_841_1_2_applicable_4 = False
                    elif match_arg_699.code == Collectivite_Code.SaintMartin:
                        _ = match_arg_699.value
                        temp_l_841_1_2_applicable_4 = False
                    elif match_arg_699.code == Collectivite_Code.Metropole:
                        _ = match_arg_699.value
                        temp_l_841_1_2_applicable_4 = False
                    elif match_arg_699.code == Collectivite_Code.SaintPierreEtMiquelon:
                        _ = match_arg_699.value
                        temp_l_841_1_2_applicable_4 = False
                    elif match_arg_699.code == Collectivite_Code.Mayotte:
                        _ = match_arg_699.value
                        temp_l_841_1_2_applicable_4 = True
                    if temp_l_841_1_2_applicable_4:
                        return False
                    else:
                        raise EmptyError
            def temp_l_841_1_2_applicable_5(_:Unit):
                return True
            temp_l_841_1_2_applicable_6 = handle_default(SourcePosition(filename="examples/aides_logement/prologue.catala_fr",
                                                         start_line=439,
                                                         start_column=11,
                                                         end_line=439, end_column=31,
                                                         law_headings=["Éligibilité aux allocations de logement",
                                                         "Déclarations des champs d'application",
                                                         "Prologue : aides au logement"]), [temp_l_841_1_2_applicable_5,
                                                         temp_l_841_1_2_applicable_2],
                                                         temp_l_841_1_2_applicable_1,
                                                         temp_l_841_1_2_applicable)
        except EmptyError:
            temp_l_841_1_2_applicable_6 = False
    except EmptyError:
        temp_l_841_1_2_applicable_6 = dead_value
        raise NoValueProvided(SourcePosition(filename="examples/aides_logement/prologue.catala_fr",
                                             start_line=439, start_column=11,
                                             end_line=439, end_column=31,
                                             law_headings=["Éligibilité aux allocations de logement",
                                             "Déclarations des champs d'application",
                                             "Prologue : aides au logement"]))
    l_841_1_2_applicable = temp_l_841_1_2_applicable_6
    try:
        try:
            def temp_l_841_1_1_applicable(_:Unit):
                raise EmptyError
            def temp_l_841_1_1_applicable_1(_:Unit):
                return False
            def temp_l_841_1_1_applicable_2(_:Unit):
                try:
                    match_arg_700 = menage_2.residence
                    if match_arg_700.code == Collectivite_Code.Guadeloupe:
                        _ = match_arg_700.value
                        temp_l_841_1_1_applicable_3 = False
                    elif match_arg_700.code == Collectivite_Code.Guyane:
                        _ = match_arg_700.value
                        temp_l_841_1_1_applicable_3 = False
                    elif match_arg_700.code == Collectivite_Code.Martinique:
                        _ = match_arg_700.value
                        temp_l_841_1_1_applicable_3 = False
                    elif match_arg_700.code == Collectivite_Code.LaReunion:
                        _ = match_arg_700.value
                        temp_l_841_1_1_applicable_3 = False
                    elif match_arg_700.code == Collectivite_Code.SaintBarthelemy:
                        _ = match_arg_700.value
                        temp_l_841_1_1_applicable_3 = True
                    elif match_arg_700.code == Collectivite_Code.SaintMartin:
                        _ = match_arg_700.value
                        temp_l_841_1_1_applicable_3 = True
                    elif match_arg_700.code == Collectivite_Code.Metropole:
                        _ = match_arg_700.value
                        temp_l_841_1_1_applicable_3 = False
                    elif match_arg_700.code == Collectivite_Code.SaintPierreEtMiquelon:
                        _ = match_arg_700.value
                        temp_l_841_1_1_applicable_3 = False
                    elif match_arg_700.code == Collectivite_Code.Mayotte:
                        _ = match_arg_700.value
                        temp_l_841_1_1_applicable_3 = False
                    if temp_l_841_1_1_applicable_3:
                        return False
                    else:
                        raise EmptyError
                except EmptyError:
                    match_arg_701 = menage_2.residence
                    if match_arg_701.code == Collectivite_Code.Guadeloupe:
                        _ = match_arg_701.value
                        temp_l_841_1_1_applicable_4 = True
                    elif match_arg_701.code == Collectivite_Code.Guyane:
                        _ = match_arg_701.value
                        temp_l_841_1_1_applicable_4 = True
                    elif match_arg_701.code == Collectivite_Code.Martinique:
                        _ = match_arg_701.value
                        temp_l_841_1_1_applicable_4 = True
                    elif match_arg_701.code == Collectivite_Code.LaReunion:
                        _ = match_arg_701.value
                        temp_l_841_1_1_applicable_4 = True
                    elif match_arg_701.code == Collectivite_Code.SaintBarthelemy:
                        _ = match_arg_701.value
                        temp_l_841_1_1_applicable_4 = False
                    elif match_arg_701.code == Collectivite_Code.SaintMartin:
                        _ = match_arg_701.value
                        temp_l_841_1_1_applicable_4 = False
                    elif match_arg_701.code == Collectivite_Code.Metropole:
                        _ = match_arg_701.value
                        temp_l_841_1_1_applicable_4 = False
                    elif match_arg_701.code == Collectivite_Code.SaintPierreEtMiquelon:
                        _ = match_arg_701.value
                        temp_l_841_1_1_applicable_4 = False
                    elif match_arg_701.code == Collectivite_Code.Mayotte:
                        _ = match_arg_701.value
                        temp_l_841_1_1_applicable_4 = True
                    if temp_l_841_1_1_applicable_4:
                        return False
                    else:
                        raise EmptyError
            def temp_l_841_1_1_applicable_5(_:Unit):
                return True
            temp_l_841_1_1_applicable_6 = handle_default(SourcePosition(filename="examples/aides_logement/prologue.catala_fr",
                                                         start_line=438,
                                                         start_column=11,
                                                         end_line=438, end_column=31,
                                                         law_headings=["Éligibilité aux allocations de logement",
                                                         "Déclarations des champs d'application",
                                                         "Prologue : aides au logement"]), [temp_l_841_1_1_applicable_5,
                                                         temp_l_841_1_1_applicable_2],
                                                         temp_l_841_1_1_applicable_1,
                                                         temp_l_841_1_1_applicable)
        except EmptyError:
            temp_l_841_1_1_applicable_6 = False
    except EmptyError:
        temp_l_841_1_1_applicable_6 = dead_value
        raise NoValueProvided(SourcePosition(filename="examples/aides_logement/prologue.catala_fr",
                                             start_line=438, start_column=11,
                                             end_line=438, end_column=31,
                                             law_headings=["Éligibilité aux allocations de logement",
                                             "Déclarations des champs d'application",
                                             "Prologue : aides au logement"]))
    l_841_1_1_applicable = temp_l_841_1_1_applicable_6
    try:
        try:
            try:
                try:
                    try:
                        match_arg_702 = menage_2.logement.mode_occupation
                        if match_arg_702.code == ModeOccupation_Code.Locataire:
                            _ = match_arg_702.value
                            temp_condition_accession_propriete = False
                        elif match_arg_702.code == ModeOccupation_Code.ResidentLogementFoyer:
                            _ = match_arg_702.value
                            temp_condition_accession_propriete = False
                        elif match_arg_702.code == ModeOccupation_Code.AccessionProprieteLocalUsageExclusifHabitation:
                            proprietaire_6 = match_arg_702.value
                            match_arg_703 = proprietaire_6.type_travaux_logement_r842_5
                            if match_arg_703.code == TypeTravauxLogementR8425_Code.ObjectifDecenceLogement:
                                _ = match_arg_703.value
                                temp_condition_accession_propriete_1 = False
                            elif match_arg_703.code == TypeTravauxLogementR8425_Code.PrevuDansListeR321_15:
                                _ = match_arg_703.value
                                temp_condition_accession_propriete_1 = False
                            elif match_arg_703.code == TypeTravauxLogementR8425_Code.AgrandirOuRendreHabitableD331_63:
                                _ = match_arg_703.value
                                temp_condition_accession_propriete_1 = True
                            elif match_arg_703.code == TypeTravauxLogementR8425_Code.PasDeTravaux:
                                _ = match_arg_703.value
                                temp_condition_accession_propriete_1 = False
                            match_arg_704 = proprietaire_6.pret.titulaire_pret
                            if match_arg_704.code == TitulairePret_Code.Demandeur:
                                _ = match_arg_704.value
                                temp_condition_accession_propriete_2 = True
                            elif match_arg_704.code == TitulairePret_Code.VendeurQuandDemandeurAContratLocationAccession:
                                _ = match_arg_704.value
                                temp_condition_accession_propriete_2 = False
                            temp_condition_accession_propriete = (temp_condition_accession_propriete_2 and
                                temp_condition_accession_propriete_1)
                        elif match_arg_702.code == ModeOccupation_Code.SousLocataire:
                            _ = match_arg_702.value
                            temp_condition_accession_propriete = False
                        elif match_arg_702.code == ModeOccupation_Code.LocationAccession:
                            _ = match_arg_702.value
                            temp_condition_accession_propriete = False
                        if temp_condition_accession_propriete:
                            temp_condition_accession_propriete_3 = True
                        else:
                            temp_condition_accession_propriete_3 = dead_value
                            raise EmptyError
                    except EmptyError:
                        match_arg_705 = menage_2.logement.mode_occupation
                        if match_arg_705.code == ModeOccupation_Code.Locataire:
                            _ = match_arg_705.value
                            temp_condition_accession_propriete_4 = False
                        elif match_arg_705.code == ModeOccupation_Code.ResidentLogementFoyer:
                            _ = match_arg_705.value
                            temp_condition_accession_propriete_4 = False
                        elif match_arg_705.code == ModeOccupation_Code.AccessionProprieteLocalUsageExclusifHabitation:
                            proprietaire_7 = match_arg_705.value
                            match_arg_706 = proprietaire_7.type_travaux_logement_r842_5
                            if match_arg_706.code == TypeTravauxLogementR8425_Code.ObjectifDecenceLogement:
                                _ = match_arg_706.value
                                temp_condition_accession_propriete_5 = False
                            elif match_arg_706.code == TypeTravauxLogementR8425_Code.PrevuDansListeR321_15:
                                _ = match_arg_706.value
                                temp_condition_accession_propriete_5 = True
                            elif match_arg_706.code == TypeTravauxLogementR8425_Code.AgrandirOuRendreHabitableD331_63:
                                _ = match_arg_706.value
                                temp_condition_accession_propriete_5 = False
                            elif match_arg_706.code == TypeTravauxLogementR8425_Code.PasDeTravaux:
                                _ = match_arg_706.value
                                temp_condition_accession_propriete_5 = False
                            match_arg_707 = proprietaire_7.pret.titulaire_pret
                            if match_arg_707.code == TitulairePret_Code.Demandeur:
                                _ = match_arg_707.value
                                temp_condition_accession_propriete_6 = True
                            elif match_arg_707.code == TitulairePret_Code.VendeurQuandDemandeurAContratLocationAccession:
                                _ = match_arg_707.value
                                temp_condition_accession_propriete_6 = False
                            temp_condition_accession_propriete_4 = (temp_condition_accession_propriete_6 and
                                temp_condition_accession_propriete_5)
                        elif match_arg_705.code == ModeOccupation_Code.SousLocataire:
                            _ = match_arg_705.value
                            temp_condition_accession_propriete_4 = False
                        elif match_arg_705.code == ModeOccupation_Code.LocationAccession:
                            _ = match_arg_705.value
                            temp_condition_accession_propriete_4 = False
                        if temp_condition_accession_propriete_4:
                            temp_condition_accession_propriete_3 = True
                        else:
                            temp_condition_accession_propriete_3 = dead_value
                            raise EmptyError
                except EmptyError:
                    match_arg_708 = menage_2.logement.mode_occupation
                    if match_arg_708.code == ModeOccupation_Code.Locataire:
                        _ = match_arg_708.value
                        temp_condition_accession_propriete_7 = False
                    elif match_arg_708.code == ModeOccupation_Code.ResidentLogementFoyer:
                        _ = match_arg_708.value
                        temp_condition_accession_propriete_7 = False
                    elif match_arg_708.code == ModeOccupation_Code.AccessionProprieteLocalUsageExclusifHabitation:
                        proprietaire_8 = match_arg_708.value
                        match_arg_709 = proprietaire_8.type_travaux_logement_r842_5
                        if match_arg_709.code == TypeTravauxLogementR8425_Code.ObjectifDecenceLogement:
                            _ = match_arg_709.value
                            temp_condition_accession_propriete_8 = True
                        elif match_arg_709.code == TypeTravauxLogementR8425_Code.PrevuDansListeR321_15:
                            _ = match_arg_709.value
                            temp_condition_accession_propriete_8 = False
                        elif match_arg_709.code == TypeTravauxLogementR8425_Code.AgrandirOuRendreHabitableD331_63:
                            _ = match_arg_709.value
                            temp_condition_accession_propriete_8 = False
                        elif match_arg_709.code == TypeTravauxLogementR8425_Code.PasDeTravaux:
                            _ = match_arg_709.value
                            temp_condition_accession_propriete_8 = False
                        match_arg_710 = proprietaire_8.type_travaux_logement_r842_5
                        if match_arg_710.code == TypeTravauxLogementR8425_Code.ObjectifDecenceLogement:
                            _ = match_arg_710.value
                            temp_condition_accession_propriete_9 = False
                        elif match_arg_710.code == TypeTravauxLogementR8425_Code.PrevuDansListeR321_15:
                            _ = match_arg_710.value
                            temp_condition_accession_propriete_9 = False
                        elif match_arg_710.code == TypeTravauxLogementR8425_Code.AgrandirOuRendreHabitableD331_63:
                            _ = match_arg_710.value
                            temp_condition_accession_propriete_9 = False
                        elif match_arg_710.code == TypeTravauxLogementR8425_Code.PasDeTravaux:
                            _ = match_arg_710.value
                            temp_condition_accession_propriete_9 = True
                        match_arg_711 = proprietaire_8.pret.titulaire_pret
                        if match_arg_711.code == TitulairePret_Code.Demandeur:
                            _ = match_arg_711.value
                            temp_condition_accession_propriete_10 = True
                        elif match_arg_711.code == TitulairePret_Code.VendeurQuandDemandeurAContratLocationAccession:
                            _ = match_arg_711.value
                            temp_condition_accession_propriete_10 = False
                        temp_condition_accession_propriete_7 = (temp_condition_accession_propriete_10 and
                            (temp_condition_accession_propriete_9 or
                            temp_condition_accession_propriete_8))
                    elif match_arg_708.code == ModeOccupation_Code.SousLocataire:
                        _ = match_arg_708.value
                        temp_condition_accession_propriete_7 = False
                    elif match_arg_708.code == ModeOccupation_Code.LocationAccession:
                        _ = match_arg_708.value
                        temp_condition_accession_propriete_7 = False
                    if temp_condition_accession_propriete_7:
                        temp_condition_accession_propriete_3 = True
                    else:
                        temp_condition_accession_propriete_3 = dead_value
                        raise EmptyError
            except EmptyError:
                match_arg_712 = menage_2.logement.mode_occupation
                if match_arg_712.code == ModeOccupation_Code.Locataire:
                    _ = match_arg_712.value
                    temp_condition_accession_propriete_11 = True
                elif match_arg_712.code == ModeOccupation_Code.ResidentLogementFoyer:
                    _ = match_arg_712.value
                    temp_condition_accession_propriete_11 = True
                elif match_arg_712.code == ModeOccupation_Code.AccessionProprieteLocalUsageExclusifHabitation:
                    _ = match_arg_712.value
                    temp_condition_accession_propriete_11 = False
                elif match_arg_712.code == ModeOccupation_Code.SousLocataire:
                    _ = match_arg_712.value
                    temp_condition_accession_propriete_11 = True
                elif match_arg_712.code == ModeOccupation_Code.LocationAccession:
                    _ = match_arg_712.value
                    temp_condition_accession_propriete_11 = True
                if temp_condition_accession_propriete_11:
                    temp_condition_accession_propriete_3 = True
                else:
                    temp_condition_accession_propriete_3 = dead_value
                    raise EmptyError
        except EmptyError:
            temp_condition_accession_propriete_3 = False
    except EmptyError:
        temp_condition_accession_propriete_3 = dead_value
        raise NoValueProvided(SourcePosition(filename="examples/aides_logement/prologue.catala_fr",
                                             start_line=437, start_column=11,
                                             end_line=437, end_column=40,
                                             law_headings=["Éligibilité aux allocations de logement",
                                             "Déclarations des champs d'application",
                                             "Prologue : aides au logement"]))
    condition_accession_propriete = temp_condition_accession_propriete_3
    try:
        temp_eligibilite_commune_dot_menage = menage_2
    except EmptyError:
        temp_eligibilite_commune_dot_menage = dead_value
        raise NoValueProvided(SourcePosition(filename="examples/aides_logement/prologue.catala_fr",
                                             start_line=464, start_column=14,
                                             end_line=464, end_column=40,
                                             law_headings=["Éligibilité aux allocations de logement",
                                             "Déclarations des champs d'application",
                                             "Prologue : aides au logement"]))
    eligibilite_commune_dot_menage = temp_eligibilite_commune_dot_menage
    try:
        temp_eligibilite_commune_dot_demandeur = demandeur_2
    except EmptyError:
        temp_eligibilite_commune_dot_demandeur = dead_value
        raise NoValueProvided(SourcePosition(filename="examples/aides_logement/prologue.catala_fr",
                                             start_line=465, start_column=14,
                                             end_line=465, end_column=43,
                                             law_headings=["Éligibilité aux allocations de logement",
                                             "Déclarations des champs d'application",
                                             "Prologue : aides au logement"]))
    eligibilite_commune_dot_demandeur = temp_eligibilite_commune_dot_demandeur
    try:
        temp_eligibilite_commune_dot_date_courante = date_courante_18
    except EmptyError:
        temp_eligibilite_commune_dot_date_courante = dead_value
        raise NoValueProvided(SourcePosition(filename="examples/aides_logement/prologue.catala_fr",
                                             start_line=466, start_column=14,
                                             end_line=466, end_column=47,
                                             law_headings=["Éligibilité aux allocations de logement",
                                             "Déclarations des champs d'application",
                                             "Prologue : aides au logement"]))
    eligibilite_commune_dot_date_courante = temp_eligibilite_commune_dot_date_courante
    def temp_eligibilite_commune_dot_condition_logement_residence_principale(_:Unit):
        match_arg_713 = menage_2.logement.mode_occupation
        if match_arg_713.code == ModeOccupation_Code.Locataire:
            _ = match_arg_713.value
            temp_eligibilite_commune_dot_condition_logement_residence_principale_1 = False
        elif match_arg_713.code == ModeOccupation_Code.ResidentLogementFoyer:
            logement_foyer = match_arg_713.value
            temp_eligibilite_commune_dot_condition_logement_residence_principale_1 = logement_foyer.construit_application_loi_1957_12_III
        elif match_arg_713.code == ModeOccupation_Code.AccessionProprieteLocalUsageExclusifHabitation:
            _ = match_arg_713.value
            temp_eligibilite_commune_dot_condition_logement_residence_principale_1 = False
        elif match_arg_713.code == ModeOccupation_Code.SousLocataire:
            _ = match_arg_713.value
            temp_eligibilite_commune_dot_condition_logement_residence_principale_1 = False
        elif match_arg_713.code == ModeOccupation_Code.LocationAccession:
            _ = match_arg_713.value
            temp_eligibilite_commune_dot_condition_logement_residence_principale_1 = False
        if temp_eligibilite_commune_dot_condition_logement_residence_principale_1:
            temp_eligibilite_commune_dot_condition_logement_residence_principale_2 = True
        else:
            temp_eligibilite_commune_dot_condition_logement_residence_principale_2 = dead_value
            raise EmptyError
        return temp_eligibilite_commune_dot_condition_logement_residence_principale_2
    eligibilite_commune_dot_condition_logement_residence_principale = temp_eligibilite_commune_dot_condition_logement_residence_principale
    def temp_eligibilite_commune_dot_condition_logement_surface(_:Unit):
        match_arg_714 = menage_2.logement.mode_occupation
        if match_arg_714.code == ModeOccupation_Code.Locataire:
            _ = match_arg_714.value
            temp_eligibilite_commune_dot_condition_logement_surface_1 = False
        elif match_arg_714.code == ModeOccupation_Code.ResidentLogementFoyer:
            logement_foyer_1 = match_arg_714.value
            temp_eligibilite_commune_dot_condition_logement_surface_1 = logement_foyer_1.construit_application_loi_1957_12_III
        elif match_arg_714.code == ModeOccupation_Code.AccessionProprieteLocalUsageExclusifHabitation:
            _ = match_arg_714.value
            temp_eligibilite_commune_dot_condition_logement_surface_1 = False
        elif match_arg_714.code == ModeOccupation_Code.SousLocataire:
            _ = match_arg_714.value
            temp_eligibilite_commune_dot_condition_logement_surface_1 = False
        elif match_arg_714.code == ModeOccupation_Code.LocationAccession:
            _ = match_arg_714.value
            temp_eligibilite_commune_dot_condition_logement_surface_1 = False
        if temp_eligibilite_commune_dot_condition_logement_surface_1:
            temp_eligibilite_commune_dot_condition_logement_surface_2 = True
        else:
            temp_eligibilite_commune_dot_condition_logement_surface_2 = dead_value
            raise EmptyError
        return temp_eligibilite_commune_dot_condition_logement_surface_2
    eligibilite_commune_dot_condition_logement_surface = temp_eligibilite_commune_dot_condition_logement_surface
    def temp_eligibilite_commune_dot_date_entree_vigueur_differee_cch(_:Unit):
        temp_eligibilite_commune_dot_date_entree_vigueur_differee_cch_1 = dead_value
        raise EmptyError
        return temp_eligibilite_commune_dot_date_entree_vigueur_differee_cch_1
    eligibilite_commune_dot_date_entree_vigueur_differee_cch = temp_eligibilite_commune_dot_date_entree_vigueur_differee_cch
    result_23 = eligibilite_aides_personnelle_logement(EligibiliteAidesPersonnelleLogementIn(menage_in = eligibilite_commune_dot_menage,
                                                       demandeur_in = eligibilite_commune_dot_demandeur,
                                                       date_courante_in = eligibilite_commune_dot_date_courante,
                                                       condition_logement_residence_principale_in = eligibilite_commune_dot_condition_logement_residence_principale,
                                                       condition_logement_surface_in = eligibilite_commune_dot_condition_logement_surface,
                                                       date_entree_vigueur_differee_cch_in = eligibilite_commune_dot_date_entree_vigueur_differee_cch))
    eligibilite_commune_dot_date_courante_1 = result_23.date_courante
    eligibilite_commune_dot_eligibilite = result_23.eligibilite
    eligibilite_commune_dot_nombre_personnes_a_charge_prises_en_compte = result_23.nombre_personnes_a_charge_prises_en_compte
    eligibilite_commune_dot_coefficents_enfants_garde_alternee_pris_en_compte = result_23.coefficents_enfants_garde_alternee_pris_en_compte
    eligibilite_commune_dot_condition_2_r823_4 = result_23.condition_2_r823_4
    try:
        temp_coefficents_enfants_garde_alternee_pris_en_compte_3 = eligibilite_commune_dot_coefficents_enfants_garde_alternee_pris_en_compte
    except EmptyError:
        temp_coefficents_enfants_garde_alternee_pris_en_compte_3 = dead_value
        raise NoValueProvided(SourcePosition(filename="examples/aides_logement/prologue.catala_fr",
                                             start_line=453, start_column=12,
                                             end_line=453, end_column=61,
                                             law_headings=["Éligibilité aux allocations de logement",
                                             "Déclarations des champs d'application",
                                             "Prologue : aides au logement"]))
    coefficents_enfants_garde_alternee_pris_en_compte_1 = temp_coefficents_enfants_garde_alternee_pris_en_compte_3
    try:
        temp_nombre_personnes_a_charge_prises_en_compte_1 = eligibilite_commune_dot_nombre_personnes_a_charge_prises_en_compte
    except EmptyError:
        temp_nombre_personnes_a_charge_prises_en_compte_1 = dead_value
        raise NoValueProvided(SourcePosition(filename="examples/aides_logement/prologue.catala_fr",
                                             start_line=452, start_column=12,
                                             end_line=452, end_column=54,
                                             law_headings=["Éligibilité aux allocations de logement",
                                             "Déclarations des champs d'application",
                                             "Prologue : aides au logement"]))
    nombre_personnes_a_charge_prises_en_compte_1 = temp_nombre_personnes_a_charge_prises_en_compte_1
    try:
        if (not eligibilite_commune_dot_eligibilite or
            not condition_accession_propriete):
            temp_eligibilite_dispositions_communes = TypeEligibiliteAllocationLogement(TypeEligibiliteAllocationLogement_Code.PasEligible,
                Unit())
        else:
            temp_eligibilite_dispositions_communes = TypeEligibiliteAllocationLogement(TypeEligibiliteAllocationLogement_Code.AllocationLogementSociale,
                Unit())
    except EmptyError:
        temp_eligibilite_dispositions_communes = dead_value
        raise NoValueProvided(SourcePosition(filename="examples/aides_logement/prologue.catala_fr",
                                             start_line=450, start_column=10,
                                             end_line=450, end_column=31,
                                             law_headings=["Éligibilité aux allocations de logement",
                                             "Déclarations des champs d'application",
                                             "Prologue : aides au logement"]))
    eligibilite_dispositions_communes = temp_eligibilite_dispositions_communes
    try:
        try:
            try:
                try:
                    try:
                        try:
                            try:
                                def temp_eligibilite_allocation_logement_familiale(_:Unit):
                                    return True
                                def temp_eligibilite_allocation_logement_familiale_1(_:Unit):
                                    match_arg_715 = menage_2.situation_familiale
                                    if match_arg_715.code == SituationFamiliale_Code.Celibataire:
                                        _ = match_arg_715.value
                                        temp_eligibilite_allocation_logement_familiale_2 = ((list_length(menage_2.personnes_a_charge) ==
                                            integer_of_string("0")) and
                                            menage_2.enfant_a_naitre_apres_quatrieme_mois_grossesse)
                                    elif match_arg_715.code == SituationFamiliale_Code.Maries:
                                        _ = match_arg_715.value
                                        temp_eligibilite_allocation_logement_familiale_2 = False
                                    elif match_arg_715.code == SituationFamiliale_Code.Pacses:
                                        _ = match_arg_715.value
                                        temp_eligibilite_allocation_logement_familiale_2 = False
                                    elif match_arg_715.code == SituationFamiliale_Code.Concubins:
                                        _ = match_arg_715.value
                                        temp_eligibilite_allocation_logement_familiale_2 = False
                                    elif match_arg_715.code == SituationFamiliale_Code.CelibataireSepareDeFait:
                                        _ = match_arg_715.value
                                        temp_eligibilite_allocation_logement_familiale_2 = False
                                    elif match_arg_715.code == SituationFamiliale_Code.ConcubinageDontSepareDeFait:
                                        _ = match_arg_715.value
                                        temp_eligibilite_allocation_logement_familiale_2 = False
                                    return (l_841_1_6_applicable and
                                        temp_eligibilite_allocation_logement_familiale_2)
                                def temp_eligibilite_allocation_logement_familiale_3(_:Unit):
                                    try:
                                        match_arg_716 = menage_2.residence
                                        if match_arg_716.code == Collectivite_Code.Guadeloupe:
                                            _ = match_arg_716.value
                                            temp_eligibilite_allocation_logement_familiale_4 = True
                                        elif match_arg_716.code == Collectivite_Code.Guyane:
                                            _ = match_arg_716.value
                                            temp_eligibilite_allocation_logement_familiale_4 = True
                                        elif match_arg_716.code == Collectivite_Code.Martinique:
                                            _ = match_arg_716.value
                                            temp_eligibilite_allocation_logement_familiale_4 = True
                                        elif match_arg_716.code == Collectivite_Code.LaReunion:
                                            _ = match_arg_716.value
                                            temp_eligibilite_allocation_logement_familiale_4 = True
                                        elif match_arg_716.code == Collectivite_Code.SaintBarthelemy:
                                            _ = match_arg_716.value
                                            temp_eligibilite_allocation_logement_familiale_4 = False
                                        elif match_arg_716.code == Collectivite_Code.SaintMartin:
                                            _ = match_arg_716.value
                                            temp_eligibilite_allocation_logement_familiale_4 = False
                                        elif match_arg_716.code == Collectivite_Code.Metropole:
                                            _ = match_arg_716.value
                                            temp_eligibilite_allocation_logement_familiale_4 = False
                                        elif match_arg_716.code == Collectivite_Code.SaintPierreEtMiquelon:
                                            _ = match_arg_716.value
                                            temp_eligibilite_allocation_logement_familiale_4 = False
                                        elif match_arg_716.code == Collectivite_Code.Mayotte:
                                            _ = match_arg_716.value
                                            temp_eligibilite_allocation_logement_familiale_4 = True
                                        if (temp_eligibilite_allocation_logement_familiale_4 and
                                            demandeur_2.est_non_salarie_agricole_l781_8_l_781_46_code_rural):
                                            return True
                                        else:
                                            raise EmptyError
                                    except EmptyError:
                                        def temp_eligibilite_allocation_logement_familiale_5(personne_a_charge_8:PersonneACharge):
                                            match_arg_717 = personne_a_charge_8
                                            if match_arg_717.code == PersonneACharge_Code.EnfantACharge:
                                                enfant_10 = match_arg_717.value
                                                match_arg_718 = enfant_10.situation_garde_alternee
                                                if match_arg_718.code == SituationGardeAlternee_Code.PasDeGardeAlternee:
                                                    _ = match_arg_718.value
                                                    temp_eligibilite_allocation_logement_familiale_6 = PriseEnChargeEnfant(PriseEnChargeEnfant_Code.EffectiveEtPermanente,
                                                        Unit())
                                                elif match_arg_718.code == SituationGardeAlternee_Code.GardeAlterneeCoefficientPriseEnCharge:
                                                    _ = match_arg_718.value
                                                    temp_eligibilite_allocation_logement_familiale_6 = PriseEnChargeEnfant(PriseEnChargeEnfant_Code.GardeAlterneePartageAllocations,
                                                        Unit())
                                                return prestations_familiales_dot_droit_ouvert_1(
                                                    EnfantPrestationsFamiliales(identifiant = enfant_10.identifiant,
                                                    obligation_scolaire = enfant_10.obligation_scolaire,
                                                    remuneration_mensuelle = enfant_10.remuneration_mensuelle,
                                                    date_de_naissance = enfant_10.date_de_naissance,
                                                    prise_en_charge = temp_eligibilite_allocation_logement_familiale_6,
                                                    a_deja_ouvert_droit_aux_allocations_familiales = enfant_10.a_deja_ouvert_droit_aux_allocations_familiales,
                                                    beneficie_titre_personnel_aide_personnelle_logement = enfant_10.beneficie_titre_personnel_aide_personnelle_logement))
                                            elif match_arg_717.code == PersonneACharge_Code.AutrePersonneACharge:
                                                _ = match_arg_717.value
                                                return False
                                        match_arg_719 = menage_2.residence
                                        if match_arg_719.code == Collectivite_Code.Guadeloupe:
                                            _ = match_arg_719.value
                                            temp_eligibilite_allocation_logement_familiale_7 = True
                                        elif match_arg_719.code == Collectivite_Code.Guyane:
                                            _ = match_arg_719.value
                                            temp_eligibilite_allocation_logement_familiale_7 = True
                                        elif match_arg_719.code == Collectivite_Code.Martinique:
                                            _ = match_arg_719.value
                                            temp_eligibilite_allocation_logement_familiale_7 = True
                                        elif match_arg_719.code == Collectivite_Code.LaReunion:
                                            _ = match_arg_719.value
                                            temp_eligibilite_allocation_logement_familiale_7 = True
                                        elif match_arg_719.code == Collectivite_Code.SaintBarthelemy:
                                            _ = match_arg_719.value
                                            temp_eligibilite_allocation_logement_familiale_7 = False
                                        elif match_arg_719.code == Collectivite_Code.SaintMartin:
                                            _ = match_arg_719.value
                                            temp_eligibilite_allocation_logement_familiale_7 = False
                                        elif match_arg_719.code == Collectivite_Code.Metropole:
                                            _ = match_arg_719.value
                                            temp_eligibilite_allocation_logement_familiale_7 = False
                                        elif match_arg_719.code == Collectivite_Code.SaintPierreEtMiquelon:
                                            _ = match_arg_719.value
                                            temp_eligibilite_allocation_logement_familiale_7 = False
                                        elif match_arg_719.code == Collectivite_Code.Mayotte:
                                            _ = match_arg_719.value
                                            temp_eligibilite_allocation_logement_familiale_7 = True
                                        if (temp_eligibilite_allocation_logement_familiale_7 and
                                            (list_length(list_filter(temp_eligibilite_allocation_logement_familiale_5,
                                            menage_2.personnes_a_charge)) >=
                                            integer_of_string("1"))):
                                            return True
                                        else:
                                            raise EmptyError
                                def temp_eligibilite_allocation_logement_familiale_8(_:Unit):
                                    try:
                                        match_arg_720 = menage_2.residence
                                        if match_arg_720.code == Collectivite_Code.Guadeloupe:
                                            _ = match_arg_720.value
                                            temp_eligibilite_allocation_logement_familiale_9 = False
                                        elif match_arg_720.code == Collectivite_Code.Guyane:
                                            _ = match_arg_720.value
                                            temp_eligibilite_allocation_logement_familiale_9 = False
                                        elif match_arg_720.code == Collectivite_Code.Martinique:
                                            _ = match_arg_720.value
                                            temp_eligibilite_allocation_logement_familiale_9 = False
                                        elif match_arg_720.code == Collectivite_Code.LaReunion:
                                            _ = match_arg_720.value
                                            temp_eligibilite_allocation_logement_familiale_9 = False
                                        elif match_arg_720.code == Collectivite_Code.SaintBarthelemy:
                                            _ = match_arg_720.value
                                            temp_eligibilite_allocation_logement_familiale_9 = True
                                        elif match_arg_720.code == Collectivite_Code.SaintMartin:
                                            _ = match_arg_720.value
                                            temp_eligibilite_allocation_logement_familiale_9 = True
                                        elif match_arg_720.code == Collectivite_Code.Metropole:
                                            _ = match_arg_720.value
                                            temp_eligibilite_allocation_logement_familiale_9 = False
                                        elif match_arg_720.code == Collectivite_Code.SaintPierreEtMiquelon:
                                            _ = match_arg_720.value
                                            temp_eligibilite_allocation_logement_familiale_9 = False
                                        elif match_arg_720.code == Collectivite_Code.Mayotte:
                                            _ = match_arg_720.value
                                            temp_eligibilite_allocation_logement_familiale_9 = False
                                        if (temp_eligibilite_allocation_logement_familiale_9 and
                                            demandeur_2.est_non_salarie_agricole_l781_8_l_781_46_code_rural):
                                            return True
                                        else:
                                            raise EmptyError
                                    except EmptyError:
                                        def temp_eligibilite_allocation_logement_familiale_10(personne_a_charge_9:PersonneACharge):
                                            match_arg_721 = personne_a_charge_9
                                            if match_arg_721.code == PersonneACharge_Code.EnfantACharge:
                                                enfant_11 = match_arg_721.value
                                                match_arg_722 = enfant_11.situation_garde_alternee
                                                if match_arg_722.code == SituationGardeAlternee_Code.PasDeGardeAlternee:
                                                    _ = match_arg_722.value
                                                    temp_eligibilite_allocation_logement_familiale_11 = PriseEnChargeEnfant(PriseEnChargeEnfant_Code.EffectiveEtPermanente,
                                                        Unit())
                                                elif match_arg_722.code == SituationGardeAlternee_Code.GardeAlterneeCoefficientPriseEnCharge:
                                                    _ = match_arg_722.value
                                                    temp_eligibilite_allocation_logement_familiale_11 = PriseEnChargeEnfant(PriseEnChargeEnfant_Code.GardeAlterneePartageAllocations,
                                                        Unit())
                                                return prestations_familiales_dot_droit_ouvert_1(
                                                    EnfantPrestationsFamiliales(identifiant = enfant_11.identifiant,
                                                    obligation_scolaire = enfant_11.obligation_scolaire,
                                                    remuneration_mensuelle = enfant_11.remuneration_mensuelle,
                                                    date_de_naissance = enfant_11.date_de_naissance,
                                                    prise_en_charge = temp_eligibilite_allocation_logement_familiale_11,
                                                    a_deja_ouvert_droit_aux_allocations_familiales = enfant_11.a_deja_ouvert_droit_aux_allocations_familiales,
                                                    beneficie_titre_personnel_aide_personnelle_logement = enfant_11.beneficie_titre_personnel_aide_personnelle_logement))
                                            elif match_arg_721.code == PersonneACharge_Code.AutrePersonneACharge:
                                                _ = match_arg_721.value
                                                return False
                                        match_arg_723 = menage_2.residence
                                        if match_arg_723.code == Collectivite_Code.Guadeloupe:
                                            _ = match_arg_723.value
                                            temp_eligibilite_allocation_logement_familiale_12 = False
                                        elif match_arg_723.code == Collectivite_Code.Guyane:
                                            _ = match_arg_723.value
                                            temp_eligibilite_allocation_logement_familiale_12 = False
                                        elif match_arg_723.code == Collectivite_Code.Martinique:
                                            _ = match_arg_723.value
                                            temp_eligibilite_allocation_logement_familiale_12 = False
                                        elif match_arg_723.code == Collectivite_Code.LaReunion:
                                            _ = match_arg_723.value
                                            temp_eligibilite_allocation_logement_familiale_12 = False
                                        elif match_arg_723.code == Collectivite_Code.SaintBarthelemy:
                                            _ = match_arg_723.value
                                            temp_eligibilite_allocation_logement_familiale_12 = True
                                        elif match_arg_723.code == Collectivite_Code.SaintMartin:
                                            _ = match_arg_723.value
                                            temp_eligibilite_allocation_logement_familiale_12 = True
                                        elif match_arg_723.code == Collectivite_Code.Metropole:
                                            _ = match_arg_723.value
                                            temp_eligibilite_allocation_logement_familiale_12 = False
                                        elif match_arg_723.code == Collectivite_Code.SaintPierreEtMiquelon:
                                            _ = match_arg_723.value
                                            temp_eligibilite_allocation_logement_familiale_12 = False
                                        elif match_arg_723.code == Collectivite_Code.Mayotte:
                                            _ = match_arg_723.value
                                            temp_eligibilite_allocation_logement_familiale_12 = False
                                        if (temp_eligibilite_allocation_logement_familiale_12 and
                                            (list_length(list_filter(temp_eligibilite_allocation_logement_familiale_10,
                                            menage_2.personnes_a_charge)) >=
                                            integer_of_string("1"))):
                                            return True
                                        else:
                                            raise EmptyError
                                temp_eligibilite_allocation_logement_familiale_13 = handle_default(
                                    SourcePosition(filename="examples/aides_logement/prologue.catala_fr",
                                    start_line=442, start_column=11,
                                    end_line=442, end_column=52,
                                    law_headings=["Éligibilité aux allocations de logement",
                                    "Déclarations des champs d'application",
                                    "Prologue : aides au logement"]), [temp_eligibilite_allocation_logement_familiale_8,
                                    temp_eligibilite_allocation_logement_familiale_3],
                                    temp_eligibilite_allocation_logement_familiale_1,
                                    temp_eligibilite_allocation_logement_familiale)
                            except EmptyError:
                                def temp_eligibilite_allocation_logement_familiale_14(personne_a_charge_10:PersonneACharge):
                                    match_arg_724 = personne_a_charge_10
                                    if match_arg_724.code == PersonneACharge_Code.EnfantACharge:
                                        enfant_12 = match_arg_724.value
                                        return False
                                    elif match_arg_724.code == PersonneACharge_Code.AutrePersonneACharge:
                                        parent_3 = match_arg_724.value
                                        return (parent_3.ascendant_descendant_collateral_deuxieme_troisieme_degre and
                                            parent_3.incapacite_80_pourcent_ou_restriction_emploi)
                                if (list_length(list_filter(temp_eligibilite_allocation_logement_familiale_14,
                                    menage_2.personnes_a_charge)) >=
                                    integer_of_string("1")):
                                    temp_eligibilite_allocation_logement_familiale_13 = True
                                else:
                                    temp_eligibilite_allocation_logement_familiale_13 = dead_value
                                    raise EmptyError
                        except EmptyError:
                            def temp_eligibilite_allocation_logement_familiale_15(personne_a_charge_11:PersonneACharge):
                                return eligibilite_commune_dot_condition_2_r823_4(
                                    personne_a_charge_11)
                            if (list_length(list_filter(temp_eligibilite_allocation_logement_familiale_15,
                                menage_2.personnes_a_charge)) >=
                                integer_of_string("1")):
                                temp_eligibilite_allocation_logement_familiale_13 = True
                            else:
                                temp_eligibilite_allocation_logement_familiale_13 = dead_value
                                raise EmptyError
                    except EmptyError:
                        match_arg_725 = menage_2.situation_familiale
                        if match_arg_725.code == SituationFamiliale_Code.Celibataire:
                            _ = match_arg_725.value
                            temp_eligibilite_allocation_logement_familiale_16 = False
                        elif match_arg_725.code == SituationFamiliale_Code.Maries:
                            date_mariage = match_arg_725.value
                            temp_eligibilite_allocation_logement_familiale_16 = (date_courante_18 <=
                                (date_mariage + duree_l841_1_3))
                        elif match_arg_725.code == SituationFamiliale_Code.Pacses:
                            _ = match_arg_725.value
                            temp_eligibilite_allocation_logement_familiale_16 = False
                        elif match_arg_725.code == SituationFamiliale_Code.Concubins:
                            _ = match_arg_725.value
                            temp_eligibilite_allocation_logement_familiale_16 = False
                        elif match_arg_725.code == SituationFamiliale_Code.CelibataireSepareDeFait:
                            _ = match_arg_725.value
                            temp_eligibilite_allocation_logement_familiale_16 = False
                        elif match_arg_725.code == SituationFamiliale_Code.ConcubinageDontSepareDeFait:
                            _ = match_arg_725.value
                            temp_eligibilite_allocation_logement_familiale_16 = False
                        def temp_eligibilite_allocation_logement_familiale_17(personne_a_charge_12:PersonneACharge):
                            match_arg_726 = personne_a_charge_12
                            if match_arg_726.code == PersonneACharge_Code.EnfantACharge:
                                enfant_13 = match_arg_726.value
                                match_arg_727 = enfant_13.situation_garde_alternee
                                if match_arg_727.code == SituationGardeAlternee_Code.PasDeGardeAlternee:
                                    _ = match_arg_727.value
                                    temp_eligibilite_allocation_logement_familiale_18 = PriseEnChargeEnfant(PriseEnChargeEnfant_Code.EffectiveEtPermanente,
                                        Unit())
                                elif match_arg_727.code == SituationGardeAlternee_Code.GardeAlterneeCoefficientPriseEnCharge:
                                    _ = match_arg_727.value
                                    temp_eligibilite_allocation_logement_familiale_18 = PriseEnChargeEnfant(PriseEnChargeEnfant_Code.GardeAlterneePartageAllocations,
                                        Unit())
                                return not prestations_familiales_dot_droit_ouvert_1(
                                    EnfantPrestationsFamiliales(identifiant = enfant_13.identifiant,
                                    obligation_scolaire = enfant_13.obligation_scolaire,
                                    remuneration_mensuelle = enfant_13.remuneration_mensuelle,
                                    date_de_naissance = enfant_13.date_de_naissance,
                                    prise_en_charge = temp_eligibilite_allocation_logement_familiale_18,
                                    a_deja_ouvert_droit_aux_allocations_familiales = enfant_13.a_deja_ouvert_droit_aux_allocations_familiales,
                                    beneficie_titre_personnel_aide_personnelle_logement = enfant_13.beneficie_titre_personnel_aide_personnelle_logement))
                            elif match_arg_726.code == PersonneACharge_Code.AutrePersonneACharge:
                                _ = match_arg_726.value
                                return False
                        if ((list_length(list_filter(temp_eligibilite_allocation_logement_familiale_17,
                            menage_2.personnes_a_charge)) ==
                            integer_of_string("0")) and
                            temp_eligibilite_allocation_logement_familiale_16):
                            temp_eligibilite_allocation_logement_familiale_13 = True
                        else:
                            temp_eligibilite_allocation_logement_familiale_13 = dead_value
                            raise EmptyError
                except EmptyError:
                    def temp_eligibilite_allocation_logement_familiale_19(personne_a_charge_13:PersonneACharge):
                        match_arg_728 = personne_a_charge_13
                        if match_arg_728.code == PersonneACharge_Code.EnfantACharge:
                            enfant_14 = match_arg_728.value
                            match_arg_729 = enfant_14.situation_garde_alternee
                            if match_arg_729.code == SituationGardeAlternee_Code.PasDeGardeAlternee:
                                _ = match_arg_729.value
                                temp_eligibilite_allocation_logement_familiale_20 = PriseEnChargeEnfant(PriseEnChargeEnfant_Code.EffectiveEtPermanente,
                                    Unit())
                            elif match_arg_729.code == SituationGardeAlternee_Code.GardeAlterneeCoefficientPriseEnCharge:
                                _ = match_arg_729.value
                                temp_eligibilite_allocation_logement_familiale_20 = PriseEnChargeEnfant(PriseEnChargeEnfant_Code.GardeAlterneePartageAllocations,
                                    Unit())
                            return prestations_familiales_dot_droit_ouvert_1(
                                EnfantPrestationsFamiliales(identifiant = enfant_14.identifiant,
                                obligation_scolaire = enfant_14.obligation_scolaire,
                                remuneration_mensuelle = enfant_14.remuneration_mensuelle,
                                date_de_naissance = enfant_14.date_de_naissance,
                                prise_en_charge = temp_eligibilite_allocation_logement_familiale_20,
                                a_deja_ouvert_droit_aux_allocations_familiales = enfant_14.a_deja_ouvert_droit_aux_allocations_familiales,
                                beneficie_titre_personnel_aide_personnelle_logement = enfant_14.beneficie_titre_personnel_aide_personnelle_logement))
                        elif match_arg_728.code == PersonneACharge_Code.AutrePersonneACharge:
                            _ = match_arg_728.value
                            return False
                    if (l_841_1_2_applicable and
                        (list_length(list_filter(temp_eligibilite_allocation_logement_familiale_19,
                        menage_2.personnes_a_charge)) ==
                        integer_of_string("1"))):
                        temp_eligibilite_allocation_logement_familiale_13 = True
                    else:
                        temp_eligibilite_allocation_logement_familiale_13 = dead_value
                        raise EmptyError
            except EmptyError:
                def temp_eligibilite_allocation_logement_familiale_21(acc_2:bool, prestation_1:PrestationRecue):
                    return (acc_2 or ((prestation_1 ==
                        PrestationRecue(PrestationRecue_Code.AllocationsFamiliales,
                        Unit())) or ((prestation_1 ==
                        PrestationRecue(PrestationRecue_Code.ComplementFamilial,
                        Unit())) or ((prestation_1 ==
                        PrestationRecue(PrestationRecue_Code.AllocationSoutienFamilial,
                        Unit())) or (prestation_1 ==
                        PrestationRecue(PrestationRecue_Code.AllocationSoutienEnfantHandicape,
                        Unit()))))))
                if (l_841_1_1_applicable and
                    list_fold_left(temp_eligibilite_allocation_logement_familiale_21,
                                   False, menage_2.prestations_recues)):
                    temp_eligibilite_allocation_logement_familiale_13 = True
                else:
                    temp_eligibilite_allocation_logement_familiale_13 = dead_value
                    raise EmptyError
        except EmptyError:
            temp_eligibilite_allocation_logement_familiale_13 = False
    except EmptyError:
        temp_eligibilite_allocation_logement_familiale_13 = dead_value
        raise NoValueProvided(SourcePosition(filename="examples/aides_logement/prologue.catala_fr",
                                             start_line=442, start_column=11,
                                             end_line=442, end_column=52,
                                             law_headings=["Éligibilité aux allocations de logement",
                                             "Déclarations des champs d'application",
                                             "Prologue : aides au logement"]))
    eligibilite_allocation_logement_familiale = temp_eligibilite_allocation_logement_familiale_13
    try:
        try:
            def temp_eligibilite_l841_2(_:Unit):
                return TypeEligibiliteAllocationLogement(TypeEligibiliteAllocationLogement_Code.PasEligible,
                    Unit())
            def temp_eligibilite_l841_2_1(_:Unit):
                match_arg_730 = menage_2.logement.mode_occupation
                if match_arg_730.code == ModeOccupation_Code.Locataire:
                    _ = match_arg_730.value
                    temp_eligibilite_l841_2_2 = False
                elif match_arg_730.code == ModeOccupation_Code.ResidentLogementFoyer:
                    _ = match_arg_730.value
                    temp_eligibilite_l841_2_2 = False
                elif match_arg_730.code == ModeOccupation_Code.AccessionProprieteLocalUsageExclusifHabitation:
                    proprietaire_9 = match_arg_730.value
                    temp_eligibilite_l841_2_2 = (proprietaire_9.pret.date_signature >
                        date_of_numbers(2017,12,31))
                elif match_arg_730.code == ModeOccupation_Code.SousLocataire:
                    _ = match_arg_730.value
                    temp_eligibilite_l841_2_2 = False
                elif match_arg_730.code == ModeOccupation_Code.LocationAccession:
                    _ = match_arg_730.value
                    temp_eligibilite_l841_2_2 = False
                return temp_eligibilite_l841_2_2
            def temp_eligibilite_l841_2_3(_:Unit):
                if demandeur_2.personne_hebergee_centre_soin_l_L162_22_3_securite_sociale:
                    return TypeEligibiliteAllocationLogement(TypeEligibiliteAllocationLogement_Code.AllocationLogementSociale,
                        Unit())
                else:
                    raise EmptyError
            def temp_eligibilite_l841_2_4(_:Unit):
                try:
                    match_arg_731 = menage_2.residence
                    if match_arg_731.code == Collectivite_Code.Guadeloupe:
                        _ = match_arg_731.value
                        temp_eligibilite_l841_2_5 = False
                    elif match_arg_731.code == Collectivite_Code.Guyane:
                        _ = match_arg_731.value
                        temp_eligibilite_l841_2_5 = False
                    elif match_arg_731.code == Collectivite_Code.Martinique:
                        _ = match_arg_731.value
                        temp_eligibilite_l841_2_5 = False
                    elif match_arg_731.code == Collectivite_Code.LaReunion:
                        _ = match_arg_731.value
                        temp_eligibilite_l841_2_5 = False
                    elif match_arg_731.code == Collectivite_Code.SaintBarthelemy:
                        _ = match_arg_731.value
                        temp_eligibilite_l841_2_5 = False
                    elif match_arg_731.code == Collectivite_Code.SaintMartin:
                        _ = match_arg_731.value
                        temp_eligibilite_l841_2_5 = False
                    elif match_arg_731.code == Collectivite_Code.Metropole:
                        _ = match_arg_731.value
                        temp_eligibilite_l841_2_5 = False
                    elif match_arg_731.code == Collectivite_Code.SaintPierreEtMiquelon:
                        _ = match_arg_731.value
                        temp_eligibilite_l841_2_5 = False
                    elif match_arg_731.code == Collectivite_Code.Mayotte:
                        _ = match_arg_731.value
                        temp_eligibilite_l841_2_5 = True
                    if (temp_eligibilite_l841_2_5 and
                        demandeur_2.magistrat_fonctionnaire_centre_interets_materiels_familiaux_hors_mayotte):
                        return TypeEligibiliteAllocationLogement(TypeEligibiliteAllocationLogement_Code.PasEligible,
                            Unit())
                    else:
                        raise EmptyError
                except EmptyError:
                    match_arg_732 = menage_2.logement.mode_occupation
                    if match_arg_732.code == ModeOccupation_Code.Locataire:
                        _ = match_arg_732.value
                        temp_eligibilite_l841_2_6 = False
                    elif match_arg_732.code == ModeOccupation_Code.ResidentLogementFoyer:
                        _ = match_arg_732.value
                        temp_eligibilite_l841_2_6 = False
                    elif match_arg_732.code == ModeOccupation_Code.AccessionProprieteLocalUsageExclusifHabitation:
                        proprietaire_10 = match_arg_732.value
                        match_arg_733 = proprietaire_10.pret.accord_financement_representant_Etat_outre_mer
                        if match_arg_733.code == AccordFinancementRepresentantEtatOutreMer_Code.Accord:
                            date_accord = match_arg_733.value
                            temp_eligibilite_l841_2_7 = (date_accord <=
                                date_of_numbers(2018,12,31))
                        elif match_arg_733.code == AccordFinancementRepresentantEtatOutreMer_Code.PasdAccord:
                            _ = match_arg_733.value
                            temp_eligibilite_l841_2_7 = False
                        temp_eligibilite_l841_2_6 = ((proprietaire_10.pret.date_signature >
                            date_of_numbers(2017,12,31)) or
                            ((proprietaire_10.pret.date_signature >
                            date_of_numbers(2019,12,31)) and
                            temp_eligibilite_l841_2_7))
                    elif match_arg_732.code == ModeOccupation_Code.SousLocataire:
                        _ = match_arg_732.value
                        temp_eligibilite_l841_2_6 = False
                    elif match_arg_732.code == ModeOccupation_Code.LocationAccession:
                        _ = match_arg_732.value
                        temp_eligibilite_l841_2_6 = False
                    match_arg_734 = menage_2.residence
                    if match_arg_734.code == Collectivite_Code.Guadeloupe:
                        _ = match_arg_734.value
                        temp_eligibilite_l841_2_8 = True
                    elif match_arg_734.code == Collectivite_Code.Guyane:
                        _ = match_arg_734.value
                        temp_eligibilite_l841_2_8 = True
                    elif match_arg_734.code == Collectivite_Code.Martinique:
                        _ = match_arg_734.value
                        temp_eligibilite_l841_2_8 = True
                    elif match_arg_734.code == Collectivite_Code.LaReunion:
                        _ = match_arg_734.value
                        temp_eligibilite_l841_2_8 = True
                    elif match_arg_734.code == Collectivite_Code.SaintBarthelemy:
                        _ = match_arg_734.value
                        temp_eligibilite_l841_2_8 = False
                    elif match_arg_734.code == Collectivite_Code.SaintMartin:
                        _ = match_arg_734.value
                        temp_eligibilite_l841_2_8 = False
                    elif match_arg_734.code == Collectivite_Code.Metropole:
                        _ = match_arg_734.value
                        temp_eligibilite_l841_2_8 = False
                    elif match_arg_734.code == Collectivite_Code.SaintPierreEtMiquelon:
                        _ = match_arg_734.value
                        temp_eligibilite_l841_2_8 = False
                    elif match_arg_734.code == Collectivite_Code.Mayotte:
                        _ = match_arg_734.value
                        temp_eligibilite_l841_2_8 = True
                    if (temp_eligibilite_l841_2_8 and
                        temp_eligibilite_l841_2_6):
                        return TypeEligibiliteAllocationLogement(TypeEligibiliteAllocationLogement_Code.PasEligible,
                            Unit())
                    else:
                        raise EmptyError
            temp_eligibilite_l841_2_9 = handle_default(SourcePosition(filename="examples/aides_logement/prologue.catala_fr",
                                                       start_line=451,
                                                       start_column=10,
                                                       end_line=451, end_column=16,
                                                       law_headings=["Éligibilité aux allocations de logement",
                                                       "Déclarations des champs d'application",
                                                       "Prologue : aides au logement"]), [temp_eligibilite_l841_2_4,
                                                       temp_eligibilite_l841_2_3],
                                                       temp_eligibilite_l841_2_1,
                                                       temp_eligibilite_l841_2)
        except EmptyError:
            if ((eligibilite_dispositions_communes ==
                TypeEligibiliteAllocationLogement(TypeEligibiliteAllocationLogement_Code.PasEligible,
                Unit())) or
                beneficie_aide_personnalisee_logement):
                temp_eligibilite_l841_2_9 = TypeEligibiliteAllocationLogement(TypeEligibiliteAllocationLogement_Code.PasEligible,
                    Unit())
            else:
                if eligibilite_allocation_logement_familiale:
                    temp_eligibilite_l841_2_9 = TypeEligibiliteAllocationLogement(TypeEligibiliteAllocationLogement_Code.AllocationLogementFamiliale,
                        Unit())
                else:
                    temp_eligibilite_l841_2_9 = TypeEligibiliteAllocationLogement(TypeEligibiliteAllocationLogement_Code.AllocationLogementSociale,
                        Unit())
    except EmptyError:
        temp_eligibilite_l841_2_9 = dead_value
        raise NoValueProvided(SourcePosition(filename="examples/aides_logement/prologue.catala_fr",
                                             start_line=451, start_column=10,
                                             end_line=451, end_column=16,
                                             law_headings=["Éligibilité aux allocations de logement",
                                             "Déclarations des champs d'application",
                                             "Prologue : aides au logement"]))
    eligibilite_l841_2 = temp_eligibilite_l841_2_9
    return EligibiliteAllocationLogement(eligibilite = eligibilite_l841_2,
        nombre_personnes_a_charge_prises_en_compte = nombre_personnes_a_charge_prises_en_compte_1,
        coefficents_enfants_garde_alternee_pris_en_compte = coefficents_enfants_garde_alternee_pris_en_compte_1)

def eligibilite_aide_personnalisee_logement(eligibilite_aide_personnalisee_logement_in:EligibiliteAidePersonnaliseeLogementIn):
    menage_3 = eligibilite_aide_personnalisee_logement_in.menage_in
    demandeur_3 = eligibilite_aide_personnalisee_logement_in.demandeur_in
    date_courante_19 = eligibilite_aide_personnalisee_logement_in.date_courante_in
    try:
        def temp_caracteristiques_pret_l831_1_1(pret_1:Pret):
            try:
                try:
                    try:
                        match_arg_735 = pret_1.type_pret
                        if match_arg_735.code == TypePret_Code.D331_32:
                            _ = match_arg_735.value
                            temp_caracteristiques_pret_l831_1_1_1 = False
                        elif match_arg_735.code == TypePret_Code.D331_63_64:
                            _ = match_arg_735.value
                            temp_caracteristiques_pret_l831_1_1_1 = False
                        elif match_arg_735.code == TypePret_Code.D331_59_8:
                            _ = match_arg_735.value
                            temp_caracteristiques_pret_l831_1_1_1 = False
                        elif match_arg_735.code == TypePret_Code.D331_76_1:
                            _ = match_arg_735.value
                            temp_caracteristiques_pret_l831_1_1_1 = True
                        elif match_arg_735.code == TypePret_Code.Autre:
                            _ = match_arg_735.value
                            temp_caracteristiques_pret_l831_1_1_1 = False
                        match_arg_736 = pret_1.type_pret
                        if match_arg_736.code == TypePret_Code.D331_32:
                            _ = match_arg_736.value
                            temp_caracteristiques_pret_l831_1_1_2 = False
                        elif match_arg_736.code == TypePret_Code.D331_63_64:
                            _ = match_arg_736.value
                            temp_caracteristiques_pret_l831_1_1_2 = False
                        elif match_arg_736.code == TypePret_Code.D331_59_8:
                            _ = match_arg_736.value
                            temp_caracteristiques_pret_l831_1_1_2 = True
                        elif match_arg_736.code == TypePret_Code.D331_76_1:
                            _ = match_arg_736.value
                            temp_caracteristiques_pret_l831_1_1_2 = False
                        elif match_arg_736.code == TypePret_Code.Autre:
                            _ = match_arg_736.value
                            temp_caracteristiques_pret_l831_1_1_2 = False
                        match_arg_737 = pret_1.titulaire_pret
                        if match_arg_737.code == TitulairePret_Code.Demandeur:
                            _ = match_arg_737.value
                            temp_caracteristiques_pret_l831_1_1_3 = False
                        elif match_arg_737.code == TitulairePret_Code.VendeurQuandDemandeurAContratLocationAccession:
                            _ = match_arg_737.value
                            temp_caracteristiques_pret_l831_1_1_3 = True
                        if (temp_caracteristiques_pret_l831_1_1_3 and
                            (temp_caracteristiques_pret_l831_1_1_2 or
                            temp_caracteristiques_pret_l831_1_1_1)):
                            return True
                        else:
                            raise EmptyError
                    except EmptyError:
                        match_arg_738 = pret_1.type_pret
                        if match_arg_738.code == TypePret_Code.D331_32:
                            _ = match_arg_738.value
                            temp_caracteristiques_pret_l831_1_1_4 = False
                        elif match_arg_738.code == TypePret_Code.D331_63_64:
                            _ = match_arg_738.value
                            temp_caracteristiques_pret_l831_1_1_4 = True
                        elif match_arg_738.code == TypePret_Code.D331_59_8:
                            _ = match_arg_738.value
                            temp_caracteristiques_pret_l831_1_1_4 = False
                        elif match_arg_738.code == TypePret_Code.D331_76_1:
                            _ = match_arg_738.value
                            temp_caracteristiques_pret_l831_1_1_4 = False
                        elif match_arg_738.code == TypePret_Code.Autre:
                            _ = match_arg_738.value
                            temp_caracteristiques_pret_l831_1_1_4 = False
                        match_arg_739 = pret_1.type_pret
                        if match_arg_739.code == TypePret_Code.D331_32:
                            _ = match_arg_739.value
                            temp_caracteristiques_pret_l831_1_1_5 = True
                        elif match_arg_739.code == TypePret_Code.D331_63_64:
                            _ = match_arg_739.value
                            temp_caracteristiques_pret_l831_1_1_5 = False
                        elif match_arg_739.code == TypePret_Code.D331_59_8:
                            _ = match_arg_739.value
                            temp_caracteristiques_pret_l831_1_1_5 = False
                        elif match_arg_739.code == TypePret_Code.D331_76_1:
                            _ = match_arg_739.value
                            temp_caracteristiques_pret_l831_1_1_5 = False
                        elif match_arg_739.code == TypePret_Code.Autre:
                            _ = match_arg_739.value
                            temp_caracteristiques_pret_l831_1_1_5 = False
                        match_arg_740 = pret_1.titulaire_pret
                        if match_arg_740.code == TitulairePret_Code.Demandeur:
                            _ = match_arg_740.value
                            temp_caracteristiques_pret_l831_1_1_6 = True
                        elif match_arg_740.code == TitulairePret_Code.VendeurQuandDemandeurAContratLocationAccession:
                            _ = match_arg_740.value
                            temp_caracteristiques_pret_l831_1_1_6 = False
                        if (temp_caracteristiques_pret_l831_1_1_6 and
                            (temp_caracteristiques_pret_l831_1_1_5 or
                            temp_caracteristiques_pret_l831_1_1_4)):
                            return True
                        else:
                            raise EmptyError
                except EmptyError:
                    return False
            except EmptyError:
                raise NoValueProvided(SourcePosition(filename="examples/aides_logement/prologue.catala_fr",
                                                     start_line=397,
                                                     start_column=11,
                                                     end_line=397,
                                                     end_column=41,
                                                     law_headings=["Éligibilité à l'aide personnalisée au logement",
                                                     "Déclarations des champs d'application",
                                                     "Prologue : aides au logement"]))
    except EmptyError:
        temp_caracteristiques_pret_l831_1_1 = dead_value
        raise NoValueProvided(SourcePosition(filename="examples/aides_logement/prologue.catala_fr",
                                             start_line=397, start_column=11,
                                             end_line=397, end_column=41,
                                             law_headings=["Éligibilité à l'aide personnalisée au logement",
                                             "Déclarations des champs d'application",
                                             "Prologue : aides au logement"]))
    caracteristiques_pret_l831_1_1 = temp_caracteristiques_pret_l831_1_1
    try:
        def temp_caracteristiques_pret_l831_1_6(pret_2:Pret):
            try:
                return False
            except EmptyError:
                raise NoValueProvided(SourcePosition(filename="examples/aides_logement/prologue.catala_fr",
                                                     start_line=398,
                                                     start_column=11,
                                                     end_line=398,
                                                     end_column=41,
                                                     law_headings=["Éligibilité à l'aide personnalisée au logement",
                                                     "Déclarations des champs d'application",
                                                     "Prologue : aides au logement"]))
    except EmptyError:
        temp_caracteristiques_pret_l831_1_6 = dead_value
        raise NoValueProvided(SourcePosition(filename="examples/aides_logement/prologue.catala_fr",
                                             start_line=398, start_column=11,
                                             end_line=398, end_column=41,
                                             law_headings=["Éligibilité à l'aide personnalisée au logement",
                                             "Déclarations des champs d'application",
                                             "Prologue : aides au logement"]))
    caracteristiques_pret_l831_1_6 = temp_caracteristiques_pret_l831_1_6
    try:
        temp_eligibilite_commune_dot_menage_1 = menage_3
    except EmptyError:
        temp_eligibilite_commune_dot_menage_1 = dead_value
        raise NoValueProvided(SourcePosition(filename="examples/aides_logement/prologue.catala_fr",
                                             start_line=409, start_column=14,
                                             end_line=409, end_column=40,
                                             law_headings=["Éligibilité à l'aide personnalisée au logement",
                                             "Déclarations des champs d'application",
                                             "Prologue : aides au logement"]))
    eligibilite_commune_dot_menage_1 = temp_eligibilite_commune_dot_menage_1
    try:
        temp_eligibilite_commune_dot_demandeur_1 = demandeur_3
    except EmptyError:
        temp_eligibilite_commune_dot_demandeur_1 = dead_value
        raise NoValueProvided(SourcePosition(filename="examples/aides_logement/prologue.catala_fr",
                                             start_line=410, start_column=14,
                                             end_line=410, end_column=43,
                                             law_headings=["Éligibilité à l'aide personnalisée au logement",
                                             "Déclarations des champs d'application",
                                             "Prologue : aides au logement"]))
    eligibilite_commune_dot_demandeur_1 = temp_eligibilite_commune_dot_demandeur_1
    try:
        temp_eligibilite_commune_dot_date_courante_1 = date_courante_19
    except EmptyError:
        temp_eligibilite_commune_dot_date_courante_1 = dead_value
        raise NoValueProvided(SourcePosition(filename="examples/aides_logement/prologue.catala_fr",
                                             start_line=411, start_column=14,
                                             end_line=411, end_column=47,
                                             law_headings=["Éligibilité à l'aide personnalisée au logement",
                                             "Déclarations des champs d'application",
                                             "Prologue : aides au logement"]))
    eligibilite_commune_dot_date_courante_2 = temp_eligibilite_commune_dot_date_courante_1
    def temp_eligibilite_commune_dot_condition_logement_residence_principale_3(_:Unit):
        temp_eligibilite_commune_dot_condition_logement_residence_principale_4 = dead_value
        raise EmptyError
        return temp_eligibilite_commune_dot_condition_logement_residence_principale_4
    eligibilite_commune_dot_condition_logement_residence_principale_1 = temp_eligibilite_commune_dot_condition_logement_residence_principale_3
    def temp_eligibilite_commune_dot_condition_logement_surface_3(_:Unit):
        temp_eligibilite_commune_dot_condition_logement_surface_4 = dead_value
        raise EmptyError
        return temp_eligibilite_commune_dot_condition_logement_surface_4
    eligibilite_commune_dot_condition_logement_surface_1 = temp_eligibilite_commune_dot_condition_logement_surface_3
    def temp_eligibilite_commune_dot_date_entree_vigueur_differee_cch_2(_:Unit):
        match_arg_741 = menage_3.logement.mode_occupation
        if match_arg_741.code == ModeOccupation_Code.Locataire:
            _ = match_arg_741.value
            temp_eligibilite_commune_dot_date_entree_vigueur_differee_cch_3 = False
        elif match_arg_741.code == ModeOccupation_Code.ResidentLogementFoyer:
            _ = match_arg_741.value
            temp_eligibilite_commune_dot_date_entree_vigueur_differee_cch_3 = False
        elif match_arg_741.code == ModeOccupation_Code.AccessionProprieteLocalUsageExclusifHabitation:
            _ = match_arg_741.value
            temp_eligibilite_commune_dot_date_entree_vigueur_differee_cch_3 = True
        elif match_arg_741.code == ModeOccupation_Code.SousLocataire:
            _ = match_arg_741.value
            temp_eligibilite_commune_dot_date_entree_vigueur_differee_cch_3 = False
        elif match_arg_741.code == ModeOccupation_Code.LocationAccession:
            _ = match_arg_741.value
            temp_eligibilite_commune_dot_date_entree_vigueur_differee_cch_3 = False
        if temp_eligibilite_commune_dot_date_entree_vigueur_differee_cch_3:
            temp_eligibilite_commune_dot_date_entree_vigueur_differee_cch_4 = date_of_numbers(2021,5,1)
        else:
            temp_eligibilite_commune_dot_date_entree_vigueur_differee_cch_4 = dead_value
            raise EmptyError
        return temp_eligibilite_commune_dot_date_entree_vigueur_differee_cch_4
    eligibilite_commune_dot_date_entree_vigueur_differee_cch_1 = temp_eligibilite_commune_dot_date_entree_vigueur_differee_cch_2
    result_24 = eligibilite_aides_personnelle_logement(EligibiliteAidesPersonnelleLogementIn(menage_in = eligibilite_commune_dot_menage_1,
                                                       demandeur_in = eligibilite_commune_dot_demandeur_1,
                                                       date_courante_in = eligibilite_commune_dot_date_courante_2,
                                                       condition_logement_residence_principale_in = eligibilite_commune_dot_condition_logement_residence_principale_1,
                                                       condition_logement_surface_in = eligibilite_commune_dot_condition_logement_surface_1,
                                                       date_entree_vigueur_differee_cch_in = eligibilite_commune_dot_date_entree_vigueur_differee_cch_1))
    eligibilite_commune_dot_date_courante_3 = result_24.date_courante
    eligibilite_commune_dot_eligibilite_1 = result_24.eligibilite
    eligibilite_commune_dot_nombre_personnes_a_charge_prises_en_compte_1 = result_24.nombre_personnes_a_charge_prises_en_compte
    eligibilite_commune_dot_coefficents_enfants_garde_alternee_pris_en_compte_1 = result_24.coefficents_enfants_garde_alternee_pris_en_compte
    eligibilite_commune_dot_condition_2_r823_4_1 = result_24.condition_2_r823_4
    try:
        try:
            match_arg_742 = menage_3.logement.zone
            if match_arg_742.code == ZoneDHabitation_Code.Zone1:
                _ = match_arg_742.value
                temp_logement_situe_commune_desequilibre_l831_2 = False
            elif match_arg_742.code == ZoneDHabitation_Code.Zone2:
                _ = match_arg_742.value
                temp_logement_situe_commune_desequilibre_l831_2 = False
            elif match_arg_742.code == ZoneDHabitation_Code.Zone3:
                _ = match_arg_742.value
                temp_logement_situe_commune_desequilibre_l831_2 = True
            if ((date_courante_19 >= date_of_numbers(2019,10,1)) and
                temp_logement_situe_commune_desequilibre_l831_2):
                temp_logement_situe_commune_desequilibre_l831_2_1 = True
            else:
                temp_logement_situe_commune_desequilibre_l831_2_1 = dead_value
                raise EmptyError
        except EmptyError:
            temp_logement_situe_commune_desequilibre_l831_2_1 = False
    except EmptyError:
        temp_logement_situe_commune_desequilibre_l831_2_1 = dead_value
        raise NoValueProvided(SourcePosition(filename="examples/aides_logement/prologue.catala_fr",
                                             start_line=394, start_column=11,
                                             end_line=394, end_column=53,
                                             law_headings=["Éligibilité à l'aide personnalisée au logement",
                                             "Déclarations des champs d'application",
                                             "Prologue : aides au logement"]))
    logement_situe_commune_desequilibre_l831_2 = temp_logement_situe_commune_desequilibre_l831_2_1
    try:
        def temp_condition_logement_bailleur(_:Unit):
            return False
        def temp_condition_logement_bailleur_1(_:Unit):
            return True
        def temp_condition_logement_bailleur_2(_:Unit):
            try:
                try:
                    try:
                        match_arg_743 = menage_3.logement.mode_occupation
                        if match_arg_743.code == ModeOccupation_Code.Locataire:
                            _ = match_arg_743.value
                            temp_condition_logement_bailleur_3 = False
                        elif match_arg_743.code == ModeOccupation_Code.ResidentLogementFoyer:
                            logement_foyer_2 = match_arg_743.value
                            temp_condition_logement_bailleur_3 = logement_foyer_2.remplit_conditions_r832_21
                        elif match_arg_743.code == ModeOccupation_Code.AccessionProprieteLocalUsageExclusifHabitation:
                            _ = match_arg_743.value
                            temp_condition_logement_bailleur_3 = False
                        elif match_arg_743.code == ModeOccupation_Code.SousLocataire:
                            _ = match_arg_743.value
                            temp_condition_logement_bailleur_3 = False
                        elif match_arg_743.code == ModeOccupation_Code.LocationAccession:
                            _ = match_arg_743.value
                            temp_condition_logement_bailleur_3 = False
                        if temp_condition_logement_bailleur_3:
                            return True
                        else:
                            raise EmptyError
                    except EmptyError:
                        match_arg_744 = menage_3.logement.mode_occupation
                        if match_arg_744.code == ModeOccupation_Code.Locataire:
                            _ = match_arg_744.value
                            temp_condition_logement_bailleur_4 = False
                        elif match_arg_744.code == ModeOccupation_Code.ResidentLogementFoyer:
                            _ = match_arg_744.value
                            temp_condition_logement_bailleur_4 = False
                        elif match_arg_744.code == ModeOccupation_Code.AccessionProprieteLocalUsageExclusifHabitation:
                            _ = match_arg_744.value
                            temp_condition_logement_bailleur_4 = False
                        elif match_arg_744.code == ModeOccupation_Code.SousLocataire:
                            _ = match_arg_744.value
                            temp_condition_logement_bailleur_4 = False
                        elif match_arg_744.code == ModeOccupation_Code.LocationAccession:
                            propriete = match_arg_744.value
                            temp_condition_logement_bailleur_4 = caracteristiques_pret_l831_1_6(
                                propriete.pret)
                        if temp_condition_logement_bailleur_4:
                            return True
                        else:
                            raise EmptyError
                except EmptyError:
                    match_arg_745 = menage_3.logement.mode_occupation
                    if match_arg_745.code == ModeOccupation_Code.Locataire:
                        location_6 = match_arg_745.value
                        match_arg_746 = location_6.bailleur
                        if match_arg_746.code == TypeBailleur_Code.BailleurSocial:
                            convention = match_arg_746.value
                            temp_condition_logement_bailleur_5 = convention.conventionne_livre_III_titre_V_chap_III
                        elif match_arg_746.code == TypeBailleur_Code.BailleurPriveAvecConventionnementSocial:
                            convention_1 = match_arg_746.value
                            temp_condition_logement_bailleur_5 = convention_1.conventionne_livre_III_titre_II_chap_I_sec_3
                        elif match_arg_746.code == TypeBailleur_Code.BailleurPrive:
                            _ = match_arg_746.value
                            temp_condition_logement_bailleur_5 = False
                    elif match_arg_745.code == ModeOccupation_Code.ResidentLogementFoyer:
                        _ = match_arg_745.value
                        temp_condition_logement_bailleur_5 = False
                    elif match_arg_745.code == ModeOccupation_Code.AccessionProprieteLocalUsageExclusifHabitation:
                        _ = match_arg_745.value
                        temp_condition_logement_bailleur_5 = False
                    elif match_arg_745.code == ModeOccupation_Code.SousLocataire:
                        _ = match_arg_745.value
                        temp_condition_logement_bailleur_5 = False
                    elif match_arg_745.code == ModeOccupation_Code.LocationAccession:
                        _ = match_arg_745.value
                        temp_condition_logement_bailleur_5 = False
                    if temp_condition_logement_bailleur_5:
                        return True
                    else:
                        raise EmptyError
            except EmptyError:
                match_arg_747 = menage_3.logement.mode_occupation
                if match_arg_747.code == ModeOccupation_Code.Locataire:
                    _ = match_arg_747.value
                    temp_condition_logement_bailleur_6 = False
                elif match_arg_747.code == ModeOccupation_Code.ResidentLogementFoyer:
                    _ = match_arg_747.value
                    temp_condition_logement_bailleur_6 = False
                elif match_arg_747.code == ModeOccupation_Code.AccessionProprieteLocalUsageExclusifHabitation:
                    propriete_1 = match_arg_747.value
                    temp_condition_logement_bailleur_6 = caracteristiques_pret_l831_1_1(
                        propriete_1.pret)
                elif match_arg_747.code == ModeOccupation_Code.SousLocataire:
                    _ = match_arg_747.value
                    temp_condition_logement_bailleur_6 = False
                elif match_arg_747.code == ModeOccupation_Code.LocationAccession:
                    _ = match_arg_747.value
                    temp_condition_logement_bailleur_6 = False
                if temp_condition_logement_bailleur_6:
                    return True
                else:
                    raise EmptyError
        def temp_condition_logement_bailleur_7(_:Unit):
            try:
                match_arg_748 = menage_3.logement.mode_occupation
                if match_arg_748.code == ModeOccupation_Code.Locataire:
                    _ = match_arg_748.value
                    temp_condition_logement_bailleur_8 = False
                elif match_arg_748.code == ModeOccupation_Code.ResidentLogementFoyer:
                    location_7 = match_arg_748.value
                    temp_condition_logement_bailleur_8 = location_7.conventionne_selon_regles_drom
                elif match_arg_748.code == ModeOccupation_Code.AccessionProprieteLocalUsageExclusifHabitation:
                    _ = match_arg_748.value
                    temp_condition_logement_bailleur_8 = False
                elif match_arg_748.code == ModeOccupation_Code.SousLocataire:
                    _ = match_arg_748.value
                    temp_condition_logement_bailleur_8 = False
                elif match_arg_748.code == ModeOccupation_Code.LocationAccession:
                    _ = match_arg_748.value
                    temp_condition_logement_bailleur_8 = False
                match_arg_749 = menage_3.residence
                if match_arg_749.code == Collectivite_Code.Guadeloupe:
                    _ = match_arg_749.value
                    temp_condition_logement_bailleur_9 = True
                elif match_arg_749.code == Collectivite_Code.Guyane:
                    _ = match_arg_749.value
                    temp_condition_logement_bailleur_9 = True
                elif match_arg_749.code == Collectivite_Code.Martinique:
                    _ = match_arg_749.value
                    temp_condition_logement_bailleur_9 = True
                elif match_arg_749.code == Collectivite_Code.LaReunion:
                    _ = match_arg_749.value
                    temp_condition_logement_bailleur_9 = True
                elif match_arg_749.code == Collectivite_Code.SaintBarthelemy:
                    _ = match_arg_749.value
                    temp_condition_logement_bailleur_9 = False
                elif match_arg_749.code == Collectivite_Code.SaintMartin:
                    _ = match_arg_749.value
                    temp_condition_logement_bailleur_9 = False
                elif match_arg_749.code == Collectivite_Code.Metropole:
                    _ = match_arg_749.value
                    temp_condition_logement_bailleur_9 = False
                elif match_arg_749.code == Collectivite_Code.SaintPierreEtMiquelon:
                    _ = match_arg_749.value
                    temp_condition_logement_bailleur_9 = False
                elif match_arg_749.code == Collectivite_Code.Mayotte:
                    _ = match_arg_749.value
                    temp_condition_logement_bailleur_9 = True
                if (temp_condition_logement_bailleur_9 and
                    temp_condition_logement_bailleur_8):
                    return True
                else:
                    raise EmptyError
            except EmptyError:
                match_arg_750 = menage_3.logement.mode_occupation
                if match_arg_750.code == ModeOccupation_Code.Locataire:
                    _ = match_arg_750.value
                    temp_condition_logement_bailleur_10 = False
                elif match_arg_750.code == ModeOccupation_Code.ResidentLogementFoyer:
                    location_8 = match_arg_750.value
                    temp_condition_logement_bailleur_10 = location_8.conventionne_livre_III_titre_V_chap_III
                elif match_arg_750.code == ModeOccupation_Code.AccessionProprieteLocalUsageExclusifHabitation:
                    _ = match_arg_750.value
                    temp_condition_logement_bailleur_10 = False
                elif match_arg_750.code == ModeOccupation_Code.SousLocataire:
                    _ = match_arg_750.value
                    temp_condition_logement_bailleur_10 = False
                elif match_arg_750.code == ModeOccupation_Code.LocationAccession:
                    _ = match_arg_750.value
                    temp_condition_logement_bailleur_10 = False
                if temp_condition_logement_bailleur_10:
                    return True
                else:
                    raise EmptyError
        temp_condition_logement_bailleur_11 = handle_default(SourcePosition(filename="examples/aides_logement/prologue.catala_fr",
                                                             start_line=395,
                                                             start_column=11,
                                                             end_line=395, end_column=38,
                                                             law_headings=["Éligibilité à l'aide personnalisée au logement",
                                                             "Déclarations des champs d'application",
                                                             "Prologue : aides au logement"]), [temp_condition_logement_bailleur_7,
                                                             temp_condition_logement_bailleur_2],
                                                             temp_condition_logement_bailleur_1,
                                                             temp_condition_logement_bailleur)
    except EmptyError:
        temp_condition_logement_bailleur_11 = dead_value
        raise NoValueProvided(SourcePosition(filename="examples/aides_logement/prologue.catala_fr",
                                             start_line=395, start_column=11,
                                             end_line=395, end_column=38,
                                             law_headings=["Éligibilité à l'aide personnalisée au logement",
                                             "Déclarations des champs d'application",
                                             "Prologue : aides au logement"]))
    condition_logement_bailleur = temp_condition_logement_bailleur_11
    try:
        temp_coefficents_enfants_garde_alternee_pris_en_compte_4 = eligibilite_commune_dot_coefficents_enfants_garde_alternee_pris_en_compte_1
    except EmptyError:
        temp_coefficents_enfants_garde_alternee_pris_en_compte_4 = dead_value
        raise NoValueProvided(SourcePosition(filename="examples/aides_logement/prologue.catala_fr",
                                             start_line=404, start_column=12,
                                             end_line=404, end_column=61,
                                             law_headings=["Éligibilité à l'aide personnalisée au logement",
                                             "Déclarations des champs d'application",
                                             "Prologue : aides au logement"]))
    coefficents_enfants_garde_alternee_pris_en_compte_2 = temp_coefficents_enfants_garde_alternee_pris_en_compte_4
    try:
        temp_nombre_personnes_a_charge_prises_en_compte_2 = eligibilite_commune_dot_nombre_personnes_a_charge_prises_en_compte_1
    except EmptyError:
        temp_nombre_personnes_a_charge_prises_en_compte_2 = dead_value
        raise NoValueProvided(SourcePosition(filename="examples/aides_logement/prologue.catala_fr",
                                             start_line=403, start_column=12,
                                             end_line=403, end_column=54,
                                             law_headings=["Éligibilité à l'aide personnalisée au logement",
                                             "Déclarations des champs d'application",
                                             "Prologue : aides au logement"]))
    nombre_personnes_a_charge_prises_en_compte_2 = temp_nombre_personnes_a_charge_prises_en_compte_2
    try:
        try:
            try:
                try:
                    match_arg_751 = menage_3.logement.mode_occupation
                    if match_arg_751.code == ModeOccupation_Code.Locataire:
                        _ = match_arg_751.value
                        temp_condition_logement_pret = False
                    elif match_arg_751.code == ModeOccupation_Code.ResidentLogementFoyer:
                        _ = match_arg_751.value
                        temp_condition_logement_pret = False
                    elif match_arg_751.code == ModeOccupation_Code.AccessionProprieteLocalUsageExclusifHabitation:
                        propriete_2 = match_arg_751.value
                        match_arg_752 = propriete_2.anciennete_logement
                        if match_arg_752.code == NeufOuAncien_Code.Neuf:
                            _ = match_arg_752.value
                            temp_condition_logement_pret_1 = False
                        elif match_arg_752.code == NeufOuAncien_Code.Ancien:
                            _ = match_arg_752.value
                            temp_condition_logement_pret_1 = True
                        temp_condition_logement_pret = ((propriete_2.pret.date_signature >=
                            date_of_numbers(2018,1,1)) and
                            ((propriete_2.pret.date_signature <
                            date_of_numbers(2020,1,1)) and
                            (temp_condition_logement_pret_1 and
                            logement_situe_commune_desequilibre_l831_2)))
                    elif match_arg_751.code == ModeOccupation_Code.SousLocataire:
                        _ = match_arg_751.value
                        temp_condition_logement_pret = False
                    elif match_arg_751.code == ModeOccupation_Code.LocationAccession:
                        propriete_3 = match_arg_751.value
                        match_arg_753 = propriete_3.anciennete_logement
                        if match_arg_753.code == NeufOuAncien_Code.Neuf:
                            _ = match_arg_753.value
                            temp_condition_logement_pret_2 = False
                        elif match_arg_753.code == NeufOuAncien_Code.Ancien:
                            _ = match_arg_753.value
                            temp_condition_logement_pret_2 = True
                        temp_condition_logement_pret = ((propriete_3.pret.date_signature >=
                            date_of_numbers(2018,1,1)) and
                            ((propriete_3.pret.date_signature <
                            date_of_numbers(2020,1,1)) and
                            (temp_condition_logement_pret_2 and
                            logement_situe_commune_desequilibre_l831_2)))
                    if temp_condition_logement_pret:
                        temp_condition_logement_pret_3 = True
                    else:
                        temp_condition_logement_pret_3 = dead_value
                        raise EmptyError
                except EmptyError:
                    match_arg_754 = menage_3.logement.mode_occupation
                    if match_arg_754.code == ModeOccupation_Code.Locataire:
                        _ = match_arg_754.value
                        temp_condition_logement_pret_4 = False
                    elif match_arg_754.code == ModeOccupation_Code.ResidentLogementFoyer:
                        _ = match_arg_754.value
                        temp_condition_logement_pret_4 = False
                    elif match_arg_754.code == ModeOccupation_Code.AccessionProprieteLocalUsageExclusifHabitation:
                        propriete_4 = match_arg_754.value
                        temp_condition_logement_pret_4 = (propriete_4.pret.date_signature >=
                            date_of_numbers(2017,12,31))
                    elif match_arg_754.code == ModeOccupation_Code.SousLocataire:
                        _ = match_arg_754.value
                        temp_condition_logement_pret_4 = False
                    elif match_arg_754.code == ModeOccupation_Code.LocationAccession:
                        propriete_5 = match_arg_754.value
                        temp_condition_logement_pret_4 = (propriete_5.pret.date_signature >=
                            date_of_numbers(2017,12,31))
                    if temp_condition_logement_pret_4:
                        temp_condition_logement_pret_3 = False
                    else:
                        temp_condition_logement_pret_3 = dead_value
                        raise EmptyError
            except EmptyError:
                temp_condition_logement_pret_3 = True
        except EmptyError:
            temp_condition_logement_pret_3 = False
    except EmptyError:
        temp_condition_logement_pret_3 = dead_value
        raise NoValueProvided(SourcePosition(filename="examples/aides_logement/prologue.catala_fr",
                                             start_line=396, start_column=11,
                                             end_line=396, end_column=34,
                                             law_headings=["Éligibilité à l'aide personnalisée au logement",
                                             "Déclarations des champs d'application",
                                             "Prologue : aides au logement"]))
    condition_logement_pret = temp_condition_logement_pret_3
    try:
        try:
            try:
                match_arg_755 = menage_3.residence
                if match_arg_755.code == Collectivite_Code.Guadeloupe:
                    _ = match_arg_755.value
                    temp_eligibilite_1 = False
                elif match_arg_755.code == Collectivite_Code.Guyane:
                    _ = match_arg_755.value
                    temp_eligibilite_1 = False
                elif match_arg_755.code == Collectivite_Code.Martinique:
                    _ = match_arg_755.value
                    temp_eligibilite_1 = False
                elif match_arg_755.code == Collectivite_Code.LaReunion:
                    _ = match_arg_755.value
                    temp_eligibilite_1 = False
                elif match_arg_755.code == Collectivite_Code.SaintBarthelemy:
                    _ = match_arg_755.value
                    temp_eligibilite_1 = False
                elif match_arg_755.code == Collectivite_Code.SaintMartin:
                    _ = match_arg_755.value
                    temp_eligibilite_1 = False
                elif match_arg_755.code == Collectivite_Code.Metropole:
                    _ = match_arg_755.value
                    temp_eligibilite_1 = False
                elif match_arg_755.code == Collectivite_Code.SaintPierreEtMiquelon:
                    _ = match_arg_755.value
                    temp_eligibilite_1 = True
                elif match_arg_755.code == Collectivite_Code.Mayotte:
                    _ = match_arg_755.value
                    temp_eligibilite_1 = False
                if ((date_courante_19 >= date_of_numbers(2021,1,1)) and
                    temp_eligibilite_1):
                    temp_eligibilite_2 = False
                else:
                    temp_eligibilite_2 = dead_value
                    raise EmptyError
            except EmptyError:
                if (condition_logement_bailleur and
                    (condition_logement_pret and
                    eligibilite_commune_dot_eligibilite_1)):
                    temp_eligibilite_2 = True
                else:
                    temp_eligibilite_2 = dead_value
                    raise EmptyError
        except EmptyError:
            temp_eligibilite_2 = False
    except EmptyError:
        temp_eligibilite_2 = dead_value
        raise NoValueProvided(SourcePosition(filename="examples/aides_logement/prologue.catala_fr",
                                             start_line=402, start_column=12,
                                             end_line=402, end_column=23,
                                             law_headings=["Éligibilité à l'aide personnalisée au logement",
                                             "Déclarations des champs d'application",
                                             "Prologue : aides au logement"]))
    eligibilite_1 = temp_eligibilite_2
    return EligibiliteAidePersonnaliseeLogement(date_courante = date_courante_19,
        eligibilite = eligibilite_1,
        nombre_personnes_a_charge_prises_en_compte = nombre_personnes_a_charge_prises_en_compte_2,
        coefficents_enfants_garde_alternee_pris_en_compte = coefficents_enfants_garde_alternee_pris_en_compte_2)

def calculette_aides_au_logement(calculette_aides_au_logement_in:CalculetteAidesAuLogementIn):
    menage_4 = calculette_aides_au_logement_in.menage_in
    demandeur_4 = calculette_aides_au_logement_in.demandeur_in
    date_courante_20 = calculette_aides_au_logement_in.date_courante_in
    ressources_menage_prises_en_compte = calculette_aides_au_logement_in.ressources_menage_prises_en_compte_in
    try:
        temp_eligibilite_allocation_logement_dot_date_courante = date_courante_20
    except EmptyError:
        temp_eligibilite_allocation_logement_dot_date_courante = dead_value
        raise NoValueProvided(SourcePosition(filename="examples/aides_logement/prologue.catala_fr",
                                             start_line=1190,
                                             start_column=14, end_line=1190,
                                             end_column=59,
                                             law_headings=["Calculette globale",
                                             "Prologue : aides au logement"]))
    eligibilite_allocation_logement_dot_date_courante = temp_eligibilite_allocation_logement_dot_date_courante
    try:
        temp_eligibilite_allocation_logement_dot_menage = menage_4
    except EmptyError:
        temp_eligibilite_allocation_logement_dot_menage = dead_value
        raise NoValueProvided(SourcePosition(filename="examples/aides_logement/prologue.catala_fr",
                                             start_line=1182,
                                             start_column=14, end_line=1182,
                                             end_column=52,
                                             law_headings=["Calculette globale",
                                             "Prologue : aides au logement"]))
    eligibilite_allocation_logement_dot_menage = temp_eligibilite_allocation_logement_dot_menage
    try:
        temp_eligibilite_allocation_logement_dot_demandeur = demandeur_4
    except EmptyError:
        temp_eligibilite_allocation_logement_dot_demandeur = dead_value
        raise NoValueProvided(SourcePosition(filename="examples/aides_logement/prologue.catala_fr",
                                             start_line=1186,
                                             start_column=14, end_line=1186,
                                             end_column=55,
                                             law_headings=["Calculette globale",
                                             "Prologue : aides au logement"]))
    eligibilite_allocation_logement_dot_demandeur = temp_eligibilite_allocation_logement_dot_demandeur
    try:
        temp_eligibilite_allocation_logement_dot_beneficie_aide_personnalisee_logement = False
    except EmptyError:
        temp_eligibilite_allocation_logement_dot_beneficie_aide_personnalisee_logement = dead_value
        raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_legislatif.catala_fr",
                                             start_line=1097, start_column=5,
                                             end_line=1097, end_column=74,
                                             law_headings=["Article L841-2",
                                             "Chapitre Ier : Champ d'application",
                                             "Titre IV : Allocations de logement",
                                             "Livre VIII : Aides personnelles au logement",
                                             "Partie législative",
                                             "Code de la construction et de l'habitation"]))
    eligibilite_allocation_logement_dot_beneficie_aide_personnalisee_logement = temp_eligibilite_allocation_logement_dot_beneficie_aide_personnalisee_logement
    result_25 = eligibilite_allocation_logement(EligibiliteAllocationLogementIn(date_courante_in = eligibilite_allocation_logement_dot_date_courante,
                                                menage_in = eligibilite_allocation_logement_dot_menage,
                                                demandeur_in = eligibilite_allocation_logement_dot_demandeur,
                                                beneficie_aide_personnalisee_logement_in = eligibilite_allocation_logement_dot_beneficie_aide_personnalisee_logement))
    eligibilite_allocation_logement_dot_eligibilite_l841_2 = result_25.eligibilite
    eligibilite_allocation_logement_dot_nombre_personnes_a_charge_prises_en_compte = result_25.nombre_personnes_a_charge_prises_en_compte
    eligibilite_allocation_logement_dot_coefficents_enfants_garde_alternee_pris_en_compte = result_25.coefficents_enfants_garde_alternee_pris_en_compte
    try:
        temp_eligibilite_aide_personnalisee_logement_dot_menage = menage_4
    except EmptyError:
        temp_eligibilite_aide_personnalisee_logement_dot_menage = dead_value
        raise NoValueProvided(SourcePosition(filename="examples/aides_logement/prologue.catala_fr",
                                             start_line=1180,
                                             start_column=14, end_line=1180,
                                             end_column=60,
                                             law_headings=["Calculette globale",
                                             "Prologue : aides au logement"]))
    eligibilite_aide_personnalisee_logement_dot_menage = temp_eligibilite_aide_personnalisee_logement_dot_menage
    try:
        temp_eligibilite_aide_personnalisee_logement_dot_demandeur = demandeur_4
    except EmptyError:
        temp_eligibilite_aide_personnalisee_logement_dot_demandeur = dead_value
        raise NoValueProvided(SourcePosition(filename="examples/aides_logement/prologue.catala_fr",
                                             start_line=1184,
                                             start_column=14, end_line=1184,
                                             end_column=63,
                                             law_headings=["Calculette globale",
                                             "Prologue : aides au logement"]))
    eligibilite_aide_personnalisee_logement_dot_demandeur = temp_eligibilite_aide_personnalisee_logement_dot_demandeur
    try:
        temp_eligibilite_aide_personnalisee_logement_dot_date_courante = date_courante_20
    except EmptyError:
        temp_eligibilite_aide_personnalisee_logement_dot_date_courante = dead_value
        raise NoValueProvided(SourcePosition(filename="examples/aides_logement/prologue.catala_fr",
                                             start_line=1188,
                                             start_column=14, end_line=1188,
                                             end_column=67,
                                             law_headings=["Calculette globale",
                                             "Prologue : aides au logement"]))
    eligibilite_aide_personnalisee_logement_dot_date_courante = temp_eligibilite_aide_personnalisee_logement_dot_date_courante
    result_26 = eligibilite_aide_personnalisee_logement(EligibiliteAidePersonnaliseeLogementIn(menage_in = eligibilite_aide_personnalisee_logement_dot_menage,
                                                        demandeur_in = eligibilite_aide_personnalisee_logement_dot_demandeur,
                                                        date_courante_in = eligibilite_aide_personnalisee_logement_dot_date_courante))
    eligibilite_aide_personnalisee_logement_dot_date_courante_1 = result_26.date_courante
    eligibilite_aide_personnalisee_logement_dot_eligibilite = result_26.eligibilite
    eligibilite_aide_personnalisee_logement_dot_nombre_personnes_a_charge_prises_en_compte = result_26.nombre_personnes_a_charge_prises_en_compte
    eligibilite_aide_personnalisee_logement_dot_coefficents_enfants_garde_alternee_pris_en_compte = result_26.coefficents_enfants_garde_alternee_pris_en_compte
    try:
        temp_calcul_allocation_logement_dot_mode_occupation = menage_4.logement.mode_occupation
    except EmptyError:
        temp_calcul_allocation_logement_dot_mode_occupation = dead_value
        raise NoValueProvided(SourcePosition(filename="examples/aides_logement/prologue.catala_fr",
                                             start_line=1194,
                                             start_column=14, end_line=1194,
                                             end_column=56,
                                             law_headings=["Calculette globale",
                                             "Prologue : aides au logement"]))
    calcul_allocation_logement_dot_mode_occupation = temp_calcul_allocation_logement_dot_mode_occupation
    try:
        temp_calcul_allocation_logement_dot_ressources_menage_sans_arrondi = ressources_menage_prises_en_compte
    except EmptyError:
        temp_calcul_allocation_logement_dot_ressources_menage_sans_arrondi = dead_value
        raise NoValueProvided(SourcePosition(filename="examples/aides_logement/prologue.catala_fr",
                                             start_line=1198,
                                             start_column=14, end_line=1198,
                                             end_column=58,
                                             law_headings=["Calculette globale",
                                             "Prologue : aides au logement"]))
    calcul_allocation_logement_dot_ressources_menage_sans_arrondi = temp_calcul_allocation_logement_dot_ressources_menage_sans_arrondi
    try:
        temp_calcul_allocation_logement_dot_situation_familiale = menage_4.situation_familiale
    except EmptyError:
        temp_calcul_allocation_logement_dot_situation_familiale = dead_value
        raise NoValueProvided(SourcePosition(filename="examples/aides_logement/prologue.catala_fr",
                                             start_line=1202,
                                             start_column=14, end_line=1202,
                                             end_column=60,
                                             law_headings=["Calculette globale",
                                             "Prologue : aides au logement"]))
    calcul_allocation_logement_dot_situation_familiale = temp_calcul_allocation_logement_dot_situation_familiale
    try:
        temp_calcul_allocation_logement_dot_nombre_personnes_a_charge = eligibilite_allocation_logement_dot_nombre_personnes_a_charge_prises_en_compte
    except EmptyError:
        temp_calcul_allocation_logement_dot_nombre_personnes_a_charge = dead_value
        raise NoValueProvided(SourcePosition(filename="examples/aides_logement/prologue.catala_fr",
                                             start_line=1209,
                                             start_column=14, end_line=1209,
                                             end_column=66,
                                             law_headings=["Calculette globale",
                                             "Prologue : aides au logement"]))
    calcul_allocation_logement_dot_nombre_personnes_a_charge = temp_calcul_allocation_logement_dot_nombre_personnes_a_charge
    try:
        temp_calcul_allocation_logement_dot_zone = menage_4.logement.zone
    except EmptyError:
        temp_calcul_allocation_logement_dot_zone = dead_value
        raise NoValueProvided(SourcePosition(filename="examples/aides_logement/prologue.catala_fr",
                                             start_line=1213,
                                             start_column=14, end_line=1213,
                                             end_column=45,
                                             law_headings=["Calculette globale",
                                             "Prologue : aides au logement"]))
    calcul_allocation_logement_dot_zone = temp_calcul_allocation_logement_dot_zone
    try:
        temp_calcul_allocation_logement_dot_date_courante = date_courante_20
    except EmptyError:
        temp_calcul_allocation_logement_dot_date_courante = dead_value
        raise NoValueProvided(SourcePosition(filename="examples/aides_logement/prologue.catala_fr",
                                             start_line=1217,
                                             start_column=14, end_line=1217,
                                             end_column=54,
                                             law_headings=["Calculette globale",
                                             "Prologue : aides au logement"]))
    calcul_allocation_logement_dot_date_courante = temp_calcul_allocation_logement_dot_date_courante
    try:
        match_arg_756 = eligibilite_allocation_logement_dot_eligibilite_l841_2
        if match_arg_756.code == TypeEligibiliteAllocationLogement_Code.PasEligible:
            _ = match_arg_756.value
            temp_calcul_allocation_logement_dot_type_aide = TypeAidesPersonnelleLogement(TypeAidesPersonnelleLogement_Code.AllocationLogementSociale,
                Unit())
        elif match_arg_756.code == TypeEligibiliteAllocationLogement_Code.AllocationLogementFamiliale:
            _ = match_arg_756.value
            temp_calcul_allocation_logement_dot_type_aide = TypeAidesPersonnelleLogement(TypeAidesPersonnelleLogement_Code.AllocationLogementFamiliale,
                Unit())
        elif match_arg_756.code == TypeEligibiliteAllocationLogement_Code.AllocationLogementSociale:
            _ = match_arg_756.value
            temp_calcul_allocation_logement_dot_type_aide = TypeAidesPersonnelleLogement(TypeAidesPersonnelleLogement_Code.AllocationLogementSociale,
                Unit())
        temp_calcul_allocation_logement_dot_type_aide_1 = temp_calcul_allocation_logement_dot_type_aide
    except EmptyError:
        temp_calcul_allocation_logement_dot_type_aide_1 = dead_value
        raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_legislatif.catala_fr",
                                             start_line=1113,
                                             start_column=14, end_line=1113,
                                             end_column=50,
                                             law_headings=["Article L841-2",
                                             "Chapitre Ier : Champ d'application",
                                             "Titre IV : Allocations de logement",
                                             "Livre VIII : Aides personnelles au logement",
                                             "Partie législative",
                                             "Code de la construction et de l'habitation"]))
    calcul_allocation_logement_dot_type_aide = temp_calcul_allocation_logement_dot_type_aide_1
    try:
        temp_calcul_allocation_logement_dot_residence = menage_4.residence
    except EmptyError:
        temp_calcul_allocation_logement_dot_residence = dead_value
        raise NoValueProvided(SourcePosition(filename="examples/aides_logement/prologue.catala_fr",
                                             start_line=1221,
                                             start_column=14, end_line=1221,
                                             end_column=50,
                                             law_headings=["Calculette globale",
                                             "Prologue : aides au logement"]))
    calcul_allocation_logement_dot_residence = temp_calcul_allocation_logement_dot_residence
    result_27 = calcul_allocation_logement(CalculAllocationLogementIn(mode_occupation_in = calcul_allocation_logement_dot_mode_occupation,
                                           ressources_menage_sans_arrondi_in = calcul_allocation_logement_dot_ressources_menage_sans_arrondi,
                                           situation_familiale_in = calcul_allocation_logement_dot_situation_familiale,
                                           nombre_personnes_a_charge_in = calcul_allocation_logement_dot_nombre_personnes_a_charge,
                                           zone_in = calcul_allocation_logement_dot_zone,
                                           date_courante_in = calcul_allocation_logement_dot_date_courante,
                                           type_aide_in = calcul_allocation_logement_dot_type_aide,
                                           residence_in = calcul_allocation_logement_dot_residence))
    calcul_allocation_logement_dot_aide_finale_formule = result_27.aide_finale_formule
    calcul_allocation_logement_dot_traitement_aide_finale = result_27.traitement_aide_finale
    try:
        temp_calcul_aide_personnalisee_logement_dot_mode_occupation = menage_4.logement.mode_occupation
    except EmptyError:
        temp_calcul_aide_personnalisee_logement_dot_mode_occupation = dead_value
        raise NoValueProvided(SourcePosition(filename="examples/aides_logement/prologue.catala_fr",
                                             start_line=1192,
                                             start_column=14, end_line=1192,
                                             end_column=64,
                                             law_headings=["Calculette globale",
                                             "Prologue : aides au logement"]))
    calcul_aide_personnalisee_logement_dot_mode_occupation = temp_calcul_aide_personnalisee_logement_dot_mode_occupation
    try:
        temp_calcul_aide_personnalisee_logement_dot_type_aide = TypeAidesPersonnelleLogement(TypeAidesPersonnelleLogement_Code.AidePersonnaliseeLogement,
            Unit())
    except EmptyError:
        temp_calcul_aide_personnalisee_logement_dot_type_aide = dead_value
        raise NoValueProvided(SourcePosition(filename="examples/aides_logement/code_construction_legislatif.catala_fr",
                                             start_line=1111,
                                             start_column=14, end_line=1111,
                                             end_column=58,
                                             law_headings=["Article L841-2",
                                             "Chapitre Ier : Champ d'application",
                                             "Titre IV : Allocations de logement",
                                             "Livre VIII : Aides personnelles au logement",
                                             "Partie législative",
                                             "Code de la construction et de l'habitation"]))
    calcul_aide_personnalisee_logement_dot_type_aide = temp_calcul_aide_personnalisee_logement_dot_type_aide
    try:
        temp_calcul_aide_personnalisee_logement_dot_ressources_menage_sans_arrondi = ressources_menage_prises_en_compte
    except EmptyError:
        temp_calcul_aide_personnalisee_logement_dot_ressources_menage_sans_arrondi = dead_value
        raise NoValueProvided(SourcePosition(filename="examples/aides_logement/prologue.catala_fr",
                                             start_line=1196,
                                             start_column=14, end_line=1196,
                                             end_column=66,
                                             law_headings=["Calculette globale",
                                             "Prologue : aides au logement"]))
    calcul_aide_personnalisee_logement_dot_ressources_menage_sans_arrondi = temp_calcul_aide_personnalisee_logement_dot_ressources_menage_sans_arrondi
    try:
        temp_calcul_aide_personnalisee_logement_dot_situation_familiale = menage_4.situation_familiale
    except EmptyError:
        temp_calcul_aide_personnalisee_logement_dot_situation_familiale = dead_value
        raise NoValueProvided(SourcePosition(filename="examples/aides_logement/prologue.catala_fr",
                                             start_line=1200,
                                             start_column=14, end_line=1200,
                                             end_column=68,
                                             law_headings=["Calculette globale",
                                             "Prologue : aides au logement"]))
    calcul_aide_personnalisee_logement_dot_situation_familiale = temp_calcul_aide_personnalisee_logement_dot_situation_familiale
    try:
        temp_calcul_aide_personnalisee_logement_dot_nombre_personnes_a_charge = eligibilite_aide_personnalisee_logement_dot_nombre_personnes_a_charge_prises_en_compte
    except EmptyError:
        temp_calcul_aide_personnalisee_logement_dot_nombre_personnes_a_charge = dead_value
        raise NoValueProvided(SourcePosition(filename="examples/aides_logement/prologue.catala_fr",
                                             start_line=1205, start_column=5,
                                             end_line=1205, end_column=65,
                                             law_headings=["Calculette globale",
                                             "Prologue : aides au logement"]))
    calcul_aide_personnalisee_logement_dot_nombre_personnes_a_charge = temp_calcul_aide_personnalisee_logement_dot_nombre_personnes_a_charge
    try:
        temp_calcul_aide_personnalisee_logement_dot_zone = menage_4.logement.zone
    except EmptyError:
        temp_calcul_aide_personnalisee_logement_dot_zone = dead_value
        raise NoValueProvided(SourcePosition(filename="examples/aides_logement/prologue.catala_fr",
                                             start_line=1211,
                                             start_column=14, end_line=1211,
                                             end_column=53,
                                             law_headings=["Calculette globale",
                                             "Prologue : aides au logement"]))
    calcul_aide_personnalisee_logement_dot_zone = temp_calcul_aide_personnalisee_logement_dot_zone
    try:
        temp_calcul_aide_personnalisee_logement_dot_date_courante = date_courante_20
    except EmptyError:
        temp_calcul_aide_personnalisee_logement_dot_date_courante = dead_value
        raise NoValueProvided(SourcePosition(filename="examples/aides_logement/prologue.catala_fr",
                                             start_line=1215,
                                             start_column=14, end_line=1215,
                                             end_column=62,
                                             law_headings=["Calculette globale",
                                             "Prologue : aides au logement"]))
    calcul_aide_personnalisee_logement_dot_date_courante = temp_calcul_aide_personnalisee_logement_dot_date_courante
    try:
        temp_calcul_aide_personnalisee_logement_dot_residence = menage_4.residence
    except EmptyError:
        temp_calcul_aide_personnalisee_logement_dot_residence = dead_value
        raise NoValueProvided(SourcePosition(filename="examples/aides_logement/prologue.catala_fr",
                                             start_line=1219,
                                             start_column=14, end_line=1219,
                                             end_column=58,
                                             law_headings=["Calculette globale",
                                             "Prologue : aides au logement"]))
    calcul_aide_personnalisee_logement_dot_residence = temp_calcul_aide_personnalisee_logement_dot_residence
    result_28 = calcul_aide_personnalisee_logement(CalculAidePersonnaliseeLogementIn(mode_occupation_in = calcul_aide_personnalisee_logement_dot_mode_occupation,
                                                   type_aide_in = calcul_aide_personnalisee_logement_dot_type_aide,
                                                   ressources_menage_sans_arrondi_in = calcul_aide_personnalisee_logement_dot_ressources_menage_sans_arrondi,
                                                   situation_familiale_in = calcul_aide_personnalisee_logement_dot_situation_familiale,
                                                   nombre_personnes_a_charge_in = calcul_aide_personnalisee_logement_dot_nombre_personnes_a_charge,
                                                   zone_in = calcul_aide_personnalisee_logement_dot_zone,
                                                   date_courante_in = calcul_aide_personnalisee_logement_dot_date_courante,
                                                   residence_in = calcul_aide_personnalisee_logement_dot_residence))
    calcul_aide_personnalisee_logement_dot_aide_finale_formule = result_28.aide_finale_formule
    calcul_aide_personnalisee_logement_dot_traitement_aide_finale = result_28.traitement_aide_finale
    try:
        temp_coefficents_enfants_garde_alternee_pris_en_compte_5 = eligibilite_aide_personnalisee_logement_dot_coefficents_enfants_garde_alternee_pris_en_compte
    except EmptyError:
        temp_coefficents_enfants_garde_alternee_pris_en_compte_5 = dead_value
        raise NoValueProvided(SourcePosition(filename="examples/aides_logement/prologue.catala_fr",
                                             start_line=1176,
                                             start_column=12, end_line=1176,
                                             end_column=61,
                                             law_headings=["Calculette globale",
                                             "Prologue : aides au logement"]))
    coefficents_enfants_garde_alternee_pris_en_compte_3 = temp_coefficents_enfants_garde_alternee_pris_en_compte_5
    try:
        match_arg_757 = eligibilite_allocation_logement_dot_eligibilite_l841_2
        if match_arg_757.code == TypeEligibiliteAllocationLogement_Code.PasEligible:
            _ = match_arg_757.value
            temp_eligibilite_3 = False
        elif match_arg_757.code == TypeEligibiliteAllocationLogement_Code.AllocationLogementFamiliale:
            _ = match_arg_757.value
            temp_eligibilite_3 = True
        elif match_arg_757.code == TypeEligibiliteAllocationLogement_Code.AllocationLogementSociale:
            _ = match_arg_757.value
            temp_eligibilite_3 = True
        temp_eligibilite_4 = (eligibilite_aide_personnalisee_logement_dot_eligibilite or
            temp_eligibilite_3)
    except EmptyError:
        temp_eligibilite_4 = dead_value
        raise NoValueProvided(SourcePosition(filename="examples/aides_logement/prologue.catala_fr",
                                             start_line=1172,
                                             start_column=12, end_line=1172,
                                             end_column=23,
                                             law_headings=["Calculette globale",
                                             "Prologue : aides au logement"]))
    eligibilite_2 = temp_eligibilite_4
    try:
        def temp_traitement_aide_finale_4(aide_finale_25:Money):
            try:
                if not eligibilite_2:
                    return aide_finale_25
                else:
                    match_arg_758 = eligibilite_allocation_logement_dot_eligibilite_l841_2
                    if match_arg_758.code == TypeEligibiliteAllocationLogement_Code.PasEligible:
                        _ = match_arg_758.value
                        temp_traitement_aide_finale_5 = True
                    elif match_arg_758.code == TypeEligibiliteAllocationLogement_Code.AllocationLogementFamiliale:
                        _ = match_arg_758.value
                        temp_traitement_aide_finale_5 = False
                    elif match_arg_758.code == TypeEligibiliteAllocationLogement_Code.AllocationLogementSociale:
                        _ = match_arg_758.value
                        temp_traitement_aide_finale_5 = False
                    if (eligibilite_aide_personnalisee_logement_dot_eligibilite and
                        not temp_traitement_aide_finale_5):
                        if (calcul_aide_personnalisee_logement_dot_traitement_aide_finale(
                            aide_finale_25) >
                            calcul_allocation_logement_dot_traitement_aide_finale(
                            aide_finale_25)):
                            return calcul_aide_personnalisee_logement_dot_traitement_aide_finale(
                                aide_finale_25)
                        else:
                            return calcul_allocation_logement_dot_traitement_aide_finale(
                                aide_finale_25)
                    else:
                        if eligibilite_aide_personnalisee_logement_dot_eligibilite:
                            return calcul_aide_personnalisee_logement_dot_traitement_aide_finale(
                                aide_finale_25)
                        else:
                            return calcul_allocation_logement_dot_traitement_aide_finale(
                                aide_finale_25)
            except EmptyError:
                raise NoValueProvided(SourcePosition(filename="examples/aides_logement/prologue.catala_fr",
                                                     start_line=1174,
                                                     start_column=12,
                                                     end_line=1174,
                                                     end_column=34,
                                                     law_headings=["Calculette globale",
                                                     "Prologue : aides au logement"]))
    except EmptyError:
        temp_traitement_aide_finale_4 = dead_value
        raise NoValueProvided(SourcePosition(filename="examples/aides_logement/prologue.catala_fr",
                                             start_line=1174,
                                             start_column=12, end_line=1174,
                                             end_column=34,
                                             law_headings=["Calculette globale",
                                             "Prologue : aides au logement"]))
    traitement_aide_finale_3 = temp_traitement_aide_finale_4
    try:
        if not eligibilite_2:
            temp_aide_finale_formule_10 = money_of_cents_string("0")
        else:
            match_arg_759 = eligibilite_allocation_logement_dot_eligibilite_l841_2
            if match_arg_759.code == TypeEligibiliteAllocationLogement_Code.PasEligible:
                _ = match_arg_759.value
                temp_aide_finale_formule_11 = True
            elif match_arg_759.code == TypeEligibiliteAllocationLogement_Code.AllocationLogementFamiliale:
                _ = match_arg_759.value
                temp_aide_finale_formule_11 = False
            elif match_arg_759.code == TypeEligibiliteAllocationLogement_Code.AllocationLogementSociale:
                _ = match_arg_759.value
                temp_aide_finale_formule_11 = False
            if (eligibilite_aide_personnalisee_logement_dot_eligibilite and
                not temp_aide_finale_formule_11):
                if (calcul_aide_personnalisee_logement_dot_traitement_aide_finale(
                    calcul_aide_personnalisee_logement_dot_aide_finale_formule) >
                    calcul_allocation_logement_dot_traitement_aide_finale(
                    calcul_allocation_logement_dot_aide_finale_formule)):
                    temp_aide_finale_formule_10 = calcul_aide_personnalisee_logement_dot_aide_finale_formule
                else:
                    temp_aide_finale_formule_10 = calcul_allocation_logement_dot_aide_finale_formule
            else:
                if eligibilite_aide_personnalisee_logement_dot_eligibilite:
                    temp_aide_finale_formule_10 = calcul_aide_personnalisee_logement_dot_aide_finale_formule
                else:
                    temp_aide_finale_formule_10 = calcul_allocation_logement_dot_aide_finale_formule
    except EmptyError:
        temp_aide_finale_formule_10 = dead_value
        raise NoValueProvided(SourcePosition(filename="examples/aides_logement/prologue.catala_fr",
                                             start_line=1173,
                                             start_column=12, end_line=1173,
                                             end_column=31,
                                             law_headings=["Calculette globale",
                                             "Prologue : aides au logement"]))
    aide_finale_formule_8 = temp_aide_finale_formule_10
    return CalculetteAidesAuLogement(eligibilite = eligibilite_2,
        aide_finale_formule = aide_finale_formule_8,
        traitement_aide_finale = traitement_aide_finale_3,
        coefficents_enfants_garde_alternee_pris_en_compte = coefficents_enfants_garde_alternee_pris_en_compte_3)

def calculette_aides_au_logement_garde_alternee(calculette_aides_au_logement_garde_alternee_in:CalculetteAidesAuLogementGardeAlterneeIn):
    menage_5 = calculette_aides_au_logement_garde_alternee_in.menage_in
    demandeur_5 = calculette_aides_au_logement_garde_alternee_in.demandeur_in
    date_courante_21 = calculette_aides_au_logement_garde_alternee_in.date_courante_in
    ressources_menage_prises_en_compte_1 = calculette_aides_au_logement_garde_alternee_in.ressources_menage_prises_en_compte_in
    try:
        def temp_menage_sans_enfants_garde_alternee(personne_a_charge_14:PersonneACharge):
            match_arg_760 = personne_a_charge_14
            if match_arg_760.code == PersonneACharge_Code.EnfantACharge:
                enfant_15 = match_arg_760.value
                match_arg_761 = enfant_15.situation_garde_alternee
                if match_arg_761.code == SituationGardeAlternee_Code.PasDeGardeAlternee:
                    _ = match_arg_761.value
                    return True
                elif match_arg_761.code == SituationGardeAlternee_Code.GardeAlterneeCoefficientPriseEnCharge:
                    _ = match_arg_761.value
                    return False
            elif match_arg_760.code == PersonneACharge_Code.AutrePersonneACharge:
                _ = match_arg_760.value
                return True
        temp_menage_sans_enfants_garde_alternee_1 = Menage(prestations_recues = menage_5.prestations_recues,
            logement = menage_5.logement,
            personnes_a_charge = list_filter(temp_menage_sans_enfants_garde_alternee,
            menage_5.personnes_a_charge),
            nombre_autres_occupants_logement = menage_5.nombre_autres_occupants_logement,
            situation_familiale = menage_5.situation_familiale,
            condition_rattache_foyer_fiscal_parent_ifi = menage_5.condition_rattache_foyer_fiscal_parent_ifi,
            enfant_a_naitre_apres_quatrieme_mois_grossesse = menage_5.enfant_a_naitre_apres_quatrieme_mois_grossesse,
            personnes_agees_handicapees_foyer_r844_4 = menage_5.personnes_agees_handicapees_foyer_r844_4,
            residence = menage_5.residence)
    except EmptyError:
        temp_menage_sans_enfants_garde_alternee_1 = dead_value
        raise NoValueProvided(SourcePosition(filename="examples/aides_logement/prologue.catala_fr",
                                             start_line=1243,
                                             start_column=11, end_line=1243,
                                             end_column=45,
                                             law_headings=["Calculette avec garde alternée",
                                             "Prologue : aides au logement"]))
    menage_sans_enfants_garde_alternee = temp_menage_sans_enfants_garde_alternee_1
    try:
        temp_calculette_dot_menage = menage_5
    except EmptyError:
        temp_calculette_dot_menage = dead_value
        raise NoValueProvided(SourcePosition(filename="examples/aides_logement/prologue.catala_fr",
                                             start_line=1254,
                                             start_column=14, end_line=1254,
                                             end_column=31,
                                             law_headings=["Calculette avec garde alternée",
                                             "Prologue : aides au logement"]))
    calculette_dot_menage = temp_calculette_dot_menage
    try:
        temp_calculette_dot_demandeur = demandeur_5
    except EmptyError:
        temp_calculette_dot_demandeur = dead_value
        raise NoValueProvided(SourcePosition(filename="examples/aides_logement/prologue.catala_fr",
                                             start_line=1256,
                                             start_column=14, end_line=1256,
                                             end_column=34,
                                             law_headings=["Calculette avec garde alternée",
                                             "Prologue : aides au logement"]))
    calculette_dot_demandeur = temp_calculette_dot_demandeur
    try:
        temp_calculette_dot_date_courante = date_courante_21
    except EmptyError:
        temp_calculette_dot_date_courante = dead_value
        raise NoValueProvided(SourcePosition(filename="examples/aides_logement/prologue.catala_fr",
                                             start_line=1258,
                                             start_column=14, end_line=1258,
                                             end_column=38,
                                             law_headings=["Calculette avec garde alternée",
                                             "Prologue : aides au logement"]))
    calculette_dot_date_courante = temp_calculette_dot_date_courante
    try:
        temp_calculette_dot_ressources_menage_prises_en_compte = ressources_menage_prises_en_compte_1
    except EmptyError:
        temp_calculette_dot_ressources_menage_prises_en_compte = dead_value
        raise NoValueProvided(SourcePosition(filename="examples/aides_logement/prologue.catala_fr",
                                             start_line=1260,
                                             start_column=14, end_line=1260,
                                             end_column=59,
                                             law_headings=["Calculette avec garde alternée",
                                             "Prologue : aides au logement"]))
    calculette_dot_ressources_menage_prises_en_compte = temp_calculette_dot_ressources_menage_prises_en_compte
    result_29 = calculette_aides_au_logement(CalculetteAidesAuLogementIn(menage_in = calculette_dot_menage,
                                             demandeur_in = calculette_dot_demandeur,
                                             date_courante_in = calculette_dot_date_courante,
                                             ressources_menage_prises_en_compte_in = calculette_dot_ressources_menage_prises_en_compte))
    calculette_dot_eligibilite = result_29.eligibilite
    calculette_dot_aide_finale_formule = result_29.aide_finale_formule
    calculette_dot_traitement_aide_finale = result_29.traitement_aide_finale
    calculette_dot_coefficents_enfants_garde_alternee_pris_en_compte = result_29.coefficents_enfants_garde_alternee_pris_en_compte
    try:
        temp_calculette_sans_garde_alternee_dot_menage = menage_sans_enfants_garde_alternee
    except EmptyError:
        temp_calculette_sans_garde_alternee_dot_menage = dead_value
        raise NoValueProvided(SourcePosition(filename="examples/aides_logement/prologue.catala_fr",
                                             start_line=1262,
                                             start_column=14, end_line=1262,
                                             end_column=51,
                                             law_headings=["Calculette avec garde alternée",
                                             "Prologue : aides au logement"]))
    calculette_sans_garde_alternee_dot_menage = temp_calculette_sans_garde_alternee_dot_menage
    try:
        temp_calculette_sans_garde_alternee_dot_demandeur = demandeur_5
    except EmptyError:
        temp_calculette_sans_garde_alternee_dot_demandeur = dead_value
        raise NoValueProvided(SourcePosition(filename="examples/aides_logement/prologue.catala_fr",
                                             start_line=1264,
                                             start_column=14, end_line=1264,
                                             end_column=54,
                                             law_headings=["Calculette avec garde alternée",
                                             "Prologue : aides au logement"]))
    calculette_sans_garde_alternee_dot_demandeur = temp_calculette_sans_garde_alternee_dot_demandeur
    try:
        temp_calculette_sans_garde_alternee_dot_date_courante = date_courante_21
    except EmptyError:
        temp_calculette_sans_garde_alternee_dot_date_courante = dead_value
        raise NoValueProvided(SourcePosition(filename="examples/aides_logement/prologue.catala_fr",
                                             start_line=1266,
                                             start_column=14, end_line=1266,
                                             end_column=58,
                                             law_headings=["Calculette avec garde alternée",
                                             "Prologue : aides au logement"]))
    calculette_sans_garde_alternee_dot_date_courante = temp_calculette_sans_garde_alternee_dot_date_courante
    try:
        temp_calculette_sans_garde_alternee_dot_ressources_menage_prises_en_compte = ressources_menage_prises_en_compte_1
    except EmptyError:
        temp_calculette_sans_garde_alternee_dot_ressources_menage_prises_en_compte = dead_value
        raise NoValueProvided(SourcePosition(filename="examples/aides_logement/prologue.catala_fr",
                                             start_line=1269, start_column=5,
                                             end_line=1269, end_column=70,
                                             law_headings=["Calculette avec garde alternée",
                                             "Prologue : aides au logement"]))
    calculette_sans_garde_alternee_dot_ressources_menage_prises_en_compte = temp_calculette_sans_garde_alternee_dot_ressources_menage_prises_en_compte
    result_30 = calculette_aides_au_logement(CalculetteAidesAuLogementIn(menage_in = calculette_sans_garde_alternee_dot_menage,
                                             demandeur_in = calculette_sans_garde_alternee_dot_demandeur,
                                             date_courante_in = calculette_sans_garde_alternee_dot_date_courante,
                                             ressources_menage_prises_en_compte_in = calculette_sans_garde_alternee_dot_ressources_menage_prises_en_compte))
    calculette_sans_garde_alternee_dot_eligibilite = result_30.eligibilite
    calculette_sans_garde_alternee_dot_aide_finale_formule = result_30.aide_finale_formule
    calculette_sans_garde_alternee_dot_traitement_aide_finale = result_30.traitement_aide_finale
    calculette_sans_garde_alternee_dot_coefficents_enfants_garde_alternee_pris_en_compte = result_30.coefficents_enfants_garde_alternee_pris_en_compte
    try:
        temp_eligibilite_5 = calculette_dot_eligibilite
    except EmptyError:
        temp_eligibilite_5 = dead_value
        raise NoValueProvided(SourcePosition(filename="examples/aides_logement/prologue.catala_fr",
                                             start_line=1250,
                                             start_column=12, end_line=1250,
                                             end_column=23,
                                             law_headings=["Calculette avec garde alternée",
                                             "Prologue : aides au logement"]))
    eligibilite_3 = temp_eligibilite_5
    try:
        temp_coefficents_enfants_garde_alternee_pris_en_compte_6 = calculette_dot_coefficents_enfants_garde_alternee_pris_en_compte
    except EmptyError:
        temp_coefficents_enfants_garde_alternee_pris_en_compte_6 = dead_value
        raise NoValueProvided(SourcePosition(filename="examples/aides_logement/prologue.catala_fr",
                                             start_line=1244,
                                             start_column=11, end_line=1244,
                                             end_column=60,
                                             law_headings=["Calculette avec garde alternée",
                                             "Prologue : aides au logement"]))
    coefficents_enfants_garde_alternee_pris_en_compte_4 = temp_coefficents_enfants_garde_alternee_pris_en_compte_6
    try:
        if (list_length(coefficents_enfants_garde_alternee_pris_en_compte_4) ==
            integer_of_string("0")):
            temp_aide_finale = money_of_cents_string("0")
        else:
            def temp_aide_finale_1(sum1_3:Decimal, sum2_3:Decimal):
                return (sum1_3 + sum2_3)
            temp_aide_finale = ((calculette_dot_aide_finale_formule -
                calculette_sans_garde_alternee_dot_aide_finale_formule) *
                (list_reduce(temp_aide_finale_1, decimal_of_string("0."),
                             coefficents_enfants_garde_alternee_pris_en_compte_4) /
                decimal_of_integer(list_length(coefficents_enfants_garde_alternee_pris_en_compte_4))))
        temp_aide_finale_2 = calculette_dot_traitement_aide_finale((calculette_sans_garde_alternee_dot_aide_finale_formule +
                                                                   temp_aide_finale))
    except EmptyError:
        temp_aide_finale_2 = dead_value
        raise NoValueProvided(SourcePosition(filename="examples/aides_logement/prologue.catala_fr",
                                             start_line=1251,
                                             start_column=12, end_line=1251,
                                             end_column=23,
                                             law_headings=["Calculette avec garde alternée",
                                             "Prologue : aides au logement"]))
    aide_finale_26 = temp_aide_finale_2
    return CalculetteAidesAuLogementGardeAlternee(eligibilite = eligibilite_3,
        aide_finale = aide_finale_26)
